{
  "generator": {
    "name": "SourceInject",
    "nuget": [ "https://www.nuget.org/packages/SourceInject/" ],
    "link": "https://github.com/giggio/sourceinject",
    "author": "Giovanni Bassi",
    "source": "https://github.com/giggio/sourceinject"
  },
  "data": {
    "goodFor": "Auto register services in startup",
    "existingCode": [
      "using Microsoft.Extensions.DependencyInjection;",
"using System;",
"using System.Threading.Tasks;",
"",
"namespace AutoRegisterBL",
"{",
"    [Inject(ServiceLifetime.Transient)]",
"    public class Repo",
"    {",
"        public async Task<Person> GetFromId(int id)",
"        {",
"            await Task.Delay(1000);",
"            return new Person()",
"            {",
"                ID = id,",
"                Name = \" Andrei Ignat \" + id",
"            };",
"        }",
"    }",
"}"


    ],
    "usage": [
"//in startup.cs",
"services.DiscoverInAutoRegisterBL();"
    ],
    "generatedCode": [
      "// <auto-generated />",
"using Microsoft.Extensions.DependencyInjection;",
"",
"public static class GeneratedServicesExtension",
"{",
"    public static void DiscoverInAutoRegisterBL(this IServiceCollection services) => services.Discover();",
"    internal static void Discover(this IServiceCollection services)",
"    {",
"        services.AddTransient<AutoRegisterBL.Repo>();",
"",
"    }",
"}",
"",
"public static class AutoRegisterBLDiscoverer",
"{",
"    public static void Discover(IServiceCollection services) => services.Discover();",
"}"
    ]
  },
  "links": {
    "blog": "",
    "video": "",
    "example": "https://github.com/ignatandrei/RSCG_Examples/tree/main/AutoRegister"
  }
  
}