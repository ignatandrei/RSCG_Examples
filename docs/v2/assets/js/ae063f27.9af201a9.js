"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[6821],{7155:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>u,contentTitle:()=>p,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>g});const o=JSON.parse('{"id":"RSCG-Examples/Microsoft.Extensions.Configuration.Binder","title":"86 - Microsoft.Extensions.Configuration.Binder","description":"Generating Binding for configuration files","source":"@site/docs/RSCG-Examples/Microsoft.Extensions.Configuration.Binder.md","sourceDirName":"RSCG-Examples","slug":"/Microsoft.Extensions.Configuration.Binder","permalink":"/RSCG_Examples/v2/docs/Microsoft.Extensions.Configuration.Binder","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":860,"frontMatter":{"sidebar_position":860,"title":"86 - Microsoft.Extensions.Configuration.Binder","description":"Generating Binding for configuration files","slug":"/Microsoft.Extensions.Configuration.Binder"},"sidebar":"tutorialSidebar","previous":{"title":"85 - Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator","permalink":"/RSCG_Examples/v2/docs/Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator"},"next":{"title":"87 - RDG","permalink":"/RSCG_Examples/v2/docs/RDG"}}');var t=i(74848),r=i(28453),s=i(11470),a=i(19365),l=i(14252),c=i(64044);const d={sidebar_position:860,title:"86 - Microsoft.Extensions.Configuration.Binder",description:"Generating Binding for configuration files",slug:"/Microsoft.Extensions.Configuration.Binder"},p="Microsoft.Extensions.Configuration.Binder  by Microsoft",u={},g=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share Microsoft.Extensions.Configuration.Binder",id:"share-microsoftextensionsconfigurationbinder",level:3},...c.RM];function f(n){const e={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"microsoftextensionsconfigurationbinder--by-microsoft",children:"Microsoft.Extensions.Configuration.Binder  by Microsoft"})}),"\n",(0,t.jsx)(l.A,{toc:g}),"\n",(0,t.jsx)(e.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.a,{href:"https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Binder/",children:(0,t.jsx)(e.img,{src:"https://img.shields.io/nuget/dt/Microsoft.Extensions.Configuration.Binder?label=Microsoft.Extensions.Configuration.Binder",alt:"Nuget"})}),"\n",(0,t.jsx)(e.a,{href:"https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-8#configuration-binding-source-generator",children:(0,t.jsx)(e.img,{src:"https://img.shields.io/learn.microsoft/last-commit/en-us/dotnet?label=updated",alt:"GitHub last commit"})}),"\n",(0,t.jsx)(e.img,{src:"https://img.shields.io/learn.microsoft/stars/en-us/dotnet?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,t.jsx)(e.h2,{id:"details",children:"Details"}),"\n",(0,t.jsx)(e.h3,{id:"info",children:"Info"}),"\n",(0,t.jsxs)(e.admonition,{type:"info",children:[(0,t.jsxs)(e.p,{children:["Name: ",(0,t.jsx)(e.strong,{children:"Microsoft.Extensions.Configuration.Binder"})]}),(0,t.jsx)(e.p,{children:"Functionality to bind an object to data in configuration providers."}),(0,t.jsx)(e.p,{children:"Author: Microsoft"}),(0,t.jsxs)(e.p,{children:["NuGet:\n",(0,t.jsx)(e.em,{children:(0,t.jsx)(e.a,{href:"https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Binder/",children:"https://www.nuget.org/packages/Microsoft.Extensions.Configuration.Binder/"})})]}),(0,t.jsxs)(e.p,{children:["You can find more details at ",(0,t.jsx)(e.a,{href:"https://github.com/dotnet/runtime",children:"https://github.com/dotnet/runtime"})]}),(0,t.jsxs)(e.p,{children:["Source: ",(0,t.jsx)(e.a,{href:"https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-8#configuration-binding-source-generator",children:"https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-8#configuration-binding-source-generator"})]})]}),"\n",(0,t.jsx)(e.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,t.jsx)(e.admonition,{type:"note"}),"\n",(0,t.jsx)(e.h3,{id:"about",children:"About"}),"\n",(0,t.jsx)(e.admonition,{type:"note",children:(0,t.jsx)(e.p,{children:"Generating Binding for configuration files"})}),"\n",(0,t.jsx)(e.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,t.jsx)(e.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,t.jsxs)(s.A,{children:[(0,t.jsxs)(a.A,{value:"csproj",label:"CSharp Project",children:[(0,t.jsxs)(e.p,{children:["This is the CSharp Project that references ",(0,t.jsx)(e.strong,{children:"Microsoft.Extensions.Configuration.Binder"})]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-xml",metastring:"showLineNumbers {11}",children:'<Project Sdk="Microsoft.NET.Sdk.Web">\n\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <Nullable>enable</Nullable>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <InvariantGlobalization>true</InvariantGlobalization>\n  </PropertyGroup>\n\n  <ItemGroup>\n\t  \x3c!--<PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="8.0.0" />--\x3e\n    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.0" />\n    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />\n  </ItemGroup>\n\t<PropertyGroup>\n\t\t<EnableConfigurationBindingGenerator>true</EnableConfigurationBindingGenerator>\n\t</PropertyGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\n\n</Project>\n\n'})})]}),(0,t.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\ConfigBinder\\src\\ConfigBinderDemo\\Program.cs",label:"Program.cs",children:[(0,t.jsxs)(e.p,{children:["This is the use of ",(0,t.jsx)(e.strong,{children:"Microsoft.Extensions.Configuration.Binder"})," in ",(0,t.jsx)(e.em,{children:"Program.cs"})]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using ConfigBinderDemo;\nusing Microsoft.Extensions.Options;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Add services to the container.\n// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n\nvar app = builder.Build();\n\n// Configure the HTTP request pipeline.\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\nbuilder.Services.AddOptions<MyAppOptions>()\n            .BindConfiguration(MyAppOptions.ConfigName);\napp.MapGet("/nameApp", (IOptions<MyAppOptions> opt) =>\n{\n    try\n    {\n        var val = opt.Value.AppDisplayName;\n        return val;\n    }\n    catch (OptionsValidationException ex)\n    {\n        var problems = ex.Failures.ToArray();\n        return string.Join(",", problems);\n    }\n\n})\n.WithName("GetWeatherForecast")\n.WithOpenApi();\n\napp.Run();\n\ninternal record WeatherForecast(DateOnly Date, int TemperatureC, string? Summary)\n{\n    public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);\n}\n\n'})})]}),(0,t.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\ConfigBinder\\src\\ConfigBinderDemo\\MyAppOptions.cs",label:"MyAppOptions.cs",children:[(0,t.jsxs)(e.p,{children:["This is the use of ",(0,t.jsx)(e.strong,{children:"Microsoft.Extensions.Configuration.Binder"})," in ",(0,t.jsx)(e.em,{children:"MyAppOptions.cs"})]}),(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using System.Diagnostics;\n\nnamespace ConfigBinderDemo;\n\n[DebuggerDisplay("{AppDisplayName}")]\npublic class MyAppOptions\n{\n    public const string ConfigName = "MyAppOptionsInConfig";\n    public string AppDisplayName { get; set; } = string.Empty;\n\n}\n\n'})})]})]}),"\n",(0,t.jsx)(e.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,t.jsx)(e.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,t.jsx)(s.A,{children:(0,t.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\ConfigBinder\\src\\ConfigBinderDemo\\obj\\GX\\Microsoft.Extensions.Configuration.Binder.SourceGeneration\\Microsoft.Extensions.Configuration.Binder.SourceGeneration.ConfigurationBindingGenerator\\BindingExtensions.g.cs",label:"BindingExtensions.g.cs",children:(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0612, CS0618\n\nnamespace System.Runtime.CompilerServices\n{\n    using System;\n    using System.CodeDom.Compiler;\n\n    [GeneratedCode("Microsoft.Extensions.Configuration.Binder.SourceGeneration", "8.0.12.31117")]\n    [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)]\n    file sealed class InterceptsLocationAttribute : Attribute\n    {\n        public InterceptsLocationAttribute(string filePath, int line, int column)\n        {\n        }\n    }\n}\n\nnamespace Microsoft.Extensions.Configuration.Binder.SourceGeneration\n{\n    using Microsoft.Extensions.Configuration;\n    using Microsoft.Extensions.DependencyInjection;\n    using Microsoft.Extensions.Options;\n    using System;\n    using System.CodeDom.Compiler;\n    using System.Collections.Generic;\n    using System.Globalization;\n    using System.Runtime.CompilerServices;\n\n    [GeneratedCode("Microsoft.Extensions.Configuration.Binder.SourceGeneration", "8.0.12.31117")]\n    file static class BindingExtensions\n    {\n        #region OptionsBuilder<TOptions> extensions.\n        /// <summary>Registers the dependency injection container to bind <typeparamref name="TOptions"/> against the <see cref="IConfiguration"/> obtained from the DI service provider.</summary>\n        [InterceptsLocation(@"D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\ConfigBinder\\src\\ConfigBinderDemo\\Program.cs", 20, 14)]\n        public static OptionsBuilder<TOptions> BindConfiguration<TOptions>(this OptionsBuilder<TOptions> optionsBuilder, string configSectionPath, Action<BinderOptions>? configureBinder = null) where TOptions : class\n        {\n            if (optionsBuilder is null)\n            {\n                throw new ArgumentNullException(nameof(optionsBuilder));\n            }\n\n            if (configSectionPath is null)\n            {\n                throw new ArgumentNullException(nameof(configSectionPath));\n            }\n\n            optionsBuilder.Configure<IConfiguration>((instance, config) =>\n            {\n                if (config is null)\n                {\n                    throw new ArgumentNullException(nameof(config));\n                }\n\n                IConfiguration section = string.Equals(string.Empty, configSectionPath, StringComparison.OrdinalIgnoreCase) ? config : config.GetSection(configSectionPath);\n                BindCoreMain(section, instance, typeof(TOptions), configureBinder);\n            });\n\n            optionsBuilder.Services.AddSingleton<IOptionsChangeTokenSource<TOptions>, ConfigurationChangeTokenSource<TOptions>>();\n            return optionsBuilder;\n        }\n        #endregion OptionsBuilder<TOptions> extensions.\n\n        #region Core binding extensions.\n        private readonly static Lazy<HashSet<string>> s_configKeys_MyAppOptions = new(() => new HashSet<string>(StringComparer.OrdinalIgnoreCase) { "AppDisplayName" });\n\n        public static void BindCoreMain(IConfiguration configuration, object instance, Type type, Action<BinderOptions>? configureOptions)\n        {\n            if (instance is null)\n            {\n                return;\n            }\n\n            if (!HasValueOrChildren(configuration))\n            {\n                return;\n            }\n\n            BinderOptions? binderOptions = GetBinderOptions(configureOptions);\n\n            if (type == typeof(global::ConfigBinderDemo.MyAppOptions))\n            {\n                var temp = (global::ConfigBinderDemo.MyAppOptions)instance;\n                BindCore(configuration, ref temp, defaultValueIfNotFound: false, binderOptions);\n                return;\n            }\n\n            throw new NotSupportedException($"Unable to bind to type \'{type}\': generator did not detect the type as input.");\n        }\n\n        public static void BindCore(IConfiguration configuration, ref global::ConfigBinderDemo.MyAppOptions instance, bool defaultValueIfNotFound, BinderOptions? binderOptions)\n        {\n            ValidateConfigurationKeys(typeof(global::ConfigBinderDemo.MyAppOptions), s_configKeys_MyAppOptions, configuration, binderOptions);\n\n            if (configuration["AppDisplayName"] is string value1)\n            {\n                instance.AppDisplayName = value1;\n            }\n        }\n\n\n        /// <summary>If required by the binder options, validates that there are no unknown keys in the input configuration object.</summary>\n        public static void ValidateConfigurationKeys(Type type, Lazy<HashSet<string>> keys, IConfiguration configuration, BinderOptions? binderOptions)\n        {\n            if (binderOptions?.ErrorOnUnknownConfiguration is true)\n            {\n                List<string>? temp = null;\n        \n                foreach (IConfigurationSection section in configuration.GetChildren())\n                {\n                    if (!keys.Value.Contains(section.Key))\n                    {\n                        (temp ??= new List<string>()).Add($"\'{section.Key}\'");\n                    }\n                }\n        \n                if (temp is not null)\n                {\n                    throw new InvalidOperationException($"\'ErrorOnUnknownConfiguration\' was set on the provided BinderOptions, but the following properties were not found on the instance of {type}: {string.Join(", ", temp)}");\n                }\n            }\n        }\n\n        public static bool HasValueOrChildren(IConfiguration configuration)\n        {\n            if ((configuration as IConfigurationSection)?.Value is not null)\n            {\n                return true;\n            }\n            return AsConfigWithChildren(configuration) is not null;\n        }\n\n        public static IConfiguration? AsConfigWithChildren(IConfiguration configuration)\n        {\n            foreach (IConfigurationSection _ in configuration.GetChildren())\n            {\n                return configuration;\n            }\n            return null;\n        }\n\n        public static BinderOptions? GetBinderOptions(Action<BinderOptions>? configureOptions)\n        {\n            if (configureOptions is null)\n            {\n                return null;\n            }\n        \n            BinderOptions binderOptions = new();\n            configureOptions(binderOptions);\n        \n            if (binderOptions.BindNonPublicProperties)\n            {\n                throw new NotSupportedException($"The configuration binding source generator does not support \'BinderOptions.BindNonPublicProperties\'.");\n            }\n        \n            return binderOptions;\n        }\n        #endregion Core binding extensions.\n    }\n}\n\n'})})})}),"\n",(0,t.jsx)(e.h2,{id:"useful",children:"Useful"}),"\n",(0,t.jsx)(e.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,t.jsx)(e.admonition,{type:"tip",children:(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(24128).A+"",children:"Download Example project Microsoft.Extensions.Configuration.Binder "})})}),"\n",(0,t.jsx)(e.h3,{id:"share-microsoftextensionsconfigurationbinder",children:"Share Microsoft.Extensions.Configuration.Binder"}),"\n",(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Configuration.Binder&quote=Microsoft.Extensions.Configuration.Binder",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Configuration.Binder&text=Microsoft.Extensions.Configuration.Binder:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Configuration.Binder",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Configuration.Binder&title=Microsoft.Extensions.Configuration.Binder",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Configuration.Binder&title=Microsoft.Extensions.Configuration.Binder&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Configuration.Binder",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,t.jsx)(e.p,{children:(0,t.jsx)(e.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Microsoft.Extensions.Configuration.Binder",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Microsoft.Extensions.Configuration.Binder"})}),"\n",(0,t.jsx)(e.p,{children:"aaa"}),"\n",(0,t.jsx)(c.Ay,{})]})}function h(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(f,{...n})}):f(n)}},24128:(n,e,i)=>{i.d(e,{A:()=>o});const o=i.p+"assets/files/Microsoft.Extensions.Configuration.Binder-14439d99bab258e9195200e2b0a25387.zip"},64044:(n,e,i)=>{i.d(e,{Ay:()=>a,RM:()=>r});var o=i(74848),t=i(28453);const r=[{value:"Category &quot;API&quot; has the following generators:",id:"category-api-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function s(n){const e={a:"a",h3:"h3",p:"p",...(0,t.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h3,{id:"category-api-has-the-following-generators",children:'Category "API" has the following generators:'}),"\n",(0,o.jsxs)(e.p,{children:["1 ",(0,o.jsx)(e.a,{href:"/docs/immediate.apis",children:"immediate.apis"})]}),"\n",(0,o.jsxs)(e.p,{children:["2 ",(0,o.jsx)(e.a,{href:"/docs/Microsoft.Extensions.Configuration.Binder",children:"Microsoft.Extensions.Configuration.Binder"})]}),"\n",(0,o.jsxs)(e.p,{children:["3 ",(0,o.jsx)(e.a,{href:"/docs/MinimalApiBuilder",children:"MinimalApiBuilder"})]}),"\n",(0,o.jsxs)(e.p,{children:["4 ",(0,o.jsx)(e.a,{href:"/docs/MinimalApis.Discovery",children:"MinimalApis.Discovery"})]}),"\n",(0,o.jsxs)(e.p,{children:["5 ",(0,o.jsx)(e.a,{href:"/docs/MinimalHelpers.Routing.Analyzers",children:"MinimalHelpers.Routing.Analyzers"})]}),"\n",(0,o.jsxs)(e.p,{children:["6 ",(0,o.jsx)(e.a,{href:"/docs/RDG",children:"RDG"})]}),"\n",(0,o.jsxs)(e.p,{children:["7 ",(0,o.jsx)(e.a,{href:"/docs/Refit",children:"Refit"})]}),"\n",(0,o.jsxs)(e.p,{children:["8 ",(0,o.jsx)(e.a,{href:"/docs/RSCG_WebAPIExports",children:"RSCG_WebAPIExports"})]}),"\n",(0,o.jsxs)(e.p,{children:["9 ",(0,o.jsx)(e.a,{href:"/docs/SafeRouting",children:"SafeRouting"})]}),"\n",(0,o.jsxs)(e.p,{children:["10 ",(0,o.jsx)(e.a,{href:"/docs/SkinnyControllersCommon",children:"SkinnyControllersCommon"})]}),"\n",(0,o.jsx)(e.h3,{id:"see-category",children:"See category"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.a,{href:"/docs/Categories/API",children:"API"})})]})}function a(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(s,{...n})}):s(n)}}}]);