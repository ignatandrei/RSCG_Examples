"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[2047],{7633:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var o=t(7462),a=(t(7294),t(4137)),r=t(3992),l=t(425);t(8839);const s={sidebar_position:140,title:"RSCG - Vogen",description:"Transform values( e.g. int) into classes",slug:"/Vogen"},i="Vogen  by Steve Dunn",u={unversionedId:"RSCG-Examples/Vogen",id:"RSCG-Examples/Vogen",title:"RSCG - Vogen",description:"Transform values( e.g. int) into classes",source:"@site/docs/RSCG-Examples/Vogen.md",sourceDirName:"RSCG-Examples",slug:"/Vogen",permalink:"/RSCG_Examples/v2/docs/Vogen",draft:!1,tags:[],version:"current",sidebarPosition:140,frontMatter:{sidebar_position:140,title:"RSCG - Vogen",description:"Transform values( e.g. int) into classes",slug:"/Vogen"},sidebar:"tutorialSidebar",previous:{title:"RSCG - dunet",permalink:"/RSCG_Examples/v2/docs/dunet"},next:{title:"RSCG - RazorBlade",permalink:"/RSCG_Examples/v2/docs/RazorBlade"}},m={},p=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example",id:"download-example",level:3},{value:"Download PDF",id:"download-pdf",level:3},{value:"Share Vogen",id:"share-vogen",level:3}],d={toc:p},c="wrapper";function g(e){let{components:n,...s}=e;return(0,a.kt)(c,(0,o.Z)({},d,s,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"vogen--by-steve-dunn"},"Vogen  by Steve Dunn"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Vogen/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Vogen?label=Vogen",alt:"Nuget"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/SteveDunn/Vogen"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/SteveDunn/Vogen?label=updated",alt:"GitHub last commit"})),"\n",(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/SteveDunn/Vogen?style=social",alt:"GitHub Repo stars"})),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("h3",{id:"info"},"Info"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Name: ",(0,a.kt)("strong",{parentName:"p"},"Vogen")),(0,a.kt)("p",{parentName:"admonition"},"Author: Steve Dunn"),(0,a.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/Vogen/"},"https://www.nuget.org/packages/Vogen/")),"   "),(0,a.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,a.kt)("a",{parentName:"p",href:"https://dunnhq.com/posts/2021/primitive-obsession/"},"https://dunnhq.com/posts/2021/primitive-obsession/")),(0,a.kt)("p",{parentName:"admonition"},"Source : ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/SteveDunn/Vogen"},"https://github.com/SteveDunn/Vogen"))),(0,a.kt)("h3",{id:"about"},"About"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Transform values( e.g. int) into classes"),(0,a.kt)("p",{parentName:"admonition"},"If you know what are ValueObject,that is one solution")),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,a.kt)("p",null,"This is the CSharp Project that references ",(0,a.kt)("strong",{parentName:"p"},"Vogen")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Vogen" Version="3.0.16" />\n  </ItemGroup>\n<PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,a.kt)(l.Z,{value:"Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"Vogen")," in ",(0,a.kt)("em",{parentName:"p"},"Program.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'// See https://aka.ms/new-console-template for more information\n\nusing DemoVogen;\n\nConsole.WriteLine("Hello, World!");\nvar p = PersonId.From(123);\nvar p1 = PersonId.From(123);\nvar p2 =(PersonId) 123;\n\nConsole.WriteLine(p == 123);\nConsole.WriteLine(p == p1);\nConsole.WriteLine(p == p2);\n\n'))),(0,a.kt)(l.Z,{value:"PersonId.cs",label:"PersonId.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"Vogen")," in ",(0,a.kt)("em",{parentName:"p"},"PersonId.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// See https://aka.ms/new-console-template for more information\nusing Vogen;\nnamespace DemoVogen;\n[ValueObject<int>]\npublic partial struct PersonId\n{\n}\n")))),(0,a.kt)("h3",{id:"generated-files"},"Generated Files"),(0,a.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"DemoVogen_PersonId.g.cs001",label:"DemoVogen_PersonId.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'// ------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n// ------------------------------------------------------------------------------\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n\n// Suppress warnings for \'Override methods on comparable types\'.\n#pragma warning disable CA1036\n\n// Suppress Error MA0097 : A class that implements IComparable<T> or IComparable should override comparison operators\n#pragma warning disable MA0097\n\n// Suppress warning for \'The annotation for nullable reference types should only be used in code within a \'#nullable\' annotations context. Auto-generated code requires an explicit \'#nullable\' directive in source.\'\n// The generator copies signatures from the BCL, e.g. for `TryParse`, and some of those have nullable annotations.\n#pragma warning disable CS8669\n\n// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member \'Type_or_Member\'\n#pragma warning disable CS1591\n\nusing Vogen;\n\nnamespace DemoVogen\n{\n\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage] \n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "3.0.0.0")]\n    [global::System.Text.Json.Serialization.JsonConverter(typeof(PersonIdSystemTextJsonConverter))]\n[global::System.ComponentModel.TypeConverter(typeof(PersonIdTypeConverter))]\n\n    [global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(PersonIdDebugView))]\n    [global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: System.Int32, Value = { _value }")]\n    public partial struct PersonId : global::System.IEquatable<PersonId>, global::System.IEquatable<System.Int32> ,  global::System.IComparable<PersonId>, global::System.IComparable\n    {\n#if DEBUG    \n        private readonly global::System.Diagnostics.StackTrace _stackTrace = null;\n#endif\n\n        private readonly global::System.Boolean _isInitialized;\n        \n        private readonly System.Int32 _value;\n\n        /// <summary>\n        /// Gets the underlying <see cref="System.Int32" /> value if set, otherwise a <see cref="ValueObjectValidationException" /> is thrown.\n        /// </summary>\n        public readonly System.Int32 Value\n        {\n            [global::System.Diagnostics.DebuggerStepThroughAttribute]\n            get\n            {\n                EnsureInitialized();\n                return _value;\n            }\n        }\n\n        [global::System.Diagnostics.DebuggerStepThroughAttribute]\n        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]\n        public PersonId()\n        {\n#if DEBUG\n            _stackTrace = new global::System.Diagnostics.StackTrace();\n#endif\n\n            _isInitialized = false;\n            _value = default;\n        }\n\n        [global::System.Diagnostics.DebuggerStepThroughAttribute]\n        private PersonId(System.Int32 value) \n        {\n            _value = value;\n            _isInitialized = true;\n        }\n\n        /// <summary>\n        /// Builds an instance from the provided underlying type.\n        /// </summary>\n        /// <param name="value">The underlying type.</param>\n        /// <returns>An instance of this type.</returns>\n        public static PersonId From(System.Int32 value)\n        {\n            \n\n            PersonId instance = new PersonId(value);\n\n            \n\n            return instance;\n        }\n\n        public static explicit operator PersonId(System.Int32 value) => From(value);\n        public static explicit operator System.Int32(PersonId value) => value.Value;\n\n        // only called internally when something has been deserialized into\n        // its primitive type.\n        private static PersonId Deserialize(System.Int32 value)\n        {\n            \n\n            \n\n            return new PersonId(value);\n        }\n\n        public readonly global::System.Boolean Equals(PersonId other)\n        {\n            // It\'s possible to create uninitialized instances via converters such as EfCore (HasDefaultValue), which call Equals.\n            // We treat anything uninitialized as not equal to anything, even other uninitialized instances of this type.\n            if(!_isInitialized || !other._isInitialized) return false;\n\n            return global::System.Collections.Generic.EqualityComparer<System.Int32>.Default.Equals(Value, other.Value);\n        }\n\n        public readonly global::System.Boolean Equals(System.Int32 primitive) => Value.Equals(primitive);\n\n        public readonly override global::System.Boolean Equals(global::System.Object obj)\n        {\n            return obj is PersonId && Equals((PersonId) obj);\n        }\n\n        public static global::System.Boolean operator ==(PersonId left, PersonId right) => Equals(left, right);\n        public static global::System.Boolean operator !=(PersonId left, PersonId right) => !(left == right);\n\n        public static global::System.Boolean operator ==(PersonId left, System.Int32 right) => Equals(left.Value, right);\n        public static global::System.Boolean operator !=(PersonId left, System.Int32 right) => !Equals(left.Value, right);\n\n        public static global::System.Boolean operator ==(System.Int32 left, PersonId right) => Equals(left, right.Value);\n        public static global::System.Boolean operator !=(System.Int32 left, PersonId right) => !Equals(left, right.Value);\n\n        public int CompareTo(PersonId other) => Value.CompareTo(other.Value);\n        public int CompareTo(object other) {\n            if(other == null) return 1;\n            if(other is PersonId x) return CompareTo(x);\n            throw new global::System.ArgumentException("Cannot compare to object as it is not of type PersonId", nameof(other));\n        }\n\n        \n    /// <inheritdoc cref="int.TryParse(System.ReadOnlySpan{char}, System.Globalization.NumberStyles, System.IFormatProvider?, out int)"/>\n    /// <summary>\n    /// </summary>\n    /// <returns>\n    /// The value created via the <see cref="From"/> method.\n    /// </returns>\n    /// <exception cref="ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>\n    public static global::System.Boolean TryParse(global::System.ReadOnlySpan<char> s, global::System.Globalization.NumberStyles style, global::System.IFormatProvider provider, \n#if NETCOREAPP3_0_OR_GREATER\n[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]\n#endif\n out PersonId result) {\n        if(System.Int32.TryParse(s, style, provider, out var r)) {\n            result = From(r);\n            return true;\n        }\n\n        result = default;\n        return false;\n    }\n\n    /// <inheritdoc cref="int.TryParse(System.ReadOnlySpan{char}, System.IFormatProvider?, out int)"/>\n    /// <summary>\n    /// </summary>\n    /// <returns>\n    /// The value created via the <see cref="From"/> method.\n    /// </returns>\n    /// <exception cref="ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>\n    public static global::System.Boolean TryParse(global::System.ReadOnlySpan<char> s, global::System.IFormatProvider provider, \n#if NETCOREAPP3_0_OR_GREATER\n[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]\n#endif\n out PersonId result) {\n        if(System.Int32.TryParse(s, provider, out var r)) {\n            result = From(r);\n            return true;\n        }\n\n        result = default;\n        return false;\n    }\n\n    /// <inheritdoc cref="int.TryParse(System.ReadOnlySpan{char}, out int)"/>\n    /// <summary>\n    /// </summary>\n    /// <returns>\n    /// The value created via the <see cref="From"/> method.\n    /// </returns>\n    /// <exception cref="ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>\n    public static global::System.Boolean TryParse(global::System.ReadOnlySpan<char> s, \n#if NETCOREAPP3_0_OR_GREATER\n[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]\n#endif\n out PersonId result) {\n        if(System.Int32.TryParse(s, out var r)) {\n            result = From(r);\n            return true;\n        }\n\n        result = default;\n        return false;\n    }\n\n    /// <inheritdoc cref="int.TryParse(string?, System.Globalization.NumberStyles, System.IFormatProvider?, out int)"/>\n    /// <summary>\n    /// </summary>\n    /// <returns>\n    /// The value created via the <see cref="From"/> method.\n    /// </returns>\n    /// <exception cref="ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>\n    public static global::System.Boolean TryParse(string s, global::System.Globalization.NumberStyles style, global::System.IFormatProvider provider, \n#if NETCOREAPP3_0_OR_GREATER\n[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]\n#endif\n out PersonId result) {\n        if(System.Int32.TryParse(s, style, provider, out var r)) {\n            result = From(r);\n            return true;\n        }\n\n        result = default;\n        return false;\n    }\n\n    /// <inheritdoc cref="int.TryParse(string?, System.IFormatProvider?, out int)"/>\n    /// <summary>\n    /// </summary>\n    /// <returns>\n    /// The value created via the <see cref="From"/> method.\n    /// </returns>\n    /// <exception cref="ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>\n    public static global::System.Boolean TryParse(string s, global::System.IFormatProvider provider, \n#if NETCOREAPP3_0_OR_GREATER\n[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]\n#endif\n out PersonId result) {\n        if(System.Int32.TryParse(s, provider, out var r)) {\n            result = From(r);\n            return true;\n        }\n\n        result = default;\n        return false;\n    }\n\n    /// <inheritdoc cref="int.TryParse(string?, out int)"/>\n    /// <summary>\n    /// </summary>\n    /// <returns>\n    /// The value created via the <see cref="From"/> method.\n    /// </returns>\n    /// <exception cref="ValueObjectValidationException">Thrown when the value can be parsed, but is not valid.</exception>\n    public static global::System.Boolean TryParse(string s, \n#if NETCOREAPP3_0_OR_GREATER\n[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]\n#endif\n out PersonId result) {\n        if(System.Int32.TryParse(s, out var r)) {\n            result = From(r);\n            return true;\n        }\n\n        result = default;\n        return false;\n    }\n\n\n        public readonly override global::System.Int32 GetHashCode() => global::System.Collections.Generic.EqualityComparer<System.Int32>.Default.GetHashCode(_value);\n\n        /// <summary>Returns the string representation of the underlying type</summary>\n    /// <inheritdoc cref="System.Int32.ToString()" />\n    public readonly override global::System.String ToString() =>_isInitialized ? Value.ToString() : "[UNINITIALIZED]";\n\n        private readonly void EnsureInitialized()\n        {\n            if (!_isInitialized)\n            {\n#if DEBUG\n                global::System.String message = "Use of uninitialized Value Object at: " + _stackTrace ?? "";\n#else\n                global::System.String message = "Use of uninitialized Value Object.";\n#endif\n\n                throw new global::Vogen.ValueObjectValidationException(message);\n            }\n        }\n\n        \n \n        \n        class PersonIdSystemTextJsonConverter : global::System.Text.Json.Serialization.JsonConverter<PersonId>\n        {\n            public override PersonId Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)\n            {\n                return PersonId.Deserialize(reader.GetInt32());\n            }\n\n            public override void Write(System.Text.Json.Utf8JsonWriter writer, PersonId value, global::System.Text.Json.JsonSerializerOptions options)\n            {\n                writer.WriteNumberValue(value.Value);\n            }\n\n#if NET6_0_OR_GREATER            \n            public override PersonId ReadAsPropertyName(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)\n            {\n                return PersonId.Deserialize(global::System.Int32.Parse(reader.GetString(), global::System.Globalization.NumberStyles.Any, global::System.Globalization.CultureInfo.InvariantCulture));\n            }\n\n            public override void WriteAsPropertyName(System.Text.Json.Utf8JsonWriter writer, PersonId value, global::System.Text.Json.JsonSerializerOptions options)\n            {\n                writer.WritePropertyName(value.Value.ToString(global::System.Globalization.CultureInfo.InvariantCulture));\n            }\n#endif\n        }\n\n\n        class PersonIdTypeConverter : global::System.ComponentModel.TypeConverter\n        {\n            public override global::System.Boolean CanConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)\n            {\n                return sourceType == typeof(global::System.Int32) || sourceType == typeof(global::System.String) || base.CanConvertFrom(context, sourceType);\n            }\n\n            public override global::System.Object ConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value)\n            {\n                return value switch\n                {\n                    global::System.Int32 intValue => PersonId.Deserialize(intValue),\n                    global::System.String stringValue when !global::System.String.IsNullOrEmpty(stringValue) && global::System.Int32.TryParse(stringValue, out var result) => PersonId.Deserialize(result),\n                    _ => base.ConvertFrom(context, culture, value),\n                };\n            }\n\n            public override bool CanConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)\n            {\n                return sourceType == typeof(global::System.Int32) || sourceType == typeof(global::System.String) || base.CanConvertTo(context, sourceType);\n            }\n\n            public override object ConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value, global::System.Type destinationType)\n            {\n                if (value is PersonId idValue)\n                {\n                    if (destinationType == typeof(global::System.Int32))\n                    {\n                        return idValue.Value;\n                    }\n\n                    if (destinationType == typeof(global::System.String))\n                    {\n                        return idValue.Value.ToString();\n                    }\n                }\n\n                return base.ConvertTo(context, culture, value, destinationType);\n            }\n        }\n\n\n\n\n\n        internal sealed class PersonIdDebugView\n        {\n            private readonly PersonId _t;\n\n            PersonIdDebugView(PersonId t)\n            {\n                _t = t;\n            }\n\n            public global::System.Boolean IsInitialized => _t._isInitialized;\n            public global::System.String UnderlyingType => "System.Int32";\n            public global::System.String Value => _t._isInitialized ? _t._value.ToString() : "[not initialized]" ;\n\n            #if DEBUG\n            public global::System.String CreatedWith => _t._stackTrace?.ToString() ?? "the From method";\n            #endif\n\n            public global::System.String Conversions => @"Default";\n                }\n\n}\n}\n')))),(0,a.kt)("h2",{id:"usefull"},"Usefull"),(0,a.kt)("h3",{id:"download-example"},"Download Example"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{target:"_blank",href:t(4075).Z},"Download Example Vogen "))),(0,a.kt)("h3",{id:"download-pdf"},"Download PDF"),(0,a.kt)("p",null,(0,a.kt)("a",{target:"_blank",href:t(1013).Z},"Download PDF Vogen ")),(0,a.kt)("h3",{id:"share-vogen"},"Share Vogen"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FVogen&quote=Vogen",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FVogen&text=Vogen:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FVogen",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FVogen&title=Vogen",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FVogen&title=Vogen&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FVogen",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Vogen"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Vogen")))}g.isMDXComponent=!0},1013:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/files/Vogen-31d6cfe0d16ae931b73c59d7e0c089c0.pdf"},4075:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/files/Vogen-31d6cfe0d16ae931b73c59d7e0c089c0.zip"}}]);