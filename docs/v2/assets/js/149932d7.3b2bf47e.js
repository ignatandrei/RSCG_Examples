"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[296],{7399:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>p,default:()=>g,frontMatter:()=>l,metadata:()=>m,toc:()=>c});var o=t(7462),a=(t(7294),t(4137)),s=t(3992),r=t(425),i=t(8839);const l={sidebar_position:3,title:"RSCG - System.Text.Json",description:"Json Serialize without reflection",slug:"/System.Text.Json"},p="System.Text.Json  by Andrei Ignat",m={unversionedId:"RSCG-Examples/003System.Text.Json",id:"RSCG-Examples/003System.Text.Json",title:"RSCG - System.Text.Json",description:"Json Serialize without reflection",source:"@site/docs/RSCG-Examples/003System.Text.Json.md",sourceDirName:"RSCG-Examples",slug:"/System.Text.Json",permalink:"/RSCG_Examples/v2/docs/System.Text.Json",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"RSCG - System.Text.Json",description:"Json Serialize without reflection",slug:"/System.Text.Json"},sidebar:"tutorialSidebar",previous:{title:"RSCG - RSCG_TimeBombComment",permalink:"/RSCG_Examples/v2/docs/RSCG_TimeBombComment"},next:{title:"RSCG Without Examples",permalink:"/RSCG_Examples/v2/docs/category/rscg-without-examples"}},u={},c=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example",id:"download-example",level:3},{value:"Download PDF",id:"download-pdf",level:3},{value:"Share this page",id:"share-this-page",level:3}],d={toc:c},S="wrapper";function g(e){let{components:n,...l}=e;return(0,a.kt)(S,(0,o.Z)({},d,l,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"systemtextjson--by-andrei-ignat"},"System.Text.Json  by Andrei Ignat"),(0,a.kt)(i.Z,{toc:c,mdxType:"TOCInline"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/System.Text.Json/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/System.Text.Json?label=System.Text.Json",alt:"Nuget"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/dotnet/runtime"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/dotnet/runtime?label=updated",alt:"GitHub last commit"})),"\n",(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/dotnet/runtime?style=social",alt:"GitHub Repo stars"})),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("h3",{id:"info"},"Info"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Author: Andrei Ignat"),(0,a.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/System.Text.Json/"},"https://www.nuget.org/packages/System.Text.Json/")),(0,a.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,a.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/source-generation"},"https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/source-generation")),(0,a.kt)("p",{parentName:"admonition"},"Source : ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/dotnet/runtime"},"https://github.com/dotnet/runtime"))),(0,a.kt)("h3",{id:"about"},"About"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Json Serialize without reflection")),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,a.kt)("p",null,"This is the CSharp Project that references System.Text.Json "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GeneratedX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n</Project>\n\n'))),(0,a.kt)(r.Z,{value:"Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of System.Text.Json in Program.cs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'using JsonSerializerOptionsExample;\nusing System.Text.Json;\n//for asp.net core\n//services.AddControllers().AddJsonOptions(options => options.JsonSerializerOptions.AddContext<MyJsonContext>());\n//https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/tokens/raw-string\n\nstring jsonString ="""\n{\n  "date": "2019-08-01T00:00:00",\n  "temperatureCelsius": 25,\n  "summary": "Hot"\n}\n""";\n        WeatherForecast? weatherForecast= JsonSerializer.Deserialize(\n            jsonString,\n            typeof(WeatherForecast),\n            new OptionsExampleContext(\n                new JsonSerializerOptions(JsonSerializerDefaults.Web)))\n                as WeatherForecast;\n        Console.WriteLine($"Date={weatherForecast?.Date}");\n        // output:\n        //Date=8/1/2019 12:00:00 AM\n\n        jsonString = JsonSerializer.Serialize(\n            weatherForecast,\n            typeof(WeatherForecast),\n            new OptionsExampleContext(\n                new JsonSerializerOptions(JsonSerializerDefaults.Web)));\n        Console.WriteLine(jsonString);\njsonString = JsonSerializer.Serialize(\n    weatherForecast,\n    typeof(WeatherForecast),\n    new OptionsExampleContext(\n        new JsonSerializerOptions(JsonSerializerDefaults.General)));\nConsole.WriteLine(jsonString);\n// output:\n//{ "date":"2019-08-01T00:00:00","temperatureCelsius":25,"summary":"Hot"}\n\n'))),(0,a.kt)(r.Z,{value:"WeatherForecast.cs",label:"WeatherForecast.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of System.Text.Json in WeatherForecast.cs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"namespace JsonSerializerOptionsExample;\n\npublic class WeatherForecast\n{\n    public DateTime Date { get; set; }\n    public int TemperatureCelsius { get; set; }\n    public string? Summary { get; set; }\n}\n\n"))),(0,a.kt)(r.Z,{value:"OptionsExampleContext.cs",label:"OptionsExampleContext.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of System.Text.Json in OptionsExampleContext.cs"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"using System.Text.Json.Serialization;\n\nnamespace JsonSerializerOptionsExample;\n\n[JsonSerializable(typeof(WeatherForecast))]\ninternal partial class OptionsExampleContext : JsonSerializerContext\n{\n}\n\n")))),(0,a.kt)("h3",{id:"generated-files"},"Generated Files"),(0,a.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GeneratedX"),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(r.Z,{value:"OptionsExampleContext.g.cs",label:"OptionsExampleContext.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n\nnamespace JsonSerializerOptionsExample\n{\n    \n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "7.0.8.17405")]\n    internal partial class OptionsExampleContext\n    {\n        \n        private static global::System.Text.Json.JsonSerializerOptions s_defaultOptions { get; } = new global::System.Text.Json.JsonSerializerOptions()\n        {\n            DefaultIgnoreCondition = global::System.Text.Json.Serialization.JsonIgnoreCondition.Never,\n            IgnoreReadOnlyFields = false,\n            IgnoreReadOnlyProperties = false,\n            IncludeFields = false,\n            WriteIndented = false,\n        };\n        \n        private static global::JsonSerializerOptionsExample.OptionsExampleContext? s_defaultContext;\n        \n        /// <summary>\n        /// The default <see cref="global::System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="global::System.Text.Json.JsonSerializerOptions"/> instance.\n        /// </summary>\n        public static global::JsonSerializerOptionsExample.OptionsExampleContext Default => s_defaultContext ??= new global::JsonSerializerOptionsExample.OptionsExampleContext(new global::System.Text.Json.JsonSerializerOptions(s_defaultOptions));\n        \n        /// <summary>\n        /// The source-generated options associated with this context.\n        /// </summary>\n        protected override global::System.Text.Json.JsonSerializerOptions? GeneratedSerializerOptions { get; } = s_defaultOptions;\n        \n        /// <inheritdoc/>\n        public OptionsExampleContext() : base(null)\n        {\n        }\n        \n        /// <inheritdoc/>\n        public OptionsExampleContext(global::System.Text.Json.JsonSerializerOptions options) : base(options)\n        {\n        }\n        \n        private static global::System.Text.Json.Serialization.JsonConverter? GetRuntimeProvidedCustomConverter(global::System.Text.Json.JsonSerializerOptions options, global::System.Type type)\n        {\n            global::System.Collections.Generic.IList<global::System.Text.Json.Serialization.JsonConverter> converters = options.Converters;\n        \n            for (int i = 0; i < converters.Count; i++)\n            {\n                global::System.Text.Json.Serialization.JsonConverter? converter = converters[i];\n        \n                if (converter.CanConvert(type))\n                {\n                    if (converter is global::System.Text.Json.Serialization.JsonConverterFactory factory)\n                    {\n                        converter = factory.CreateConverter(type, options);\n                        if (converter == null || converter is global::System.Text.Json.Serialization.JsonConverterFactory)\n                        {\n                            throw new global::System.InvalidOperationException(string.Format("The converter \'{0}\' cannot return null or a JsonConverterFactory instance.", factory.GetType()));\n                        }\n                    }\n        \n                    return converter;\n                }\n            }\n        \n            return null;\n        }\n    }\n}\n\n'))),(0,a.kt)(r.Z,{value:"OptionsExampleContext.Int32.g.cs",label:"OptionsExampleContext.Int32.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n\nnamespace JsonSerializerOptionsExample\n{\n    internal partial class OptionsExampleContext\n    {\n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Int32>? _Int32;\n        /// <summary>\n        /// Defines the source generated JSON serialization contract metadata for a given type.\n        /// </summary>\n        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Int32> Int32\n        {\n            get => _Int32 ??= Create_Int32(Options, makeReadOnly: true);\n        }\n        \n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Int32> Create_Int32(global::System.Text.Json.JsonSerializerOptions options, bool makeReadOnly)\n        {\n            global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.Int32>? jsonTypeInfo = null;\n            global::System.Text.Json.Serialization.JsonConverter? customConverter;\n            if (options.Converters.Count > 0 && (customConverter = GetRuntimeProvidedCustomConverter(options, typeof(global::System.Int32))) != null)\n            {\n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::System.Int32>(options, customConverter);\n            }\n            else\n            {\n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::System.Int32>(options, global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.Int32Converter);\n            }\n        \n            if (makeReadOnly)\n            {\n                jsonTypeInfo.MakeReadOnly();\n            }\n        \n            return jsonTypeInfo;\n        }\n        \n    }\n}\n\n"))),(0,a.kt)(r.Z,{value:"OptionsExampleContext.String.g.cs",label:"OptionsExampleContext.String.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n\nnamespace JsonSerializerOptionsExample\n{\n    internal partial class OptionsExampleContext\n    {\n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.String>? _String;\n        /// <summary>\n        /// Defines the source generated JSON serialization contract metadata for a given type.\n        /// </summary>\n        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.String> String\n        {\n            get => _String ??= Create_String(Options, makeReadOnly: true);\n        }\n        \n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.String> Create_String(global::System.Text.Json.JsonSerializerOptions options, bool makeReadOnly)\n        {\n            global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.String>? jsonTypeInfo = null;\n            global::System.Text.Json.Serialization.JsonConverter? customConverter;\n            if (options.Converters.Count > 0 && (customConverter = GetRuntimeProvidedCustomConverter(options, typeof(global::System.String))) != null)\n            {\n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::System.String>(options, customConverter);\n            }\n            else\n            {\n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::System.String>(options, global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.StringConverter);\n            }\n        \n            if (makeReadOnly)\n            {\n                jsonTypeInfo.MakeReadOnly();\n            }\n        \n            return jsonTypeInfo;\n        }\n        \n    }\n}\n\n"))),(0,a.kt)(r.Z,{value:"SourceGenerationContext.g.cs",label:"SourceGenerationContext.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n\nnamespace BothModesNoOptions\n{\n    \n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "7.0.8.17405")]\n    internal partial class SourceGenerationContext\n    {\n        \n        private static global::System.Text.Json.JsonSerializerOptions s_defaultOptions { get; } = new global::System.Text.Json.JsonSerializerOptions()\n        {\n            DefaultIgnoreCondition = global::System.Text.Json.Serialization.JsonIgnoreCondition.Never,\n            IgnoreReadOnlyFields = false,\n            IgnoreReadOnlyProperties = false,\n            IncludeFields = false,\n            WriteIndented = true,\n        };\n        \n        private static global::BothModesNoOptions.SourceGenerationContext? s_defaultContext;\n        \n        /// <summary>\n        /// The default <see cref="global::System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="global::System.Text.Json.JsonSerializerOptions"/> instance.\n        /// </summary>\n        public static global::BothModesNoOptions.SourceGenerationContext Default => s_defaultContext ??= new global::BothModesNoOptions.SourceGenerationContext(new global::System.Text.Json.JsonSerializerOptions(s_defaultOptions));\n        \n        /// <summary>\n        /// The source-generated options associated with this context.\n        /// </summary>\n        protected override global::System.Text.Json.JsonSerializerOptions? GeneratedSerializerOptions { get; } = s_defaultOptions;\n        \n        /// <inheritdoc/>\n        public SourceGenerationContext() : base(null)\n        {\n        }\n        \n        /// <inheritdoc/>\n        public SourceGenerationContext(global::System.Text.Json.JsonSerializerOptions options) : base(options)\n        {\n        }\n        \n        private static global::System.Text.Json.Serialization.JsonConverter? GetRuntimeProvidedCustomConverter(global::System.Text.Json.JsonSerializerOptions options, global::System.Type type)\n        {\n            global::System.Collections.Generic.IList<global::System.Text.Json.Serialization.JsonConverter> converters = options.Converters;\n        \n            for (int i = 0; i < converters.Count; i++)\n            {\n                global::System.Text.Json.Serialization.JsonConverter? converter = converters[i];\n        \n                if (converter.CanConvert(type))\n                {\n                    if (converter is global::System.Text.Json.Serialization.JsonConverterFactory factory)\n                    {\n                        converter = factory.CreateConverter(type, options);\n                        if (converter == null || converter is global::System.Text.Json.Serialization.JsonConverterFactory)\n                        {\n                            throw new global::System.InvalidOperationException(string.Format("The converter \'{0}\' cannot return null or a JsonConverterFactory instance.", factory.GetType()));\n                        }\n                    }\n        \n                    return converter;\n                }\n            }\n        \n            return null;\n        }\n    }\n}\n\n')))),(0,a.kt)("h2",{id:"usefull"},"Usefull"),(0,a.kt)("h3",{id:"download-example"},"Download Example"),(0,a.kt)("p",null,(0,a.kt)("a",{target:"_blank",href:t(4743).Z},"Download Example System.Text.Json ")),(0,a.kt)("h3",{id:"download-pdf"},"Download PDF"),(0,a.kt)("p",null,(0,a.kt)("a",{target:"_blank",href:t(3577).Z},"Download PDF System.Text.Json ")),(0,a.kt)("h3",{id:"share-this-page"},"Share this page"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/System.Text.Json"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/System.Text.Json")))}g.isMDXComponent=!0},3577:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/files/System.Text.Json-b653c32e38ec4022c92b9d9ffb14d9a5.pdf"},4743:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/files/System.Text.Json-a03cc30797df7301821ec011ad54fcbc.zip"}}]);