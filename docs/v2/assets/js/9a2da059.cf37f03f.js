"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[8345],{52678:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var r=n(87462),o=(n(67294),n(3905)),a=n(73992),i=n(18679),s=n(68839);const l={sidebar_position:1720,title:"172 - GoLive.Generator.BlazorInterop",description:"Generating interop from C# to javascript for Blazor",slug:"/GoLive.Generator.BlazorInterop"},p="GoLive.Generator.BlazorInterop  by surgicalcoder",d={unversionedId:"RSCG-Examples/GoLive.Generator.BlazorInterop",id:"RSCG-Examples/GoLive.Generator.BlazorInterop",title:"172 - GoLive.Generator.BlazorInterop",description:"Generating interop from C# to javascript for Blazor",source:"@site/docs/RSCG-Examples/GoLive.Generator.BlazorInterop.md",sourceDirName:"RSCG-Examples",slug:"/GoLive.Generator.BlazorInterop",permalink:"/RSCG_Examples/v2/docs/GoLive.Generator.BlazorInterop",draft:!1,tags:[],version:"current",sidebarPosition:1720,frontMatter:{sidebar_position:1720,title:"172 - GoLive.Generator.BlazorInterop",description:"Generating interop from C# to javascript for Blazor",slug:"/GoLive.Generator.BlazorInterop"},sidebar:"tutorialSidebar",previous:{title:"171 - Hsu.Sg.FluentMember",permalink:"/RSCG_Examples/v2/docs/Hsu.Sg.FluentMember"},next:{title:"173 - Microsoft.Windows.CsWin32",permalink:"/RSCG_Examples/v2/docs/Microsoft.Windows.CsWin32"}},c={},m=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share GoLive.Generator.BlazorInterop",id:"share-golivegeneratorblazorinterop",level:3},{value:"In the same category (Blazor) - 1 other generators",id:"in-the-same-category-blazor---1-other-generators",level:3},{value:"Blazorators",id:"blazorators",level:4}],u={toc:m},h="wrapper";function g(e){let{components:t,...l}=e;return(0,o.kt)(h,(0,r.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"golivegeneratorblazorinterop--by-surgicalcoder"},"GoLive.Generator.BlazorInterop  by surgicalcoder"),(0,o.kt)(s.Z,{toc:m,mdxType:"TOCInline"}),(0,o.kt)("h2",{id:"nuget--site-data"},"NuGet / site data"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/GoLive.Generator.BlazorInterop/"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/GoLive.Generator.BlazorInterop?label=GoLive.Generator.BlazorInterop",alt:"Nuget"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/surgicalcoder/BlazorInteropGenerator"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/surgicalcoder/BlazorInteropGenerator?label=updated",alt:"GitHub last commit"})),"\n",(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/surgicalcoder/BlazorInteropGenerator?style=social",alt:"GitHub Repo stars"})),(0,o.kt)("h2",{id:"details"},"Details"),(0,o.kt)("h3",{id:"info"},"Info"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Name: ",(0,o.kt)("strong",{parentName:"p"},"GoLive.Generator.BlazorInterop")),(0,o.kt)("p",{parentName:"admonition"},"Generates strongly typed methods that interop into Javascript."),(0,o.kt)("p",{parentName:"admonition"},"Author: surgicalcoder"),(0,o.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/GoLive.Generator.BlazorInterop/"},"https://www.nuget.org/packages/GoLive.Generator.BlazorInterop/")),"   "),(0,o.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/surgicalcoder/BlazorInteropGenerator"},"https://github.com/surgicalcoder/BlazorInteropGenerator")),(0,o.kt)("p",{parentName:"admonition"},"Source: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/surgicalcoder/BlazorInteropGenerator"},"https://github.com/surgicalcoder/BlazorInteropGenerator"))),(0,o.kt)("h3",{id:"original-readme"},"Original Readme"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("h1",{parentName:"admonition",id:"blazorinteropgenerator"},"BlazorInteropGenerator"),(0,o.kt)("p",{parentName:"admonition"},"Generates Blazor -> Javascript strongly typed interop methods, by parsing the Javascript it self and generating extension methods for IJSRuntime."),(0,o.kt)("h2",{parentName:"admonition",id:"usage"},"Usage"),(0,o.kt)("p",{parentName:"admonition"},"Firstly, add the project from Nuget - ",(0,o.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/GoLive.Generator.BlazorInterop/"},"GoLive.Generator.BlazorInterop"),', then add an AdditionalFile in your .csproj named "BlazorInterop.json", like so:'),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},'<ItemGroup>\n     <AdditionalFiles Include="BlazorInterop.json" />\n</ItemGroup>\n')),(0,o.kt)("p",{parentName:"admonition"},"Once that's done, add the settings file and change as required:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre"},'{\n  "Files": [\n    {\n      "Output": "JSInterop.cs",\n      "Source": "wwwroot\\\\blazorinterop.js",\n      "Namespace": "GoLive.Generator.BlazorInterop.Playground.Client",\n      "ObjectToInterop": "window.blazorInterop",\n      "Init": ["window={}"]\n    }\n  ],\n  "InvokeVoidString": "await JSRuntime.InvokeVoidAsync(\\"{0}\\", {1});",\n  "InvokeString": "return await JSRuntime.InvokeAsync of T (\\"{0}\\",{1});"\n}\n\n')),(0,o.kt)("h3",{parentName:"admonition",id:"description-of-each-option"},"Description of Each Option"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"Files: An array of file objects specifying details of the files involved in the interop process.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Output: The name of the output C# file to be generated."),(0,o.kt)("li",{parentName:"ul"},"Source: The path to the source JavaScript file used for the interop."),(0,o.kt)("li",{parentName:"ul"},"Namespace: The namespace used in the generated C# file."),(0,o.kt)("li",{parentName:"ul"},"ObjectToInterop: The JavaScript object used for the interop. "),(0,o.kt)("li",{parentName:"ul"},"Init: An array of initialization scripts executed before the interop. In this example above, we are interop'ing to window.blazorInterop, and window doesn't exist, so we have to create it."))),(0,o.kt)("li",{parentName:"ul"},"InvokeVoidString: A template string for invoking a JavaScript function that does not return a value using JSRuntime.InvokeVoidAsync. Placeholders {0} and {1} are replaced with the function name and arguments, respectively."),(0,o.kt)("li",{parentName:"ul"},"InvokeString: A template string for invoking a JavaScript function that returns a value using JSRuntime.InvokeAsync of T . Placeholders {0} and {1} are replaced with the function name and arguments, respectively."))),(0,o.kt)("h3",{id:"about"},"About"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Generating interop from C# to javascript for Blazor")),(0,o.kt)("h2",{id:"how-to-use"},"How to use"),(0,o.kt)("h3",{id:"example-source-csproj-source-files"},"Example (source csproj, source files)"),(0,o.kt)(a.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,o.kt)("p",null,"This is the CSharp Project that references ",(0,o.kt)("strong",{parentName:"p"},"GoLive.Generator.BlazorInterop")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {10}",showLineNumbers:!0,"{10}":!0},'<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">\n\n  <PropertyGroup>\n    <TargetFramework>net9.0</TargetFramework>\n    <Nullable>enable</Nullable>\n    <ImplicitUsings>enable</ImplicitUsings>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="GoLive.Generator.BlazorInterop" Version="2.0.7">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="9.0.0-rc.2.24474.3" />\n    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="9.0.0-rc.2.24474.3" PrivateAssets="all" />\n  </ItemGroup>\n    \n    <ItemGroup>\n        <AdditionalFiles Include="BlazorInterop.json" />\n    </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n\n</Project>\n\n'))),(0,o.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\GoLive.Generator.BlazorInterop\\src\\MyTestBlazoe\\BlazorInterop.json",label:"BlazorInterop.json",mdxType:"TabItem"},(0,o.kt)("p",null,"  This is the use of ",(0,o.kt)("strong",{parentName:"p"},"GoLive.Generator.BlazorInterop")," in ",(0,o.kt)("em",{parentName:"p"},"BlazorInterop.json")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'{\n  "Files": [\n    {\n      "Output_DeleteThis_ToHave_InYourProject": "JSInterop.cs",\n      "ClassName": "JSInterop",\n      "Source": "wwwroot\\\\blazorinterop.js",\n      "Namespace": "GoLive.Generator.BlazorInterop.Playground.Client",\n      "ObjectToInterop": "window.blazorInterop",\n      "Init": ["window={}"]\n    }\n  ],\n  "InvokeVoidString": "await JSRuntime.InvokeVoidAsync(\\"{0}\\", {1});",\n  "InvokeString": "return await JSRuntime.InvokeAsync<T>(\\"{0}\\",{1});"\n}\n\n'))),(0,o.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\GoLive.Generator.BlazorInterop\\src\\MyTestBlazoe\\wwwroot\\blazorinterop.js",label:"blazorinterop.js",mdxType:"TabItem"},(0,o.kt)("p",null,"  This is the use of ",(0,o.kt)("strong",{parentName:"p"},"GoLive.Generator.BlazorInterop")," in ",(0,o.kt)("em",{parentName:"p"},"blazorinterop.js")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"window.blazorInterop = {\n    showModal: function (dialogId) {\n        window.alert('see after this the page title'+dialogId);\n        return true;\n    },\n    setPageTitle: function(title) {\n        document.title = title;\n    },    \n};\n"))),(0,o.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\GoLive.Generator.BlazorInterop\\src\\MyTestBlazoe\\Pages\\Home.razor",label:"Home.razor",mdxType:"TabItem"},(0,o.kt)("p",null,"  This is the use of ",(0,o.kt)("strong",{parentName:"p"},"GoLive.Generator.BlazorInterop")," in ",(0,o.kt)("em",{parentName:"p"},"Home.razor")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'@page "/"\n\n@inject IJSRuntime JS\n\n<PageTitle>Home</PageTitle>\n\n<h1>Hello, world!</h1>\n\nWelcome to your new app.\n\n<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>\n\n@code {\n    private int currentCount = 0;\n\n    private async Task IncrementCount()\n    {\n        currentCount++;\n        var res= await JS.showModalAsync<bool>(currentCount);\n        await JS.setPageTitleVoidAsync($" after {currentCount}  the result is " + res);\n    }\n}\n\n'))),(0,o.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\GoLive.Generator.BlazorInterop\\src\\MyTestBlazoe\\wwwroot\\index.html",label:"index.html",mdxType:"TabItem"},(0,o.kt)("p",null,"  This is the use of ",(0,o.kt)("strong",{parentName:"p"},"GoLive.Generator.BlazorInterop")," in ",(0,o.kt)("em",{parentName:"p"},"index.html")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'<!DOCTYPE html>\n<html lang="en">\n\n<head>\n    <meta charset="utf-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>MyTestBlazoe</title>\n    <base href="/" />\n    <link rel="stylesheet" href="lib/bootstrap/dist/css/bootstrap.min.css" />\n    <link rel="stylesheet" href="css/app.css" />\n    <link rel="icon" type="image/png" href="favicon.png" />\n    <link href="MyTestBlazoe.styles.css" rel="stylesheet" />\n    <script src="blazorinterop.js" ><\/script>\n</head>\n\n<body>\n    <div id="app">\n        <svg class="loading-progress">\n            <circle r="40%" cx="50%" cy="50%" />\n            <circle r="40%" cx="50%" cy="50%" />\n        </svg>\n        <div class="loading-progress-text"></div>\n    </div>\n\n    <div id="blazor-error-ui">\n        An unhandled error has occurred.\n        <a href="." class="reload">Reload</a>\n        <span class="dismiss">\ud83d\uddd9</span>\n    </div>\n    <script src="_framework/blazor.webassembly.js"><\/script>\n</body>\n\n</html>\n\n')))),(0,o.kt)("h3",{id:"generated-files"},"Generated Files"),(0,o.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,o.kt)(a.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\GoLive.Generator.BlazorInterop\\src\\MyTestBlazoe\\obj\\GX\\GoLive.Generator.BlazorInterop\\GoLive.Generator.BlazorInterop.JSInteropGenerator\\Generated.JSInterop.cs",label:"Generated.JSInterop.cs",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using System.Threading.Tasks;\nusing Microsoft.JSInterop;\n\nnamespace GoLive.Generator.BlazorInterop.Playground.Client\n{\n    public static class JSInterop\n    {\n        public static string _window_blazorInterop_showModal => "window.blazorInterop.showModal";\n\n        public static async Task showModalVoidAsync(this IJSRuntime JSRuntime, object @dialogId)\n        {\n            await JSRuntime.InvokeVoidAsync("window.blazorInterop.showModal", @dialogId);\n        }\n\n        public static async Task<T> showModalAsync<T>(this IJSRuntime JSRuntime, object @dialogId)\n        {\n            return await JSRuntime.InvokeAsync<T>("window.blazorInterop.showModal", @dialogId);\n        }\n\n        public static string _window_blazorInterop_setPageTitle => "window.blazorInterop.setPageTitle";\n\n        public static async Task setPageTitleVoidAsync(this IJSRuntime JSRuntime, object @title)\n        {\n            await JSRuntime.InvokeVoidAsync("window.blazorInterop.setPageTitle", @title);\n        }\n\n        public static async Task<T> setPageTitleAsync<T>(this IJSRuntime JSRuntime, object @title)\n        {\n            return await JSRuntime.InvokeAsync<T>("window.blazorInterop.setPageTitle", @title);\n        }\n    }\n}\n')))),(0,o.kt)("h2",{id:"useful"},"Useful"),(0,o.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{target:"_blank",href:n(25628).Z},"Download Example project GoLive.Generator.BlazorInterop "))),(0,o.kt)("h3",{id:"share-golivegeneratorblazorinterop"},"Share GoLive.Generator.BlazorInterop"),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGoLive.Generator.BlazorInterop&quote=GoLive.Generator.BlazorInterop",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGoLive.Generator.BlazorInterop&text=GoLive.Generator.BlazorInterop:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGoLive.Generator.BlazorInterop",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGoLive.Generator.BlazorInterop&title=GoLive.Generator.BlazorInterop",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGoLive.Generator.BlazorInterop&title=GoLive.Generator.BlazorInterop&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGoLive.Generator.BlazorInterop",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/GoLive.Generator.BlazorInterop"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/GoLive.Generator.BlazorInterop")),(0,o.kt)("h3",{id:"in-the-same-category-blazor---1-other-generators"},"In the same category (Blazor) - 1 other generators"),(0,o.kt)("h4",{id:"blazorators"},(0,o.kt)("a",{parentName:"h4",href:"/docs/Blazorators"},"Blazorators")))}g.isMDXComponent=!0},25628:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/GoLive.Generator.BlazorInterop-0d399d9fd782870cd20a62f3852077b4.zip"}}]);