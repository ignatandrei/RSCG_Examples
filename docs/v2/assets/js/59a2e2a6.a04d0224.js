"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[5600],{17669:(e,n,t)=>{t.d(n,{Ay:()=>l,RM:()=>r});var s=t(74848),a=t(28453);const r=[{value:"Category &quot;Mapper&quot; has the following generators:",id:"category-mapper-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function i(e){const n={a:"a",h3:"h3",p:"p",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"category-mapper-has-the-following-generators",children:'Category "Mapper" has the following generators:'}),"\n",(0,s.jsxs)(n.p,{children:["1 ",(0,s.jsx)(n.a,{href:"/docs/AutoDTO",children:"AutoDTO"})]}),"\n",(0,s.jsxs)(n.p,{children:["2 ",(0,s.jsx)(n.a,{href:"/docs/AutoGen",children:"AutoGen"})]}),"\n",(0,s.jsxs)(n.p,{children:["3 ",(0,s.jsx)(n.a,{href:"/docs/DynamicsMapper",children:"DynamicsMapper"})]}),"\n",(0,s.jsxs)(n.p,{children:["4 ",(0,s.jsx)(n.a,{href:"/docs/Facet",children:"Facet"})]}),"\n",(0,s.jsxs)(n.p,{children:["5 ",(0,s.jsx)(n.a,{href:"/docs/LightweightObjectMapper",children:"LightweightObjectMapper"})]}),"\n",(0,s.jsxs)(n.p,{children:["6 ",(0,s.jsx)(n.a,{href:"/docs/MagicMap",children:"MagicMap"})]}),"\n",(0,s.jsxs)(n.p,{children:["7 ",(0,s.jsx)(n.a,{href:"/docs/mapperly",children:"mapperly"})]}),"\n",(0,s.jsxs)(n.p,{children:["8 ",(0,s.jsx)(n.a,{href:"/docs/MapTo",children:"MapTo"})]}),"\n",(0,s.jsxs)(n.p,{children:["9 ",(0,s.jsx)(n.a,{href:"/docs/NextGenMapper",children:"NextGenMapper"})]}),"\n",(0,s.jsx)(n.h3,{id:"see-category",children:"See category"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/Categories/Mapper",children:"Mapper"})})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}},49730:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>g,frontMatter:()=>p,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"RSCG-Examples/Facet","title":"229 - Facet","description":"Custom generation and mapper","source":"@site/docs/RSCG-Examples/Facet.md","sourceDirName":"RSCG-Examples","slug":"/Facet","permalink":"/RSCG_Examples/v2/docs/Facet","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2290,"frontMatter":{"sidebar_position":2290,"title":"229 - Facet","description":"Custom generation and mapper","slug":"/Facet"},"sidebar":"tutorialSidebar","previous":{"title":"228 - mvvmgen","permalink":"/RSCG_Examples/v2/docs/mvvmgen"},"next":{"title":"230 - Unflat","permalink":"/RSCG_Examples/v2/docs/Unflat"}}');var a=t(74848),r=t(28453),i=t(11470),l=t(19365),o=t(14252),c=t(17669);const p={sidebar_position:2290,title:"229 - Facet",description:"Custom generation and mapper",slug:"/Facet"},d="Facet  by Tim Maes",u={},m=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Author",id:"author",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"\ud83d\udc8e What is Facetting?",id:"gem-what-is-facetting",level:2},{value:"\u2754 Why Facetting?",id:"grey_question-why-facetting",level:2},{value:"\ud83d\udccb Documentation",id:"clipboard-documentation",level:2},{value:"\u2b50 Key Features",id:"star-key-features",level:2},{value:"\ud83c\udf0e The Facet Ecosystem",id:"earth_americas-the-facet-ecosystem",level:2},{value:"\ud83d\ude80 Quick start",id:"rocket-quick-start",level:2},{value:"Install the NuGet Package",id:"install-the-nuget-package",level:3},{value:"Basic Projection",id:"basic-projection",level:3},{value:"Property Exclusion &amp; Field Inclusion",id:"property-exclusion--field-inclusion",level:3},{value:"Different Type Kinds",id:"different-type-kinds",level:3},{value:"Custom Sync Mapping",id:"custom-sync-mapping",level:3},{value:"Async Mapping for I/O Operations",id:"async-mapping-for-io-operations",level:3},{value:"Async Mapping with Dependency Injection",id:"async-mapping-with-dependency-injection",level:3},{value:"EF Core Integration",id:"ef-core-integration",level:3},{value:"Forward Mapping (Entity -&gt; Facet)",id:"forward-mapping-entity---facet",level:4},{value:"Reverse Mapping (Facet -&gt; Entity)",id:"reverse-mapping-facet---entity",level:4},{value:"Automatic CRUD DTO Generation",id:"automatic-crud-dto-generation",level:3},{value:"Multiple Configurations for Fine-Grained Control",id:"multiple-configurations-for-fine-grained-control",level:4},{value:"Perfect for RESTful APIs",id:"perfect-for-restful-apis",level:4},{value:"\ud83d\udcc8 Performance Benchmarks",id:"chart_with_upwards_trend-performance-benchmarks",level:2},{value:"Single Mapping",id:"single-mapping",level:3},{value:"Collection Mapping (10 items)",id:"collection-mapping-10-items",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share Facet",id:"share-facet",level:3},...c.RM];function h(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"facet--by-tim-maes",children:"Facet  by Tim Maes"})}),"\n",(0,a.jsx)(o.A,{toc:m}),"\n",(0,a.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://www.nuget.org/packages/Facet/",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/Facet?label=Facet",alt:"Nuget"})}),"\n",(0,a.jsx)(n.a,{href:"https://github.com/Tim-Maes/Facet/",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/Tim-Maes/Facet?label=updated",alt:"GitHub last commit"})}),"\n",(0,a.jsx)(n.img,{src:"https://img.shields.io/github/stars/Tim-Maes/Facet?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,a.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,a.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsxs)(n.p,{children:["Name: ",(0,a.jsx)(n.strong,{children:"Facet"})]}),(0,a.jsx)(n.p,{children:"Generate lean DTOs, slim views, or faceted projections of your models with a single attribute."}),(0,a.jsx)(n.p,{children:"Author: Tim Maes"}),(0,a.jsxs)(n.p,{children:["NuGet:\n",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.a,{href:"https://www.nuget.org/packages/Facet/",children:"https://www.nuget.org/packages/Facet/"})})]}),(0,a.jsxs)(n.p,{children:["You can find more details at ",(0,a.jsx)(n.a,{href:"https://github.com/Tim-Maes/Facet/",children:"https://github.com/Tim-Maes/Facet/"})]}),(0,a.jsxs)(n.p,{children:["Source: ",(0,a.jsx)(n.a,{href:"https://github.com/Tim-Maes/Facet/",children:"https://github.com/Tim-Maes/Facet/"})]})]}),"\n",(0,a.jsx)(n.h3,{id:"author",children:"Author"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["Tim Maes\n",(0,a.jsx)(n.img,{src:"https://github.com/Tim-Maes.png",alt:"Alt text"})]})}),"\n",(0,a.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)("div",{align:"center",children:(0,a.jsx)("img",{src:"https://raw.githubusercontent.com/Tim-Maes/Facet/master/assets/Facet.png",alt:"Facet logo",width:"400"})}),(0,a.jsx)("div",{align:"center",children:(0,a.jsx)(n.p,{children:'"One part of a subject, situation, object that has many parts."'})}),(0,a.jsx)("br",{}),(0,a.jsx)("div",{align:"center",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://www.nuget.org/packages/Facet",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/nuget/v/Facet.svg",alt:"NuGet"})}),"\n",(0,a.jsx)(n.a,{href:"https://www.nuget.org/packages/Facet",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/Facet.svg",alt:"Downloads"})}),"\n",(0,a.jsx)(n.a,{href:"https://github.com/Tim-Maes/Facet/blob/main/LICENSE.txt",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/github/license/Tim-Maes/Facet.svg",alt:"GitHub"})}),"\n",(0,a.jsx)(n.a,{href:"https://github.com/Tim-Maes/Facet/actions/workflows/build.yml",children:(0,a.jsx)(n.img,{src:"https://github.com/Tim-Maes/Facet/actions/workflows/build.yml/badge.svg",alt:"CI"})}),"\n",(0,a.jsx)(n.a,{href:"https://github.com/Tim-Maes/Facet/actions/workflows/release.yml",children:(0,a.jsx)(n.img,{src:"https://github.com/Tim-Maes/Facet/actions/workflows/release.yml/badge.svg",alt:"CD"})})]})}),(0,a.jsx)(n.hr,{}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Facet"})," is a C# source generator that lets you define ",(0,a.jsx)(n.strong,{children:"lightweight projections"})," (DTOs, API models, etc.) directly from your domain models, without writing boilerplate."]}),(0,a.jsx)(n.p,{children:"It generates partial classes, records, structs, or record structs with constructors, optional LINQ projections, and even supports custom mappings, all at compile time, with zero runtime cost."}),(0,a.jsxs)(n.h2,{id:"gem-what-is-facetting",children:["\ud83d\udc8e"," What is Facetting?"]}),(0,a.jsxs)(n.p,{children:["Facetting is the process of defining ",(0,a.jsx)(n.strong,{children:"focused views"})," of a larger model at compile time."]}),(0,a.jsxs)(n.p,{children:["Instead of manually writing separate DTOs, mappers, and projections, ",(0,a.jsx)(n.strong,{children:"Facet"})," allows you to declare what you want to keep, and generates everything else."]}),(0,a.jsxs)(n.p,{children:["You can think of it like ",(0,a.jsx)(n.strong,{children:"carving out a specific facet"})," of a gem:"]}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The part you care about"}),"\n",(0,a.jsx)(n.li,{children:"Leaving the rest behind."}),"\n"]}),(0,a.jsxs)(n.h2,{id:"grey_question-why-facetting",children:["\u2754"," Why Facetting?"]}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Reduce duplication across DTOs, projections, and ViewModels"}),"\n",(0,a.jsx)(n.li,{children:"Maintain strong typing with no runtime cost"}),"\n",(0,a.jsx)(n.li,{children:"Stay DRY (Don't Repeat Yourself) without sacrificing performance"}),"\n",(0,a.jsx)(n.li,{children:"Works seamlessly with LINQ providers like Entity Framework"}),"\n"]}),(0,a.jsxs)(n.h2,{id:"clipboard-documentation",children:["\ud83d\udccb"," Documentation"]}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"https://github.com/Tim-Maes/Facet//docs/README.md",children:"Documentation & Guides"})})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://github.com/Tim-Maes/Facet//docs/07_WhatIsBeingGenerated.md",children:"What is being generated?"})}),"\n"]}),(0,a.jsxs)(n.h2,{id:"star-key-features",children:["\u2b50"," Key Features"]}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\u2705"," Generate classes, records, structs, or record structs from existing types"]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705"," Exclude fields/properties you don't want (create a Facetted view of your model)"]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705"," Include/redact public fields"]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705"," Auto-generate constructors for fast mapping"]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705"," LINQ projection expressions"]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705"," Full mapping support with custom mapping configurations"]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705"," Auto-generate complete CRUD DTO sets with ",(0,a.jsx)(n.code,{children:"[GenerateDtos]"})]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705"," ",(0,a.jsx)(n.strong,{children:"Expression transformation and mapping utilities"})," for reusing business logic across entities and DTOs"]}),"\n",(0,a.jsxs)(n.li,{children:["\u2705"," Preserves member and type XML documentation"]}),"\n"]}),(0,a.jsxs)(n.h2,{id:"earth_americas-the-facet-ecosystem",children:["\ud83c\udf0e"," The Facet Ecosystem"]}),(0,a.jsx)(n.p,{children:"Facet is modular and consists of several NuGet packages:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Facet"}),": The core source generator. Generates DTOs, projections, and mapping code."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Facet.Extensions"}),": Provider-agnostic extension methods for mapping and projecting (works with any LINQ provider, no EF Core dependency)."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Facet.Mapping"}),": Advanced static mapping configuration support with async capabilities and dependency injection for complex mapping scenarios."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Facet.Mapping.Expressions"}),": Expression tree transformation utilities for transforming predicates, selectors, and business logic between source entities and their Facet projections."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Facet.Extensions.EFCore"}),": Async extension methods for Entity Framework Core (requires EF Core 6+)."]}),"\n"]}),"\n"]}),(0,a.jsxs)(n.h2,{id:"rocket-quick-start",children:["\ud83d\ude80"," Quick start"]}),(0,a.jsx)(n.h3,{id:"install-the-nuget-package",children:"Install the NuGet Package"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"dotnet add package Facet\n"})}),(0,a.jsx)(n.p,{children:"For LINQ helpers:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"dotnet add package Facet.Extensions\n"})}),(0,a.jsx)(n.p,{children:"For EF Core support:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"dotnet add package Facet.Extensions.EFCore\n"})}),(0,a.jsx)(n.p,{children:"For expression transformation utilities:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"dotnet add package Facet.Mapping.Expressions\n"})}),(0,a.jsx)(n.h3,{id:"basic-projection",children:"Basic Projection"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"[Facet(typeof(User))]\npublic partial class UserFacet \\{ }\n\n// Auto-generates constructor, properties, and LINQ projection\nvar user = user.ToFacet<UserFacet>();\nvar user = user.ToFacet<User, UserFacet>(); //Much faster\n\nvar users = users.SelectFacets<UserFacet>();\nvar users = users.SelectFacets<User, UserFacet>(); //Much faster\n"})}),(0,a.jsx)(n.h3,{id:"property-exclusion--field-inclusion",children:"Property Exclusion & Field Inclusion"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'// Exclude sensitive properties\nstring[] excludeFields = \\{ "Password", "Email" };\n\n[Facet(typeof(User), exclude: excludeFields)]\npublic partial class UserWithoutEmail \\{ }\n\n// Include public fields\n[Facet(typeof(Entity), IncludeFields = true)]\npublic partial class EntityDto \\{ }\n'})}),(0,a.jsx)(n.h3,{id:"different-type-kinds",children:"Different Type Kinds"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"// Generate as record (immutable by default)\n[Facet(typeof(Product))]\npublic partial record ProductDto;\n\n// Generate as struct (value type)\n[Facet(typeof(Point))]\npublic partial struct PointDto;\n\n// Generate as record struct (immutable value type)\n[Facet(typeof(Coordinates))]\npublic partial record struct CoordinatesDto; // Preserves required/init-only\n"})}),(0,a.jsx)(n.h3,{id:"custom-sync-mapping",children:"Custom Sync Mapping"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'public class UserMapper : IFacetMapConfiguration<User, UserDto>\n{\n    public static void Map(User source, UserDto target)\n    {\n        target.FullName = $"{source.FirstName} {source.LastName}";\n        target.Age = CalculateAge(source.DateOfBirth);\n    }\n}\n\n[Facet(typeof(User), Configuration = typeof(UserMapper))]\npublic partial class UserDto \n{\n    public string FullName \\{ get; set; }\n    public int Age \\{ get; set; }\n}\n'})}),(0,a.jsx)(n.h3,{id:"async-mapping-for-io-operations",children:"Async Mapping for I/O Operations"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"public class UserAsyncMapper : IFacetMapConfigurationAsync<User, UserDto>\n{\n    public static async Task MapAsync(User source, UserDto target, CancellationToken cancellationToken = default)\n    {\n        // Async database lookup\n        target.ProfilePicture = await GetProfilePictureAsync(source.Id, cancellationToken);\n        \n        // Async API call\n        target.ReputationScore = await CalculateReputationAsync(source.Email, cancellationToken);\n    }\n}\n\n// Usage\nvar userDto = await user.ToFacetAsync<User, UserDto, UserAsyncMapper>();\nvar userDtos = await users.ToFacetsParallelAsync<User, UserDto, UserAsyncMapper>();\n"})}),(0,a.jsx)(n.h3,{id:"async-mapping-with-dependency-injection",children:"Async Mapping with Dependency Injection"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"public class UserAsyncMapperWithDI : IFacetMapConfigurationAsyncInstance<User, UserDto>\n{\n    private readonly IProfilePictureService _profileService;\n    private readonly IReputationService _reputationService;\n\n    public UserAsyncMapperWithDI(IProfilePictureService profileService, IReputationService reputationService)\n    {\n        _profileService = profileService;\n        _reputationService = reputationService;\n    }\n\n    public async Task MapAsync(User source, UserDto target, CancellationToken cancellationToken = default)\n    {\n        // Use injected services\n        target.ProfilePicture = await _profileService.GetProfilePictureAsync(source.Id, cancellationToken);\n        target.ReputationScore = await _reputationService.CalculateReputationAsync(source.Email, cancellationToken);\n    }\n}\n\n// Usage with DI\nvar mapper = new UserAsyncMapperWithDI(profileService, reputationService);\nvar userDto = await user.ToFacetAsync(mapper);\nvar userDtos = await users.ToFacetsParallelAsync(mapper);\n"})}),(0,a.jsx)(n.h3,{id:"ef-core-integration",children:"EF Core Integration"}),(0,a.jsx)(n.h4,{id:"forward-mapping-entity---facet",children:"Forward Mapping (Entity -> Facet)"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"// Async projection directly in EF Core queries\nvar userDtos = await dbContext.Users\n    .Where(u => u.IsActive)\n    .ToFacetsAsync<UserDto>();\n\n// LINQ projection for complex queries\nvar results = await dbContext.Products\n    .Where(p => p.IsAvailable)\n    .SelectFacet<ProductDto>()\n    .OrderBy(dto => dto.Name)\n    .ToListAsync();\n"})}),(0,a.jsx)(n.h4,{id:"reverse-mapping-facet---entity",children:"Reverse Mapping (Facet -> Entity)"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'[Facet(typeof(User)]\npublic partial class UpdateUserDto \\{ }\n\n[HttpPut("{id}")]\npublic async Task<IActionResult> UpdateUser(int id, UpdateUserDto dto)\n{\n    var user = await context.Users.FindAsync(id);\n    if (user == null) return NotFound();\n    \n    // Only updates properties that mutated\n    user.UpdateFromFacet(dto, context);\n    \n    await context.SaveChangesAsync();\n    return NoContent();\n}\n\n// With change tracking for auditing\nvar result = user.UpdateFromFacetWithChanges(dto, context);\nif (result.HasChanges)\n{\n    logger.LogInformation("User {UserId} updated. Changed: {Properties}", \n        user.Id, string.Join(", ", result.ChangedProperties));\n}\n'})}),(0,a.jsx)(n.h3,{id:"automatic-crud-dto-generation",children:"Automatic CRUD DTO Generation"}),(0,a.jsx)(n.p,{children:"Generate standard Create, Update, Response, Query, and Upsert DTOs automatically:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"// Generate all standard CRUD DTOs\n[GenerateDtos(Types = DtoTypes.All, OutputType = OutputType.Record)]\npublic class User\n{\n    public int Id \\{ get; set; }\n    public string FirstName \\{ get; set; }\n    public string LastName \\{ get; set; }\n    public string Email \\{ get; set; }\n    public DateTime CreatedAt \\{ get; set; }\n}\n\n// Auto-generates:\n// - CreateUserRequest (excludes Id)\n// - UpdateUserRequest (includes Id)  \n// - UserResponse (includes all)\n// - UserQuery (all properties nullable)\n// - UpsertUserRequest (includes Id, for create/update operations)\n"})}),(0,a.jsx)(n.h4,{id:""}),(0,a.jsx)(n.p,{children:"Entities with Smart Exclusions"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'[GenerateAuditableDtos(\n    Types = DtoTypes.Create | DtoTypes.Update | DtoTypes.Response,\n    OutputType = OutputType.Record,\n    ExcludeProperties = new[] \\{ "Password" })]\npublic class Product\n{\n    public int Id \\{ get; set; }\n    public string Name \\{ get; set; }\n    public string Password \\{ get; set; \\} // Excluded\n    public DateTime CreatedAt \\{ get; set; \\} // Auto-excluded (audit)\n    public string CreatedBy \\{ get; set; \\} // Auto-excluded (audit)\n}\n\n// Auto-excludes audit fields: CreatedAt, UpdatedAt, CreatedBy, UpdatedBy\n'})}),(0,a.jsx)(n.h4,{id:"multiple-configurations-for-fine-grained-control",children:"Multiple Configurations for Fine-Grained Control"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'// Different exclusions for different DTO types\n[GenerateDtos(Types = DtoTypes.Response, ExcludeProperties = new[] \\{ "Password", "InternalNotes" })]\n[GenerateDtos(Types = DtoTypes.Upsert, ExcludeProperties = new[] \\{ "Password" })]\npublic class Schedule\n{\n    public int Id \\{ get; set; }\n    public string Name \\{ get; set; }\n    public string Password \\{ get; set; \\} // Excluded from both\n    public string InternalNotes \\{ get; set; \\} // Only excluded from Response\n}\n\n// Generates:\n// - ScheduleResponse (excludes Password, InternalNotes) \n// - UpsertScheduleRequest (excludes Password, includes InternalNotes)\n'})}),(0,a.jsx)(n.h4,{id:"perfect-for-restful-apis",children:"Perfect for RESTful APIs"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'[HttpPost]\npublic async Task<ActionResult<ScheduleResponse>> CreateSchedule(CreateScheduleRequest request)\n{\n    var schedule = new Schedule\n    {\n        Name = request.Name,\n        // Map other properties;;;\n    };\n\n    context.Schedules.Add(schedule);\n    await context.SaveChangesAsync();\n    return schedule.ToFacet<ScheduleResponse>();\n}\n\n[HttpPut("{id}")]\npublic async Task<ActionResult<ScheduleResponse>> UpsertSchedule(int id, UpsertScheduleRequest body)\n{\n    var schedule = context.GetScheduleById(id);\n    if (schedule == null) return NotFound();\n    \n    // Ensure the body ID matches the route ID  \n    body = body with \\{ Id = id };\n    \n    schedule.UpdateFromFacet(body, context);\n    await context.SaveChangesAsync();\n    return schedule.ToFacet<ScheduleResponse>();\n}\n'})}),(0,a.jsxs)(n.h2,{id:"chart_with_upwards_trend-performance-benchmarks",children:["\ud83d\udcc8"," Performance Benchmarks"]}),(0,a.jsx)(n.p,{children:"Facet delivers competitive performance across different mapping scenarios. Here's how it compares to popular alternatives:"}),(0,a.jsx)(n.h3,{id:"single-mapping",children:"Single Mapping"}),(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Library"}),(0,a.jsx)(n.th,{children:"Mean Time"}),(0,a.jsx)(n.th,{children:"Memory Allocated"}),(0,a.jsx)(n.th,{children:"Performance vs Facet"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Facet"})}),(0,a.jsx)(n.td,{children:"15.93 ns"}),(0,a.jsx)(n.td,{children:"136 B"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Baseline"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Mapperly"}),(0,a.jsx)(n.td,{children:"15.09 ns"}),(0,a.jsx)(n.td,{children:"128 B"}),(0,a.jsx)(n.td,{children:"5% faster, 6% less memory"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Mapster"}),(0,a.jsx)(n.td,{children:"21.90 ns"}),(0,a.jsx)(n.td,{children:"128 B"}),(0,a.jsx)(n.td,{children:"38% slower, 6% less memory"})]})]})]}),(0,a.jsx)(n.h3,{id:"collection-mapping-10-items",children:"Collection Mapping (10 items)"}),(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Library"}),(0,a.jsx)(n.th,{children:"Mean Time"}),(0,a.jsx)(n.th,{children:"Memory Allocated"}),(0,a.jsx)(n.th,{children:"Performance vs Facet"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Mapster"}),(0,a.jsx)(n.td,{children:"192.55 ns"}),(0,a.jsx)(n.td,{children:"1,416 B"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"10% faster, 10% less memory"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Facet"})}),(0,a.jsx)(n.td,{children:"207.32 ns"}),(0,a.jsx)(n.td,{children:"1,568 B"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Baseline"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Mapperly"}),(0,a.jsx)(n.td,{children:"222.50 ns"}),(0,a.jsx)(n.td,{children:"1,552 B"}),(0,a.jsx)(n.td,{children:"7% slower, 1% less memory"})]})]})]}),(0,a.jsxs)(n.p,{children:["For this benchmark we used the ",(0,a.jsx)(n.code,{children:"<TSource, TTarget>"})," methods."]}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Insights:"})}),(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Single mapping"}),": All three libraries perform similarly with sub-nanosecond differences"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Collection mapping"}),": Mapster has a slight edge for bulk operations, while Facet and Mapperly are very close"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Memory efficiency"}),": All libraries are within ~10% of each other for memory allocation"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Compile-time generation"}),": Both Facet and Mapperly benefit from zero-runtime-cost source generation"]}),"\n"]}),"\n"]})]}),"\n",(0,a.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"Custom generation and mapper"})}),"\n",(0,a.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,a.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsxs)(l.A,{value:"csproj",label:"CSharp Project",children:[(0,a.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,a.jsx)(n.strong,{children:"Facet"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {16}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\n\t<ItemGroup>\n\t  <PackageReference Include="Facet" Version="2.7.0" />\n\t</ItemGroup>\n\n\t\n\t\n\t\n</Project>\n\n'})})]}),(0,a.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Facet\\src\\mapperDemo\\Program.cs",label:"Program.cs",children:[(0,a.jsxs)(n.p,{children:["This is the use of ",(0,a.jsx)(n.strong,{children:"Facet"})," in ",(0,a.jsx)(n.em,{children:"Program.cs"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using mapperDemo;\nvar p=new Person();\np.FirstName = "Andrei";\np.LastName = "Ignat";\nPersonDTO dto= new(p);\nConsole.WriteLine(dto.FullName);\n\n'})})]}),(0,a.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Facet\\src\\mapperDemo\\Person.cs",label:"Person.cs",children:[(0,a.jsxs)(n.p,{children:["This is the use of ",(0,a.jsx)(n.strong,{children:"Facet"})," in ",(0,a.jsx)(n.em,{children:"Person.cs"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\npublic partial class Person\n{\n    public int ID \\{ get; set; }\n    public string? FirstName \\{ get; set; }\n    public string? LastName \\{ get; set; }\n}\n\n\n"})})]}),(0,a.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Facet\\src\\mapperDemo\\PersonDTO.cs",label:"PersonDTO.cs",children:[(0,a.jsxs)(n.p,{children:["This is the use of ",(0,a.jsx)(n.strong,{children:"Facet"})," in ",(0,a.jsx)(n.em,{children:"PersonDTO.cs"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'\nusing Facet;\n\nnamespace mapperDemo;\n[Facet(typeof(Person), Kind = FacetKind.Struct)]\npublic partial struct PersonDTO\n{   public string FullName \\{ \n        get\n        {\n            return FirstName + " " + LastName;\n        }\n    }\n}\n\n'})})]})]}),"\n",(0,a.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,a.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,a.jsxs)(i.A,{children:[(0,a.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Facet\\src\\mapperDemo\\obj\\GX\\Facet\\Facet.Generators.FacetGenerator\\PersonDTO.g.cs",label:"PersonDTO.g.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated>\n//     This code was generated by the Facet source generator.\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n\nusing System;\nusing System.Linq.Expressions;\n\nnamespace mapperDemo;\npublic partial struct PersonDTO\n{\n    public int ID \\{ get; set; }\n    public string FirstName \\{ get; set; }\n    public string LastName \\{ get; set; }\n\n    /// <summary>\n    /// Initializes a new instance of the <see cref="PersonDTO"/> class from the specified <see cref="global::Person"/>.\n    /// </summary>\n    /// <param name="source">The source <see cref="global::Person"/> object to copy data from.</param>\n    public PersonDTO(global::Person source)\n    {\n        this.ID = source.ID;\n        this.FirstName = source.FirstName;\n        this.LastName = source.LastName;\n    }\n\n    /// <summary>\n    /// Initializes a new instance of the <see cref="PersonDTO"/> class with default values.\n    /// </summary>\n    /// <remarks>\n    /// This constructor is useful for unit testing, object initialization, and scenarios\n    /// where you need to create an empty instance and populate properties later.\n    /// </remarks>\n    public PersonDTO()\n    {\n    }\n\n    /// <summary>\n    /// Gets the projection expression for converting <see cref="global::Person"/> to <see cref="PersonDTO"/>.\n    /// Use this for LINQ and Entity Framework query projections.\n    /// </summary>\n    /// <value>An expression tree that can be used in LINQ queries for efficient database projections.</value>\n    /// <example>\n    /// <code>\n    /// var dtos = context.global::Persons\n    ///     .Where(x => x.IsActive)\n    ///     .Select(PersonDTO.Projection)\n    ///     .ToList();\n    /// </code>\n    /// </example>\n    public static Expression<Func<global::Person, PersonDTO>> Projection =>\n        source => new PersonDTO(source);\n}\n\n'})})}),(0,a.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Facet\\src\\mapperDemo\\obj\\GX\\LightweightObjectMapper\\LightweightObjectMapper.LightweightObjectMapperSourceGenerator\\Extensions.Generated.cs",label:"Extensions.Generated.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <Auto-Generated/>\n#pragma warning disable IDE0005\n#pragma warning disable CS0105\nusing LightweightObjectMapper;\nusing System;\nusing System;\nusing System.Linq;\nusing System.Runtime.CompilerServices;\n\nnamespace mapperDemo\n{\n    sealed partial class Extensions\n    {\n        public static partial class Generated\n        {\n            /// <summary>\n            /// PostMappingDeclaration for <see cref = "global::Person"/> to <see cref = "global::mapperDemo.PersonDTO"/>\n            /// </summary>\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\n            [MappingMetadata(MappingMetadataType.PostMappingDeclaration, typeof(global::Person), typeof(global::mapperDemo.PersonDTO))]\n            public static global::mapperDemo.PersonDTO PostMapping_D275C37F33F4AFBD(global::Person source, global::mapperDemo.PersonDTO target)\n            {\n                target.ID = source.ID;\n                return target;\n            }\n        }\n    }\n}\n'})})}),(0,a.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Facet\\src\\mapperDemo\\obj\\GX\\LightweightObjectMapper\\LightweightObjectMapper.LightweightObjectMapperSourceGenerator\\LightweightObjectMapper.PreCodes.LightweightObjectMapperPreCodes.cs",label:"LightweightObjectMapper.PreCodes.LightweightObjectMapperPreCodes.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'#if !NO_LIGHTWEIGHT_OBJECT_MAPPER_PRE_CODES\n\n// <Auto-Generated/>\n\n#pragma warning disable IDE0161 // \u8f6c\u6362\u4e3a\u6587\u4ef6\u8303\u56f4\u9650\u5b9a\u7684 namespace\n\nusing System;\nusing System.Collections.Generic;\n\nnamespace LightweightObjectMapper\n{\n    /// <summary>\n    /// \u6620\u5c04\u914d\u7f6e\u63a5\u53e3\n    /// </summary>\n    internal interface IMappingProfile \\{ }\n\n    /// <summary>\n    /// \u6620\u5c04\u540e\u6267\u884c\u7684\u52a8\u4f5c\n    /// </summary>\n    /// <typeparam name="TIn"></typeparam>\n    /// <typeparam name="TOut"></typeparam>\n    internal interface IPostMapping<TIn, TOut> : IMappingProfile\n    {\n        /// <summary>\n        /// \u6620\u5c04\u540e\u6267\u884c\u7684\u52a8\u4f5c\n        /// </summary>\n        /// <param name="source"></param>\n        /// <param name="target"></param>\n        /// <returns></returns>\n        TOut PostMapping(TIn source, TOut target);\n    }\n\n    /// <summary>\n    /// \u6620\u5c04\u524d\u51c6\u5907\n    /// </summary>\n    /// <typeparam name="TIn"></typeparam>\n    /// <typeparam name="TOut"></typeparam>\n    internal interface IMappingPrepare<TIn, TOut> : IMappingProfile\n    {\n        /// <summary>\n        /// \u6620\u5c04\u524d\u51c6\u5907\n        /// </summary>\n        /// <param name="source"></param>\n        /// <returns></returns>\n        TOut MappingPrepare(TIn source);\n    }\n\n    /// <summary>\n    /// \u63a5\u7ba1\u5b8c\u6574\u7684\u7c7b\u578b\u6620\u5c04\uff08\u4ec5\u975e\u76ee\u6807\u5b9e\u4f8b\u6620\u5c04\uff09\n    /// </summary>\n    /// <typeparam name="TIn"></typeparam>\n    /// <typeparam name="TOut"></typeparam>\n    internal interface ITypeMapping<TIn, TOut> : IMappingProfile\n    {\n        /// <summary>\n        /// \u63a5\u7ba1\u5b8c\u6574\u7684\u7c7b\u578b\u6620\u5c04\uff08\u4ec5\u975e\u76ee\u6807\u5b9e\u4f8b\u6620\u5c04\uff09\n        /// </summary>\n        /// <param name="source"></param>\n        /// <returns></returns>\n        TOut TypeMapping(TIn source);\n    }\n\n    /// <summary>\n    /// \u7c7b\u578b\u6210\u5458\u5ffd\u7565\u6620\u5c04\n    /// </summary>\n    /// <typeparam name="T"></typeparam>\n    internal interface ITypeMemberIgnoreMapping<T> : IMappingProfile\n    {\n        /// <summary>\n        /// \u7c7b\u578b\u6210\u5458\u5ffd\u7565\u6620\u5c04<br/>\n        /// \u65b9\u6cd5\u4f53\u5185\u8bbf\u95ee\u8fc7\u7684 <paramref name="target"/> \u6240\u6709\u6210\u5458\uff0c\u5c06\u5728\u6620\u5c04\u65f6\u88ab\u5ffd\u7565\n        /// </summary>\n        /// <param name="target"></param>\n        /// <returns></returns>\n        object? IgnoreMapping(T target);\n    }\n\n    /// <summary>\n    /// \u6807\u8bb0\u4e00\u4e2a\u65b9\u6cd5\u4e3a\u96c6\u5408\u6620\u5c04\u65b9\u6cd5<br/>\n    /// \u96c6\u5408\u6620\u5c04\u65b9\u6cd5\u5e94\u5305\u542b\u552f\u4e00\u6cdb\u578b\u53c2\u6570 T \uff0c\u4ee5\u53ca\u552f\u4e00\u53c2\u6570 <see cref="IEnumerable{T}"/> \uff0c\u8fd4\u56de\u7c7b\u578b\u5e94\u8be5\u4e3a <see cref="IEnumerable{T}"/> \u7684\u6d3e\u751f\u7c7b\u578b\n    /// </summary>\n    [AttributeUsage(AttributeTargets.Method, Inherited = false, AllowMultiple = false)]\n    internal sealed class CollectionMappingAttribute : Attribute\n    {\n    }\n\n    /// <summary>\n    /// \u6807\u8bb0\u7c7b\u4e3a\u6620\u5c04\u914d\u7f6e\u7c7b\n    /// </summary>\n    [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)]\n    internal sealed class MappingProfileAttribute : Attribute\n    {\n        /// <inheritdoc cref="MappingProfileAttribute"/>\n        public MappingProfileAttribute() \\{ }\n    }\n\n    /// <summary>\n    /// \u6620\u5c04\u5143\u6570\u636e\n    /// </summary>\n    [AttributeUsage(AttributeTargets.All, Inherited = false, AllowMultiple = true)]\n    internal sealed class MappingMetadataAttribute : Attribute\n    {\n        /// <inheritdoc cref="MappingMetadataAttribute"/>\n        public MappingMetadataAttribute(MappingMetadataType type, params object[] data) \\{ }\n    }\n\n    /// <summary>\n    /// \u6620\u5c04\u5143\u6570\u636e\u7c7b\u578b\n    /// </summary>\n    internal enum MappingMetadataType\n    {\n        /// <summary>\n        /// \u58f0\u660e MappingPrepare\n        /// </summary>\n        MappingPrepareDeclaration,\n\n        /// <summary>\n        /// \u58f0\u660e PostMapping\n        /// </summary>\n        PostMappingDeclaration,\n\n        /// <summary>\n        /// \u58f0\u660e TypeMapping\n        /// </summary>\n        TypeMappingDeclaration,\n\n        /// <summary>\n        /// \u58f0\u660e CollectionMapping\n        /// </summary>\n        CollectionMappingDeclaration,\n\n        /// <summary>\n        /// \u5ffd\u7565\u6210\u5458\u58f0\u660e\n        /// </summary>\n        IgnoreMembersDeclaration,\n\n        /// <summary>\n        /// \u7c7b\u578b\u5ffd\u7565\u6210\u5458\u58f0\u660e\n        /// </summary>\n        TypeIgnoreMembersDeclaration,\n    }\n\n    /// <summary>\n    /// \u5f15\u7528\u5176\u5b83\u6620\u5c04\u914d\u7f6e\u7c7b\n    /// </summary>\n    [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = true)]\n    internal sealed class MappingProfileIncludeAttribute : Attribute\n    {\n        /// <inheritdoc cref="MappingProfileIncludeAttribute"/>\n        public MappingProfileIncludeAttribute(params Type[] profileTypes) \\{ }\n    }\n\n    /// <summary>\n    /// \u5bf9\u8c61\u6620\u5c04 MapTo \u5360\u4f4d\u65b9\u6cd5\n    /// </summary>\n    [Obsolete("Do not use the placeholder extension class.", true)]\n    internal static class LightweightObjectMapperPlaceholderExtensions\n    {\n        private const string ErrorCallPlaceholderMethodMessage = "Do not use the placeholder extension method. If not redirect to the right mapper extension method please try fix other errors and rebuild the project.";\n\n        /// <summary>\n        /// \u5bf9\u8c61\u6620\u5c04 MapTo \u5360\u4f4d\u65b9\u6cd5<br/>\n        /// \u751f\u6210 \u65e0\u9700\u76ee\u6807\u5bf9\u8c61 \u7684\u6cdb\u578b\u6620\u5c04\u65b9\u6cd5\uff0c\u6620\u5c04\u5230 <typeparamref name="TOut"/>\n        /// </summary>\n        /// <typeparam name="TOut"></typeparam>\n        /// <param name="source"></param>\n        /// <returns></returns>\n        [Obsolete(ErrorCallPlaceholderMethodMessage, true)]\n        public static TOut MapTo<TOut>(this object source)\n        {\n            throw new NotImplementedException();\n        }\n\n        /// <summary>\n        /// \u5bf9\u8c61\u6620\u5c04 MapTo \u5360\u4f4d\u65b9\u6cd5<br/>\n        /// \u751f\u6210 \u9700\u8981\u76ee\u6807\u5bf9\u8c61 \u7684\u6cdb\u578b\u6620\u5c04\u65b9\u6cd5\uff0c\u6620\u5c04\u5230 <typeparamref name="TOut"/>\n        /// </summary>\n        /// <typeparam name="TOut"></typeparam>\n        /// <param name="source"></param>\n        /// <returns></returns>\n        [Obsolete(ErrorCallPlaceholderMethodMessage, true)]\n        public static TOut MapTo<TOut>(this object source, TOut target)\n        {\n            throw new NotImplementedException();\n        }\n\n        /// <summary>\n        /// \u503c\u7c7b\u578b \u5bf9\u8c61\u6620\u5c04 MapTo \u5360\u4f4d\u65b9\u6cd5<br/>\n        /// \u751f\u6210 \u9700\u8981\u76ee\u6807\u503c\u7c7b\u578b\u5bf9\u8c61 \u7684\u6cdb\u578b\u6620\u5c04\u65b9\u6cd5\uff0c\u6620\u5c04\u5230 <typeparamref name="TOut"/>\n        /// </summary>\n        /// <typeparam name="TOut"></typeparam>\n        /// <param name="source"></param>\n        /// <returns></returns>\n        [Obsolete(ErrorCallPlaceholderMethodMessage, true)]\n        public static TOut MapTo<TOut>(this object source, ref TOut target)\n            where TOut : struct\n        {\n            throw new NotImplementedException();\n        }\n    }\n}\n\n#endif\n\n'})})}),(0,a.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Facet\\src\\mapperDemo\\obj\\GX\\LightweightObjectMapper\\LightweightObjectMapper.LightweightObjectMapperSourceGenerator\\LightweightObjectMapper.PreCodes.PredefinedSpecialTypeMapping.cs",label:"LightweightObjectMapper.PreCodes.PredefinedSpecialTypeMapping.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"#if !NO_LIGHTWEIGHT_OBJECT_MAPPER_PRE_CODES\n\n// <Auto-Generated/>\n\n#pragma warning disable IDE0161 // \u8f6c\u6362\u4e3a\u6587\u4ef6\u8303\u56f4\u9650\u5b9a\u7684 namespace\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Runtime.CompilerServices;\n\nnamespace LightweightObjectMapper\n{\n    /// <summary>\n    /// \u9884\u5b9a\u4e49\u7684\u7c7b\u578b\u6620\u5c04\n    /// </summary>\n    [MappingProfile]\n    internal sealed partial class PredefinedSpecialTypeMapping\n        : ITypeMapping<int, bool>\n        , ITypeMapping<short, bool>\n        , ITypeMapping<long, bool>\n    {\n        public bool TypeMapping(int source)\n        {\n            return source != 0;\n        }\n\n        public bool TypeMapping(short source)\n        {\n            return source != 0;\n        }\n\n        bool ITypeMapping<long, bool>.TypeMapping(long source)\n        {\n            return source != 0;\n        }\n\n        [CollectionMapping]\n        public static IEnumerable<T>? ToIEnumerable<T>(IEnumerable<T>? items)\n        {\n            return items?.ToList();\n        }\n\n        [CollectionMapping]\n        public static ICollection<T>? ToICollection<T>(IEnumerable<T>? items)\n        {\n            return items?.ToList();\n        }\n\n        [CollectionMapping]\n        public static IReadOnlyCollection<T>? ToIReadOnlyCollection<T>(IEnumerable<T>? items)\n        {\n            return items?.ToList();\n        }\n\n        [CollectionMapping]\n        public static IList<T>? ToIList<T>(IEnumerable<T>? items)\n        {\n            return items?.ToList();\n        }\n\n        [CollectionMapping]\n        public static IReadOnlyList<T>? ToIReadOnlyList<T>(IEnumerable<T>? items)\n        {\n            return items?.ToList();\n        }\n\n        [CollectionMapping]\n        public static List<T>? ToList<T>(IEnumerable<T>? items)\n        {\n            return items?.ToList();\n        }\n    }\n}\n\n#endif\n\n"})})}),(0,a.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Facet\\src\\mapperDemo\\obj\\GX\\LightweightObjectMapper\\LightweightObjectMapper.LightweightObjectMapperSourceGenerator\\LOMMapExtensions_mapperDemo_Person.g.cs",label:"LOMMapExtensions_mapperDemo_Person.g.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <Auto-Generated/>\n#pragma warning disable IDE0005\n#pragma warning disable CS0105\nusing System;\nusing System.Linq;\nusing System.Runtime.CompilerServices;\n\nnamespace LightweightObjectMapper\n{\n    internal static partial class LOMMapExtensions_mapperDemo\n    {\n        /// <summary>\n        /// Map <see cref = "global::Person"/> to the following types:<br/>\n        /// <see cref = "global::mapperDemo.PersonDTO"/><br/>\n        /// </summary>\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\n        public static TOut MapTo<TOut>(this global::Person source)\n        {\n            if (source == null)\n            {\n                throw new ArgumentNullException(nameof(source));\n            }\n\n            if (typeof(TOut) == typeof(global::mapperDemo.PersonDTO))\n            {\n                var target = new global::mapperDemo.PersonDTO()\n                {\n                    LastName = source.LastName,\n                    FirstName = source.FirstName,\n                    ID = source.ID,\n                };\n                target = global::mapperDemo.Extensions.Generated.PostMapping_D275C37F33F4AFBD(source, target);\n                return (TOut)(target as object);\n            }\n\n            throw new global::System.NotImplementedException($"No mapping code for {typeof(TOut)}.");\n        }\n    }\n}\n'})})}),(0,a.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Facet\\src\\mapperDemo\\obj\\GX\\LightweightObjectMapper\\LightweightObjectMapper.LightweightObjectMapperSourceGenerator\\PredefinedSpecialTypeMapping.Generated.cs",label:"PredefinedSpecialTypeMapping.Generated.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <Auto-Generated/>\n#pragma warning disable IDE0005\n#pragma warning disable CS0105\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Runtime.CompilerServices;\nusing System;\nusing System.Linq;\nusing System.Runtime.CompilerServices;\n\nnamespace LightweightObjectMapper\n{\n    sealed partial class PredefinedSpecialTypeMapping\n    {\n        public static partial class Generated\n        {\n            /// <summary>\n            /// TypeMappingDeclaration for <see cref = "int "/> to <see cref = "bool "/>\n            /// </summary>\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\n            [MappingMetadata(MappingMetadataType.TypeMappingDeclaration, typeof(int), typeof(bool))]\n            public static bool TypeMapping_A07AFC9A322FFA04(int source)\n            {\n                return source != 0;\n            }\n\n            /// <summary>\n            /// TypeMappingDeclaration for <see cref = "short "/> to <see cref = "bool "/>\n            /// </summary>\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\n            [MappingMetadata(MappingMetadataType.TypeMappingDeclaration, typeof(short), typeof(bool))]\n            public static bool TypeMapping_946949E7222BC174(short source)\n            {\n                return source != 0;\n            }\n\n            /// <summary>\n            /// TypeMappingDeclaration for <see cref = "long "/> to <see cref = "bool "/>\n            /// </summary>\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\n            [MappingMetadata(MappingMetadataType.TypeMappingDeclaration, typeof(long), typeof(bool))]\n            public static bool TypeMapping_3C4D395B4EF43E87(long source)\n            {\n                return source != 0;\n            }\n\n            /// <summary>\n            /// CollectionMappingDeclaration for <see cref = "global::System.Collections.Generic.IEnumerable{T}"/>\n            /// </summary>\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\n            [MappingMetadata(MappingMetadataType.CollectionMappingDeclaration, typeof(global::System.Collections.Generic.IEnumerable<>))]\n            public static global::System.Collections.Generic.IEnumerable<T> CollectionMapping_CEFAD35E246FD0F7<T>(global::System.Collections.Generic.IEnumerable<T> items)\n            {\n                return items?.ToList();\n            }\n\n            /// <summary>\n            /// CollectionMappingDeclaration for <see cref = "global::System.Collections.Generic.ICollection{T}"/>\n            /// </summary>\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\n            [MappingMetadata(MappingMetadataType.CollectionMappingDeclaration, typeof(global::System.Collections.Generic.ICollection<>))]\n            public static global::System.Collections.Generic.ICollection<T> CollectionMapping_37FFD1A2226B51E9<T>(global::System.Collections.Generic.IEnumerable<T> items)\n            {\n                return items?.ToList();\n            }\n\n            /// <summary>\n            /// CollectionMappingDeclaration for <see cref = "global::System.Collections.Generic.IReadOnlyCollection{T}"/>\n            /// </summary>\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\n            [MappingMetadata(MappingMetadataType.CollectionMappingDeclaration, typeof(global::System.Collections.Generic.IReadOnlyCollection<>))]\n            public static global::System.Collections.Generic.IReadOnlyCollection<T> CollectionMapping_AF82A9960EE0C495<T>(global::System.Collections.Generic.IEnumerable<T> items)\n            {\n                return items?.ToList();\n            }\n\n            /// <summary>\n            /// CollectionMappingDeclaration for <see cref = "global::System.Collections.Generic.IList{T}"/>\n            /// </summary>\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\n            [MappingMetadata(MappingMetadataType.CollectionMappingDeclaration, typeof(global::System.Collections.Generic.IList<>))]\n            public static global::System.Collections.Generic.IList<T> CollectionMapping_284BCB723CA17B0E<T>(global::System.Collections.Generic.IEnumerable<T> items)\n            {\n                return items?.ToList();\n            }\n\n            /// <summary>\n            /// CollectionMappingDeclaration for <see cref = "global::System.Collections.Generic.IReadOnlyList{T}"/>\n            /// </summary>\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\n            [MappingMetadata(MappingMetadataType.CollectionMappingDeclaration, typeof(global::System.Collections.Generic.IReadOnlyList<>))]\n            public static global::System.Collections.Generic.IReadOnlyList<T> CollectionMapping_976EA1DB5B772C59<T>(global::System.Collections.Generic.IEnumerable<T> items)\n            {\n                return items?.ToList();\n            }\n\n            /// <summary>\n            /// CollectionMappingDeclaration for <see cref = "global::System.Collections.Generic.List{T}"/>\n            /// </summary>\n            [MethodImpl(MethodImplOptions.AggressiveInlining)]\n            [MappingMetadata(MappingMetadataType.CollectionMappingDeclaration, typeof(global::System.Collections.Generic.List<>))]\n            public static global::System.Collections.Generic.List<T> CollectionMapping_070F0D0F908DAF14<T>(global::System.Collections.Generic.IEnumerable<T> items)\n            {\n                return items?.ToList();\n            }\n        }\n    }\n}\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,a.jsx)(n.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:t(49867).A+"",children:"Download Example project Facet "})})}),"\n",(0,a.jsx)(n.h3,{id:"share-facet",children:"Share Facet"}),"\n",(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFacet&quote=Facet",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFacet&text=Facet:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFacet",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFacet&title=Facet",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFacet&title=Facet&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFacet",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Facet",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Facet"})}),"\n",(0,a.jsx)(c.Ay,{})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},49867:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/files/Facet-3ecb229baedf8b0d1cd660b5589c315b.zip"}}]);