"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[9676],{37738:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>d,default:()=>I,frontMatter:()=>m,metadata:()=>i,toc:()=>g});const i=JSON.parse('{"id":"RSCG-Examples/WhatIAmDoing","title":"106 - WhatIAmDoing","description":"Intercept any method in any project","source":"@site/docs/RSCG-Examples/WhatIAmDoing.md","sourceDirName":"RSCG-Examples","slug":"/WhatIAmDoing","permalink":"/RSCG_Examples/v2/docs/WhatIAmDoing","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1060,"frontMatter":{"sidebar_position":1060,"title":"106 - WhatIAmDoing","description":"Intercept any method in any project","slug":"/WhatIAmDoing"},"sidebar":"tutorialSidebar","previous":{"title":"105 - Weave","permalink":"/RSCG_Examples/v2/docs/Weave"},"next":{"title":"107 - NetAutomaticInterface","permalink":"/RSCG_Examples/v2/docs/NetAutomaticInterface"}}');var a=n(74848),s=n(28453),r=n(11470),o=n(19365),l=n(14252);function c(e){const t={a:"a",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h3,{id:"category-aop-has-the-following-generators",children:'Category "AOP" has the following generators:'}),"\n",(0,a.jsxs)(t.p,{children:["1 ",(0,a.jsx)(t.a,{href:"/docs/WhatIAmDoing",children:"WhatIAmDoing"})]}),"\n",(0,a.jsx)(t.h3,{id:"see-category",children:"See category"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"/docs/Categories/AOP",children:"AOP"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}const m={sidebar_position:1060,title:"106 - WhatIAmDoing",description:"Intercept any method in any project",slug:"/WhatIAmDoing"},d="WhatIAmDoing  by Ignat Andrei",p={},g=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Packages",id:"packages",level:2},{value:"Code",id:"code",level:2},{value:"Intercept static methods",id:"intercept-static-methods",level:3},{value:"Intercept instance methods",id:"intercept-instance-methods",level:3},{value:"See the results",id:"see-the-results",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share WhatIAmDoing",id:"share-whatiamdoing",level:3},{value:"Category &quot;AOP&quot; has the following generators:",id:"category-aop-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function u(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"whatiamdoing--by-ignat-andrei",children:"WhatIAmDoing  by Ignat Andrei"})}),"\n",(0,a.jsx)(l.A,{toc:g}),"\n",(0,a.jsx)(t.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.a,{href:"https://www.nuget.org/packages/RSCG_WhatIAmDoing/",children:(0,a.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/RSCG_WhatIAmDoing?label=RSCG_WhatIAmDoing",alt:"Nuget"})}),(0,a.jsx)(t.a,{href:"https://www.nuget.org/packages/RSCG_WhatIAmDoing_Common/",children:(0,a.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/RSCG_WhatIAmDoing_Common?label=RSCG_WhatIAmDoing_Common",alt:"Nuget"})}),"\n",(0,a.jsx)(t.a,{href:"https://github.com/ignatandrei/RSCG_WhatIAmDoing",children:(0,a.jsx)(t.img,{src:"https://img.shields.io/github/last-commit/ignatandrei/RSCG_WhatIAmDoing?label=updated",alt:"GitHub last commit"})}),"\n",(0,a.jsx)(t.img,{src:"https://img.shields.io/github/stars/ignatandrei/RSCG_WhatIAmDoing?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,a.jsx)(t.h2,{id:"details",children:"Details"}),"\n",(0,a.jsx)(t.h3,{id:"info",children:"Info"}),"\n",(0,a.jsxs)(t.admonition,{type:"info",children:[(0,a.jsxs)(t.p,{children:["Name: ",(0,a.jsx)(t.strong,{children:"WhatIAmDoing"})]}),(0,a.jsx)(t.p,{children:"What I Am Doing - see what your software is doing. Add also RSCG_WhatIAmDoing_Common"}),(0,a.jsx)(t.p,{children:"Author: Ignat Andrei"}),(0,a.jsxs)(t.p,{children:["NuGet:\n",(0,a.jsx)(t.em,{children:(0,a.jsx)(t.a,{href:"https://www.nuget.org/packages/RSCG_WhatIAmDoing/",children:"https://www.nuget.org/packages/RSCG_WhatIAmDoing/"})})]}),(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:(0,a.jsx)(t.a,{href:"https://www.nuget.org/packages/RSCG_WhatIAmDoing_Common/",children:"https://www.nuget.org/packages/RSCG_WhatIAmDoing_Common/"})})}),(0,a.jsxs)(t.p,{children:["You can find more details at ",(0,a.jsx)(t.a,{href:"https://github.com/ignatandrei/RSCG_WhatIAmDoing",children:"https://github.com/ignatandrei/RSCG_WhatIAmDoing"})]}),(0,a.jsxs)(t.p,{children:["Source: ",(0,a.jsx)(t.a,{href:"https://github.com/ignatandrei/RSCG_WhatIAmDoing",children:"https://github.com/ignatandrei/RSCG_WhatIAmDoing"})]})]}),"\n",(0,a.jsx)(t.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,a.jsxs)(t.admonition,{type:"note",children:[(0,a.jsx)(t.h1,{id:"rscg_whatiamdoing",children:"RSCG_WhatIAmDoing"}),(0,a.jsx)(t.p,{children:"Instrument C# software on CI to find what the software is doing."}),(0,a.jsx)(t.h1,{id:"introduction",children:"Introduction"}),(0,a.jsx)(t.p,{children:"Decide what you want to monitor ... and then monitor it."}),(0,a.jsx)(t.h1,{id:"example",children:"Example"}),(0,a.jsx)(t.h2,{id:"packages",children:"Packages"}),(0,a.jsx)(t.p,{children:"Add the following into the csproj you want to be monitores"}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-xml",children:'\t<ItemGroup>\n\t  \x3c!-- <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="8.0.0" /> --\x3e\n\t  <PackageReference Include="RSCG_WhatIAmDoing" Version="8.2024.10201.735" />\n\t  <PackageReference Include="RSCG_WhatIAmDoing_Common" Version="8.2024.10201.735" />\n    </ItemGroup>\n\n<PropertyGroup>\n\n\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t<InterceptorsPreviewNamespaces>$(InterceptorsPreviewNamespaces);RSCG_InterceptorTemplate</InterceptorsPreviewNamespaces>\n</PropertyGroup>\n'})}),(0,a.jsx)(t.h2,{id:"code",children:"Code"}),(0,a.jsx)(t.h3,{id:"intercept-static-methods",children:"Intercept static methods"}),(0,a.jsx)(t.p,{children:"Assume that you want to monitor all calls to System.Console"}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'//[ExposeClass(typeof(Encoding), nameof(Encoding.EncodingName))]\n//[InterceptStatic("System.IO.File.*ts")]\n//[InterceptStatic("System.IO.File.*")]\n[InterceptStatic("System.Console.*")] // regex\n//[InterceptStatic("WIAD_DemoConsole.Fib.*")]\ninternal class InterceptorMethodStatic : InterceptorMethodStaticBase, IInterceptorMethodStatic\n{\n    \n}\n'})}),(0,a.jsx)(t.h3,{id:"intercept-instance-methods",children:"Intercept instance methods"}),(0,a.jsx)(t.p,{children:"Assume that you want to monitor all calls to any  method of any instance of Person"}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'//[InterceptInstanceClass(typeof(Person),"ame")]\n//[InterceptInstanceClass(typeof(Person), "parat")]\n//[InterceptInstanceClass(typeof(Person), "ncodi")]\n[InterceptInstanceClass(typeof(Person), ".*")] //regex\npublic class InterceptorMethodInstanceClass: InterceptorMethodInstanceClassBase, IInterceptorMethodInstanceClass\n{\n    \n    public InterceptorMethodInstanceClass()\n    {\n        \n    }\n\n}\n'})}),(0,a.jsx)(t.h3,{id:"see-the-results",children:"See the results"}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'var data= CachingData.Methods().ToArray();\n\nforeach (var item in data)\n{\n    WriteLine($"Method {item.typeAndMethodData.MethodName} from class {item.typeAndMethodData.TypeOfClass} Time: {item.StartedAtDate} state {item.State} ");\n    WriteLine($"  =>Arguments: {item.ArgumentsAsString()}");\n    if ((item.State & AccumulatedStateMethod.HasResult) == AccumulatedStateMethod.HasResult)\n    {\n        WriteLine($"  =>Result: {item.Result}");\n    }\n\n}\n\n'})}),(0,a.jsx)(t.h1,{id:"more-details",children:"More details"}),(0,a.jsx)(t.p,{children:"If you want to implement YOUR interception , implement the following interfaces"}),(0,a.jsx)(t.p,{children:"IInterceptorMethodInstanceClass"}),(0,a.jsx)(t.p,{children:"IInterceptorMethodStatic"}),(0,a.jsx)(t.h1,{id:"license",children:"License"}),(0,a.jsx)(t.p,{children:"MIT"})]}),"\n",(0,a.jsx)(t.h3,{id:"about",children:"About"}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsx)(t.p,{children:"Intercept any method in any project"})}),"\n",(0,a.jsx)(t.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,a.jsx)(t.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,a.jsxs)(r.A,{children:[(0,a.jsxs)(o.A,{value:"csproj",label:"CSharp Project",children:[(0,a.jsxs)(t.p,{children:["This is the CSharp Project that references ",(0,a.jsx)(t.strong,{children:"WhatIAmDoing"})]}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-xml",metastring:"showLineNumbers {12}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n\t<ItemGroup>\n\t\t\x3c!-- <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="8.0.0" /> --\x3e\n\t\t<PackageReference Include="RSCG_WhatIAmDoing" Version="8.2024.10201.735" />\n\t\t<PackageReference Include="RSCG_WhatIAmDoing_Common" Version="8.2024.10201.735" />\n\t</ItemGroup>\n\n\t<PropertyGroup>\n\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t\t<InterceptorsPreviewNamespaces>$(InterceptorsPreviewNamespaces);RSCG_InterceptorTemplate</InterceptorsPreviewNamespaces>\n\t</PropertyGroup>\n\n</Project>\n\n'})})]}),(0,a.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\Program.cs",label:"Program.cs",children:[(0,a.jsxs)(t.p,{children:["This is the use of ",(0,a.jsx)(t.strong,{children:"WhatIAmDoing"})," in ",(0,a.jsx)(t.em,{children:"Program.cs"})]}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using RSCG_WhatIAmDoing_Common;\n\nConsole.WriteLine("Hello, World!");\nvar data = CachingData.Methods().ToArray();\n\nforeach (var item in data)\n{\n    Console.WriteLine($"Method {item.typeAndMethodData.MethodName} from class {item.typeAndMethodData.TypeOfClass} Time: {item.StartedAtDate} state {item.State} ");\n    Console.WriteLine($"  =>Arguments: {item.ArgumentsAsString()}");\n    if ((item.State & AccumulatedStateMethod.HasResult) == AccumulatedStateMethod.HasResult)\n    {\n        Console.WriteLine($"  =>Result: {item.Result}");\n    }\n\n}\n\n'})})]}),(0,a.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\InterceptorStatic.cs",label:"InterceptorStatic.cs",children:[(0,a.jsxs)(t.p,{children:["This is the use of ",(0,a.jsx)(t.strong,{children:"WhatIAmDoing"})," in ",(0,a.jsx)(t.em,{children:"InterceptorStatic.cs"})]}),(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using RSCG_WhatIAmDoing;\nusing RSCG_WhatIAmDoing_Common;\n\nnamespace WIADDemo;\n//[ExposeClass(typeof(Encoding), nameof(Encoding.EncodingName))]\n[InterceptStatic("System.Console.*")] // regex\ninternal class InterceptorMethodStatic : InterceptorMethodStaticBase, IInterceptorMethodStatic\n{\n\n}\n'})})]})]}),"\n",(0,a.jsx)(t.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,a.jsx)(t.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,a.jsxs)(r.A,{children:[(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\obj\\GX\\RSCG_WhatIAmDoing\\RSCG_WhatIAmDoing.GeneratorWIAD\\System.Console_WriteLine_1.cs",label:"System.Console_WriteLine_1.cs",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'#pragma warning disable CS1591 \n#pragma warning disable CS9113\nnamespace System.Runtime.CompilerServices{\n[AttributeUsage(AttributeTargets.Method,AllowMultiple =true)]\nfile class InterceptsLocationAttribute(string filePath, int line, int character) : Attribute\n{\n}\n}//end namespace\n\nnamespace RSCG_InterceptorTemplate{\nstatic partial class SimpleIntercept\n{\n\n\n//replace code:Console.WriteLine("Hello, World!");\n//replace code:123456789!123456789!123456789!12345\n[System.Runtime.CompilerServices.InterceptsLocation(@"D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\Program.cs", 3, 9)]\n    \n//[System.Diagnostics.DebuggerStepThrough()]\npublic static  void Intercept__WriteLine_0 (  string? value )  \n{\n\nSystem.Collections.Generic.Dictionary<string,string?> valValues = new (){\n\n\n};//end valValues\n\nSystem.Collections.Generic.Dictionary<string,string?> stringValues = new() {\n\n\n                { "value", value  ?.ToString() } ,\n            };//end stringValues\n\n        System.Collections.Generic.Dictionary<string,string?>\n            expValues = new() {\n\n            };//end exposeValues\n\n\n        var x=WIADDemo.InterceptorMethodStatic .InterceptStaticMethodBefore(\n$$$""""\n    {"IsVoid":true,"Tag":"","MethodName":"WriteLine","TypeOfClass":"System.Console"}\n""""\n            ,valValues , stringValues , expValues\n)\n; \n\n\n                try{\n\n                 System.Console.WriteLine(value);\n\n                WIADDemo.InterceptorMethodStatic .InterceptMethodAfterWithoutResult(x);\n                \n                }\n\n            \n        \n            catch(System.Exception ex){\n                WIADDemo.InterceptorMethodStatic .InterceptMethodException(x,ex);\n                throw;\n            }\n            finally{\n                WIADDemo.InterceptorMethodStatic .InterceptMethodFinally(x);\n            }\n        \n}\n                \n\n}//end class\n\n}//namespace RSCG_InterceptorTemplate\n\n\n'})})}),(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\obj\\GX\\RSCG_WhatIAmDoing\\RSCG_WhatIAmDoing.GeneratorWIAD\\System.Console_WriteLine_2.cs",label:"System.Console_WriteLine_2.cs",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'#pragma warning disable CS1591 \n#pragma warning disable CS9113\nnamespace System.Runtime.CompilerServices{\n[AttributeUsage(AttributeTargets.Method,AllowMultiple =true)]\nfile class InterceptsLocationAttribute(string filePath, int line, int character) : Attribute\n{\n}\n}//end namespace\n\nnamespace RSCG_InterceptorTemplate{\nstatic partial class SimpleIntercept\n{\n\n\n//replace code:    Console.WriteLine($"Method {item.typeAndMethodData.MethodName} from class {item.typeAndMethodData.TypeOfClass} Time: {item.StartedAtDate} state {item.State} ");\n//replace code:123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!1234\n[System.Runtime.CompilerServices.InterceptsLocation(@"D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\Program.cs", 8, 13)]\n    \n//[System.Diagnostics.DebuggerStepThrough()]\npublic static  void Intercept__WriteLine_1 (  string? value )  \n{\n\nSystem.Collections.Generic.Dictionary<string,string?> valValues = new (){\n\n\n};//end valValues\n\nSystem.Collections.Generic.Dictionary<string,string?> stringValues = new() {\n\n\n                { "value", value  ?.ToString() } ,\n            };//end stringValues\n\n        System.Collections.Generic.Dictionary<string,string?>\n            expValues = new() {\n\n            };//end exposeValues\n\n\n        var x=WIADDemo.InterceptorMethodStatic .InterceptStaticMethodBefore(\n$$$""""\n    {"IsVoid":true,"Tag":"","MethodName":"WriteLine","TypeOfClass":"System.Console"}\n""""\n            ,valValues , stringValues , expValues\n)\n; \n\n\n                try{\n\n                 System.Console.WriteLine(value);\n\n                WIADDemo.InterceptorMethodStatic .InterceptMethodAfterWithoutResult(x);\n                \n                }\n\n            \n        \n            catch(System.Exception ex){\n                WIADDemo.InterceptorMethodStatic .InterceptMethodException(x,ex);\n                throw;\n            }\n            finally{\n                WIADDemo.InterceptorMethodStatic .InterceptMethodFinally(x);\n            }\n        \n}\n                \n\n}//end class\n\n}//namespace RSCG_InterceptorTemplate\n\n\n'})})}),(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\obj\\GX\\RSCG_WhatIAmDoing\\RSCG_WhatIAmDoing.GeneratorWIAD\\System.Console_WriteLine_3.cs",label:"System.Console_WriteLine_3.cs",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'#pragma warning disable CS1591 \n#pragma warning disable CS9113\nnamespace System.Runtime.CompilerServices{\n[AttributeUsage(AttributeTargets.Method,AllowMultiple =true)]\nfile class InterceptsLocationAttribute(string filePath, int line, int character) : Attribute\n{\n}\n}//end namespace\n\nnamespace RSCG_InterceptorTemplate{\nstatic partial class SimpleIntercept\n{\n\n\n//replace code:    Console.WriteLine($"  =>Arguments: {item.ArgumentsAsString()}");\n//replace code:123456789!123456789!123456789!123456789!123456789!123456789!12345678\n[System.Runtime.CompilerServices.InterceptsLocation(@"D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\Program.cs", 9, 13)]\n    \n//[System.Diagnostics.DebuggerStepThrough()]\npublic static  void Intercept__WriteLine_2 (  string? value )  \n{\n\nSystem.Collections.Generic.Dictionary<string,string?> valValues = new (){\n\n\n};//end valValues\n\nSystem.Collections.Generic.Dictionary<string,string?> stringValues = new() {\n\n\n                { "value", value  ?.ToString() } ,\n            };//end stringValues\n\n        System.Collections.Generic.Dictionary<string,string?>\n            expValues = new() {\n\n            };//end exposeValues\n\n\n        var x=WIADDemo.InterceptorMethodStatic .InterceptStaticMethodBefore(\n$$$""""\n    {"IsVoid":true,"Tag":"","MethodName":"WriteLine","TypeOfClass":"System.Console"}\n""""\n            ,valValues , stringValues , expValues\n)\n; \n\n\n                try{\n\n                 System.Console.WriteLine(value);\n\n                WIADDemo.InterceptorMethodStatic .InterceptMethodAfterWithoutResult(x);\n                \n                }\n\n            \n        \n            catch(System.Exception ex){\n                WIADDemo.InterceptorMethodStatic .InterceptMethodException(x,ex);\n                throw;\n            }\n            finally{\n                WIADDemo.InterceptorMethodStatic .InterceptMethodFinally(x);\n            }\n        \n}\n                \n\n}//end class\n\n}//namespace RSCG_InterceptorTemplate\n\n\n'})})}),(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\obj\\GX\\RSCG_WhatIAmDoing\\RSCG_WhatIAmDoing.GeneratorWIAD\\System.Console_WriteLine_4.cs",label:"System.Console_WriteLine_4.cs",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'#pragma warning disable CS1591 \n#pragma warning disable CS9113\nnamespace System.Runtime.CompilerServices{\n[AttributeUsage(AttributeTargets.Method,AllowMultiple =true)]\nfile class InterceptsLocationAttribute(string filePath, int line, int character) : Attribute\n{\n}\n}//end namespace\n\nnamespace RSCG_InterceptorTemplate{\nstatic partial class SimpleIntercept\n{\n\n\n//replace code:        Console.WriteLine($"  =>Result: {item.Result}");\n//replace code:123456789!123456789!123456789!123456789!123456789!123456\n[System.Runtime.CompilerServices.InterceptsLocation(@"D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\Program.cs", 12, 17)]\n    \n//[System.Diagnostics.DebuggerStepThrough()]\npublic static  void Intercept__WriteLine_3 (  string? value )  \n{\n\nSystem.Collections.Generic.Dictionary<string,string?> valValues = new (){\n\n\n};//end valValues\n\nSystem.Collections.Generic.Dictionary<string,string?> stringValues = new() {\n\n\n                { "value", value  ?.ToString() } ,\n            };//end stringValues\n\n        System.Collections.Generic.Dictionary<string,string?>\n            expValues = new() {\n\n            };//end exposeValues\n\n\n        var x=WIADDemo.InterceptorMethodStatic .InterceptStaticMethodBefore(\n$$$""""\n    {"IsVoid":true,"Tag":"","MethodName":"WriteLine","TypeOfClass":"System.Console"}\n""""\n            ,valValues , stringValues , expValues\n)\n; \n\n\n                try{\n\n                 System.Console.WriteLine(value);\n\n                WIADDemo.InterceptorMethodStatic .InterceptMethodAfterWithoutResult(x);\n                \n                }\n\n            \n        \n            catch(System.Exception ex){\n                WIADDemo.InterceptorMethodStatic .InterceptMethodException(x,ex);\n                throw;\n            }\n            finally{\n                WIADDemo.InterceptorMethodStatic .InterceptMethodFinally(x);\n            }\n        \n}\n                \n\n}//end class\n\n}//namespace RSCG_InterceptorTemplate\n\n\n'})})})]}),"\n",(0,a.jsx)(t.h2,{id:"useful",children:"Useful"}),"\n",(0,a.jsx)(t.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,a.jsx)(t.admonition,{type:"tip",children:(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(44402).A+"",children:"Download Example project WhatIAmDoing "})})}),"\n",(0,a.jsx)(t.h3,{id:"share-whatiamdoing",children:"Share WhatIAmDoing"}),"\n",(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing&quote=WhatIAmDoing",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing&text=WhatIAmDoing:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing&title=WhatIAmDoing",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing&title=WhatIAmDoing&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/WhatIAmDoing",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/WhatIAmDoing"})}),"\n",(0,a.jsx)(t.p,{children:"aaa"}),"\n",(0,a.jsx)(h,{})]})}function I(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},44402:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/files/WhatIAmDoing-2934f0036ff659adf12afb02858d657b.zip"}}]);