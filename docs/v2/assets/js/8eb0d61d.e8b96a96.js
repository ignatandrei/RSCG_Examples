"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[3717],{18978:(e,n,r)=>{r.d(n,{Ay:()=>i,RM:()=>s});var a=r(74848),t=r(28453);const s=[{value:"Category &quot;FunctionalProgramming&quot; has the following generators:",id:"category-functionalprogramming-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function c(e){const n={a:"a",h3:"h3",p:"p",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h3,{id:"category-functionalprogramming-has-the-following-generators",children:'Category "FunctionalProgramming" has the following generators:'}),"\n",(0,a.jsxs)(n.p,{children:["1 ",(0,a.jsx)(n.a,{href:"/docs/cachesourcegenerator",children:"cachesourcegenerator"})]}),"\n",(0,a.jsxs)(n.p,{children:["2 ",(0,a.jsx)(n.a,{href:"/docs/dunet",children:"dunet"})]}),"\n",(0,a.jsxs)(n.p,{children:["3 ",(0,a.jsx)(n.a,{href:"/docs/Dusharp",children:"Dusharp"})]}),"\n",(0,a.jsxs)(n.p,{children:["4 ",(0,a.jsx)(n.a,{href:"/docs/Funcky.DiscriminatedUnion",children:"Funcky.DiscriminatedUnion"})]}),"\n",(0,a.jsxs)(n.p,{children:["5 ",(0,a.jsx)(n.a,{href:"/docs/FunicularSwitch",children:"FunicularSwitch"})]}),"\n",(0,a.jsxs)(n.p,{children:["6 ",(0,a.jsx)(n.a,{href:"/docs/N.SourceGenerators.UnionTypes",children:"N.SourceGenerators.UnionTypes"})]}),"\n",(0,a.jsxs)(n.p,{children:["7 ",(0,a.jsx)(n.a,{href:"/docs/OneOf",children:"OneOf"})]}),"\n",(0,a.jsxs)(n.p,{children:["8 ",(0,a.jsx)(n.a,{href:"/docs/PartiallyApplied",children:"PartiallyApplied"})]}),"\n",(0,a.jsxs)(n.p,{children:["9 ",(0,a.jsx)(n.a,{href:"/docs/polytype",children:"polytype"})]}),"\n",(0,a.jsxs)(n.p,{children:["10 ",(0,a.jsx)(n.a,{href:"/docs/rscg_demeter",children:"rscg_demeter"})]}),"\n",(0,a.jsxs)(n.p,{children:["11 ",(0,a.jsx)(n.a,{href:"/docs/rscg_queryables",children:"rscg_queryables"})]}),"\n",(0,a.jsxs)(n.p,{children:["12 ",(0,a.jsx)(n.a,{href:"/docs/RSCG_Utils_Memo",children:"RSCG_Utils_Memo"})]}),"\n",(0,a.jsxs)(n.p,{children:["13 ",(0,a.jsx)(n.a,{href:"/docs/Sera.Union",children:"Sera.Union"})]}),"\n",(0,a.jsxs)(n.p,{children:["14 ",(0,a.jsx)(n.a,{href:"/docs/TypeUtilities",children:"TypeUtilities"})]}),"\n",(0,a.jsxs)(n.p,{children:["15 ",(0,a.jsx)(n.a,{href:"/docs/UnionGen",children:"UnionGen"})]}),"\n",(0,a.jsxs)(n.p,{children:["16 ",(0,a.jsx)(n.a,{href:"/docs/UnionsGenerator",children:"UnionsGenerator"})]}),"\n",(0,a.jsx)(n.h3,{id:"see-category",children:"See category"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"/docs/Categories/FunctionalProgramming",children:"FunctionalProgramming"})})]})}function i(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},19989:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>m,contentTitle:()=>d,default:()=>g,frontMatter:()=>l,metadata:()=>a,toc:()=>u});const a=JSON.parse('{"id":"RSCG-Examples/cachesourcegenerator","title":"111 - cachesourcegenerator","description":"Caching methods results","source":"@site/docs/RSCG-Examples/cachesourcegenerator.md","sourceDirName":"RSCG-Examples","slug":"/cachesourcegenerator","permalink":"/RSCG_Examples/v2/docs/cachesourcegenerator","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1110,"frontMatter":{"sidebar_position":1110,"title":"111 - cachesourcegenerator","description":"Caching methods results","slug":"/cachesourcegenerator"},"sidebar":"tutorialSidebar","previous":{"title":"110 - jab","permalink":"/RSCG_Examples/v2/docs/jab"},"next":{"title":"112 - OptionToStringGenerator","permalink":"/RSCG_Examples/v2/docs/OptionToStringGenerator"}}');var t=r(74848),s=r(28453),c=r(11470),i=r(19365),o=r(14252),h=r(18978);const l={sidebar_position:1110,title:"111 - cachesourcegenerator",description:"Caching methods results",slug:"/cachesourcegenerator"},d="cachesourcegenerator  by Jeppe Roi Kristensen",m={},u=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Getting started",id:"getting-started",level:2},{value:"Cache access",id:"cache-access",level:2},{value:"Autogenerated cache access code",id:"autogenerated-cache-access-code",level:3},{value:"Providing the cache from the class",id:"providing-the-cache-from-the-class",level:3},{value:"Method generation",id:"method-generation",level:2},{value:"GenerateMemoryCache Atrribute",id:"generatememorycache-atrribute",level:2},{value:"MethodName",id:"methodname",level:3},{value:"CacheEnricherProcessor",id:"cacheenricherprocessor",level:3},{value:"KeyGenerator",id:"keygenerator",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share cachesourcegenerator",id:"share-cachesourcegenerator",level:3},...h.RM];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"cachesourcegenerator--by-jeppe-roi-kristensen",children:"cachesourcegenerator  by Jeppe Roi Kristensen"})}),"\n",(0,t.jsx)(o.A,{toc:u}),"\n",(0,t.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://www.nuget.org/packages/cachesourcegenerator/",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/cachesourcegenerator?label=cachesourcegenerator",alt:"Nuget"})}),"\n",(0,t.jsx)(n.a,{href:"https://github.com/jeppevammenkristensen/cachesourcegenerator",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/jeppevammenkristensen/cachesourcegenerator?label=updated",alt:"GitHub last commit"})}),"\n",(0,t.jsx)(n.img,{src:"https://img.shields.io/github/stars/jeppevammenkristensen/cachesourcegenerator?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,t.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,t.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["Name: ",(0,t.jsx)(n.strong,{children:"cachesourcegenerator"})]}),(0,t.jsx)(n.p,{children:"A tool to wrap a method call with caching"}),(0,t.jsx)(n.p,{children:"Author: Jeppe Roi Kristensen"}),(0,t.jsxs)(n.p,{children:["NuGet:\n",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.a,{href:"https://www.nuget.org/packages/cachesourcegenerator/",children:"https://www.nuget.org/packages/cachesourcegenerator/"})})]}),(0,t.jsxs)(n.p,{children:["You can find more details at ",(0,t.jsx)(n.a,{href:"https://github.com/jeppevammenkristensen/cachesourcegenerator",children:"https://github.com/jeppevammenkristensen/cachesourcegenerator"})]}),(0,t.jsxs)(n.p,{children:["Source: ",(0,t.jsx)(n.a,{href:"https://github.com/jeppevammenkristensen/cachesourcegenerator",children:"https://github.com/jeppevammenkristensen/cachesourcegenerator"})]})]}),"\n",(0,t.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.h1,{id:"cache-source-generator",children:"Cache source generator"}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:(0,t.jsx)(n.a,{href:"https://www.nuget.org/packages/CacheSourceGenerator",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/nuget/v/CacheSourceGenerator?style=flat-square&label=NuGet%3A%20CacheSourceGenerator",alt:"CacheSourceGenerator Nuget Version"})})})}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Important"})," ",(0,t.jsx)(n.code,{children:"CachoAttribute"})," has been renamed to ",(0,t.jsx)(n.code,{children:"GenerateMemoryCacheAttribute"})]}),(0,t.jsx)(n.p,{children:"A source generator that can generate simple cache boilerplate to wrap around a method"}),(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting started"}),(0,t.jsx)(n.p,{children:"This generator works by wrapping a method in another method with the same signature, that ensures calls are cached."}),(0,t.jsxs)(n.p,{children:["In a partial class decorate the method with the ",(0,t.jsx)(n.code,{children:"GenerateMemoryCache"})," attribute"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public partial class SampleEntity\n{\n    private readonly IMemoryCache _memoryCache;\n\n    public SampleEntity(IMemoryCache memoryCache)\n    {\n        _memoryCache = memoryCache;\n    }\n\n    [GenerateMemoryCache(MethodName = "GetId", CacheEnricherProcessor = nameof(ProcessCacheEntry))]\n    private string? DoGetSomeValue(int id)\n    {\n        return "Someresult";\n    }\n\n    \n    public void ProcessCacheEntry(ICacheEntry entry)\n    {\n        entry.SlidingExpiration = TimeSpan.FromMinutes(2);\n    }\n}\n'})}),(0,t.jsx)(n.p,{children:"And it will generate"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public partial class SampleEntity\n{\n    public string? GetId(int id)\n    {\n        var _key_ = new\n        {\n            _MethodName = "DoGetSomeValue",\n            _ClassName = "SampleEntity",\n            id\n        };\n        IMemoryCache _cache_ = _memoryCache;\n        return _cache_.GetOrCreate(_key_, _entry_ =>\n        {\n            ProcessCacheEntry(_entry_);\n            return DoGetSomeValue(id);\n        });\n    }\n    \n    public void GetId_Evict(int id)\n    {\n        var _key_ = new\n        {\n            _MethodName = "DoGetSomeValue",\n            _ClassName = "SampleEntity",\n            id\n        };\n        IMemoryCache _cache_ = _memoryCache;\n        _cache_.Remove(_key_);\n    }\n}\n'})}),(0,t.jsx)(n.p,{children:"Note that that defining the CacheEnricherProcessor is optional and can be left out"}),(0,t.jsx)(n.h2,{id:"cache-access",children:"Cache access"}),(0,t.jsx)(n.p,{children:"The IMemoryCache can be retrieved in two ways. Autogenerated or by providing it in the class"}),(0,t.jsx)(n.h3,{id:"autogenerated-cache-access-code",children:"Autogenerated cache access code"}),(0,t.jsx)(n.p,{children:"This requires that you install the nuget package Microsoft.Extensions.Caching.Memory."}),(0,t.jsx)(n.p,{children:"Decorate a method that returns a value on a partial class with the GenerateMemoryCache Attribute"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public partial class SomeClass\n{\n\n  [CacheSourceGenerator.Cache(MethodName = "SomeMethod")]\n  private string DoSomeMethod(string id, int age)\n  {\n      return $"{id}{age}";\n  }\n}\n'})}),(0,t.jsx)(n.p,{children:"This will generate the code below."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public partial class SomeClass\n{\n    private static class CacheInit\n    {\n        static CacheInit()\n        {\n            _memoryCache = new Lazy<IMemoryCache>(() => new MemoryCache(new MemoryCacheOptions()));\n        }\n\n        private static Lazy<IMemoryCache> _memoryCache;\n        public static IMemoryCache MemoryCache => _memoryCache.Value;\n    }\n\n    public string SomeMethod(string id, int age)\n    {\n        var key = new\n        {\n            _MethodName = "DoSomeMethod",\n            _ClassName = "SomeClass",\n            id,\n            age\n        };\n        IMemoryCache cache = CacheInit.MemoryCache;\n        return cache.GetOrCreate(key, entry =>\n        {\n            return DoSomeMethod(id, age);\n        });\n    }\n}\n'})}),(0,t.jsx)(n.h3,{id:"providing-the-cache-from-the-class",children:"Providing the cache from the class"}),(0,t.jsx)(n.p,{children:"An alternative is to provide a IMemoryCache instance from the class. This can be done through a"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Field"}),"\n",(0,t.jsx)(n.li,{children:"Property"}),"\n",(0,t.jsx)(n.li,{children:"Method (parameter less)"}),"\n"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public static partial class SomeOtherClass\n{\n    private static IMemoryCache GetCache() => new MemoryCache(new MemoryCacheOptions());\n\n    [CacheSourceGenerator.GenerateMemoryCache(MethodName = "SomeMethod")]\n    public static Task<string> ExecuteCall()\n    {\n        return Task.FromResult("Hello");\n    }\n}\n'})}),(0,t.jsx)(n.p,{children:"This will generate the code below."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'public static partial class SomeOtherClass\n{\n    public async static Task<string> SomeMethod()\n    {\n        var key = new\n        {\n            _MethodName = "ExecuteCall",\n            _ClassName = "SomeOtherClass",\n        };\n        IMemoryCache cache = GetCache();\n        var result = await cache.GetOrCreateAsync(key, async entry =>\n        {\n            return await ExecuteCall();\n        });\n        return result ?? throw new InvalidOperationException("Expected non empty result");\n    }\n}\n'})}),(0,t.jsx)(n.h2,{id:"method-generation",children:"Method generation"}),(0,t.jsxs)(n.p,{children:["if the method is async or returning a ",(0,t.jsx)(n.code,{children:"Task<T>"})," the generated method will take that into consideration."]}),(0,t.jsx)(n.p,{children:"If the return type is not nullable, the generated method will throw an exception if the result of the method call is null."}),(0,t.jsx)(n.h2,{id:"generatememorycache-atrribute",children:"GenerateMemoryCache Atrribute"}),(0,t.jsx)(n.h3,{id:"methodname",children:"MethodName"}),(0,t.jsx)(n.p,{children:"The GenerateMemoryCache needs to as a minimum have MethodName set as this is the desired method name of the generated method."}),(0,t.jsx)(n.h3,{id:"cacheenricherprocessor",children:"CacheEnricherProcessor"}),(0,t.jsxs)(n.p,{children:["If you want to control the ",(0,t.jsx)(n.code,{children:"ICacheEntry"})," object, you can use this property to point to a method that takes a ",(0,t.jsx)(n.code,{children:"ICacheEntry"})," as input and\nreturns void or if async as Task. This method will be called like below and can be used set for instance expiration"]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"var _result_ = _cache_.GetOrCreate(_key_, _entry_ =>\n{\n    CacheEnricher(_entry_);\n    return DoGetName(id);\n});\n"})}),(0,t.jsx)(n.h3,{id:"keygenerator",children:"KeyGenerator"}),(0,t.jsx)(n.p,{children:"Out of the box a key will be auto generated that will consist of"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"MethodName"}),"\n",(0,t.jsx)(n.li,{children:"ClassName"}),"\n",(0,t.jsx)(n.li,{children:"The parameters of the method"}),"\n"]}),(0,t.jsx)(n.p,{children:"If you want to create a custom key, you can use the KeyGenerator property to point to a method that will generate the key. The method must match the parameters of the decorated method by type (it's okay if there is a mismatch between names)"}),(0,t.jsx)(n.p,{children:"The return type can be anything but void"}),(0,t.jsx)(n.p,{children:"So for"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:'[GenerateMemoryCache(KeyGenerator=nameof(GenerateKey), MethodName="SomeName")]\npublic string Somemethod(string id, int number, bool boolValue)\n'})}),(0,t.jsx)(n.p,{children:"a valid KeyGenerator method could be"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public (string id, int number, bool boolean) \n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Caching methods results"})}),"\n",(0,t.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,t.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,t.jsxs)(c.A,{children:[(0,t.jsxs)(i.A,{value:"csproj",label:"CSharp Project",children:[(0,t.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,t.jsx)(n.strong,{children:"cachesourcegenerator"})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {11}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="CacheSourceGenerator" Version="0.4.1" />\n    <PackageReference Include="Microsoft.Extensions.Caching.Abstractions" Version="8.0.0" />\n  </ItemGroup>\n\t<ItemGroup>\n\t\t<PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="7.0.0" />\n\t</ItemGroup>\n <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'})})]}),(0,t.jsxs)(i.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\cachesourcegenerator\\src\\CacheDemo\\Program.cs",label:"Program.cs",children:[(0,t.jsxs)(n.p,{children:["This is the use of ",(0,t.jsx)(n.strong,{children:"cachesourcegenerator"})," in ",(0,t.jsx)(n.em,{children:"Program.cs"})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using CacheDemo;\nusing Microsoft.Extensions.Caching.Memory;\nvar f=new FibTest(new MemoryCache(new MemoryCacheOptions()));\nConsole.WriteLine(f.FibMemo(5));\nConsole.WriteLine("and now with cache hit:");\nConsole.WriteLine(f.FibMemo(5));\n\n'})})]}),(0,t.jsxs)(i.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\cachesourcegenerator\\src\\CacheDemo\\Fib.cs",label:"Fib.cs",children:[(0,t.jsxs)(n.p,{children:["This is the use of ",(0,t.jsx)(n.strong,{children:"cachesourcegenerator"})," in ",(0,t.jsx)(n.em,{children:"Fib.cs"})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using Microsoft.Extensions.Caching.Memory;\nusing CacheSourceGenerator;\nnamespace CacheDemo;\ninternal partial class FibTest\n{\n    private readonly IMemoryCache _memoryCache;\n\n    public FibTest(IMemoryCache memoryCache)\n    {\n        _memoryCache = memoryCache;\n    }\n    void ProcessCacheEntry(ICacheEntry entry)\n    {\n        entry.SlidingExpiration = TimeSpan.FromMinutes(2);\n    }\n\n    [GenerateMemoryCache(MethodName = "FibMemo", CacheEnricherProcessor = nameof(ProcessCacheEntry))]\n    public int Fib(int n)\n    {\n        if (n <= 1)\n        {\n            return n;\n        }\n        Console.WriteLine($"Calculating Fib({n})");\n        //return Fib(n - 1) + Fib(n - 2);\n        return FibMemo(n - 1) + FibMemo(n - 2);\n    }\n}\n'})})]})]}),"\n",(0,t.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,t.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,t.jsxs)(c.A,{children:[(0,t.jsx)(i.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\cachesourcegenerator\\src\\CacheDemo\\obj\\GX\\CacheSourceGenerator\\CacheSourceGenerator.CachoIncrementalSourceGenerator\\FibTest.g.cs",label:"FibTest.g.cs",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'#nullable enable\n//autogenerated\nusing Microsoft.Extensions.Caching.Memory;\nusing CacheSourceGenerator;\nusing System;\n\nnamespace CacheDemo;\ninternal partial class FibTest\n{\n    public int FibMemo(int n)\n    {\n        var _key_ = new\n        {\n            _MethodName = "Fib",\n            _ClassName = "FibTest",\n            n\n        };\n        IMemoryCache _cache_ = _memoryCache;\n        var _result_ = _cache_.GetOrCreate(_key_, _entry_ =>\n        {\n            ProcessCacheEntry(_entry_);\n            OnCallingFib(n);\n            var _callResult_ = Fib(n);\n            OnCalledFib(n, _callResult_);\n            ;\n            return _callResult_;\n        });\n        return _result_;\n    }\n\n    public void FibMemo_Evict(int n)\n    {\n        var _key_ = new\n        {\n            _MethodName = "Fib",\n            _ClassName = "FibTest",\n            n\n        };\n        IMemoryCache _cache_ = _memoryCache;\n        _cache_.Remove(_key_);\n    }\n\n    partial void OnCallingFib(int n);\n    partial void OnCalledFib(int n, int _returned_);\n}\n\n'})})}),(0,t.jsx)(i.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\cachesourcegenerator\\src\\CacheDemo\\obj\\GX\\CacheSourceGenerator\\CacheSourceGenerator.CachoIncrementalSourceGenerator\\GenerateMemoryCache.g.cs",label:"GenerateMemoryCache.g.cs",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\n#nullable enable\nnamespace CacheSourceGenerator\n{\n    [System.AttributeUsage(System.AttributeTargets.Method)]\n    public class GenerateMemoryCacheAttribute : System.Attribute\n    {\n       /// <summary>\n       /// The name of the generated cache method \n       /// </summary>\n       public string MethodName { get;init; } = default!;\n       \n       /// <summary>\n       /// The name of a method in the current class that takes\n       /// an CacheEntry and processes it \n       /// </summary>\n       public string? CacheEnricherProcessor { get;set; }\n       \n       \n       /// <summary>\n        /// The name of a method in the current class that can \n        /// generate a custom cache key. The method must take the same parameters\n        /// as the method being decorated. But can return any type.\n        /// </summary>\n       public string? KeyGenerator {get;set;}\n       \n       /// <summary>\n       /// Set this to true to not generate an evict method\n       /// </summary>\n       public bool SuppressEvictMethod {get;set;}\n    }\n}\n"})})}),(0,t.jsx)(i.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\cachesourcegenerator\\src\\CacheDemo\\obj\\GX\\CacheSourceGenerator\\CacheSourceGenerator.CachoIncrementalSourceGenerator\\IgnoreKey.g.cs",label:"IgnoreKey.g.cs",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\n#nullable enable\nnamespace CacheSourceGenerator\n{\n    [System.AttributeUsage(System.AttributeTargets.Parameter)]\n    public class IgnoreKeyAttribute : System.Attribute\n    {\n        \n    }\n}\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,t.jsx)(n.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(68648).A+"",children:"Download Example project cachesourcegenerator "})})}),"\n",(0,t.jsx)(n.h3,{id:"share-cachesourcegenerator",children:"Share cachesourcegenerator"}),"\n",(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fcachesourcegenerator&quote=cachesourcegenerator",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fcachesourcegenerator&text=cachesourcegenerator:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fcachesourcegenerator",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fcachesourcegenerator&title=cachesourcegenerator",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fcachesourcegenerator&title=cachesourcegenerator&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fcachesourcegenerator",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/cachesourcegenerator",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/cachesourcegenerator"})}),"\n",(0,t.jsx)(n.p,{children:"aaa"}),"\n",(0,t.jsx)(h.Ay,{})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},68648:(e,n,r)=>{r.d(n,{A:()=>a});const a=r.p+"assets/files/cachesourcegenerator-6ce917d6bd983a7612be5a16606d3ce8.zip"}}]);