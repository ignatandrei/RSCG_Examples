"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[795],{25283:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/files/GenPack-1b7171e7e5e939739da56a7c839455a6.zip"},39267:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>h,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"RSCG-Examples/GenPack","title":"169 - GenPack","description":"Generating Binary Serialization and properties for class","source":"@site/docs/RSCG-Examples/GenPack.md","sourceDirName":"RSCG-Examples","slug":"/GenPack","permalink":"/RSCG_Examples/v2/docs/GenPack","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1690,"frontMatter":{"sidebar_position":1690,"title":"169 - GenPack","description":"Generating Binary Serialization and properties for class","slug":"/GenPack"},"sidebar":"tutorialSidebar","previous":{"title":"168 - Credfeto.Version.Information.Generator","permalink":"/RSCG_Examples/v2/docs/Credfeto.Version.Information.Generator"},"next":{"title":"170 - QueryStringGenerator","permalink":"/RSCG_Examples/v2/docs/QueryStringGenerator"}}');var s=r(74848),i=r(28453),a=r(11470),c=r(19365),l=r(14252),d=r(72866);const o={sidebar_position:1690,title:"169 - GenPack",description:"Generating Binary Serialization and properties for class",slug:"/GenPack"},h="GenPack  by dimohy",p={},m=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Simple to use",id:"simple-to-use",level:2},{value:"How to create a packet schema",id:"how-to-create-a-packet-schema",level:2},{value:"Schema Properties",id:"schema-properties",level:3},{value:"Tasks",id:"tasks",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share GenPack",id:"share-genpack",level:3},...d.RM];function x(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"genpack--by-dimohy",children:"GenPack  by dimohy"})}),"\n",(0,s.jsx)(l.A,{toc:m}),"\n",(0,s.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/GenPack/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/GenPack?label=GenPack",alt:"Nuget"})}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/dimohy/GenPack",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/dimohy/GenPack?label=updated",alt:"GitHub last commit"})}),"\n",(0,s.jsx)(n.img,{src:"https://img.shields.io/github/stars/dimohy/GenPack?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,s.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,s.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["Name: ",(0,s.jsx)(n.strong,{children:"GenPack"})]}),(0,s.jsx)(n.p,{children:"Packet generation and serialization/deserialization library using the .NET Source Generator"}),(0,s.jsx)(n.p,{children:"Author: dimohy"}),(0,s.jsxs)(n.p,{children:["NuGet:\n",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/GenPack/",children:"https://www.nuget.org/packages/GenPack/"})})]}),(0,s.jsxs)(n.p,{children:["You can find more details at ",(0,s.jsx)(n.a,{href:"https://github.com/dimohy/GenPack",children:"https://github.com/dimohy/GenPack"})]}),(0,s.jsxs)(n.p,{children:["Source: ",(0,s.jsx)(n.a,{href:"https://github.com/dimohy/GenPack",children:"https://github.com/dimohy/GenPack"})]})]}),"\n",(0,s.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.h1,{id:"genpack",children:"GenPack"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/GenPack",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/nuget/v/GenPack",alt:"latest version"})}),"\n",(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/GenPack",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/GenPack",alt:"downloads"})})]}),(0,s.jsx)(n.p,{children:"GenPack is a library that uses the .NET source generator to automatically generate packets as classes once you define a schema for the packets.\nIt's easy to use and the results are useful."}),(0,s.jsx)(n.p,{children:"GenPack also works well with Native AOT. You can take advantage of the benefits of Native AOT."}),(0,s.jsx)(n.h2,{id:"simple-to-use",children:"Simple to use"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'[GenPackable]\npublic partial record PeoplePacket\n{\n    public readonly static PacketSchema Schema = PacketSchemaBuilder.Create()\n        .@short("Age", "Age description")\n        .@string("Name", "Name description")\n        .Build();\n}\n'})}),(0,s.jsx)(n.p,{children:"The following code is automatically generated by the schema information."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"    public partial record PeoplePacket : GenPack.IGenPackable\n    {\n        /// <summary>\n        /// Age description\n        /// </summary>\n        public short Age { get; set; }\n        /// <summary>\n        /// Name description\n        /// </summary>\n        public string Name { get; set; } = string.Empty;\n        public byte[] ToPacket()\n        {\n            using var ms = new System.IO.MemoryStream();\n            ToPacket(ms);\n            return ms.ToArray();\n        }\n        public void ToPacket(System.IO.Stream stream)\n        {\n            System.IO.BinaryWriter writer = new System.IO.BinaryWriter(stream);\n            writer.Write(Age);\n            writer.Write(Name);\n        }\n        public static PeoplePacket FromPacket(byte[] data)\n        {\n            using var ms = new System.IO.MemoryStream(data);\n            return FromPacket(ms);\n        }\n        public static PeoplePacket FromPacket(System.IO.Stream stream)\n        {\n            PeoplePacket result = new PeoplePacket();\n            System.IO.BinaryReader reader = new System.IO.BinaryReader(stream);\n            int size = 0;\n            byte[] buffer = null;\n            result.Age = reader.ReadInt16();\n            result.Name = reader.ReadString();\n            return result;\n        }\n    }\n"})}),(0,s.jsxs)(n.p,{children:["It's simple to use. You can binary serialize with ",(0,s.jsx)(n.code,{children:"ToPacket()"})," and deserialize with ",(0,s.jsx)(n.code,{children:"FromPacket()"}),"."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'var p = new PeoplePacket()\n{\n    Age = 10,\n    Name = "John"\n};\nvar data = p.ToPacket();\nvar newP = PeoplePacket.FromPacket(data);\n\nConsole.WriteLine(newP);\n'})}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"PeoplePacket { Age = 10, Name = John }\n"})}),(0,s.jsx)(n.h2,{id:"how-to-create-a-packet-schema",children:"How to create a packet schema"}),(0,s.jsxs)(n.p,{children:["Decorate the attribute of ",(0,s.jsx)(n.code,{children:"class"})," or ",(0,s.jsx)(n.code,{children:"record"})," with ",(0,s.jsx)(n.code,{children:"GenPackable"}),". At this point, the target must be given ",(0,s.jsx)(n.code,{children:"partial"}),".\nGenPack's packet schema is represented by creating a ",(0,s.jsx)(n.code,{children:"PacketSchema"})," using the ",(0,s.jsx)(n.code,{children:"PacketSchemaBuilder"}),"."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'[GenPackable]\npublic partial record PeoplePacket\n{\n    public readonly static PacketSchema Schema = PacketSchemaBuilder.Create()\n        .@short("Age", "Age description")\n        .@string("Name", "Name description")\n        .Build();\n}\n'})}),(0,s.jsxs)(n.p,{children:["The format beginning with ",(0,s.jsx)(n.code,{children:"@"})," means the schema property to be created. For example, ",(0,s.jsx)(n.code,{children:'@short("Age", "Age description")'})," gives the ",(0,s.jsx)(n.code,{children:"Age"})," property the type ",(0,s.jsx)(n.code,{children:"short"})," and the description ",(0,s.jsx)(n.code,{children:"Age description"}),".\nThis translates to the following,"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"        /// <summary>\n        /// Age description\n        /// </summary>\n        public short Age { get; set; }\n"})}),(0,s.jsx)(n.p,{children:"You can then use the auto-generated properties."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"var p = new PeoplePacket()\np.Age = 32;\n"})}),(0,s.jsx)(n.h3,{id:"schema-properties",children:"Schema Properties"}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Bits"}),(0,s.jsx)(n.th,{children:"Arguments"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@byte"}),(0,s.jsx)(n.td,{children:"byte"}),(0,s.jsx)(n.td,{children:"8"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@sbyte"}),(0,s.jsx)(n.td,{children:"signed byte"}),(0,s.jsx)(n.td,{children:"8"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@short"}),(0,s.jsx)(n.td,{children:"short int"}),(0,s.jsx)(n.td,{children:"16"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@ushort"}),(0,s.jsx)(n.td,{children:"unsigned short int"}),(0,s.jsx)(n.td,{children:"16"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@int"}),(0,s.jsx)(n.td,{children:"int"}),(0,s.jsx)(n.td,{children:"32"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@uint"}),(0,s.jsx)(n.td,{children:"unsigned int"}),(0,s.jsx)(n.td,{children:"32"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@long"}),(0,s.jsx)(n.td,{children:"long int"}),(0,s.jsx)(n.td,{children:"64"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@ulong"}),(0,s.jsx)(n.td,{children:"unsigned long int"}),(0,s.jsx)(n.td,{children:"64"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@float"}),(0,s.jsx)(n.td,{children:"single float"}),(0,s.jsx)(n.td,{children:"32"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@double"}),(0,s.jsx)(n.td,{children:"double float"}),(0,s.jsx)(n.td,{children:"64"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@string"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"N"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@object<type>"}),(0,s.jsx)(n.td,{children:"genpackable object"}),(0,s.jsx)(n.td,{children:"N"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@list<type>"}),(0,s.jsx)(n.td,{children:"variable list"}),(0,s.jsx)(n.td,{children:"N"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@dict<type>"}),(0,s.jsx)(n.td,{children:"variable dictionary"}),(0,s.jsx)(n.td,{children:"N"}),(0,s.jsx)(n.td,{children:"property name, description"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"@array<type>"}),(0,s.jsx)(n.td,{children:"fixed array"}),(0,s.jsx)(n.td,{children:"N"}),(0,s.jsx)(n.td,{children:"property name, size, description"})]})]})]}),(0,s.jsx)(n.h2,{id:"tasks",children:"Tasks"}),(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Support for Endian, string Encoding."]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Support for checksums."]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Support 8-bit, 16-bit, 32-bit, 64-bit, or variable 7-bit sizes for ",(0,s.jsx)(n.code,{children:"@list"})," and ",(0,s.jsx)(n.code,{children:"@dict"}),"."]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Add ",(0,s.jsx)(n.code,{children:"@ver"})," property to allow revision control of packets."]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Automatically select and deserialize target structures based on packet command(identification code)."]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Generate JSON and gRPC schema with ",(0,s.jsx)(n.code,{children:"PacketSchema"}),"."]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Process device packets with uncomplicated packet structures."]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Process structures with complex packets, such as PLCs."]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Process packets that require speed, such as ",(0,s.jsx)(n.code,{children:"MemoryPack"}),"."]}),"\n"]}),(0,s.jsx)(n.hr,{}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://www.flaticon.com/kr/free-icon/blocks_2021305",children:"Icon creator: Freepik - Flaticon"})})]}),"\n",(0,s.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Generating Binary Serialization and properties for class"})}),"\n",(0,s.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,s.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsxs)(c.A,{value:"csproj",label:"CSharp Project",children:[(0,s.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,s.jsx)(n.strong,{children:"GenPack"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {10}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\t<ItemGroup>\n\t\t<PackageReference Include="GenPack" Version=" 0.9.0-preview1" OutputItemType="Analyzer" ReferenceOutputAssembly="true" />\n\t</ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n</Project>\n\n'})})]}),(0,s.jsxs)(c.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\GenPack\\src\\Serializer\\Program.cs",label:"Program.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"GenPack"})," in ",(0,s.jsx)(n.em,{children:"Program.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using SerializerDemo;\n\nvar p= new Person() { Name= "Andrei Ignat" };\nvar bytes= p.ToPacket();\nvar entity = Person.FromPacket(bytes);\nConsole.WriteLine("name is "+entity.Name);\n'})})]}),(0,s.jsxs)(c.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\GenPack\\src\\Serializer\\Person.cs",label:"Person.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"GenPack"})," in ",(0,s.jsx)(n.em,{children:"Person.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'\nusing GenPack;\n\nnamespace SerializerDemo;\n\n\n[GenPackable]\npublic partial record Person\n{\n\n    public readonly static PacketSchema Schema = PacketSchemaBuilder.Create()\n           .@short("Id", "Age description")\n           .@string("Name", "Name description")\n           .Build();\n}\n\n\n'})})]})]}),"\n",(0,s.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,s.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,s.jsx)(a.A,{children:(0,s.jsx)(c.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\GenPack\\src\\Serializer\\obj\\GX\\GenPack.SourceGenerator\\GenPack.GenPackGenerator\\PersonSchema.g.cs",label:"PersonSchema.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"#pragma warning disable CS0219\nnamespace SerializerDemo\n{\n    public partial record Person : GenPack.IGenPackable\n    {\n        /// <summary>\n        /// Age description\n        /// </summary>\n        public short Id { get; set; }\n        /// <summary>\n        /// Name description\n        /// </summary>\n        public string Name { get; set; } = string.Empty;\n        public byte[] ToPacket()\n        {\n            using var ms = new System.IO.MemoryStream();\n            ToPacket(ms);\n            return ms.ToArray();\n        }\n        public void ToPacket(System.IO.Stream stream)\n        {\n            System.IO.BinaryWriter writer = new System.IO.BinaryWriter(stream);\n            writer.Write(Id);\n            writer.Write(Name);\n        }\n        public static SerializerDemo.Person FromPacket(byte[] data)\n        {\n            using var ms = new System.IO.MemoryStream(data);\n            return FromPacket(ms);\n        }\n        public static SerializerDemo.Person FromPacket(System.IO.Stream stream)\n        {\n            SerializerDemo.Person result = new SerializerDemo.Person();\n            System.IO.BinaryReader reader = new System.IO.BinaryReader(stream);\n            int size = 0;\n            byte[] buffer = null;\n            result.Id = reader.ReadInt16();\n            result.Name = reader.ReadString();\n            return result;\n        }\n    }\n}\n\n"})})})}),"\n",(0,s.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,s.jsx)(n.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(25283).A+"",children:"Download Example project GenPack "})})}),"\n",(0,s.jsx)(n.h3,{id:"share-genpack",children:"Share GenPack"}),"\n",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGenPack&quote=GenPack",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGenPack&text=GenPack:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGenPack",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGenPack&title=GenPack",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGenPack&title=GenPack&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGenPack",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/GenPack",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/GenPack"})}),"\n",(0,s.jsx)(n.p,{children:"aaa"}),"\n",(0,s.jsx)(d.Ay,{})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},72866:(e,n,r)=>{r.d(n,{Ay:()=>c,RM:()=>i});var t=r(74848),s=r(28453);const i=[{value:"Category &quot;Serializer&quot; has the following generators:",id:"category-serializer-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function a(e){const n={a:"a",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"category-serializer-has-the-following-generators",children:'Category "Serializer" has the following generators:'}),"\n",(0,t.jsxs)(n.p,{children:["1 ",(0,t.jsx)(n.a,{href:"/docs/GenPack",children:"GenPack"})]}),"\n",(0,t.jsxs)(n.p,{children:["2 ",(0,t.jsx)(n.a,{href:"/docs/jsonConverterSourceGenerator",children:"jsonConverterSourceGenerator"})]}),"\n",(0,t.jsxs)(n.p,{children:["3 ",(0,t.jsx)(n.a,{href:"/docs/JsonPolymorphicGenerator",children:"JsonPolymorphicGenerator"})]}),"\n",(0,t.jsxs)(n.p,{children:["4 ",(0,t.jsx)(n.a,{href:"/docs/Nino",children:"Nino"})]}),"\n",(0,t.jsxs)(n.p,{children:["5 ",(0,t.jsx)(n.a,{href:"/docs/ProtobufSourceGenerator",children:"ProtobufSourceGenerator"})]}),"\n",(0,t.jsxs)(n.p,{children:["6 ",(0,t.jsx)(n.a,{href:"/docs/StackXML",children:"StackXML"})]}),"\n",(0,t.jsxs)(n.p,{children:["7 ",(0,t.jsx)(n.a,{href:"/docs/System.Text.Json",children:"System.Text.Json"})]}),"\n",(0,t.jsx)(n.h3,{id:"see-category",children:"See category"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/Categories/Serializer",children:"Serializer"})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);