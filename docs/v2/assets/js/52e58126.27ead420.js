"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[8089],{49480:(e,i,n)=>{n.d(i,{A:()=>s});const s=n.p+"assets/files/Minerals.AutoMixins-a567fc59d7c0a5e9f93f0517e89e29eb.zip"},69401:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>x});const s=JSON.parse('{"id":"RSCG-Examples/Minerals.AutoMixins","title":"140 - Minerals.AutoMixins","description":"Generate Mixin from another classes","source":"@site/docs/RSCG-Examples/Minerals.AutoMixins.md","sourceDirName":"RSCG-Examples","slug":"/Minerals.AutoMixins","permalink":"/RSCG_Examples/v2/docs/Minerals.AutoMixins","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/RSCG-Examples/Minerals.AutoMixins.md","tags":[],"version":"current","sidebarPosition":1400,"frontMatter":{"sidebar_position":1400,"title":"140 - Minerals.AutoMixins","description":"Generate Mixin from another classes","slug":"/Minerals.AutoMixins"},"sidebar":"tutorialSidebar","previous":{"title":"139 - ThisClass","permalink":"/RSCG_Examples/v2/docs/ThisClass"},"next":{"title":"141 - ActorSrcGen","permalink":"/RSCG_Examples/v2/docs/ActorSrcGen"}}');var t=n(74848),a=n(28453),r=n(11470),l=n(19365),o=n(14252);const c={sidebar_position:1400,title:"140 - Minerals.AutoMixins",description:"Generate Mixin from another classes",slug:"/Minerals.AutoMixins"},d="Minerals.AutoMixins  by Szymon Halucha",h={},x=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Funkcje",id:"funkcje",level:2},{value:"Installation",id:"installation",level:2},{value:"1. Project file definition",id:"1-project-file-definition",level:3},{value:"2. dotnet command",id:"2-dotnet-command",level:3},{value:"Why choose this package instead of the Default Interface Implementation?",id:"why-choose-this-package-instead-of-the-default-interface-implementation",level:2},{value:"Usage",id:"usage",level:2},{value:"Defining mix-in objects",id:"defining-mix-in-objects",level:3},{value:"Using mix-in objects",id:"using-mix-in-objects",level:3},{value:"Multiple mix-ins",id:"multiple-mix-ins",level:3},{value:"Versioning",id:"versioning",level:2},{value:"Authors",id:"authors",level:2},{value:"License",id:"license",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share Minerals.AutoMixins",id:"share-mineralsautomixins",level:3},{value:"In the same category (Templating) - 11 other generators",id:"in-the-same-category-templating---11-other-generators",level:3},{value:"Gobie",id:"gobie",level:4},{value:"InterceptorTemplate",id:"interceptortemplate",level:4},{value:"JKToolKit.TemplatePropertyGenerator",id:"jktoolkittemplatepropertygenerator",level:4},{value:"Microsoft.NET.Sdk.Razor.SourceGenerators",id:"microsoftnetsdkrazorsourcegenerators",level:4},{value:"MorrisMoxy",id:"morrismoxy",level:4},{value:"NTypewriter",id:"ntypewriter",level:4},{value:"RazorBlade",id:"razorblade",level:4},{value:"RazorSlices",id:"razorslices",level:4},{value:"RSCG_IFormattable",id:"rscg_iformattable",level:4},{value:"RSCG_Templating",id:"rscg_templating",level:4},{value:"spreadcheetah",id:"spreadcheetah",level:4}];function u(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"mineralsautomixins--by-szymon-halucha",children:"Minerals.AutoMixins  by Szymon Halucha"})}),"\n",(0,t.jsx)(o.A,{toc:x}),"\n",(0,t.jsx)(i.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.a,{href:"https://www.nuget.org/packages/Minerals.AutoMixins/",children:(0,t.jsx)(i.img,{src:"https://img.shields.io/nuget/dt/Minerals.AutoMixins?label=Minerals.AutoMixins",alt:"Nuget"})}),"\n",(0,t.jsx)(i.a,{href:"https://github.com/SzymonHalucha/Minerals.AutoMixins",children:(0,t.jsx)(i.img,{src:"https://img.shields.io/github/last-commit/SzymonHalucha/Minerals.AutoMixins?label=updated",alt:"GitHub last commit"})}),"\n",(0,t.jsx)(i.img,{src:"https://img.shields.io/github/stars/SzymonHalucha/Minerals.AutoMixins?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,t.jsx)(i.h2,{id:"details",children:"Details"}),"\n",(0,t.jsx)(i.h3,{id:"info",children:"Info"}),"\n",(0,t.jsxs)(i.admonition,{type:"info",children:[(0,t.jsxs)(i.p,{children:["Name: ",(0,t.jsx)(i.strong,{children:"Minerals.AutoMixins"})]}),(0,t.jsx)(i.p,{children:"Package for automatic mixin design pattern generation using incremental generator"}),(0,t.jsx)(i.p,{children:"Author: Szymon Halucha"}),(0,t.jsxs)(i.p,{children:["NuGet:\n",(0,t.jsx)(i.em,{children:(0,t.jsx)(i.a,{href:"https://www.nuget.org/packages/Minerals.AutoMixins/",children:"https://www.nuget.org/packages/Minerals.AutoMixins/"})})]}),(0,t.jsxs)(i.p,{children:["You can find more details at ",(0,t.jsx)(i.a,{href:"https://github.com/SzymonHalucha/Minerals.AutoMixins",children:"https://github.com/SzymonHalucha/Minerals.AutoMixins"})]}),(0,t.jsxs)(i.p,{children:["Source: ",(0,t.jsx)(i.a,{href:"https://github.com/SzymonHalucha/Minerals.AutoMixins",children:"https://github.com/SzymonHalucha/Minerals.AutoMixins"})]})]}),"\n",(0,t.jsx)(i.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,t.jsxs)(i.admonition,{type:"note",children:[(0,t.jsx)(i.h1,{id:"mineralsautomixins",children:"Minerals.AutoMixins"}),(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.img,{src:"https://img.shields.io/github/license/SzymonHalucha/Minerals.AutoMixins?style=for-the-badge",alt:"GitHub License"}),"\n",(0,t.jsx)(i.img,{src:"https://img.shields.io/nuget/v/Minerals.AutoMixins?style=for-the-badge",alt:"NuGet Version"}),"\n",(0,t.jsx)(i.img,{src:"https://img.shields.io/nuget/dt/Minerals.AutoMixins?style=for-the-badge",alt:"NuGet Downloads"})]}),(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://www.nuget.org/packages/Minerals.AutoMixins/",children:"Package on nuget.org"})}),(0,t.jsxs)(i.p,{children:["This NuGet package provides a capability to automatically generate a ",(0,t.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Mixin",children:"mix-in"})," design pattern for C# classes by using only one attribute. This allows you to easily extend the functionality of existing classes."]}),(0,t.jsx)(i.h2,{id:"funkcje",children:"Funkcje"}),(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Easy mix-in definition:"})," Mix-in object are defined by using the ",(0,t.jsx)(i.code,{children:"[GenerateMixin]"})," attribute."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Easy addition of mix-ins to a class:"})," To add a mix-in object to a class, use the ",(0,t.jsx)(i.code,{children:"[AddMixin(typeof(ExampleMixinClass))]"})," attribute."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Optimized code generation:"})," The package uses an incremental source generator, so it doesn't significantly slow down the compilation process."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Compatibility with .NET Standard 2.0 and C# 7.3+:"})," Works on a wide range of platforms and development environments."]}),"\n"]}),(0,t.jsx)(i.h2,{id:"installation",children:"Installation"}),(0,t.jsx)(i.p,{children:"Add the Minerals.AutoMixins nuget package to your C# project using the following methods:"}),(0,t.jsx)(i.h3,{id:"1-project-file-definition",children:"1. Project file definition"}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-xml",children:'<PackageReference Include="Minerals.AutoMixins" Version="0.2.1" />\n'})}),(0,t.jsx)(i.h3,{id:"2-dotnet-command",children:"2. dotnet command"}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bat",children:"dotnet add package Minerals.AutoMixins\n"})}),(0,t.jsx)(i.h2,{id:"why-choose-this-package-instead-of-the-default-interface-implementation",children:"Why choose this package instead of the Default Interface Implementation?"}),(0,t.jsxs)(i.p,{children:['Because the C# language option called "Default Interface Implementation", has limited runtime platform support. The Minerals.AutoMixins package is compatible with ',(0,t.jsx)(i.code,{children:"netstandard2.0"})," and C# language version 7.3+."]}),(0,t.jsx)(i.h2,{id:"usage",children:"Usage"}),(0,t.jsxs)(i.p,{children:["To define a mix-in object, add the ",(0,t.jsx)(i.code,{children:"[GenerateMixin]"})," attribute to the selected class."]}),(0,t.jsx)(i.h3,{id:"defining-mix-in-objects",children:"Defining mix-in objects"}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",children:'namespace Examples\n{\n    [Minerals.AutoMixins.GenerateMixin]\n    public class ExampleMixin1\n    {\n        public float Property1 { get; set; } = 0.5f;\n\n        private int _field1 = 0;\n\n        private void Method1()\n        {\n            Console.WriteLine("Test1");\n        }\n    }\n\n    [Minerals.AutoMixins.GenerateMixin]\n    public class ExampleMixin2\n    {\n        public string PropertyText1 { get; set; } = "Test2";\n    }\n}\n'})}),(0,t.jsx)(i.h3,{id:"using-mix-in-objects",children:"Using mix-in objects"}),(0,t.jsxs)(i.p,{children:["To use the selected mix-in object, add the ",(0,t.jsx)(i.code,{children:"[AddMixin(typeof(ExampleMixin1))]"})," attribute to the selected class. The class implementing the ",(0,t.jsx)(i.strong,{children:"AddMixin"})," attribute must have the ",(0,t.jsx)(i.strong,{children:"partial"})," modifier to work properly."]}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",children:"namespace Examples\n{\n    [Minerals.AutoMixins.AddMixin(typeof(ExampleMixin1))]\n    public partial class ExampleClass\n    {\n        public int MyProperty { get; set; } = 3;\n    }\n}\n"})}),(0,t.jsxs)(i.p,{children:["The code above will generate an ",(0,t.jsx)(i.code,{children:"ExampleClass.g.cs"})," file with a partial class ",(0,t.jsx)(i.code,{children:"ExampleClass"}),"."]}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",children:'namespace Examples\n{\n    [global::System.Diagnostics.DebuggerNonUserCode]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n    public partial class ExampleClass\n    {\n        // MixinType: ExampleMixin1\n        public float Property1 { get; set; } = 0.5f;\n        private int _field1 = 0;\n        private void Method1()\n        {\n            Console.WriteLine("Test1");\n        }\n    }\n}\n'})}),(0,t.jsx)(i.h3,{id:"multiple-mix-ins",children:"Multiple mix-ins"}),(0,t.jsxs)(i.p,{children:["This package allows you to add multiple mix-in objects to a single class through attribute arguments ",(0,t.jsx)(i.code,{children:"[AddMixin(typeof(ExampleMixin1), typeof(ExampleMixin2))]"}),"."]}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",children:"namespace Examples\n{\n    [Minerals.AutoMixins.AddMixin(typeof(ExampleMixin1), typeof(ExampleMixin2))]\n    public partial class ExampleClass\n    {\n        public int MyProperty { get; set; } = 3;\n\n        public void MyMethod()\n        {\n\n        }\n    }\n}\n"})}),(0,t.jsxs)(i.p,{children:["The code above will generate an ",(0,t.jsx)(i.code,{children:"ExampleClass.g.cs"})," file with a partial class ",(0,t.jsx)(i.code,{children:"ExampleClass"}),"."]}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",children:'namespace Examples\n{\n    [global::System.Diagnostics.DebuggerNonUserCode]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n    public partial class ExampleClass\n    {\n        // MixinType: ExampleMixin1\n        public float Property1 { get; set; } = 0.5f;\n        private int _field1 = 0;\n        private void Method1()\n        {\n            Console.WriteLine("Test1");\n        }\n        // MixinType: ExampleMixin2\n        public string PropertyText1 { get; set; } = "Test2";\n        public string MethodText1()\n        {\n            return PropertyText1;\n        }\n    }\n}\n'})}),(0,t.jsx)(i.h2,{id:"versioning",children:"Versioning"}),(0,t.jsxs)(i.p,{children:["We use ",(0,t.jsx)(i.a,{href:"http://semver.org/",children:"SemVer"})," for versioning. For the versions available, see the ",(0,t.jsx)(i.a,{href:"https://github.com/SzymonHalucha/Minerals.AutoMixins/branches",children:"branches on this repository"}),"."]}),(0,t.jsx)(i.h2,{id:"authors",children:"Authors"}),(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Szymon Ha\u0142ucha"})," - Maintainer"]}),"\n"]}),(0,t.jsxs)(i.p,{children:["See also the list of ",(0,t.jsx)(i.a,{href:"https://github.com/SzymonHalucha/Minerals.AutoMixins/contributors",children:"contributors"})," who participated in this project."]}),(0,t.jsx)(i.h2,{id:"license",children:"License"}),(0,t.jsxs)(i.p,{children:["This project is licensed under the MIT License - see the ",(0,t.jsx)(i.a,{href:"https://github.com/SzymonHalucha/Minerals.AutoMixins/LICENSE",children:"LICENSE"})," file for details."]})]}),"\n",(0,t.jsx)(i.h3,{id:"about",children:"About"}),"\n",(0,t.jsx)(i.admonition,{type:"note",children:(0,t.jsx)(i.p,{children:"Generate Mixin from another classes"})}),"\n",(0,t.jsx)(i.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,t.jsx)(i.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,t.jsxs)(r.A,{children:[(0,t.jsxs)(l.A,{value:"csproj",label:"CSharp Project",children:[(0,t.jsxs)(i.p,{children:["This is the CSharp Project that references ",(0,t.jsx)(i.strong,{children:"Minerals.AutoMixins"})]}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-xml",metastring:"showLineNumbers {11}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Minerals.AutoMixins" Version="0.2.1" />\n  </ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n</Project>\n\n'})})]}),(0,t.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\Program.cs",label:"Program.cs",children:[(0,t.jsxs)(i.p,{children:["This is the use of ",(0,t.jsx)(i.strong,{children:"Minerals.AutoMixins"})," in ",(0,t.jsx)(i.em,{children:"Program.cs"})]}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using DemoMixin;\n\nPerson person = new Person { Name = "Andrei Ignat" };\nperson.LogName();\n'})})]}),(0,t.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\Person.cs",label:"Person.cs",children:[(0,t.jsxs)(i.p,{children:["This is the use of ",(0,t.jsx)(i.strong,{children:"Minerals.AutoMixins"})," in ",(0,t.jsx)(i.em,{children:"Person.cs"})]}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\nnamespace DemoMixin;\n[Minerals.AutoMixins.AddMixin(typeof(LogData))]\ninternal partial class Person\n{\n    public string Name { get; set; }\n    public void LogName() => Log(Name);\n}\n\n"})})]}),(0,t.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\LogData.cs",label:"LogData.cs",children:[(0,t.jsxs)(i.p,{children:["This is the use of ",(0,t.jsx)(i.strong,{children:"Minerals.AutoMixins"})," in ",(0,t.jsx)(i.em,{children:"LogData.cs"})]}),(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\nnamespace DemoMixin;\n[Minerals.AutoMixins.GenerateMixin]\ninternal class LogData\n{\n    public void Log(string data) => Console.WriteLine(data);\n}\n\n"})})]})]}),"\n",(0,t.jsx)(i.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,t.jsx)(i.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,t.jsxs)(r.A,{children:[(0,t.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\obj\\GX\\Minerals.AutoMixins\\Minerals.AutoMixins.AddMixinGenerator\\Person.g.cs",label:"Person.g.cs",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated>\n// This code was generated by a tool.\n// Name: Minerals.AutoMixins\n// Version: 0.2.1+6c5634e46b130effbe00bd9d3f94459f1dbb2e85\n// </auto-generated>\n\nnamespace DemoMixin\n{\n    [global::System.Diagnostics.DebuggerNonUserCode]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n    internal partial class Person\n    {\n        // MixinType: LogData\n        public void Log(string data) => Console.WriteLine(data);\n    }\n}\n"})})}),(0,t.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\obj\\GX\\Minerals.AutoMixins\\Minerals.AutoMixins.Attributes.AddMixinAttributeGenerator\\AddMixinAttribute.g.cs",label:"AddMixinAttribute.g.cs",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated>\n// This code was generated by a tool.\n// Name: Minerals.AutoMixins\n// Version: 0.2.1+6c5634e46b130effbe00bd9d3f94459f1dbb2e85\n// </auto-generated>\n#pragma warning disable CS9113\nnamespace Minerals.AutoMixins\n{\n    [global::System.Diagnostics.DebuggerNonUserCode]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n    [global::System.AttributeUsage(global::System.AttributeTargets.Class | global::System.AttributeTargets.Struct, AllowMultiple = false, Inherited = false)]\n    public sealed class AddMixinAttribute : global::System.Attribute\n    {\n        public AddMixinAttribute(params global::System.Type[] mixins)\n        {\n        }\n    }\n}\n#pragma warning restore CS9113\n"})})}),(0,t.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\obj\\GX\\Minerals.AutoMixins\\Minerals.AutoMixins.Attributes.GenerateMixinAttributeGenerator\\GenerateMixinAttribute.g.cs",label:"GenerateMixinAttribute.g.cs",children:(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated>\n// This code was generated by a tool.\n// Name: Minerals.AutoMixins\n// Version: 0.2.1+6c5634e46b130effbe00bd9d3f94459f1dbb2e85\n// </auto-generated>\nnamespace Minerals.AutoMixins\n{\n    [global::System.Diagnostics.DebuggerNonUserCode]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n    [global::System.AttributeUsage(global::System.AttributeTargets.Class | global::System.AttributeTargets.Struct, AllowMultiple = false, Inherited = false)]\n    public sealed class GenerateMixinAttribute : global::System.Attribute\n    {\n    }\n}\n"})})})]}),"\n",(0,t.jsx)(i.h2,{id:"useful",children:"Useful"}),"\n",(0,t.jsx)(i.h3,{id:"download-example-net--c-",children:"Download Example (.NET  C# )"}),"\n",(0,t.jsx)(i.admonition,{type:"tip",children:(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(49480).A+"",children:"Download Example project Minerals.AutoMixins "})})}),"\n",(0,t.jsx)(i.h3,{id:"share-mineralsautomixins",children:"Share Minerals.AutoMixins"}),"\n",(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins&quote=Minerals.AutoMixins",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins&text=Minerals.AutoMixins:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins&title=Minerals.AutoMixins",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins&title=Minerals.AutoMixins&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Minerals.AutoMixins",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Minerals.AutoMixins"})}),"\n",(0,t.jsx)(i.h3,{id:"in-the-same-category-templating---11-other-generators",children:"In the same category (Templating) - 11 other generators"}),"\n",(0,t.jsx)(i.h4,{id:"gobie",children:(0,t.jsx)(i.a,{href:"/docs/Gobie",children:"Gobie"})}),"\n",(0,t.jsx)(i.h4,{id:"interceptortemplate",children:(0,t.jsx)(i.a,{href:"/docs/InterceptorTemplate",children:"InterceptorTemplate"})}),"\n",(0,t.jsx)(i.h4,{id:"jktoolkittemplatepropertygenerator",children:(0,t.jsx)(i.a,{href:"/docs/JKToolKit.TemplatePropertyGenerator",children:"JKToolKit.TemplatePropertyGenerator"})}),"\n",(0,t.jsx)(i.h4,{id:"microsoftnetsdkrazorsourcegenerators",children:(0,t.jsx)(i.a,{href:"/docs/Microsoft.NET.Sdk.Razor.SourceGenerators",children:"Microsoft.NET.Sdk.Razor.SourceGenerators"})}),"\n",(0,t.jsx)(i.h4,{id:"morrismoxy",children:(0,t.jsx)(i.a,{href:"/docs/MorrisMoxy",children:"MorrisMoxy"})}),"\n",(0,t.jsx)(i.h4,{id:"ntypewriter",children:(0,t.jsx)(i.a,{href:"/docs/NTypewriter",children:"NTypewriter"})}),"\n",(0,t.jsx)(i.h4,{id:"razorblade",children:(0,t.jsx)(i.a,{href:"/docs/RazorBlade",children:"RazorBlade"})}),"\n",(0,t.jsx)(i.h4,{id:"razorslices",children:(0,t.jsx)(i.a,{href:"/docs/RazorSlices",children:"RazorSlices"})}),"\n",(0,t.jsx)(i.h4,{id:"rscg_iformattable",children:(0,t.jsx)(i.a,{href:"/docs/RSCG_IFormattable",children:"RSCG_IFormattable"})}),"\n",(0,t.jsx)(i.h4,{id:"rscg_templating",children:(0,t.jsx)(i.a,{href:"/docs/RSCG_Templating",children:"RSCG_Templating"})}),"\n",(0,t.jsx)(i.h4,{id:"spreadcheetah",children:(0,t.jsx)(i.a,{href:"/docs/spreadcheetah",children:"spreadcheetah"})})]})}function p(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);