"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[1756],{4137:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>N});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),p=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),k=a,N=u["".concat(i,".").concat(k)]||u[k]||m[k]||o;return r?n.createElement(N,s(s({ref:t},c),{},{components:r})):n.createElement(N,s({ref:t},c))}));function N(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=k;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=r[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}k.displayName="MDXCreateElement"},8537:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=r(7462),a=(r(7294),r(4137));const o={},s=void 0,l={unversionedId:"RSCG-Examples/FastGenericNew_readme",id:"RSCG-Examples/FastGenericNew_readme",title:"FastGenericNew_readme",description:"\u2728 Features",source:"@site/docs/RSCG-Examples/FastGenericNew_readme.md",sourceDirName:"RSCG-Examples",slug:"/RSCG-Examples/FastGenericNew_readme",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/FastGenericNew_readme",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"enum class Generator",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/EnumClass_readme"},next:{title:"Gedaq_readme",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/Gedaq_readme"}},i={},p=[{value:"\u2728 Features",id:"-features",level:2},{value:"\ud83d\udd27 Installation",id:"-installation",level:2},{value:"Pre-Compiled Version",id:"pre-compiled-version",level:3},{value:"SourceGenerator Version",id:"sourcegenerator-version",level:3},{value:"SourceGeneratorV2 requires",id:"sourcegeneratorv2-requires",level:4},{value:"\ud83d\udcd6 Examples",id:"-examples",level:2},{value:"Notes",id:"notes",level:3},{value:"\ud83d\ude80 Benchmark",id:"-benchmark",level:2},{value:"<strong>Environment</strong>",id:"environment",level:3},{value:"Reference Types",id:"reference-types",level:3},{value:"Value Types",id:"value-types",level:3},{value:"\ud83d\udcdc License",id:"-license",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{align:"center"},(0,a.kt)("a",{href:"https://github.com/Nyrest/FastGenericNew"},(0,a.kt)("img",{height:"320",src:"https://github.com/Nyrest/FastGenericNew/raw/main/Assets/FastGenericNew-Wide.svg"})),(0,a.kt)("a",{href:"https://github.com/Nyrest/FastGenericNew/actions/workflows/tests.yml"},(0,a.kt)("img",{src:"https://img.shields.io/github/workflow/status/Nyrest/FastGenericNew/Tests?style=for-the-badge"})),(0,a.kt)("a",{href:"https://www.nuget.org/packages/FastGenericNew/"},(0,a.kt)("img",{src:"https://img.shields.io/nuget/vpre/FastGenericNew?style=for-the-badge&color=0065b3"})),(0,a.kt)("a",{href:"https://www.nuget.org/packages/FastGenericNew.SourceGenerator/"},(0,a.kt)("img",{src:"https://img.shields.io/nuget/vpre/FastGenericNew.SourceGenerator?label=SourceGenerator&style=for-the-badge&color=0065b3"}))),(0,a.kt)("h2",{id:"-features"},"\u2728 Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\u2714\ufe0f ",(0,a.kt)("strong",{parentName:"p"},"The best")," ",(0,a.kt)("inlineCode",{parentName:"p"},"CreateInstance")," ever"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Up to 50x faster than ",(0,a.kt)("inlineCode",{parentName:"li"},"Activator.CreateInstance")),(0,a.kt)("li",{parentName:"ul"},"Generic Parameters Support"),(0,a.kt)("li",{parentName:"ul"},"Zero boxing/unboxing"),(0,a.kt)("li",{parentName:"ul"},"TryGetValue-like TryFastNew API"),(0,a.kt)("li",{parentName:"ul"},"Link Mode ",(0,a.kt)("inlineCode",{parentName:"li"},"PublishTrimmed")," Support"),(0,a.kt)("li",{parentName:"ul"},"Non-Public Constructor Support"),(0,a.kt)("li",{parentName:"ul"},"No Generic Constraints"),(0,a.kt)("li",{parentName:"ul"},"Compatible with .NET Standard 2.0"),(0,a.kt)("li",{parentName:"ul"},"Multiple backend implementations."),(0,a.kt)("li",{parentName:"ul"},"Heavily tested on Win/Mac/Linux"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\ud83e\ude9b ",(0,a.kt)("strong",{parentName:"p"},"Modern")," Compiler Integration"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Source Generator v2 (Incremental Generator)"),(0,a.kt)("li",{parentName:"ul"},"Highly Configurable (",(0,a.kt)("a",{parentName:"li",href:"https://github.com/Nyrest/FastGenericNew/wiki/SourceGenerator-Options"},"Props"),")"),(0,a.kt)("li",{parentName:"ul"},"Multi-threaded Generation"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"\ud83d\udd25 ",(0,a.kt)("strong",{parentName:"p"},"Lastest")," C#/.NET Features Support"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/nullable-reference-types"},"C# 8 Nullable")," Support"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-10.0/parameterless-struct-constructors"},"C# 10 Parameterless struct constructors")," Support (Both invokes or not)"),(0,a.kt)("li",{parentName:"ul"},"WebAssembly Support")))),(0,a.kt)("h2",{id:"-installation"},"\ud83d\udd27 Installation"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"You should only use one of them")),(0,a.kt)("h3",{id:"pre-compiled-version"},"Pre-Compiled Version"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"dotnet add package FastGenericNew --version 3.1.0-preview1\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<ItemGroup>\n  <PackageReference Include="FastGenericNew" Version="3.1.0-preview1" />\n</ItemGroup>\n')),(0,a.kt)("h3",{id:"sourcegenerator-version"},"SourceGenerator Version"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"dotnet add package FastGenericNew.SourceGenerator --version 3.1.0-preview1\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<ItemGroup>\n  <PackageReference Include="FastGenericNew.SourceGenerator" Version="3.1.0-preview1" />\n</ItemGroup>\n')),(0,a.kt)("h4",{id:"sourcegeneratorv2-requires"},"SourceGeneratorV2 requires"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},".NET Standard 2.0"))," or above",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"C# 8.0"))," or above",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Roslyn 4.0.1"))," or above",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"Modern IDE"))," ",(0,a.kt)("em",{parentName:"p"},"(Optional)"),"  ","[VS2022, Rider, VSCode]")),(0,a.kt)("h2",{id:"-examples"},"\ud83d\udcd6 Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'using FastGenericNew;\n\n// Simply replace \'Activator\' to \'FastNew\'\nvar obj = FastNew.CreateInstance<T>();\n\n// With parameter(s)\nvar obj2 = FastNew.CreateInstance<T, string>("text");\nvar obj3 = FastNew.CreateInstance<T, string, int>("text", 0);\n\n// Try pattern\n// NOTE: Try pattern will only check the constructor could be called (exist & callable)\n//       It will not catch or handle any exceptions thrown in the constructor.\nif (FastNew.TryCreateInstance<T, string>("arg0", out T result));\n{\n    // ...\n}\n')),(0,a.kt)("h3",{id:"notes"},"Notes"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"With .NET Framework"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"Activator.CreateInstance<T>()")," invokes the parameterless constructor of ",(0,a.kt)("strong",{parentName:"p"},"ValueType")," if",(0,a.kt)("br",{parentName:"p"}),"\n","the constraint is ",(0,a.kt)("inlineCode",{parentName:"p"},"where T : new()")," but appears to ",(0,a.kt)("strong",{parentName:"p"},"ignore the parameterless constructor if the constraint is ",(0,a.kt)("inlineCode",{parentName:"strong"},"where T : struct")),".",(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"But ",(0,a.kt)("inlineCode",{parentName:"strong"},"FastNew.CreateInstance<T>()")," will always invoke the parameterless constructor if it's available."),"  "),(0,a.kt)("p",{parentName:"blockquote"},"If you don't want to invoke the parameterless constructor of ",(0,a.kt)("strong",{parentName:"p"},"ValueType"),".",(0,a.kt)("br",{parentName:"p"}),"\n","Consider to use ",(0,a.kt)("inlineCode",{parentName:"p"},"FastNew.NewOrDefault<T>()")," which ",(0,a.kt)("strong",{parentName:"p"},"will never invoke the parameterless constructor of ",(0,a.kt)("inlineCode",{parentName:"strong"},"ValueType")))),(0,a.kt)("h2",{id:"-benchmark"},"\ud83d\ude80 Benchmark"),(0,a.kt)("h3",{id:"environment"},(0,a.kt)("strong",{parentName:"h3"},"Environment")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"BenchmarkDotNet=v0.13.1, OS=Windows 10.0.22000\nAMD Ryzen 9 3900X, 1 CPU, 24 logical and 12 physical cores\n.NET SDK=6.0.200-preview.22055.15\n  [Host]             : .NET 6.0.2 (6.0.222.6406), X64 RyuJIT\n  .NET 5.0           : .NET 5.0.14 (5.0.1422.5710), X64 RyuJIT\n  .NET 6.0           : .NET 6.0.2 (6.0.222.6406), X64 RyuJIT\n  .NET Framework 4.8 : .NET Framework 4.8 (4.8.4470.0), X64 RyuJIT\n")),(0,a.kt)("h3",{id:"reference-types"},"Reference Types"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Nyrest/FastGenericNew/blob/main/FastGenericNew.Benchmarks/Benchmarks/ReferenceTypeBenchmark.cs"},(0,a.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/Nyrest/FastGenericNew/main/Assets/Benchmark_ReferenceType.png",alt:"Benchmark Result of Reference Types"}))),(0,a.kt)("h3",{id:"value-types"},"Value Types"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/Nyrest/FastGenericNew/blob/main/FastGenericNew.Benchmarks/Benchmarks/ValueTypeBenchmark.cs"},(0,a.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/Nyrest/FastGenericNew/main/Assets/Benchmark_ValueType.png",alt:"Benchmark Result of Value Types"}))),(0,a.kt)("h2",{id:"-license"},"\ud83d\udcdc License"),(0,a.kt)("p",null,"FastGenericNew is licensed under the MIT license."))}m.isMDXComponent=!0}}]);