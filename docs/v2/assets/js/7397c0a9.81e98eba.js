"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[9342],{26146:(e,n,r)=>{r.d(n,{Ay:()=>o,RM:()=>i});var t=r(74848),a=r(28453);const i=[{value:"Category &quot;DependencyInjection&quot; has the following generators:",id:"category-dependencyinjection-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function s(e){const n={a:"a",h3:"h3",p:"p",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"category-dependencyinjection-has-the-following-generators",children:'Category "DependencyInjection" has the following generators:'}),"\n",(0,t.jsxs)(n.p,{children:["1 ",(0,t.jsx)(n.a,{href:"/docs/AutoRegisterInject",children:"AutoRegisterInject"})]}),"\n",(0,t.jsxs)(n.p,{children:["2 ",(0,t.jsx)(n.a,{href:"/docs/BunnyTailServiceRegistration",children:"BunnyTailServiceRegistration"})]}),"\n",(0,t.jsxs)(n.p,{children:["3 ",(0,t.jsx)(n.a,{href:"/docs/DependencyModules.SourceGenerator",children:"DependencyModules.SourceGenerator"})]}),"\n",(0,t.jsxs)(n.p,{children:["4 ",(0,t.jsx)(n.a,{href:"/docs/depso",children:"depso"})]}),"\n",(0,t.jsxs)(n.p,{children:["5 ",(0,t.jsx)(n.a,{href:"/docs/FactoryGenerator",children:"FactoryGenerator"})]}),"\n",(0,t.jsxs)(n.p,{children:["6 ",(0,t.jsx)(n.a,{href:"/docs/FactoryGenerator.Abstractions",children:"FactoryGenerator.Abstractions"})]}),"\n",(0,t.jsxs)(n.p,{children:["7 ",(0,t.jsx)(n.a,{href:"/docs/Injectio",children:"Injectio"})]}),"\n",(0,t.jsxs)(n.p,{children:["8 ",(0,t.jsx)(n.a,{href:"/docs/jab",children:"jab"})]}),"\n",(0,t.jsxs)(n.p,{children:["9 ",(0,t.jsx)(n.a,{href:"/docs/Pure.DI",children:"Pure.DI"})]}),"\n",(0,t.jsxs)(n.p,{children:["10 ",(0,t.jsx)(n.a,{href:"/docs/ServiceScan.SourceGenerator",children:"ServiceScan.SourceGenerator"})]}),"\n",(0,t.jsx)(n.h3,{id:"see-category",children:"See category"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/Categories/DependencyInjection",children:"DependencyInjection"})})]})}function o(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(s,{...e})}):s(e)}},79923:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>p,default:()=>j,frontMatter:()=>d,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"RSCG-Examples/FactoryGenerator","title":"143 - FactoryGenerator","description":"generating DI code","source":"@site/docs/RSCG-Examples/FactoryGenerator.md","sourceDirName":"RSCG-Examples","slug":"/FactoryGenerator","permalink":"/RSCG_Examples/v2/docs/FactoryGenerator","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1430,"frontMatter":{"sidebar_position":1430,"title":"143 - FactoryGenerator","description":"generating DI code","slug":"/FactoryGenerator"},"sidebar":"tutorialSidebar","previous":{"title":"142 - TableStorage","permalink":"/RSCG_Examples/v2/docs/TableStorage"},"next":{"title":"144 - depso","permalink":"/RSCG_Examples/v2/docs/depso"}}');var a=r(74848),i=r(28453),s=r(11470),o=r(19365),c=r(14252),l=r(26146);const d={sidebar_position:1430,title:"143 - FactoryGenerator",description:"generating DI code",slug:"/FactoryGenerator"},p="FactoryGenerator  by Westermo Network Technologies",h={},m=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Example",id:"example",level:2},{value:"Features",id:"features",level:2},{value:"Singleton services",id:"singleton-services",level:3},{value:"Singleton Instances",id:"singleton-instances",level:3},{value:"Named services",id:"named-services",level:3},{value:"Factories",id:"factories",level:3},{value:"Scoped Services",id:"scoped-services",level:3},{value:"Generic registration attributes",id:"generic-registration-attributes",level:3},{value:"Modules",id:"modules",level:3},{value:"Root services",id:"root-services",level:2},{value:"Samples",id:"samples",level:2},{value:"Console application",id:"console-application",level:3},{value:"Performance",id:"performance",level:2},{value:"Startup time",id:"startup-time",level:3},{value:"GetService",id:"getservice",level:3},{value:"Unity installation",id:"unity-installation",level:2},{value:"Debugging locally",id:"debugging-locally",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share FactoryGenerator",id:"share-factorygenerator",level:3},...l.RM];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"factorygenerator--by-westermo-network-technologies",children:"FactoryGenerator  by Westermo Network Technologies"})}),"\n",(0,a.jsx)(c.A,{toc:m}),"\n",(0,a.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://www.nuget.org/packages/FactoryGenerator/",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/FactoryGenerator?label=FactoryGenerator",alt:"Nuget"})}),"\n",(0,a.jsx)(n.a,{href:"https://github.com/westermo/FactoryGenerator",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/westermo/FactoryGenerator?label=updated",alt:"GitHub last commit"})}),"\n",(0,a.jsx)(n.img,{src:"https://img.shields.io/github/stars/westermo/FactoryGenerator?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,a.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,a.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsxs)(n.p,{children:["Name: ",(0,a.jsx)(n.strong,{children:"FactoryGenerator"})]}),(0,a.jsx)(n.p,{children:"Package Description"}),(0,a.jsx)(n.p,{children:"Author: Westermo Network Technologies"}),(0,a.jsxs)(n.p,{children:["NuGet:\n",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.a,{href:"https://www.nuget.org/packages/FactoryGenerator/",children:"https://www.nuget.org/packages/FactoryGenerator/"})})]}),(0,a.jsxs)(n.p,{children:["You can find more details at ",(0,a.jsx)(n.a,{href:"https://github.com/westermo/FactoryGenerator",children:"https://github.com/westermo/FactoryGenerator"})]}),(0,a.jsxs)(n.p,{children:["Source: ",(0,a.jsx)(n.a,{href:"https://github.com/westermo/FactoryGenerator",children:"https://github.com/westermo/FactoryGenerator"})]})]}),"\n",(0,a.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.h1,{id:"jab-compile-time-dependency-injection",children:"Jab Compile Time Dependency Injection"}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.nuget.org/packages/Jab",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/nuget/v/Jab",alt:"Nuget"})})}),(0,a.jsxs)(n.p,{children:["Jab provides a ",(0,a.jsx)(n.a,{href:"https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/",children:"C# Source Generator"})," based dependency injection container implementation."]}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Fast startup (200x faster than Microsoft.Extensions.DependencyInjection). ",(0,a.jsx)(n.a,{href:"#Startup-Time",children:"Details"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Fast resolution (7x faster than Microsoft.Extensions.DependencyInjection). ",(0,a.jsx)(n.a,{href:"#GetService",children:"Details"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"No runtime dependencies."}),"\n",(0,a.jsx)(n.li,{children:"AOT and linker friendly, all code is generated during project compilation."}),"\n",(0,a.jsxs)(n.li,{children:["Clean stack traces:  ",(0,a.jsx)(n.img,{src:"https://raw.githubusercontent.com/pakrym/jab/main/doc/stacktrace.png",alt:"stacktrace"})]}),"\n",(0,a.jsxs)(n.li,{children:["Readable generated code:  ",(0,a.jsx)(n.img,{src:"https://raw.githubusercontent.com/pakrym/jab/main/doc/generatedcode.png",alt:"generated code"})]}),"\n",(0,a.jsxs)(n.li,{children:["Registration validation. Container configuration issues become compiler errors:  ",(0,a.jsx)(n.img,{src:"https://raw.githubusercontent.com/pakrym/jab/main/doc/errors.png",alt:"generated code"})]}),"\n",(0,a.jsxs)(n.li,{children:["Incremental generation, .NET 5/6/7/8 SDK support, .NET Standard 2.0 support, [Unity support](",(0,a.jsx)(n.a,{href:"https://github.com/westermo/FactoryGenerator/README.md#Unity-installation",children:"https://github.com/westermo/FactoryGenerator/README.md#Unity-installation"})]}),"\n"]}),(0,a.jsx)(n.h2,{id:"example",children:"Example"}),(0,a.jsx)(n.p,{children:"Add Jab package reference:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'<ItemGroup>\n    <PackageReference Include="Jab" Version="0.10.2" PrivateAssets="all" />\n</ItemGroup>\n'})}),(0,a.jsx)(n.p,{children:"Define a service and implementation:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"internal interface IService\n{\n    void M();\n}\n\ninternal class ServiceImplementation : IService\n{\n    public void M()\n    {\n    }\n}\n"})}),(0,a.jsx)(n.p,{children:"Define a composition root and register services:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"[ServiceProvider]\n[Transient(typeof(IService), typeof(ServiceImplementation))]\ninternal partial class MyServiceProvider { }\n"})}),(0,a.jsx)(n.p,{children:"Use the service provider:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"MyServiceProvider c = new MyServiceProvider();\nIService service = c.GetService<IService>();\n"})}),(0,a.jsx)(n.h2,{id:"features",children:"Features"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"No runtime dependency, safe to use in libraries"}),"\n",(0,a.jsx)(n.li,{children:"Transient, Singleton, Scoped service registration"}),"\n",(0,a.jsx)(n.li,{children:"Named registrations"}),"\n",(0,a.jsx)(n.li,{children:"Factory registration"}),"\n",(0,a.jsx)(n.li,{children:"Instance registration"}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"IEnumerable"})," resolution"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"IDisposable"})," and ",(0,a.jsx)(n.code,{children:"IAsyncDisposable"})," support"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"IServiceProvider"})," support"]}),"\n"]}),(0,a.jsxs)(n.p,{children:["The plan is to support the minimum feature set Microsoft.Extensions.DependencyInjection.Abstraction requires but ",(0,a.jsx)(n.em,{children:"NOT"})," the ",(0,a.jsx)(n.code,{children:"IServiceCollection"}),"-based registration syntax as it is runtime based."]}),(0,a.jsx)(n.h3,{id:"singleton-services",children:"Singleton services"}),(0,a.jsxs)(n.p,{children:["Singleton services are created once per container lifetime in a thread-safe manner and cached.\nTo register a singleton service use the ",(0,a.jsx)(n.code,{children:"SingletonAttribute"}),":"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"[ServiceProvider]\n[Singleton(typeof(IService), typeof(ServiceImplementation))]\ninternal partial class MyServiceProvider { }\n"})}),(0,a.jsx)(n.h3,{id:"singleton-instances",children:"Singleton Instances"}),(0,a.jsxs)(n.p,{children:["If you want to use an existing object as a service define a property in the container declaration and use the ",(0,a.jsx)(n.code,{children:"Instance"})," property of the ",(0,a.jsx)(n.code,{children:"SingletonAttribute"})," to register the service:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"[ServiceProvider]\n[Singleton(typeof(IService), Instance = nameof(MyServiceInstance))]\ninternal partial class MyServiceProvider {\n    public IService MyServiceInstance { get;set; }\n}\n"})}),(0,a.jsx)(n.p,{children:"Then initialize the property during the container creation:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"MyServiceProvider c = new MyServiceProvider();\nc.MyServiceInstance = new ServiceImplementation();\n\nIService service = c.GetService<IService>();\n"})}),(0,a.jsx)(n.h3,{id:"named-services",children:"Named services"}),(0,a.jsxs)(n.p,{children:["Use the ",(0,a.jsx)(n.code,{children:"Name"})," property to assign a name to your service registrations and ",(0,a.jsx)(n.code,{children:'[FromNamedServices("...")]'})," attribute to resolve a service using its name."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:'[ServiceProvider]\n[Singleton(typeof(INotificationService), typeof(EmailNotificationService), Name="email")]\n[Singleton(typeof(INotificationService), typeof(SmsNotificationService), Name="sms")]\n[Singleton(typeof(Notifier))]\ninternal partial class MyServiceProvider {}\n\nclass Notifier\n{\n    public Notifier(\n        [FromNamedServices("email")] INotificationService email,\n        [FromNamedServices("sms")] INotificationService sms)\n    {}\n}\n'})}),(0,a.jsxs)(n.p,{children:["NOTE: Jab also recognizes the ",(0,a.jsx)(n.code,{children:"[FromKeyedServices]"})," attribute from ",(0,a.jsx)(n.code,{children:"Microsoft.Extensions.DependencyInjection"}),"."]}),(0,a.jsx)(n.h3,{id:"factories",children:"Factories"}),(0,a.jsxs)(n.p,{children:["Sometimes it's useful to provide a custom way to create a service instance without using the automatic construction selection.\nTo do this define a method in the container declaration and use the ",(0,a.jsx)(n.code,{children:"Factory"})," property of the ",(0,a.jsx)(n.code,{children:"SingletonAttribute"})," or ",(0,a.jsx)(n.code,{children:"TransientAttribute"})," to register the service:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"[ServiceProvider]\n[Transient(typeof(IService), Factory = nameof(MyServiceFactory))]\ninternal partial class MyServiceProvider {\n    public IService MyServiceFactory() => new ServiceImplementation();\n}\n\nMyServiceProvider c = new MyServiceProvider();\nIService service = c.GetService<IService>();\n"})}),(0,a.jsxs)(n.p,{children:["When using with ",(0,a.jsx)(n.code,{children:"TransientAttribute"})," the factory method would be invoked for every service resolution.\nWhen used with ",(0,a.jsx)(n.code,{children:"SingletonAttribute"})," it would only be invoked the first time the service is requested."]}),(0,a.jsx)(n.p,{children:"Similar to constructors, factories support parameter injection:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"[ServiceProvider]\n[Transient(typeof(IService), Factory = nameof(MyServiceFactory))]\n[Transient(typeof(SomeOtherService))]\ninternal partial class MyServiceProvider {\n    public IService MyServiceFactory(SomeOtherService other) => new ServiceImplementation(other);\n}\n"})}),(0,a.jsx)(n.h3,{id:"scoped-services",children:"Scoped Services"}),(0,a.jsxs)(n.p,{children:["Scoped services are created once per service provider scope. To create a scope use the ",(0,a.jsx)(n.code,{children:"CreateScope()"})," method of the service provider.\nService are resolved from the scope using the ",(0,a.jsx)(n.code,{children:"GetService<IService>()"})," call."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"[ServiceProvider]\n[Scoped(typeof(IService), typeof(ServiceImplementation))]\ninternal partial class MyServiceProvider { }\n\nMyServiceProvider c = new MyServiceProvider();\nusing MyServiceProvider.Scope scope = c.CreateScope();\nIService service = scope.GetService<IService>();\n"})}),(0,a.jsxs)(n.p,{children:["When the scope is disposed all ",(0,a.jsx)(n.code,{children:"IDisposable"})," and ",(0,a.jsx)(n.code,{children:"IAsyncDisposable"})," services that were resolved from it are disposed as well."]}),(0,a.jsx)(n.h3,{id:"generic-registration-attributes",children:"Generic registration attributes"}),(0,a.jsxs)(n.p,{children:["You can use generic attributes to register services if your project targets ",(0,a.jsx)(n.code,{children:"net7.0"})," or ",(0,a.jsx)(n.code,{children:"net6.0"})," and has ",(0,a.jsx)(n.code,{children:"LangVersion"})," set to preview."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <TargetFrameworks>net7.0</TargetFrameworks>\n  </PropertyGroup>\n\n</Project>\n\n'})}),(0,a.jsxs)(n.p,{children:["Generic attributes allow declaration to be more compact by avoiding the ",(0,a.jsx)(n.code,{children:"typeof"})," calls:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"[ServiceProvider]\n[Scoped<IService, ServiceImplementation>]\n[Import<IMyModule>]\ninternal partial class MyServiceProvider { }\n"})}),(0,a.jsx)(n.h3,{id:"modules",children:"Modules"}),(0,a.jsxs)(n.p,{children:["Often, a set of service registrations would represent a distinct set of functionality that can be included into arbitrary\nservice provider. Modules are used to implement registration sharing. To define a module create an interface and mark it with ",(0,a.jsx)(n.code,{children:"ServiceProviderModuleAttribute"}),". Service registrations can be listed in module the same way they are in the service provider."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"[ServiceProviderModule]\n[Singleton(typeof(IService), typeof(ServiceImplementation))]\npublic interface IMyModule\n{\n}\n"})}),(0,a.jsxs)(n.p,{children:["To use the module apply the ",(0,a.jsx)(n.code,{children:"Import"})," attribute to the service provider type:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"[ServiceProvider]\n[Import(typeof(IMyModule))]\ninternal partial class MyServiceProvider\n{\n}\n\nMyServiceProvider c = new MyServiceProvider();\nIService service = c.GetService<IEnumerable<IService>>();\n"})}),(0,a.jsx)(n.p,{children:"Modules can import other modules as well."}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"NOTE"}),": module service and implementation types have to be accessible from the project where service provider is generated."]}),(0,a.jsx)(n.h2,{id:"root-services",children:"Root services"}),(0,a.jsxs)(n.p,{children:["By default, ",(0,a.jsx)(n.code,{children:"IEnumerable<...>"})," service accessors are only generated when requested by other service constructors. If you would like to have a root ",(0,a.jsx)(n.code,{children:"IEnumerable<..>"})," accessor generated use the ",(0,a.jsx)(n.code,{children:"RootService"})," parameter of the ",(0,a.jsx)(n.code,{children:"ServiceProvider"})," attribute. The generator also scans all the ",(0,a.jsx)(n.code,{children:"GetService<...>"})," usages and tries to all collected type arguments as the root service."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"[ServiceProvider(RootServices = new [] {typeof(IEnumerable<IService>)})]\n[Singleton(typeof(IService), typeof(ServiceImplementation))]\n[Singleton(typeof(IService), typeof(ServiceImplementation))]\n[Singleton(typeof(IService), typeof(ServiceImplementation))]\ninternal partial class MyServiceProvider\n{\n}\n\nMyServiceProvider c = new MyServiceProvider();\nIService service = c.GetService<IEnumerable<IService>>();\n"})}),(0,a.jsx)(n.h2,{id:"samples",children:"Samples"}),(0,a.jsx)(n.h3,{id:"console-application",children:"Console application"}),(0,a.jsxs)(n.p,{children:["Sample Jab usage in console application can be found in ",(0,a.jsx)(n.a,{href:"https://github.com/westermo/FactoryGenerator/src/samples/ConsoleSample",children:"src/samples/ConsoleSample"})]}),(0,a.jsx)(n.h2,{id:"performance",children:"Performance"}),(0,a.jsxs)(n.p,{children:["The performance benchmark project is available in ",(0,a.jsx)(n.a,{href:"https://github.com/westermo/FactoryGenerator/src/Jab.Performance/",children:"src/Jab.Performance/"}),"."]}),(0,a.jsx)(n.h3,{id:"startup-time",children:"Startup time"}),(0,a.jsx)(n.p,{children:"The startup time benchmark measures time between application startup and the first service being resolved."}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"| Method |        Mean |     Error |    StdDev |  Ratio | RatioSD |  Gen 0 |  Gen 1 | Gen 2 | Allocated |\n|------- |------------:|----------:|----------:|-------:|--------:|-------:|-------:|------:|----------:|\n|   MEDI | 2,437.88 ns | 14.565 ns | 12.163 ns | 220.91 |    2.72 | 0.6332 | 0.0114 |     - |    6632 B |\n|    Jab |    11.03 ns |  0.158 ns |  0.123 ns |   1.00 |    0.00 | 0.0046 |      - |     - |      48 B |\n"})}),(0,a.jsx)(n.h3,{id:"getservice",children:"GetService"}),(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"GetService"})," benchmark measures the ",(0,a.jsx)(n.code,{children:"provider.GetService<IService>()"})," call."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"| Method |      Mean |     Error |    StdDev | Ratio | RatioSD |  Gen 0 | Gen 1 | Gen 2 | Allocated |\n|------- |----------:|----------:|----------:|------:|--------:|-------:|------:|------:|----------:|\n|   MEDI | 39.340 ns | 0.2419 ns | 0.2263 ns |  7.01 |    0.09 | 0.0023 |     - |     - |      24 B |\n|    Jab |  5.619 ns | 0.0770 ns | 0.0643 ns |  1.00 |    0.00 | 0.0023 |     - |     - |      24 B |\n"})}),(0,a.jsx)(n.h2,{id:"unity-installation",children:"Unity installation"}),(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Navigate to the Packages directory of your project."}),"\n",(0,a.jsxs)(n.li,{children:["Adjust the ",(0,a.jsx)(n.a,{href:"https://docs.unity3d.com/Manual/upm-manifestPrj.html",children:"project manifest file"})," manifest.json in a text editor."]}),"\n",(0,a.jsxs)(n.li,{children:["Ensure ",(0,a.jsx)(n.code,{children:"https://registry.npmjs.org/"})," is part of ",(0,a.jsx)(n.code,{children:"scopedRegistries"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Ensure ",(0,a.jsx)(n.code,{children:"com.pakrym"})," is part of ",(0,a.jsx)(n.code,{children:"scopes"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Add ",(0,a.jsx)(n.code,{children:"com.pakrym.jab"})," to the dependencies, stating the latest version."]}),"\n"]}),(0,a.jsx)(n.p,{children:"A minimal example ends up looking like this:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'{\n  "scopedRegistries": [\n    {\n      "name": "npmjs",\n      "url": "https://registry.npmjs.org/",\n      "scopes": [\n        "com.pakrym"\n      ]\n    }\n  ],\n  "dependencies": {\n    "com.pakrym.jab": "0.10.2",\n    ...\n  }\n}\n'})}),(0,a.jsx)(n.h2,{id:"debugging-locally",children:"Debugging locally"}),(0,a.jsxs)(n.p,{children:["Run ",(0,a.jsx)(n.code,{children:"dotnet build /t:CreateLaunchSettings"})," in the ",(0,a.jsx)(n.code,{children:"Jab.Tests"})," directory would update the ",(0,a.jsx)(n.code,{children:"Jab\\Properties\\launchSettings.json"})," file to include ",(0,a.jsx)(n.code,{children:"csc"})," invocation that allows F5 debugging of the generator targeting the ",(0,a.jsx)(n.code,{children:"Jab.Tests"})," project."]})]}),"\n",(0,a.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"generating DI code"})}),"\n",(0,a.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,a.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsxs)(o.A,{value:"csproj",label:"CSharp Project",children:[(0,a.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,a.jsx)(n.strong,{children:"FactoryGenerator"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {14}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\t<ItemGroup>\n\t  <PackageReference Include="FactoryGenerator" Version="1.0.11" />\n\t  <PackageReference Include="FactoryGenerator.Attributes" Version="1.0.11" />\n\t</ItemGroup>\n</Project>\n\n'})})]}),(0,a.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator\\src\\InjectDemo\\Program.cs",label:"Program.cs",children:[(0,a.jsxs)(n.p,{children:["This is the use of ",(0,a.jsx)(n.strong,{children:"FactoryGenerator"})," in ",(0,a.jsx)(n.em,{children:"Program.cs"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"using InjectDemo;\n\nInjectDemo.Generated.DependencyInjectionContainer sc = new();\nvar db = sc.Resolve<IDatabase>();\ndb.Open();\n\n\n"})})]}),(0,a.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator\\src\\InjectDemo\\Database.cs",label:"Database.cs",children:[(0,a.jsxs)(n.p,{children:["This is the use of ",(0,a.jsx)(n.strong,{children:"FactoryGenerator"})," in ",(0,a.jsx)(n.em,{children:"Database.cs"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using FactoryGenerator.Attributes;\n\nnamespace InjectDemo;\n\n[Inject, Scoped]\npublic partial class Database : IDatabase\n{\n    private readonly DatabaseCon con;\n\n    public Database(DatabaseCon con)\n    {\n        this.con = con;\n    }\n    public void Open()\n    {\n        Console.WriteLine($"open {con.Connection}");\n        this.con.Open();\n    }\n\n}\n\n\n'})})]}),(0,a.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator\\src\\InjectDemo\\DatabaseCon.cs",label:"DatabaseCon.cs",children:[(0,a.jsxs)(n.p,{children:["This is the use of ",(0,a.jsx)(n.strong,{children:"FactoryGenerator"})," in ",(0,a.jsx)(n.em,{children:"DatabaseCon.cs"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'\nusing FactoryGenerator.Attributes;\n\nnamespace InjectDemo;\n\n[Inject,Scoped, Self]\npublic partial class DatabaseCon: IDatabase\n{\n    public string? Connection { get; set; }\n    public void Open()\n    {\n        Console.WriteLine("open" + Connection);\n    }\n}\n\n\n'})})]})]}),"\n",(0,a.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,a.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator\\src\\InjectDemo\\obj\\GX\\FactoryGenerator\\FactoryGenerator.FactoryGenerator\\DependencyInjectionContainer.Constructor.g.cs",label:"DependencyInjectionContainer.Constructor.g.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\nusing System;\nusing System.Collections.Generic;\nusing FactoryGenerator;\nusing System.CodeDom.Compiler;\nnamespace InjectDemo.Generated;\n#nullable enable\npublic partial class DependencyInjectionContainer\n{\n    \n    public DependencyInjectionContainer()\n    {\n        \n        \n        m_lookup = new(2)\n        {\n\t\t\t{ typeof(InjectDemo.IDatabase),InjectDemo_IDatabase },\n\t\t\t{ typeof(InjectDemo.DatabaseCon),InjectDemo_DatabaseCon },\n\n\n\n\n        };\n    }\n\n    \npublic ILifetimeScope BeginLifetimeScope()\n{\n    var scope = new LifetimeScope(this);\n    resolvedInstances.Add(new WeakReference<IDisposable>(scope));\n    return scope;\n}\n\n}\n"})})}),(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator\\src\\InjectDemo\\obj\\GX\\FactoryGenerator\\FactoryGenerator.FactoryGenerator\\DependencyInjectionContainer.Declarations.g.cs",label:"DependencyInjectionContainer.Declarations.g.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\nusing System;\nusing System.Collections.Generic;\nusing FactoryGenerator;\nusing System.CodeDom.Compiler;\nnamespace InjectDemo.Generated;\n#nullable enable\npublic partial class DependencyInjectionContainer\n{\n    \n    internal InjectDemo.DatabaseCon InjectDemo_DatabaseCon()\n    {\n        if (m_InjectDemo_DatabaseCon != null)\n            return m_InjectDemo_DatabaseCon;\n    \n        lock (m_lock)\n        {\n            if (m_InjectDemo_DatabaseCon != null)\n                return m_InjectDemo_DatabaseCon;\n            return m_InjectDemo_DatabaseCon = new InjectDemo.DatabaseCon();\n        }\n    } \n    internal InjectDemo.DatabaseCon? m_InjectDemo_DatabaseCon;\n\t\n    internal InjectDemo.Database InjectDemo_Database()\n    {\n        if (m_InjectDemo_Database != null)\n            return m_InjectDemo_Database;\n    \n        lock (m_lock)\n        {\n            if (m_InjectDemo_Database != null)\n                return m_InjectDemo_Database;\n            return m_InjectDemo_Database = new InjectDemo.Database(InjectDemo_DatabaseCon());\n        }\n    } \n    internal InjectDemo.Database? m_InjectDemo_Database;\n\tinternal InjectDemo.IDatabase InjectDemo_IDatabase() => InjectDemo_Database();\n}\n"})})}),(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator\\src\\InjectDemo\\obj\\GX\\FactoryGenerator\\FactoryGenerator.FactoryGenerator\\DependencyInjectionContainer.EnumerableDeclarations.g.cs",label:"DependencyInjectionContainer.EnumerableDeclarations.g.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\nusing System;\nusing System.Collections.Generic;\nusing FactoryGenerator;\nusing System.CodeDom.Compiler;\nnamespace InjectDemo.Generated;\n#nullable enable\npublic partial class DependencyInjectionContainer\n{\n    \n}\n"})})}),(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator\\src\\InjectDemo\\obj\\GX\\FactoryGenerator\\FactoryGenerator.FactoryGenerator\\DependencyInjectionContainer.Lookup.g.cs",label:"DependencyInjectionContainer.Lookup.g.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'\nusing System;\nusing System.Collections.Generic;\nusing FactoryGenerator;\nusing System.CodeDom.Compiler;\nnamespace InjectDemo.Generated;\n#nullable enable\n[GeneratedCode("FactoryGenerator", "1.0.0")]\n#nullable disable\npublic sealed partial class DependencyInjectionContainer : IContainer\n{\n    private object m_lock = new();\n    private Dictionary<Type,Func<object>> m_lookup;\n    private readonly List<WeakReference<IDisposable>> resolvedInstances = new();\n\n    public T Resolve<T>()\n    {\n        return (T)Resolve(typeof(T));\n    }\n\n    public object Resolve(Type type)\n    {\n        var instance = m_lookup[type]();\n        return instance;\n    }\n\n    public void Dispose()\n    {\n        foreach (var weakReference in resolvedInstances)\n        {\n            if(weakReference.TryGetTarget(out var disposable))\n            {\n                disposable.Dispose();\n            }\n        }\n        resolvedInstances.Clear();\n    }\n\n    public bool TryResolve(Type type, out object resolved)\n    {\n        if(m_lookup.TryGetValue(type, out var factory))\n        {\n            resolved = factory();\n            return true;\n        }\n        resolved = default;\n        return false;\n    }\n\n\n    public bool TryResolve<T>(out T resolved)\n    {\n        if(m_lookup.TryGetValue(typeof(T), out var factory))\n        {\n            var value = factory();\n            if(value is T t)\n            {\n                resolved = t;\n                return true;\n            }\n        }\n        resolved = default;\n        return false;\n    }\n    public bool IsRegistered(Type type)\n    {\n        return m_lookup.ContainsKey(type);\n    }\n    public bool IsRegistered<T>() => IsRegistered(typeof(T));\n}\n'})})}),(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator\\src\\InjectDemo\\obj\\GX\\FactoryGenerator\\FactoryGenerator.FactoryGenerator\\LifetimeScope.Constructor.g.cs",label:"LifetimeScope.Constructor.g.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\nusing System;\nusing System.Collections.Generic;\nusing FactoryGenerator;\nusing System.CodeDom.Compiler;\nnamespace InjectDemo.Generated;\n#nullable enable\npublic partial class LifetimeScope\n{\n    \n    public LifetimeScope(DependencyInjectionContainer fallback)\n    {\n        m_fallback = fallback;\n        \n        m_lookup = new(2)\n        {\n\t\t\t{ typeof(InjectDemo.IDatabase),InjectDemo_IDatabase },\n\t\t\t{ typeof(InjectDemo.DatabaseCon),InjectDemo_DatabaseCon },\n\n\n\n\n        };\n    }\n\n    \n\n}\n"})})}),(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator\\src\\InjectDemo\\obj\\GX\\FactoryGenerator\\FactoryGenerator.FactoryGenerator\\LifetimeScope.Declarations.g.cs",label:"LifetimeScope.Declarations.g.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\nusing System;\nusing System.Collections.Generic;\nusing FactoryGenerator;\nusing System.CodeDom.Compiler;\nnamespace InjectDemo.Generated;\n#nullable enable\npublic partial class LifetimeScope\n{\n    \n    internal InjectDemo.DatabaseCon InjectDemo_DatabaseCon()\n    {\n        if (m_InjectDemo_DatabaseCon != null)\n            return m_InjectDemo_DatabaseCon;\n    \n        lock (m_lock)\n        {\n            if (m_InjectDemo_DatabaseCon != null)\n                return m_InjectDemo_DatabaseCon;\n            return m_InjectDemo_DatabaseCon = new InjectDemo.DatabaseCon();\n        }\n    } \n    internal InjectDemo.DatabaseCon? m_InjectDemo_DatabaseCon;\n\t\n    internal InjectDemo.Database InjectDemo_Database()\n    {\n        if (m_InjectDemo_Database != null)\n            return m_InjectDemo_Database;\n    \n        lock (m_lock)\n        {\n            if (m_InjectDemo_Database != null)\n                return m_InjectDemo_Database;\n            return m_InjectDemo_Database = new InjectDemo.Database(InjectDemo_DatabaseCon());\n        }\n    } \n    internal InjectDemo.Database? m_InjectDemo_Database;\n\tinternal InjectDemo.IDatabase InjectDemo_IDatabase() => InjectDemo_Database();\n}\n"})})}),(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator\\src\\InjectDemo\\obj\\GX\\FactoryGenerator\\FactoryGenerator.FactoryGenerator\\LifetimeScope.EnumerableDeclarations.g.cs",label:"LifetimeScope.EnumerableDeclarations.g.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\nusing System;\nusing System.Collections.Generic;\nusing FactoryGenerator;\nusing System.CodeDom.Compiler;\nnamespace InjectDemo.Generated;\n#nullable enable\npublic partial class LifetimeScope\n{\n    \n}\n"})})}),(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator\\src\\InjectDemo\\obj\\GX\\FactoryGenerator\\FactoryGenerator.FactoryGenerator\\LifetimeScope.Lookup.g.cs",label:"LifetimeScope.Lookup.g.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'\nusing System;\nusing System.Collections.Generic;\nusing FactoryGenerator;\nusing System.CodeDom.Compiler;\nnamespace InjectDemo.Generated;\n#nullable enable\n[GeneratedCode("FactoryGenerator", "1.0.0")]\n#nullable disable\npublic sealed partial class LifetimeScope : IContainer\n{\n    public ILifetimeScope BeginLifetimeScope()\n    {\n        var scope = m_fallback.BeginLifetimeScope();\n        resolvedInstances.Add(new WeakReference<IDisposable>(scope));\n        return scope;\n    }\n    private object m_lock = new();\n    private DependencyInjectionContainer m_fallback;\n    private Dictionary<Type,Func<object>> m_lookup;\n    private readonly List<WeakReference<IDisposable>> resolvedInstances = new();\n\n   public T Resolve<T>()\n    {\n        return (T)Resolve(typeof(T));\n    }\n\n    public object Resolve(Type type)\n    {\n        var instance = m_lookup[type]();\n        return instance;\n    }\n\n    public void Dispose()\n    {\n        foreach (var weakReference in resolvedInstances)\n        {\n            if(weakReference.TryGetTarget(out var disposable))\n            {\n                disposable.Dispose();\n            }\n        }\n        resolvedInstances.Clear();\n    }\n\n    public bool TryResolve(Type type, out object resolved)\n    {\n        if(m_lookup.TryGetValue(type, out var factory))\n        {\n            resolved = factory();\n            return true;\n        }\n        resolved = default;\n        return false;\n    }\n\n\n    public bool TryResolve<T>(out T resolved)\n    {\n        if(m_lookup.TryGetValue(typeof(T), out var factory))\n        {\n            var value = factory();\n            if(value is T t)\n            {\n                resolved = t;\n                return true;\n            }\n        }\n        resolved = default;\n        return false;\n    }\n    public bool IsRegistered(Type type)\n    {\n        return m_lookup.ContainsKey(type);\n    }\n    public bool IsRegistered<T>() => IsRegistered(typeof(T));\n}\n\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,a.jsx)(n.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(86281).A+"",children:"Download Example project FactoryGenerator "})})}),"\n",(0,a.jsx)(n.h3,{id:"share-factorygenerator",children:"Share FactoryGenerator"}),"\n",(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator&quote=FactoryGenerator",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator&text=FactoryGenerator:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator&title=FactoryGenerator",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator&title=FactoryGenerator&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/FactoryGenerator",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/FactoryGenerator"})}),"\n",(0,a.jsx)(n.p,{children:"aaa"}),"\n",(0,a.jsx)(l.Ay,{})]})}function j(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},86281:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/files/FactoryGenerator-aa9d6c11963d35d55548f269660dae4b.zip"}}]);