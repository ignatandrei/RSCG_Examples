"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[9161],{18329:(e,n,r)=>{r.d(n,{Ay:()=>o,RM:()=>a});var t=r(74848),s=r(28453);const a=[{value:"Category &quot;Database&quot; has the following generators:",id:"category-database-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function i(e){const n={a:"a",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"category-database-has-the-following-generators",children:'Category "Database" has the following generators:'}),"\n",(0,t.jsxs)(n.p,{children:["1 ",(0,t.jsx)(n.a,{href:"/docs/Breezy",children:"Breezy"})]}),"\n",(0,t.jsxs)(n.p,{children:["2 ",(0,t.jsx)(n.a,{href:"/docs/Dapper.AOT",children:"Dapper.AOT"})]}),"\n",(0,t.jsxs)(n.p,{children:["3 ",(0,t.jsx)(n.a,{href:"/docs/EntityLengths.Generator",children:"EntityLengths.Generator"})]}),"\n",(0,t.jsxs)(n.p,{children:["4 ",(0,t.jsx)(n.a,{href:"/docs/Finch.Generators",children:"Finch.Generators"})]}),"\n",(0,t.jsxs)(n.p,{children:["5 ",(0,t.jsx)(n.a,{href:"/docs/Gedaq",children:"Gedaq"})]}),"\n",(0,t.jsxs)(n.p,{children:["6 ",(0,t.jsx)(n.a,{href:"/docs/TableStorage",children:"TableStorage"})]}),"\n",(0,t.jsx)(n.h3,{id:"see-category",children:"See category"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/Categories/Database",children:"Database"})})]})}function o(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},28280:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>g,frontMatter:()=>h,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"RSCG-Examples/Finch.Generators","title":"222 - Finch.Generators","description":"dapper style generator","source":"@site/docs/RSCG-Examples/Finch.Generators.md","sourceDirName":"RSCG-Examples","slug":"/Finch.Generators","permalink":"/RSCG_Examples/v2/docs/Finch.Generators","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2220,"frontMatter":{"sidebar_position":2220,"title":"222 - Finch.Generators","description":"dapper style generator","slug":"/Finch.Generators"},"sidebar":"tutorialSidebar","previous":{"title":"221 - RxSourceGenerator","permalink":"/RSCG_Examples/v2/docs/RxSourceGenerator"},"next":{"title":"223 - JinShil.MixinSourceGenerator","permalink":"/RSCG_Examples/v2/docs/JinShil.MixinSourceGenerator"}}');var s=r(74848),a=r(28453),i=r(11470),o=r(19365),c=r(14252),l=r(18329);const h={sidebar_position:2220,title:"222 - Finch.Generators",description:"dapper style generator",slug:"/Finch.Generators"},d="Finch.Generators  by Ivan Mazurenko",p={},u=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Author",id:"author",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Introduction",id:"introduction",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Contribution",id:"contribution",level:2},{value:"License",id:"license",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share Finch.Generators",id:"share-finchgenerators",level:3},...l.RM];function m(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"finchgenerators--by-ivan-mazurenko",children:"Finch.Generators  by Ivan Mazurenko"})}),"\n",(0,s.jsx)(c.A,{toc:u}),"\n",(0,s.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/Finch.Generators/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/Finch.Generators?label=Finch.Generators",alt:"Nuget"})}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/ivmazurenko/finch",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/ivmazurenko/finch?label=updated",alt:"GitHub last commit"})}),"\n",(0,s.jsx)(n.img,{src:"https://img.shields.io/github/stars/ivmazurenko/finch?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,s.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,s.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["Name: ",(0,s.jsx)(n.strong,{children:"Finch.Generators"})]}),(0,s.jsx)(n.p,{children:"Package Description"}),(0,s.jsx)(n.p,{children:"Author: Ivan Mazurenko"}),(0,s.jsxs)(n.p,{children:["NuGet:\n",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/Finch.Generators/",children:"https://www.nuget.org/packages/Finch.Generators/"})})]}),(0,s.jsxs)(n.p,{children:["You can find more details at ",(0,s.jsx)(n.a,{href:"https://github.com/ivmazurenko/finch",children:"https://github.com/ivmazurenko/finch"})]}),(0,s.jsxs)(n.p,{children:["Source: ",(0,s.jsx)(n.a,{href:"https://github.com/ivmazurenko/finch",children:"https://github.com/ivmazurenko/finch"})]})]}),"\n",(0,s.jsx)(n.h3,{id:"author",children:"Author"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Ivan Mazurenko\n",(0,s.jsx)(n.img,{src:"https://github.com/ivmazurenko.png",alt:"Alt text"})]})}),"\n",(0,s.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.h1,{id:"finch---database-mapping-extension-methods-source-generator",children:"Finch - database mapping extension methods source generator"}),(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),(0,s.jsx)(n.p,{children:"Finch is c# source generator designed to simplify database interactions by generating concise extension methods for\ndatabase queries mappings."}),(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Install the Finch NuGet packages:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ dotnet add package Finch.Abstractions\n$ dotnet add package Finch.Generators\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Mark the required type with an ",(0,s.jsx)(n.a,{href:"https://github.com/ivmazurenko/Finch/tree/master/Finch.Abstractions",children:"attribute"})," corresponding to your desired database:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c#",children:"[GenerateSqlserverConnectionExtensions]\npublic class TbUser\n{\n   public int id \\{ get; set; }\n   public string name \\{ get; set; }\n}\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Use the extension method for your type:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c#",children:'var connection = new SqlConnection(connectionString);\nvar items = await connection.QueryAsync<TbUser>("select * from tb_user");\n'})}),"\n"]}),"\n"]}),(0,s.jsx)(n.h2,{id:"contribution",children:"Contribution"}),(0,s.jsx)(n.p,{children:"Contributions to Finch are welcome! If you encounter any issues or have ideas for improvement, feel free to open an\nissue or submit a pull request on GitHub."}),(0,s.jsx)(n.h2,{id:"license",children:"License"}),(0,s.jsx)(n.p,{children:"Finch is licensed under the MIT License."})]}),"\n",(0,s.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"dapper style generator"})}),"\n",(0,s.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,s.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsxs)(o.A,{value:"csproj",label:"CSharp Project",children:[(0,s.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,s.jsx)(n.strong,{children:"Finch.Generators"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {12}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Finch.Abstractions" Version="0.0.107" />\n    <PackageReference Include="Finch.Generators" Version="0.0.107" />\n    <PackageReference Include="Microsoft.Data.SqlClient" Version="6.1.1" />\n  </ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n</Project>\n\n'})})]}),(0,s.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Finch.Generators\\src\\DB\\Program.cs",label:"Program.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"Finch.Generators"})," in ",(0,s.jsx)(n.em,{children:"Program.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// See https://aka.ms/new-console-template for more information\nusing DB;\nusing Microsoft.Data.SqlClient;\n\nConsole.WriteLine("Hello, World!");\nstring connectionString="not set";\nvar connection = new SqlConnection(connectionString);\nvar items = await connection.QueryAsync<Person>("select * from Person");\n'})})]})]}),"\n",(0,s.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,s.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Finch.Generators\\src\\DB\\obj\\GX\\Finch.Generators\\Finch.Generators.SqlserverGenerator\\SqlserverConnectionExtensions.Query.g.cs",label:"SqlserverConnectionExtensions.Query.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\n\nnamespace DB;\n\npublic static partial class SqlserverConnectionExtensions\n{\n    public static global::System.Collections.Generic.List<T> Query<T>(\n        this global::Microsoft.Data.SqlClient.SqlConnection connection,\n        string sql)\n        where T : new()\n    {\n        connection.Open();\n\n        var items = new global::System.Collections.Generic.List<T>();\n        using var command = new global::Microsoft.Data.SqlClient.SqlCommand(sql, connection);\n        using var reader = command.ExecuteReader();\n        while (reader.Read())\n        {\n            T item = new T();\n\n            SqlserverObjectMapper.Map(item, reader);\n            items.Add(item);\n        }\n        \n        return items;\n    }\n}\n"})})}),(0,s.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Finch.Generators\\src\\DB\\obj\\GX\\Finch.Generators\\Finch.Generators.SqlserverGenerator\\SqlserverConnectionExtensions.QueryAsync.g.cs",label:"SqlserverConnectionExtensions.QueryAsync.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\n\nnamespace DB;\n\npublic static partial class SqlserverConnectionExtensions\n{\n    public static async global::System.Threading.Tasks.Task<global::System.Collections.Generic.List<T>> QueryAsync<T>(\n        this global::Microsoft.Data.SqlClient.SqlConnection connection,\n        string sql,\n        CancellationToken cancellationToken = default)\n        where T : new()\n    {\n        await connection.OpenAsync(cancellationToken);\n\n        var items = new global::System.Collections.Generic.List<T>();\n        await using var command = new global::Microsoft.Data.SqlClient.SqlCommand(sql, connection);\n        await using var reader = await command.ExecuteReaderAsync(cancellationToken);\n        while (await reader.ReadAsync(cancellationToken))\n        {\n            T item = new T();\n\n            SqlserverObjectMapper.Map(item, reader);\n            items.Add(item);\n        }\n        \n        return items;\n    }\n}\n"})})}),(0,s.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Finch.Generators\\src\\DB\\obj\\GX\\Finch.Generators\\Finch.Generators.SqlserverGenerator\\SqlserverConnectionExtensions.QueryAsyncWithParameter.g.cs",label:"SqlserverConnectionExtensions.QueryAsyncWithParameter.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\n\nnamespace DB;\n\npublic static partial class SqlserverConnectionExtensions\n{\n    public static async global::System.Threading.Tasks.Task<global::System.Collections.Generic.List<T>> QueryAsync<T>(\n        this global::Microsoft.Data.SqlClient.SqlConnection connection,\n        string sql,\n        CancellationToken cancellationToken,\n        params global::Microsoft.Data.SqlClient.SqlParameter[] parameters)\n        where T : new()\n    {\n        await connection.OpenAsync(cancellationToken);\n\n        var items = new global::System.Collections.Generic.List<T>();\n        await using var command = new global::Microsoft.Data.SqlClient.SqlCommand(sql, connection);\n        command.Parameters.AddRange(parameters);\n        await using var reader = await command.ExecuteReaderAsync(cancellationToken);\n        while (await reader.ReadAsync(cancellationToken))\n        {\n            T item = new T();\n\n            SqlserverObjectMapper.Map(item, reader);\n            items.Add(item);\n        }\n        \n        return items;\n    }\n}\n"})})}),(0,s.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Finch.Generators\\src\\DB\\obj\\GX\\Finch.Generators\\Finch.Generators.SqlserverGenerator\\SqlserverObjectMapper.g.cs",label:"SqlserverObjectMapper.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\n\nusing System;\nusing System.Collections.Generic;\n\nnamespace DB;\n\ninternal class SqlserverObjectMapper\n{\n    public static void Map<T>(T item, global::Microsoft.Data.SqlClient.SqlDataReader reader)\n    {\n        if(typeof(T) == typeof(DB.Person))\n        {\n            SqlserverPropertyMapper.Map(item as DB.Person, reader);\n            return;\n        }\n    }\n}\n\n"})})}),(0,s.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Finch.Generators\\src\\DB\\obj\\GX\\Finch.Generators\\Finch.Generators.SqlserverGenerator\\SqlserverPropertyMapper.Person.g.cs",label:"SqlserverPropertyMapper.Person.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n\nusing System;\n\nnamespace DB;\n\ninternal partial class SqlserverPropertyMapper\n{\n    public static void Map(\n        DB.Person item,\n        global::Microsoft.Data.SqlClient.SqlDataReader reader)\n    {\n         item.Id = Convert.ToInt32(reader["Id"]);\n\n         item.Name = reader["Name"].ToString();\n\n         item.Age = Convert.ToInt32(reader["Age"]);\n    }\n}\n'})})})]}),"\n",(0,s.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,s.jsx)(n.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(60074).A+"",children:"Download Example project Finch.Generators "})})}),"\n",(0,s.jsx)(n.h3,{id:"share-finchgenerators",children:"Share Finch.Generators"}),"\n",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFinch.Generators&quote=Finch.Generators",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFinch.Generators&text=Finch.Generators:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFinch.Generators",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFinch.Generators&title=Finch.Generators",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFinch.Generators&title=Finch.Generators&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFinch.Generators",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Finch.Generators",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Finch.Generators"})}),"\n",(0,s.jsx)(n.p,{children:"aaa"}),"\n",(0,s.jsx)(l.Ay,{})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},60074:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/files/Finch.Generators-743332abae9a559b66c1b5c976074594.zip"}}]);