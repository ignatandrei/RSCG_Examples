"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[5610],{4137:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=p(a),u=l,h=m["".concat(s,".").concat(u)]||m[u]||c[u]||r;return a?n.createElement(h,i(i({ref:t},d),{},{components:a})):n.createElement(h,i({ref:t},d))}));function h(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,i=new Array(r);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2250:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var n=a(7462),l=(a(7294),a(4137));const r={},i="RazorBlade",o={unversionedId:"RSCG-Examples/RazorBlade_readme",id:"RSCG-Examples/RazorBlade_readme",title:"RazorBlade",description:"Build",source:"@site/docs/RSCG-Examples/RazorBlade_readme.md",sourceDirName:"RSCG-Examples",slug:"/RSCG-Examples/RazorBlade_readme",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/RazorBlade_readme",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RSCG_Utils",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/RSCG_Utils_readme"},next:{title:"Rocks",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/Rocks_readme"}},s={},p=[{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2},{value:"With a model",id:"with-a-model",level:3},{value:"Documentation",id:"documentation",level:2},{value:"Base template classes",id:"base-template-classes",level:3},{value:"Writing templates",id:"writing-templates",level:3},{value:"Executing templates",id:"executing-templates",level:3},{value:"MSBuild",id:"msbuild",level:3},{value:"Removing the dependency on RazorBlade",id:"removing-the-dependency-on-razorblade",level:3}],d={toc:p},m="wrapper";function c(e){let{components:t,...a}=e;return(0,l.kt)(m,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"razorblade"},"RazorBlade"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/ltrzesniewski/RazorBlade/actions?query=workflow%3ABuild"},(0,l.kt)("img",{parentName:"a",src:"https://github.com/ltrzesniewski/RazorBlade/workflows/Build/badge.svg",alt:"Build"})),"\n",(0,l.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RazorBlade"},(0,l.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/RazorBlade.svg?logo=NuGet",alt:"NuGet package"})),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/ltrzesniewski/RazorBlade/releases"},(0,l.kt)("img",{parentName:"a",src:"https://img.shields.io/github/release/ltrzesniewski/RazorBlade.svg?logo=GitHub",alt:"GitHub release"})),"\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/ltrzesniewski/RazorBlade/blob/master/LICENSE"},(0,l.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/license-MIT-blue.svg",alt:"License"}))),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"The sharpest part of the razor.")),(0,l.kt)("p",null,"Compile Razor templates at build-time without a dependency on ASP.NET."),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("p",null,"This package will generate a template class for every ",(0,l.kt)("inlineCode",{parentName:"p"},".cshtml")," file in your project."),(0,l.kt)("p",null,"The generated classes will inherit from ",(0,l.kt)("inlineCode",{parentName:"p"},"RazorBlade.HtmlTemplate")," by default, though it is advised to specify the base class explicitly to get the best IDE experience:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Razor"},"@inherits RazorBlade.HtmlTemplate\n")),(0,l.kt)("p",null,"A version with a model is also available for convenience. The following will add a ",(0,l.kt)("inlineCode",{parentName:"p"},"Model")," property and a constructor with a ",(0,l.kt)("inlineCode",{parentName:"p"},"TModel")," parameter:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Razor"},"@inherits RazorBlade.HtmlTemplate<TModel>\n")),(0,l.kt)("p",null,"Further ",(0,l.kt)("a",{parentName:"p",href:"#Documentation"},"documentation")," is provided below."),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("p",null,"The following template, in the ",(0,l.kt)("inlineCode",{parentName:"p"},"TestTemplate.cshtml")," file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Razor"},"@inherits RazorBlade.HtmlTemplate\n\nHello, <i>@Name</i>!\n\n@functions\n{\n    public string? Name { get; set; }\n}\n")),(0,l.kt)("p",null,"Will generate the following class in your project:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-C#"},"internal partial class TestTemplate : RazorBlade.HtmlTemplate\n{\n    // ...\n    public string? Name { get; set; }\n    // ...\n}\n")),(0,l.kt)("p",null,"That you can use like the following:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-C#"},'var template = new TestTemplate\n{\n    Name = "World"\n};\n\nvar result = template.Render();\n')),(0,l.kt)("h3",{id:"with-a-model"},"With a model"),(0,l.kt)("p",null,"A similar template with a model would be:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-Razor"},"@using MyApplication.Models\n@inherits RazorBlade.HtmlTemplate<GreetingModel>\n\nHello, <i>@Model.Name</i>!\n")),(0,l.kt)("p",null,"Instantiating the generated class requires a model argument:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-C#"},'var model = new GreetingModel { Name = "World" };\nvar template = new TestTemplate(model);\nvar result = template.Render();\n')),(0,l.kt)("h2",{id:"documentation"},"Documentation"),(0,l.kt)("h3",{id:"base-template-classes"},"Base template classes"),(0,l.kt)("p",null,"For HTML templates, specify one of the following base classes with an ",(0,l.kt)("inlineCode",{parentName:"p"},"@inherits")," directive:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RazorBlade.HtmlTemplate")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RazorBlade.HtmlTemplate<TModel>"))),(0,l.kt)("p",null,"If you'd like to write a plain text template (which never escapes HTML), the following classes are available:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RazorBlade.PlainTextTemplate")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"RazorBlade.PlainTextTemplate<TModel>"))),(0,l.kt)("p",null,"They all derive from ",(0,l.kt)("inlineCode",{parentName:"p"},"RazorBlade.RazorTemplate"),", which provides the base functionality."),(0,l.kt)("p",null,"You can also write your own base classes. Marking a constructor with ",(0,l.kt)("inlineCode",{parentName:"p"},"[TemplateConstructor]")," will forward it to the generated template class. "),(0,l.kt)("h3",{id:"writing-templates"},"Writing templates"),(0,l.kt)("p",null,"HTML escaping can be avoided by using the ",(0,l.kt)("inlineCode",{parentName:"p"},"@Html.Raw(value)")," method, just like in ASP.NET. The ",(0,l.kt)("inlineCode",{parentName:"p"},"IEncodedContent")," interface represents content which does not need to be escaped. The ",(0,l.kt)("inlineCode",{parentName:"p"},"HtmlString")," class is a simple implementation of this interface."),(0,l.kt)("p",null,"Templates can be included in other templates by evaluating them, since they implement ",(0,l.kt)("inlineCode",{parentName:"p"},"IEncodedContent"),". For instance, a ",(0,l.kt)("inlineCode",{parentName:"p"},"Footer")," template can be included by writing ",(0,l.kt)("inlineCode",{parentName:"p"},"@(new Footer())"),". Remember to always create a new instance of the template to include, even if it doesn't contain custom code, as templates are stateful and not thread-safe."),(0,l.kt)("p",null,"The namespace of the generated class can be customized with the ",(0,l.kt)("inlineCode",{parentName:"p"},"@namespace")," directive. The default value is deduced from the file location."),(0,l.kt)("h3",{id:"executing-templates"},"Executing templates"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"RazorTemplate")," base class provides ",(0,l.kt)("inlineCode",{parentName:"p"},"Render")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"RenderAsync")," methods to execute the template."),(0,l.kt)("p",null,"Templates are stateful and not thread-safe, so it is advised to always create new instances of the templates to render."),(0,l.kt)("h3",{id:"msbuild"},"MSBuild"),(0,l.kt)("p",null,"The source generator will process ",(0,l.kt)("inlineCode",{parentName:"p"},"RazorBlade")," MSBuild items which have the ",(0,l.kt)("inlineCode",{parentName:"p"},".cshtml")," file extension."),(0,l.kt)("p",null,"By default, all ",(0,l.kt)("inlineCode",{parentName:"p"},".cshtml")," files are included, unless one of the ",(0,l.kt)("inlineCode",{parentName:"p"},"EnableDefaultRazorBladeItems")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"EnableDefaultItems")," properties are set to ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),". You can also manually customize this set."),(0,l.kt)("h3",{id:"removing-the-dependency-on-razorblade"},"Removing the dependency on RazorBlade"),(0,l.kt)("p",null,"RazorBlade makes it possible to remove the dependency on its runtime assembly. This could be useful for library projects which should be self-contained, with no dependencies on external packages."),(0,l.kt)("p",null,"This mode is enabled by default when the ",(0,l.kt)("inlineCode",{parentName:"p"},"PackageReference")," of RazorBlade has the ",(0,l.kt)("inlineCode",{parentName:"p"},'PrivateAssets="all"')," attribute. In order to avoid compilation warnings, the assembly reference also needs to be explicitly excluded with ",(0,l.kt)("inlineCode",{parentName:"p"},'ExcludeAssets="compile;runtime"'),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-XML"},'<PackageReference Include="RazorBlade" Version="..." ExcludeAssets="compile;runtime" PrivateAssets="all" />\n')),(0,l.kt)("p",null,"A source generator will then embed an ",(0,l.kt)("inlineCode",{parentName:"p"},"internal")," version of the RazorBlade library in the target project. This behavior can also be controlled by setting the ",(0,l.kt)("inlineCode",{parentName:"p"},"RazorBladeEmbeddedLibrary")," MSBuild property to ",(0,l.kt)("inlineCode",{parentName:"p"},"true")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),"."))}c.isMDXComponent=!0}}]);