"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[2422],{6921:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>b,frontMatter:()=>g,metadata:()=>c,toc:()=>p});var n=o(7462),i=(o(7294),o(4137)),s=o(3992),r=o(425),a=o(8839);const g={sidebar_position:60,title:"RSCG - Microsoft.Extensions.Logging",description:"Logging defined and compiled",slug:"/Microsoft.Extensions.Logging"},l="Microsoft.Extensions.Logging  by Microsoft",c={unversionedId:"RSCG-Examples/006Microsoft.Extensions.Logging",id:"RSCG-Examples/006Microsoft.Extensions.Logging",title:"RSCG - Microsoft.Extensions.Logging",description:"Logging defined and compiled",source:"@site/docs/RSCG-Examples/006Microsoft.Extensions.Logging.md",sourceDirName:"RSCG-Examples",slug:"/Microsoft.Extensions.Logging",permalink:"/RSCG_Examples/v2/docs/Microsoft.Extensions.Logging",draft:!1,tags:[],version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60,title:"RSCG - Microsoft.Extensions.Logging",description:"Logging defined and compiled",slug:"/Microsoft.Extensions.Logging"},sidebar:"tutorialSidebar",previous:{title:"RSCG - System.Text.RegularExpressions",permalink:"/RSCG_Examples/v2/docs/System.Text.RegularExpressions"},next:{title:"RSCG - CommunityToolkit.Mvvm",permalink:"/RSCG_Examples/v2/docs/CommunityToolkit.Mvvm"}},m={},p=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example",id:"download-example",level:3},{value:"Download PDF",id:"download-pdf",level:3},{value:"Share Microsoft.Extensions.Logging",id:"share-microsoftextensionslogging",level:3}],u={toc:p},d="wrapper";function b(e){let{components:t,...g}=e;return(0,i.kt)(d,(0,n.Z)({},u,g,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"microsoftextensionslogging--by-microsoft"},"Microsoft.Extensions.Logging  by Microsoft"),(0,i.kt)(a.Z,{toc:p,mdxType:"TOCInline"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Microsoft.Extensions.Logging/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Microsoft.Extensions.Logging?label=Microsoft.Extensions.Logging",alt:"Nuget"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dotnet/runtime"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/dotnet/runtime?label=updated",alt:"GitHub last commit"})),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/dotnet/runtime?style=social",alt:"GitHub Repo stars"})),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("h3",{id:"info"},"Info"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Name: ",(0,i.kt)("strong",{parentName:"p"},"Microsoft.Extensions.Logging")),(0,i.kt)("p",{parentName:"admonition"},"Author: Microsoft"),(0,i.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/Microsoft.Extensions.Logging/"},"https://www.nuget.org/packages/Microsoft.Extensions.Logging/")),"   "),(0,i.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,i.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/dotnet/core/extensions/logger-message-generator-generators/"},"https://learn.microsoft.com/en-us/dotnet/core/extensions/logger-message-generator-generators/")),(0,i.kt)("p",{parentName:"admonition"},"Source : ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dotnet/runtime"},"https://github.com/dotnet/runtime"))),(0,i.kt)("h3",{id:"about"},"About"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Logging defined and compiled")),(0,i.kt)("h2",{id:"how-to-use"},"How to use"),(0,i.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,i.kt)("p",null,"This is the CSharp Project that references ",(0,i.kt)("strong",{parentName:"p"},"Microsoft.Extensions.Logging")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GeneratedX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n    <ItemGroup>\n        <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="7.0.0" />\n    </ItemGroup>\n</Project>\n\n'))),(0,i.kt)(r.Z,{value:"Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"Microsoft.Extensions.Logging")," in ",(0,i.kt)("em",{parentName:"p"},"Program.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'using System.Text.Json;\nusing Microsoft.Extensions.Logging;\n\nusing ILoggerFactory loggerFactory = LoggerFactory.Create(\n    builder =>\n    //https://learn.microsoft.com/en-us/dotnet/core/extensions/console-log-formatter\n    builder.AddSimpleConsole()\n    //builder.AddJsonConsole(\n    //    options =>\n    //    options.JsonWriterOptions = new JsonWriterOptions()\n    //    {\n    //        Indented = true\n    //    })\n    ) ;\n\nILogger<SampleObject> logger = loggerFactory.CreateLogger<SampleObject>();\nlogger.LogInformation("test");\n//https://learn.microsoft.com/en-us/dotnet/core/extensions/logger-message-generator\n(new LoggingSample(logger)).TestLogging();\nfile readonly record struct SampleObject { }\n\n'))),(0,i.kt)(r.Z,{value:"LogDemo.cs",label:"LogDemo.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"Microsoft.Extensions.Logging")," in ",(0,i.kt)("em",{parentName:"p"},"LogDemo.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'using Microsoft.Extensions.Logging;\n\npublic partial class LoggingSample\n{\n    private readonly ILogger _logger;\n\n    public LoggingSample(ILogger logger)\n    {\n        _logger = logger;\n    }\n\n    [LoggerMessage(\n        EventId = 20,\n        Level = LogLevel.Critical,\n        Message = "Value is {value:E}")]\n    public static partial void UsingFormatSpecifier(\n        ILogger logger, double value);\n\n    [LoggerMessage(\n        EventId = 9,\n        Level = LogLevel.Trace,\n        Message = "Fixed message",\n        EventName = "CustomEventName")]\n    public partial void LogWithCustomEventName();\n\n    [LoggerMessage(\n        EventId = 10,\n        Message = "Welcome to {city} {province}!")]\n    public partial void LogWithDynamicLogLevel(\n        string city, LogLevel level, string province);\n\n    public void  TestLogging()\n    {\n        LogWithCustomEventName();\n\n        LogWithDynamicLogLevel("Vancouver", LogLevel.Warning, "BC");\n        LogWithDynamicLogLevel("Vancouver", LogLevel.Information, "BC");\n\n        UsingFormatSpecifier(_logger, 12345.6789);\n    }\n}\n')))),(0,i.kt)("h3",{id:"generated-files"},"Generated Files"),(0,i.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GeneratedX"),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"LoggerMessage.g.cs001",label:"LoggerMessage.g.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'// <auto-generated/>\n#nullable enable\n\n    partial class LoggingSample\n    {\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "7.0.7.1805")]\n        private static readonly global::System.Action<global::Microsoft.Extensions.Logging.ILogger, global::System.Double, global::System.Exception?> __UsingFormatSpecifierCallback =\n            global::Microsoft.Extensions.Logging.LoggerMessage.Define<global::System.Double>(global::Microsoft.Extensions.Logging.LogLevel.Critical, new global::Microsoft.Extensions.Logging.EventId(20, nameof(UsingFormatSpecifier)), "Value is {value:E}", new global::Microsoft.Extensions.Logging.LogDefineOptions() { SkipEnabledCheck = true }); \n\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "7.0.7.1805")]\n        public static partial void UsingFormatSpecifier(global::Microsoft.Extensions.Logging.ILogger logger, global::System.Double value)\n        {\n            if (logger.IsEnabled(global::Microsoft.Extensions.Logging.LogLevel.Critical))\n            {\n                __UsingFormatSpecifierCallback(logger, value, null);\n            }\n        }\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "7.0.7.1805")]\n        private static readonly global::System.Action<global::Microsoft.Extensions.Logging.ILogger, global::System.Exception?> __LogWithCustomEventNameCallback =\n            global::Microsoft.Extensions.Logging.LoggerMessage.Define(global::Microsoft.Extensions.Logging.LogLevel.Trace, new global::Microsoft.Extensions.Logging.EventId(9, "CustomEventName"), "Fixed message", new global::Microsoft.Extensions.Logging.LogDefineOptions() { SkipEnabledCheck = true }); \n\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "7.0.7.1805")]\n        public partial void LogWithCustomEventName()\n        {\n            if (_logger.IsEnabled(global::Microsoft.Extensions.Logging.LogLevel.Trace))\n            {\n                __LogWithCustomEventNameCallback(_logger, null);\n            }\n        }\n        /// <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "7.0.7.1805")]\n        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Never)]\n        private readonly struct __LogWithDynamicLogLevelStruct : global::System.Collections.Generic.IReadOnlyList<global::System.Collections.Generic.KeyValuePair<string, object?>>\n        {\n            private readonly global::System.String _city;\n            private readonly global::System.String _province;\n\n            public __LogWithDynamicLogLevelStruct(global::System.String city, global::System.String province)\n            {\n                this._city = city;\n                this._province = province;\n\n            }\n\n            public override string ToString()\n            {\n                var city = this._city;\n                var province = this._province;\n\n                return $"Welcome to {city} {province}!";\n            }\n\n            public static readonly global::System.Func<__LogWithDynamicLogLevelStruct, global::System.Exception?, string> Format = (state, ex) => state.ToString();\n\n            public int Count => 3;\n\n            public global::System.Collections.Generic.KeyValuePair<string, object?> this[int index]\n            {\n                get => index switch\n                {\n                    0 => new global::System.Collections.Generic.KeyValuePair<string, object?>("city", this._city),\n                    1 => new global::System.Collections.Generic.KeyValuePair<string, object?>("province", this._province),\n                    2 => new global::System.Collections.Generic.KeyValuePair<string, object?>("{OriginalFormat}", "Welcome to {city} {province}!"),\n\n                    _ => throw new global::System.IndexOutOfRangeException(nameof(index)),  // return the same exception LoggerMessage.Define returns in this case\n                };\n            }\n\n            public global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<string, object?>> GetEnumerator()\n            {\n                for (int i = 0; i < 3; i++)\n                {\n                    yield return this[i];\n                }\n            }\n\n            global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator() => GetEnumerator();\n        }\n\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Extensions.Logging.Generators", "7.0.7.1805")]\n        public partial void LogWithDynamicLogLevel(global::System.String city, global::Microsoft.Extensions.Logging.LogLevel level, global::System.String province)\n        {\n            if (_logger.IsEnabled(level))\n            {\n                _logger.Log(\n                    level,\n                    new global::Microsoft.Extensions.Logging.EventId(10, nameof(LogWithDynamicLogLevel)),\n                    new __LogWithDynamicLogLevelStruct(city, province),\n                    null,\n                    __LogWithDynamicLogLevelStruct.Format);\n            }\n        }\n    }\n')))),(0,i.kt)("h2",{id:"usefull"},"Usefull"),(0,i.kt)("h3",{id:"download-example"},"Download Example"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{target:"_blank",href:o(2351).Z},"Download Example Microsoft.Extensions.Logging "))),(0,i.kt)("h3",{id:"download-pdf"},"Download PDF"),(0,i.kt)("p",null,(0,i.kt)("a",{target:"_blank",href:o(5593).Z},"Download PDF Microsoft.Extensions.Logging ")),(0,i.kt)("h3",{id:"share-microsoftextensionslogging"},"Share Microsoft.Extensions.Logging"),(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Logging&quote=Microsoft.Extensions.Logging",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Logging&text=Microsoft.Extensions.Logging:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Logging",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Logging&title=Microsoft.Extensions.Logging",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Logging&title=Microsoft.Extensions.Logging&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Extensions.Logging",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Microsoft.Extensions.Logging"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Microsoft.Extensions.Logging")))}b.isMDXComponent=!0},5593:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/files/Microsoft.Extensions.Logging-b917226f2de5c321a7472d172fd2eadc.pdf"},2351:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/files/Microsoft.Extensions.Logging-46351a68f32127e10ce4f725df999bb0.zip"}}]);