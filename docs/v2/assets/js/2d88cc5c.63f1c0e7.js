"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[7127],{17773:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/files/StaticReflection-236be561d1853a3fb9df9b8b2d6e3f08.zip"},66446:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>f,frontMatter:()=>m,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"RSCG-Examples/StaticReflection","title":"75 - StaticReflection","description":"Call prop/methods on classes","source":"@site/docs/RSCG-Examples/StaticReflection.md","sourceDirName":"RSCG-Examples","slug":"/StaticReflection","permalink":"/RSCG_Examples/v2/docs/StaticReflection","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":750,"frontMatter":{"sidebar_position":750,"title":"75 - StaticReflection","description":"Call prop/methods on classes","slug":"/StaticReflection"},"sidebar":"tutorialSidebar","previous":{"title":"74 - CredFetoEnum","permalink":"/RSCG_Examples/v2/docs/CredFetoEnum"},"next":{"title":"76 - UnitGenerator","permalink":"/RSCG_Examples/v2/docs/UnitGenerator"}}');var s=n(74848),l=n(28453),o=n(11470),a=n(19365),c=n(14252),r=n(82304);const m={sidebar_position:750,title:"75 - StaticReflection",description:"Call prop/methods on classes",slug:"/StaticReflection"},u="StaticReflection  by Cricle",p={},d=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Fast use",id:"fast-use",level:2},{value:"Benchmarks",id:"benchmarks",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share StaticReflection",id:"share-staticreflection",level:3},...r.RM];function S(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"staticreflection--by-cricle",children:"StaticReflection  by Cricle"})}),"\n",(0,s.jsx)(c.A,{toc:d}),"\n",(0,s.jsx)(t.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/FastStaticReflection/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/FastStaticReflection?label=FastStaticReflection",alt:"Nuget"})}),(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/FastStaticReflection.CodeGen/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/FastStaticReflection.CodeGen?label=FastStaticReflection.CodeGen",alt:"Nuget"})}),"\n",(0,s.jsx)(t.a,{href:"https://github.com/Cricle/StaticReflection/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/github/last-commit/Cricle/StaticReflection?label=updated",alt:"GitHub last commit"})}),"\n",(0,s.jsx)(t.img,{src:"https://img.shields.io/github/stars/Cricle/StaticReflection?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,s.jsx)(t.h2,{id:"details",children:"Details"}),"\n",(0,s.jsx)(t.h3,{id:"info",children:"Info"}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsxs)(t.p,{children:["Name: ",(0,s.jsx)(t.strong,{children:"StaticReflection"})]}),(0,s.jsx)(t.p,{children:"Use roslyn to make relection static, autogen code for type reflection"}),(0,s.jsx)(t.p,{children:"Author: Cricle"}),(0,s.jsxs)(t.p,{children:["NuGet:\n",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/FastStaticReflection/",children:"https://www.nuget.org/packages/FastStaticReflection/"})})]}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/FastStaticReflection.CodeGen/",children:"https://www.nuget.org/packages/FastStaticReflection.CodeGen/"})})}),(0,s.jsxs)(t.p,{children:["You can find more details at ",(0,s.jsx)(t.a,{href:"https://github.com/Cricle/StaticReflection/",children:"https://github.com/Cricle/StaticReflection/"})]}),(0,s.jsxs)(t.p,{children:["Source: ",(0,s.jsx)(t.a,{href:"https://github.com/Cricle/StaticReflection/",children:"https://github.com/Cricle/StaticReflection/"})]})]}),"\n",(0,s.jsx)(t.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,s.jsxs)(t.admonition,{type:"note",children:[(0,s.jsx)("h2",{align:"center",children:(0,s.jsx)(t.p,{children:"StaticReflection"})}),(0,s.jsx)("h3",{align:"center",children:(0,s.jsx)(t.p,{children:"A fast, easy, scalable static reflection."})}),(0,s.jsx)(t.h2,{id:"fast-use",children:"Fast use"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:["Install from nuget ",(0,s.jsx)(t.code,{children:"FastStaticReflection"}),", ",(0,s.jsx)(t.code,{children:"FastStaticReflection.CodeGen"})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"Write assembly class"}),"\n"]}),"\n"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:"[StaticReflectionAssembly]//for generate assembly code\npublic partial class C\n{\n}\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Tag static type reflection"}),"\n"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:"//You can Tag at assembly\n[assembly: StaticReflection(Type = typeof(StaticReflection.Sample.A))]\n\n//Or Property\n[StaticReflection]\n[StaticReflection(Type =typeof(B))]\npublic A a { get; set; }\n\n//Or class\n[StaticReflection]\npublic class A\n{\n    //....\n}\n"})}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"For use"}),"\n"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:'internal class Program\n{\n    static void Main(string[] args)\n    {\n        var b=new Student();\n        var @class=C.Default.Types.First(x => x.Name == "Student");\n        @class.SetProperty(b, "Id", 1);//Reflection get property value\n        Console.WriteLine("Id: "+@class.GetProperty(b, "Id"));//Reflection set property value\n        var @event = (IEventTransfer)@class.Events.First(x => x.Name == "AlreadyGoSchool");\n        using (var eventScope = @event.CreateScope(b))\n        {\n            eventScope.Start();\n            eventScope.EventTransfed += Instance_EventTransfed;//Reflection listen event\n            var method = @class.Methods.First(x => x.Name == "GoToSchool");\n            Console.WriteLine("GoToSchool:" + method.InvokeUsualMethod(b));//Reflection call method\n        }\n        var obj = @class.Constructors.First(x => x.ArgumentTypes.Count == 0);\n        var inst = obj.InvokeUsualMethod(null);//Reflection create object\n        Console.WriteLine(inst);\n    }\n\n    private static void Instance_EventTransfed(object? sender, EventTransferEventArgs e)\n    {\n        Console.WriteLine("EventRaise: " + e.Args[0]);\n    }\n}\n[StaticReflection]\npublic record class Student\n{\n    public int Id { get; set; }\n\n    public string? Name { get; set; }\n\n    public event EventHandler<Student>? AlreadyGoSchool;\n\n    public int GoToSchool()\n    {\n        AlreadyGoSchool?.Invoke(this, this);\n        return Id;\n    }\n}\n[StaticReflectionAssembly]\npublic partial class C\n{\n}\n\n'})}),(0,s.jsx)(t.h2,{id:"benchmarks",children:"Benchmarks"}),(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/Cricle/StaticReflection//blob/main/test/Benchmarks.md",children:"Benchmarks"})})]}),"\n",(0,s.jsx)(t.h3,{id:"about",children:"About"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Call prop/methods on classes"})}),"\n",(0,s.jsx)(t.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,s.jsx)(t.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,s.jsxs)(o.A,{children:[(0,s.jsxs)(a.A,{value:"csproj",label:"CSharp Project",children:[(0,s.jsxs)(t.p,{children:["This is the CSharp Project that references ",(0,s.jsx)(t.strong,{children:"StaticReflection"})]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-xml",metastring:"showLineNumbers {11}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="FastStaticReflection" Version="1.0.0-preview.3" />\n    <PackageReference Include="FastStaticReflection.CodeGen" Version="1.0.0-preview.3" />\n  </ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n</Project>\n\n'})})]}),(0,s.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\StaticReflection\\src\\StaticReflectionDemo\\Program.cs",label:"Program.cs",children:[(0,s.jsxs)(t.p,{children:["This is the use of ",(0,s.jsx)(t.strong,{children:"StaticReflection"})," in ",(0,s.jsx)(t.em,{children:"Program.cs"})]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using StaticReflection;\nusing StaticReflectionDemo;\n\nvar p = new Person();\n\nPersonReflection.Instance.SetProperty(p, "FirstName","Andrei");\nPersonReflection.Instance.SetProperty(p, "LastName", "Ignat");\n\nConsole.WriteLine(p.Name());\n'})})]}),(0,s.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\StaticReflection\\src\\StaticReflectionDemo\\Person.cs",label:"Person.cs",children:[(0,s.jsxs)(t.p,{children:["This is the use of ",(0,s.jsx)(t.strong,{children:"StaticReflection"})," in ",(0,s.jsx)(t.em,{children:"Person.cs"})]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using StaticReflection.Annotions;\n\nnamespace StaticReflectionDemo;\n[StaticReflection]\ninternal partial class Person\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n    public string Name()\n    {\n        return $"{FirstName} {LastName}";\n    }\n}\n\n'})})]})]}),"\n",(0,s.jsx)(t.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,s.jsx)(t.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,s.jsx)(o.A,{children:(0,s.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\StaticReflection\\src\\StaticReflectionDemo\\obj\\GX\\StaticReflection.CodeGen\\StaticReflection.CodeGen.Generators.StaticReflectionGenerator\\PersonReflection.g.cs",label:"PersonReflection.g.cs",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n#pragma warning disable CS9082\n#pragma warning disable CS8669\nnamespace StaticReflectionDemo\n{\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("StaticReflection.CodeGen", "1.0.0")]\n    [global::System.Diagnostics.DebuggerStepThrough]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    internal sealed class PersonReflection : StaticReflection.ITypeDefine\n    {\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("StaticReflection.CodeGen", "1.0.0")]\n        [global::System.Diagnostics.DebuggerStepThrough]\n        [global::System.Runtime.CompilerServices.CompilerGenerated]\n        internal sealed class Person0PReflection : StaticReflection.IMemberInvokeDefine<StaticReflectionDemo.Person, string>, StaticReflection.IPropertyDefine, StaticReflection.IMemberAnonymousInvokeDefine\n        {\n            public static readonly Person0PReflection Instance = new Person0PReflection();\n            public System.Type DeclareType { get; } = typeof(StaticReflectionDemo.Person);\n            public System.String Name { get; } = "FirstName";\n            public System.String MetadataName { get; } = "FirstName";\n            public System.Boolean IsVirtual { get; } = false;\n            public System.Boolean IsStatic { get; } = false;\n            public System.Boolean IsOverride { get; } = false;\n            public System.Boolean IsAbstract { get; } = false;\n            public System.Boolean IsSealed { get; } = false;\n            public System.Boolean IsDefinition { get; } = true;\n            public System.Boolean IsExtern { get; } = false;\n            public System.Boolean IsImplicitlyDeclared { get; } = false;\n            public System.Boolean CanBeReferencedByName { get; } = true;\n            public System.Boolean IsPublic { get; } = true;\n            public System.Boolean IsPrivate { get; } = false;\n            public System.Boolean IsProtected { get; } = false;\n            public System.Boolean IsInternal { get; } = false;\n            public System.Type PropertyType { get; } = typeof(string);\n            public System.Boolean CanRead { get; } = true;\n            public System.Boolean CanWrite { get; } = true;\n            public System.Boolean IsRequired { get; } = false;\n            public System.Boolean IsWithEvents { get; } = false;\n            public System.Boolean ReturnsByRef { get; } = false;\n            public System.Boolean ReturnsByRefReadonly { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> GetterAttributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> SetterAttributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> Attributes { get; } = new System.Attribute[]\n            {\n            };\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public string GetValue(Person instance)\n            {\n                return instance.FirstName;\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public void SetValue(Person instance, string value)\n            {\n                instance.FirstName = value;\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public void SetValueAnonymous(object instance, object value)\n            {\n                SetValue((StaticReflectionDemo.Person)instance, (string)value);\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public object GetValueAnonymous(object instance)\n            {\n                return (object)GetValue((StaticReflectionDemo.Person)instance);\n            }\n        }\n\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("StaticReflection.CodeGen", "1.0.0")]\n        [global::System.Diagnostics.DebuggerStepThrough]\n        [global::System.Runtime.CompilerServices.CompilerGenerated]\n        internal sealed class Person1PReflection : StaticReflection.IMemberInvokeDefine<StaticReflectionDemo.Person, string>, StaticReflection.IPropertyDefine, StaticReflection.IMemberAnonymousInvokeDefine\n        {\n            public static readonly Person1PReflection Instance = new Person1PReflection();\n            public System.Type DeclareType { get; } = typeof(StaticReflectionDemo.Person);\n            public System.String Name { get; } = "LastName";\n            public System.String MetadataName { get; } = "LastName";\n            public System.Boolean IsVirtual { get; } = false;\n            public System.Boolean IsStatic { get; } = false;\n            public System.Boolean IsOverride { get; } = false;\n            public System.Boolean IsAbstract { get; } = false;\n            public System.Boolean IsSealed { get; } = false;\n            public System.Boolean IsDefinition { get; } = true;\n            public System.Boolean IsExtern { get; } = false;\n            public System.Boolean IsImplicitlyDeclared { get; } = false;\n            public System.Boolean CanBeReferencedByName { get; } = true;\n            public System.Boolean IsPublic { get; } = true;\n            public System.Boolean IsPrivate { get; } = false;\n            public System.Boolean IsProtected { get; } = false;\n            public System.Boolean IsInternal { get; } = false;\n            public System.Type PropertyType { get; } = typeof(string);\n            public System.Boolean CanRead { get; } = true;\n            public System.Boolean CanWrite { get; } = true;\n            public System.Boolean IsRequired { get; } = false;\n            public System.Boolean IsWithEvents { get; } = false;\n            public System.Boolean ReturnsByRef { get; } = false;\n            public System.Boolean ReturnsByRefReadonly { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> GetterAttributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> SetterAttributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> Attributes { get; } = new System.Attribute[]\n            {\n            };\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public string GetValue(Person instance)\n            {\n                return instance.LastName;\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public void SetValue(Person instance, string value)\n            {\n                instance.LastName = value;\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public void SetValueAnonymous(object instance, object value)\n            {\n                SetValue((StaticReflectionDemo.Person)instance, (string)value);\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public object GetValueAnonymous(object instance)\n            {\n                return (object)GetValue((StaticReflectionDemo.Person)instance);\n            }\n        }\n\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("StaticReflection.CodeGen", "1.0.0")]\n        [global::System.Diagnostics.DebuggerStepThrough]\n        [global::System.Runtime.CompilerServices.CompilerGenerated]\n        internal sealed class Person0MReflection : StaticReflection.IMethodDefine, StaticReflection.Invoking.IArgsMethod<StaticReflectionDemo.Person, string>, StaticReflection.Invoking.IArgs0AnonymousMethod, StaticReflection.Invoking.IUsualArgsMethod<StaticReflectionDemo.Person, string>, StaticReflection.Invoking.IUsualArgs0AnonymousMethod\n        {\n            public static readonly Person0MReflection Instance = new Person0MReflection();\n            private Person0MReflection()\n            {\n            }\n\n            public System.String Name { get; } = "Name";\n            public System.String MetadataName { get; } = "Name";\n            public System.Boolean IsVirtual { get; } = false;\n            public System.Boolean IsStatic { get; } = false;\n            public System.Boolean IsOverride { get; } = false;\n            public System.Boolean IsAbstract { get; } = false;\n            public System.Boolean IsSealed { get; } = false;\n            public System.Boolean IsDefinition { get; } = true;\n            public System.Boolean IsExtern { get; } = false;\n            public System.Boolean IsImplicitlyDeclared { get; } = false;\n            public System.Boolean CanBeReferencedByName { get; } = true;\n            public System.Boolean IsPublic { get; } = true;\n            public System.Boolean IsPrivate { get; } = false;\n            public System.Boolean IsProtected { get; } = false;\n            public System.Boolean IsInternal { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> Attributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Type DeclareType { get; } = typeof(StaticReflectionDemo.Person);\n            public System.Boolean ReturnsByRef { get; } = false;\n            public StaticReflection.StaticMethodKind MethodKind { get; } = StaticReflection.StaticMethodKind.Ordinary;\n            public StaticReflection.StaticRefKind RefKind { get; } = StaticReflection.StaticRefKind.None;\n            public StaticReflection.StaticNullableAnnotation ReturnNullableAnnotation { get; } = StaticReflection.StaticNullableAnnotation.NotAnnotated;\n            public StaticReflection.StaticNullableAnnotation ReceiverNullableAnnotation { get; } = StaticReflection.StaticNullableAnnotation.NotAnnotated;\n            public System.Boolean ReturnsByRefReadonly { get; } = false;\n            public System.Type ReturnType { get; } = typeof(string);\n            public System.Collections.Generic.IReadOnlyList<System.Type> ArgumentTypes { get; } = new System.Type[]\n            {\n            };\n            public System.Boolean IsGenericMethod { get; } = false;\n            public System.Int32 Arity { get; } = 0;\n            public System.Boolean IsExtensionMethod { get; } = false;\n            public System.Boolean IsAsync { get; } = false;\n            public System.Boolean IsVararg { get; } = false;\n            public System.Boolean IsCheckedBuiltin { get; } = false;\n            public System.Boolean HidesBaseMethodsByName { get; } = false;\n            public System.Boolean ReturnsVoid { get; } = false;\n            public System.Boolean IsReadOnly { get; } = false;\n            public System.Boolean IsInitOnly { get; } = false;\n            public System.Boolean IsPartialDefinition { get; } = false;\n            public System.Boolean IsConditional { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<StaticReflection.ITypeArgumentDefine> TypeArguments { get; } = new StaticReflection.ITypeArgumentDefine[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> ReturnTypeAttributes { get; } = new System.Attribute[]\n            {\n            };\n\n            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public \n#if !NET7_0_OR_GREATER\n            unsafe \n#endif\n            ref string Invoke(StaticReflectionDemo.Person instance)\n            {\n                ref string result = ref System.Runtime.CompilerServices.Unsafe.AsRef(instance.Name());\n                return ref result;\n            }\n\n            public \n#if !NET7_0_OR_GREATER\n            unsafe \n#endif\n            ref object InvokeAnonymous(object instance)\n            {\n                return ref System.Runtime.CompilerServices.Unsafe.AsRef<object>(Invoke((StaticReflectionDemo.Person)instance));\n            }\n\n            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public string InvokeUsual(StaticReflectionDemo.Person instance)\n            {\n                return instance.Name();\n            }\n\n            public object InvokeUsualAnonymous(object instance)\n            {\n                return InvokeUsual((StaticReflectionDemo.Person)instance);\n            }\n        }\n\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("StaticReflection.CodeGen", "1.0.0")]\n        [global::System.Diagnostics.DebuggerStepThrough]\n        [global::System.Runtime.CompilerServices.CompilerGenerated]\n        internal sealed class Person0CReflection : StaticReflection.IConstructorDefine, StaticReflection.Invoking.IArgsMethod<StaticReflectionDemo.Person, StaticReflectionDemo.Person>, StaticReflection.Invoking.IArgs0AnonymousMethod, StaticReflection.Invoking.IUsualArgsMethod<StaticReflectionDemo.Person, StaticReflectionDemo.Person>, StaticReflection.Invoking.IUsualArgs0AnonymousMethod\n        {\n            public static readonly Person0CReflection Instance = new Person0CReflection();\n            private Person0CReflection()\n            {\n            }\n\n            public System.String Name { get; } = ".ctor";\n            public System.String MetadataName { get; } = ".ctor";\n            public System.Boolean IsVirtual { get; } = false;\n            public System.Boolean IsStatic { get; } = false;\n            public System.Boolean IsOverride { get; } = false;\n            public System.Boolean IsAbstract { get; } = false;\n            public System.Boolean IsSealed { get; } = false;\n            public System.Boolean IsDefinition { get; } = true;\n            public System.Boolean IsExtern { get; } = false;\n            public System.Boolean IsImplicitlyDeclared { get; } = true;\n            public System.Boolean CanBeReferencedByName { get; } = false;\n            public System.Boolean IsPublic { get; } = true;\n            public System.Boolean IsPrivate { get; } = false;\n            public System.Boolean IsProtected { get; } = false;\n            public System.Boolean IsInternal { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> Attributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Type DeclareType { get; } = typeof(StaticReflectionDemo.Person);\n            public System.Boolean ReturnsByRef { get; } = false;\n            public StaticReflection.StaticMethodKind MethodKind { get; } = StaticReflection.StaticMethodKind.Constructor;\n            public StaticReflection.StaticRefKind RefKind { get; } = StaticReflection.StaticRefKind.None;\n            public StaticReflection.StaticNullableAnnotation ReturnNullableAnnotation { get; } = StaticReflection.StaticNullableAnnotation.NotAnnotated;\n            public StaticReflection.StaticNullableAnnotation ReceiverNullableAnnotation { get; } = StaticReflection.StaticNullableAnnotation.NotAnnotated;\n            public System.Boolean ReturnsByRefReadonly { get; } = false;\n            public System.Type ReturnType { get; } = typeof(StaticReflectionDemo.Person);\n            public System.Collections.Generic.IReadOnlyList<System.Type> ArgumentTypes { get; } = new System.Type[]\n            {\n            };\n            public System.Boolean IsGenericMethod { get; } = false;\n            public System.Int32 Arity { get; } = 0;\n            public System.Boolean IsExtensionMethod { get; } = false;\n            public System.Boolean IsAsync { get; } = false;\n            public System.Boolean IsVararg { get; } = false;\n            public System.Boolean IsCheckedBuiltin { get; } = false;\n            public System.Boolean HidesBaseMethodsByName { get; } = false;\n            public System.Boolean ReturnsVoid { get; } = true;\n            public System.Boolean IsReadOnly { get; } = false;\n            public System.Boolean IsInitOnly { get; } = false;\n            public System.Boolean IsPartialDefinition { get; } = false;\n            public System.Boolean IsConditional { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<StaticReflection.ITypeArgumentDefine> TypeArguments { get; } = new StaticReflection.ITypeArgumentDefine[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> ReturnTypeAttributes { get; } = new System.Attribute[]\n            {\n            };\n\n            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public \n#if !NET7_0_OR_GREATER\n            unsafe \n#endif\n            ref StaticReflectionDemo.Person Invoke(StaticReflectionDemo.Person instance)\n            {\n                ref StaticReflectionDemo.Person result = ref System.Runtime.CompilerServices.Unsafe.AsRef(new Person());\n                return ref result;\n            }\n\n            public \n#if !NET7_0_OR_GREATER\n            unsafe \n#endif\n            ref object InvokeAnonymous(object instance)\n            {\n                return ref System.Runtime.CompilerServices.Unsafe.AsRef<object>(Invoke((StaticReflectionDemo.Person)instance));\n            }\n\n            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public StaticReflectionDemo.Person InvokeUsual(StaticReflectionDemo.Person instance)\n            {\n                return new Person();\n            }\n\n            public object InvokeUsualAnonymous(object instance)\n            {\n                return InvokeUsual((StaticReflectionDemo.Person)instance);\n            }\n        }\n\n        public static readonly PersonReflection Instance = new PersonReflection();\n        public System.Type DeclareType { get; } = typeof(StaticReflectionDemo.Person);\n        public System.String Name { get; } = "Person";\n        public System.String MetadataName { get; } = "Person";\n        public System.Boolean IsVirtual { get; } = false;\n        public System.Boolean IsStatic { get; } = false;\n        public System.Boolean IsOverride { get; } = false;\n        public System.Boolean IsAbstract { get; } = false;\n        public System.Boolean IsSealed { get; } = false;\n        public System.Boolean IsDefinition { get; } = true;\n        public System.Boolean IsExtern { get; } = false;\n        public System.Boolean IsImplicitlyDeclared { get; } = false;\n        public System.Boolean CanBeReferencedByName { get; } = true;\n        public System.Boolean IsPublic { get; } = false;\n        public System.Boolean IsPrivate { get; } = false;\n        public System.Boolean IsProtected { get; } = false;\n        public System.Boolean IsInternal { get; } = true;\n        public System.Type? BaseType { get; } = typeof(StaticReflectionDemo.Person);\n        public System.Boolean IsReferenceType { get; } = true;\n        public System.Boolean IsValueType { get; } = false;\n        public System.Boolean IsAnonymousType { get; } = false;\n        public System.Boolean IsTupleType { get; } = false;\n        public System.Boolean IsNativeIntegerType { get; } = false;\n        public System.Boolean IsRefLikeType { get; } = false;\n        public System.Boolean IsUnmanagedType { get; } = false;\n        public System.Boolean IsReadOnly { get; } = false;\n        public System.Boolean IsRecord { get; } = false;\n        public System.Int32 TypeKind { get; } = 2;\n        public StaticReflection.StaticNullableAnnotation NullableAnnotation { get; } = StaticReflection.StaticNullableAnnotation.None;\n        public System.Collections.Generic.IReadOnlyList<System.String> Interfaces { get; } = new System.String[]\n        {\n        };\n        public System.Collections.Generic.IReadOnlyList<System.String> AllInterfaces { get; } = new System.String[]\n        {\n        };\n        public System.Collections.Generic.IReadOnlyList<System.Attribute> Attributes { get; } = new System.Attribute[]\n        {\n            new StaticReflection.Annotions.StaticReflectionAttribute()\n            {\n            }\n        };\n        public System.Collections.Generic.IReadOnlyList<StaticReflection.IPropertyDefine> Properties { get; } = new StaticReflection.IPropertyDefine[]\n        {\n            Person0PReflection.Instance,\n            Person1PReflection.Instance\n        };\n        public System.Collections.Generic.IReadOnlyList<StaticReflection.IMethodDefine> Methods { get; } = new StaticReflection.IMethodDefine[]\n        {\n            Person0MReflection.Instance\n        };\n        public System.Collections.Generic.IReadOnlyList<StaticReflection.IEventDefine> Events { get; } = new StaticReflection.IEventDefine[]\n        {\n        };\n        public System.Collections.Generic.IReadOnlyList<StaticReflection.IFieldDefine> Fields { get; } = new StaticReflection.IFieldDefine[]\n        {\n        };\n        public System.Collections.Generic.IReadOnlyList<StaticReflection.IConstructorDefine> Constructors { get; } = new StaticReflection.IConstructorDefine[]\n        {\n            Person0CReflection.Instance\n        };\n    }\n}\n'})})})}),"\n",(0,s.jsx)(t.h2,{id:"useful",children:"Useful"}),"\n",(0,s.jsx)(t.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(17773).A+"",children:"Download Example project StaticReflection "})})}),"\n",(0,s.jsx)(t.h3,{id:"share-staticreflection",children:"Share StaticReflection"}),"\n",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection&quote=StaticReflection",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection&text=StaticReflection:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection&title=StaticReflection",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection&title=StaticReflection&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/StaticReflection",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/StaticReflection"})}),"\n",(0,s.jsx)(t.p,{children:"aaa"}),"\n",(0,s.jsx)(r.Ay,{})]})}function f(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(S,{...e})}):S(e)}},82304:(e,t,n)=>{n.d(t,{Ay:()=>a,RM:()=>l});var i=n(74848),s=n(28453);const l=[{value:"Category &quot;EnhancementClass&quot; has the following generators:",id:"category-enhancementclass-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function o(e){const t={a:"a",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h3,{id:"category-enhancementclass-has-the-following-generators",children:'Category "EnhancementClass" has the following generators:'}),"\n",(0,i.jsxs)(t.p,{children:["1 ",(0,i.jsx)(t.a,{href:"/docs/ApparatusAOT",children:"ApparatusAOT"})]}),"\n",(0,i.jsxs)(t.p,{children:["2 ",(0,i.jsx)(t.a,{href:"/docs/AspectGenerator",children:"AspectGenerator"})]}),"\n",(0,i.jsxs)(t.p,{children:["3 ",(0,i.jsx)(t.a,{href:"/docs/CommonCodeGenerator",children:"CommonCodeGenerator"})]}),"\n",(0,i.jsxs)(t.p,{children:["4 ",(0,i.jsx)(t.a,{href:"/docs/Comparison",children:"Comparison"})]}),"\n",(0,i.jsxs)(t.p,{children:["5 ",(0,i.jsx)(t.a,{href:"/docs/DudNet",children:"DudNet"})]}),"\n",(0,i.jsxs)(t.p,{children:["6 ",(0,i.jsx)(t.a,{href:"/docs/Enhanced.GetTypes",children:"Enhanced.GetTypes"})]}),"\n",(0,i.jsxs)(t.p,{children:["7 ",(0,i.jsx)(t.a,{href:"/docs/FastGenericNew",children:"FastGenericNew"})]}),"\n",(0,i.jsxs)(t.p,{children:["8 ",(0,i.jsx)(t.a,{href:"/docs/Immutype",children:"Immutype"})]}),"\n",(0,i.jsxs)(t.p,{children:["9 ",(0,i.jsx)(t.a,{href:"/docs/Ling.Audit",children:"Ling.Audit"})]}),"\n",(0,i.jsxs)(t.p,{children:["10 ",(0,i.jsx)(t.a,{href:"/docs/Lombok.NET",children:"Lombok.NET"})]}),"\n",(0,i.jsxs)(t.p,{children:["11 ",(0,i.jsx)(t.a,{href:"/docs/M31.FluentAPI",children:"M31.FluentAPI"})]}),"\n",(0,i.jsxs)(t.p,{children:["12 ",(0,i.jsx)(t.a,{href:"/docs/MemberAccessor",children:"MemberAccessor"})]}),"\n",(0,i.jsxs)(t.p,{children:["13 ",(0,i.jsx)(t.a,{href:"/docs/MemoryPack",children:"MemoryPack"})]}),"\n",(0,i.jsxs)(t.p,{children:["14 ",(0,i.jsx)(t.a,{href:"/docs/Meziantou.Polyfill",children:"Meziantou.Polyfill"})]}),"\n",(0,i.jsxs)(t.p,{children:["15 ",(0,i.jsx)(t.a,{href:"/docs/Microsoft.Extensions.Logging",children:"Microsoft.Extensions.Logging"})]}),"\n",(0,i.jsxs)(t.p,{children:["16 ",(0,i.jsx)(t.a,{href:"/docs/Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator",children:"Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator"})]}),"\n",(0,i.jsxs)(t.p,{children:["17 ",(0,i.jsx)(t.a,{href:"/docs/Microsoft.Interop.JavaScript.JSImportGenerator",children:"Microsoft.Interop.JavaScript.JSImportGenerator"})]}),"\n",(0,i.jsxs)(t.p,{children:["18 ",(0,i.jsx)(t.a,{href:"/docs/OptionToStringGenerator",children:"OptionToStringGenerator"})]}),"\n",(0,i.jsxs)(t.p,{children:["19 ",(0,i.jsx)(t.a,{href:"/docs/QueryStringGenerator",children:"QueryStringGenerator"})]}),"\n",(0,i.jsxs)(t.p,{children:["20 ",(0,i.jsx)(t.a,{href:"/docs/RSCG_Decorator",children:"RSCG_Decorator"})]}),"\n",(0,i.jsxs)(t.p,{children:["21 ",(0,i.jsx)(t.a,{href:"/docs/RSCG_UtilityTypes",children:"RSCG_UtilityTypes"})]}),"\n",(0,i.jsxs)(t.p,{children:["22 ",(0,i.jsx)(t.a,{href:"/docs/StaticReflection",children:"StaticReflection"})]}),"\n",(0,i.jsxs)(t.p,{children:["23 ",(0,i.jsx)(t.a,{href:"/docs/SyncMethodGenerator",children:"SyncMethodGenerator"})]}),"\n",(0,i.jsxs)(t.p,{children:["24 ",(0,i.jsx)(t.a,{href:"/docs/System.Runtime.InteropServices",children:"System.Runtime.InteropServices"})]}),"\n",(0,i.jsxs)(t.p,{children:["25 ",(0,i.jsx)(t.a,{href:"/docs/System.Text.RegularExpressions",children:"System.Text.RegularExpressions"})]}),"\n",(0,i.jsxs)(t.p,{children:["26 ",(0,i.jsx)(t.a,{href:"/docs/TelemetryLogging",children:"TelemetryLogging"})]}),"\n",(0,i.jsxs)(t.p,{children:["27 ",(0,i.jsx)(t.a,{href:"/docs/ThisClass",children:"ThisClass"})]}),"\n",(0,i.jsx)(t.h3,{id:"see-category",children:"See category"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"/docs/Categories/EnhancementClass",children:"EnhancementClass"})})]})}function a(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}}}]);