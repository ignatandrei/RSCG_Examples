"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[5245],{28689:(e,t,i)=>{i.d(t,{Ay:()=>a,RM:()=>r});var n=i(74848),s=i(28453);const r=[{value:"Category &quot;FilesToCode&quot; has the following generators:",id:"category-filestocode-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function l(e){const t={a:"a",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h3,{id:"category-filestocode-has-the-following-generators",children:'Category "FilesToCode" has the following generators:'}),"\n",(0,n.jsxs)(t.p,{children:["1 ",(0,n.jsx)(t.a,{href:"/docs/Chorn.EmbeddedResourceAccessGenerator",children:"Chorn.EmbeddedResourceAccessGenerator"})]}),"\n",(0,n.jsxs)(t.p,{children:["2 ",(0,n.jsx)(t.a,{href:"/docs/corecraft",children:"corecraft"})]}),"\n",(0,n.jsxs)(t.p,{children:["3 ",(0,n.jsx)(t.a,{href:"/docs/Datacute.EmbeddedResourcePropertyGenerator",children:"Datacute.EmbeddedResourcePropertyGenerator"})]}),"\n",(0,n.jsxs)(t.p,{children:["4 ",(0,n.jsx)(t.a,{href:"/docs/DotnetYang",children:"DotnetYang"})]}),"\n",(0,n.jsxs)(t.p,{children:["5 ",(0,n.jsx)(t.a,{href:"/docs/EmbedResourceCSharp",children:"EmbedResourceCSharp"})]}),"\n",(0,n.jsxs)(t.p,{children:["6 ",(0,n.jsx)(t.a,{href:"/docs/kli.Localize",children:"kli.Localize"})]}),"\n",(0,n.jsxs)(t.p,{children:["7 ",(0,n.jsx)(t.a,{href:"/docs/LingoGen",children:"LingoGen"})]}),"\n",(0,n.jsxs)(t.p,{children:["8 ",(0,n.jsx)(t.a,{href:"/docs/NFH.FileEmbed",children:"NFH.FileEmbed"})]}),"\n",(0,n.jsxs)(t.p,{children:["9 ",(0,n.jsx)(t.a,{href:"/docs/NotNotAppSettings",children:"NotNotAppSettings"})]}),"\n",(0,n.jsxs)(t.p,{children:["10 ",(0,n.jsx)(t.a,{href:"/docs/Podimo.ConstEmbed",children:"Podimo.ConstEmbed"})]}),"\n",(0,n.jsxs)(t.p,{children:["11 ",(0,n.jsx)(t.a,{href:"/docs/ResXGenerator",children:"ResXGenerator"})]}),"\n",(0,n.jsxs)(t.p,{children:["12 ",(0,n.jsx)(t.a,{href:"/docs/RSCG_JSON2Class",children:"RSCG_JSON2Class"})]}),"\n",(0,n.jsxs)(t.p,{children:["13 ",(0,n.jsx)(t.a,{href:"/docs/RSCG_Utils",children:"RSCG_Utils"})]}),"\n",(0,n.jsxs)(t.p,{children:["14 ",(0,n.jsx)(t.a,{href:"/docs/Strings.ResourceGenerator",children:"Strings.ResourceGenerator"})]}),"\n",(0,n.jsxs)(t.p,{children:["15 ",(0,n.jsx)(t.a,{href:"/docs/ThisAssembly_Resources",children:"ThisAssembly_Resources"})]}),"\n",(0,n.jsxs)(t.p,{children:["16 ",(0,n.jsx)(t.a,{href:"/docs/ThisAssembly.Strings",children:"ThisAssembly.Strings"})]}),"\n",(0,n.jsxs)(t.p,{children:["17 ",(0,n.jsx)(t.a,{href:"/docs/Weave",children:"Weave"})]}),"\n",(0,n.jsx)(t.h3,{id:"see-category",children:"See category"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"/docs/Categories/FilesToCode",children:"FilesToCode"})})]})}function a(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},42717:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>m,contentTitle:()=>h,default:()=>b,frontMatter:()=>c,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"RSCG-Examples/NFH.FileEmbed","title":"220 - NFH.FileEmbed","description":"Generating embedded files","source":"@site/docs/RSCG-Examples/NFH.FileEmbed.md","sourceDirName":"RSCG-Examples","slug":"/NFH.FileEmbed","permalink":"/RSCG_Examples/v2/docs/NFH.FileEmbed","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2200,"frontMatter":{"sidebar_position":2200,"title":"220 - NFH.FileEmbed","description":"Generating embedded files","slug":"/NFH.FileEmbed"},"sidebar":"tutorialSidebar","previous":{"title":"219 - SKPromptGenerator","permalink":"/RSCG_Examples/v2/docs/SKPromptGenerator"},"next":{"title":"221 - RxSourceGenerator","permalink":"/RSCG_Examples/v2/docs/RxSourceGenerator"}}');var s=i(74848),r=i(28453),l=i(11470),a=i(19365),o=i(14252),d=i(28689);const c={sidebar_position:2200,title:"220 - NFH.FileEmbed",description:"Generating embedded files",slug:"/NFH.FileEmbed"},h="NFH.FileEmbed  by Natalie Howes",m={},p=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Author",id:"author",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Example Usage",id:"example-usage",level:2},{value:"Limitations",id:"limitations",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share NFH.FileEmbed",id:"share-nfhfileembed",level:3},...d.RM];function u(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"nfhfileembed--by-natalie-howes",children:"NFH.FileEmbed  by Natalie Howes"})}),"\n",(0,s.jsx)(o.A,{toc:p}),"\n",(0,s.jsx)(t.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/NFH.FileEmbed/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/NFH.FileEmbed?label=NFH.FileEmbed",alt:"Nuget"})}),"\n",(0,s.jsx)(t.a,{href:"https://github.com/SirCxyrtyx/FileEmbed",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/github/last-commit/SirCxyrtyx/FileEmbed?label=updated",alt:"GitHub last commit"})}),"\n",(0,s.jsx)(t.img,{src:"https://img.shields.io/github/stars/SirCxyrtyx/FileEmbed?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,s.jsx)(t.h2,{id:"details",children:"Details"}),"\n",(0,s.jsx)(t.h3,{id:"info",children:"Info"}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsxs)(t.p,{children:["Name: ",(0,s.jsx)(t.strong,{children:"NFH.FileEmbed"})]}),(0,s.jsx)(t.p,{children:"A source generator for embedding resource files directly into your assembly. Access them as a ReadOnlySpan<byte>, with no allocations or reflection needed."}),(0,s.jsx)(t.p,{children:"Author: Natalie Howes"}),(0,s.jsxs)(t.p,{children:["NuGet:\n",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/NFH.FileEmbed/",children:"https://www.nuget.org/packages/NFH.FileEmbed/"})})]}),(0,s.jsxs)(t.p,{children:["You can find more details at ",(0,s.jsx)(t.a,{href:"https://github.com/SirCxyrtyx/FileEmbed",children:"https://github.com/SirCxyrtyx/FileEmbed"})]}),(0,s.jsxs)(t.p,{children:["Source: ",(0,s.jsx)(t.a,{href:"https://github.com/SirCxyrtyx/FileEmbed",children:"https://github.com/SirCxyrtyx/FileEmbed"})]})]}),"\n",(0,s.jsx)(t.h3,{id:"author",children:"Author"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsxs)(t.p,{children:["Natalie Howes\n",(0,s.jsx)(t.img,{src:"https://github.com/SirCxyrtyx.png",alt:"Alt text"})]})}),"\n",(0,s.jsx)(t.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,s.jsxs)(t.admonition,{type:"note",children:[(0,s.jsx)(t.h1,{id:"c-fileembed",children:"C# FileEmbed"}),(0,s.jsxs)(t.p,{children:["A source generator for embedding resource files directly into your assembly. Access them as a ",(0,s.jsx)(t.code,{children:"ReadOnlySpan<byte>"}),", with no allocations or reflection needed."]}),(0,s.jsx)(t.p,{children:"Add the package to your application using"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"dotnet add package NFH.FileEmbed\n"})}),(0,s.jsxs)(t.p,{children:["You will probably wish to add ",(0,s.jsx)(t.code,{children:'PrivateAssets="all"'})," to the ",(0,s.jsx)(t.code,{children:"PackageReference"})," for this package in your csproj, to prevent this becoming a dependency (as it's only needed at compile time)."]}),(0,s.jsx)(t.h2,{id:"example-usage",children:"Example Usage"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:'//attribute is in this namespace\nusing FileEmbed;\n\nnamespace EmbedExample;\n\n//partial methods must be in partial types\npublic static partial class Program\n{\n    //Place the attribute on a static partial method that returns a ReadOnlySpan<byte>\n    [FileEmbed(@"Capture.PNG")]\n    public static partial ReadOnlySpan<byte> Bytes();\n\n\n    //works in any type that can contain a static method\n    private partial record struct MyStruct\n    {\n        //Path is relative to your project directory (specifically, the ProjectDir MSBuild property)\n        [FileEmbed(@"Resources\\Capture.7z")]\n        internal static partial ReadOnlySpan<byte> StructBytes();\n    }\n\n    public partial interface IExampleInterface\n    {\n        //two optional arguments, Offset and Length, allow you to embed a slice of the file\n        [FileEmbed(@"Resources\\Capture.7z", 4, 8)]\n        internal static partial ReadOnlySpan<byte> InterfaceBytes();\n    }\n\n    public static void Main()\n    {\n        Console.WriteLine($"{Bytes().Length} bytes");\n        Console.WriteLine($"{MyStruct.StructBytes().Length} bytes");\n        Console.WriteLine($"{IExampleInterface.InterfaceBytes().Length} bytes");\n    }\n}\n'})}),(0,s.jsxs)(t.p,{children:["Autogenerated code for ",(0,s.jsx)(t.code,{children:"IExampleInterface.InterfaceBytes"}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",children:'namespace EmbedExample\n{\n\tpartial class Program\n\t{\n\t\tpartial interface IExampleInterface\n\t\t{\n\t\t\t[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FileEmbed", "0.1.0.0")]\n\t\t\tinternal static partial global::System.ReadOnlySpan<byte> InterfaceBytes() => new byte[] \\{ 39,28,0,4,115,228,9,158, };\n\t\t}\n\t}\n}\n'})}),(0,s.jsx)(t.h2,{id:"limitations",children:"Limitations"}),(0,s.jsx)(t.p,{children:"This doesn't work so well for input files larger than 1MB unfortunately. The source generator itself can handle large files just fine, but, in my experience, Visual Studio chokes on the generated output, using huge amounts of memory after the files are generated. I have not yet investigated why. To protect users of this source generator from accidently locking up VS, it imposes a 1MB limit on input files. This can be overriden if you wish to try using this with larger files. To do so, put this in your csproj file:"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-xml",children:'\x3c!-- To set FileEmbed_MaxEmbedSize, you must first make it visible to the compiler --\x3e\n<ItemGroup>\n\t<CompilerVisibleProperty Include="FileEmbed_MaxEmbedSize" />\n</ItemGroup>\n<PropertyGroup>\n\t<FileEmbed_MaxEmbedSize>SIZE_IN_BYTES_GOES_HERE</FileEmbed_MaxEmbedSize>\n</PropertyGroup>\n'})})]}),"\n",(0,s.jsx)(t.h3,{id:"about",children:"About"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Generating embedded files"})}),"\n",(0,s.jsx)(t.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,s.jsx)(t.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsxs)(a.A,{value:"csproj",label:"CSharp Project",children:[(0,s.jsxs)(t.p,{children:["This is the CSharp Project that references ",(0,s.jsx)(t.strong,{children:"NFH.FileEmbed"})]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-xml",metastring:"showLineNumbers {17}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  \n  <ItemGroup>\n    <EmbeddedResource Include="TestData\\Countries.txt" />\n  </ItemGroup>\n\n  \n  <ItemGroup>\n    <PackageReference Include="NFH.FileEmbed" Version="0.1.0-beta" />\n  </ItemGroup>\n\n  <PropertyGroup>\n\t\t<AdditionalFileItemNames>$(AdditionalFileItemNames);EmbeddedResource</AdditionalFileItemNames>\n\t</PropertyGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\t\x3c!--<ItemGroup>\n\t\t<CompilerVisibleProperty Include="FileEmbed_MaxEmbedSize" />\n\t</ItemGroup>\n\t<PropertyGroup>\n\t\t<FileEmbed_MaxEmbedSize>SIZE_IN_BYTES_GOES_HERE</FileEmbed_MaxEmbedSize>\n\t</PropertyGroup>--\x3e\n</Project>\n\n'})})]}),(0,s.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NFH.FileEmbed\\src\\EmbedDemo\\Program.cs",label:"Program.cs",children:[(0,s.jsxs)(t.p,{children:["This is the use of ",(0,s.jsx)(t.strong,{children:"NFH.FileEmbed"})," in ",(0,s.jsx)(t.em,{children:"Program.cs"})]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// See https://aka.ms/new-console-template for more information\nusing EmbedDemo;\nusing System.Text;\n\nConsole.WriteLine("Hello, World!");\n\nvar data= TestData.Countries();\n\nConsole.WriteLine(Encoding.UTF8.GetString(data) );\n'})})]}),(0,s.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NFH.FileEmbed\\src\\EmbedDemo\\TestData.cs",label:"TestData.cs",children:[(0,s.jsxs)(t.p,{children:["This is the use of ",(0,s.jsx)(t.strong,{children:"NFH.FileEmbed"})," in ",(0,s.jsx)(t.em,{children:"TestData.cs"})]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using FileEmbed;\n\nnamespace EmbedDemo;\n\npublic static partial class TestData\n{\n    [FileEmbed(@"TestData\\Countries.txt")]\n    public static partial ReadOnlySpan<byte> Countries();\n}\n\n'})})]}),(0,s.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NFH.FileEmbed\\src\\EmbedDemo\\TestData\\Countries.txt",label:"Countries.txt",children:[(0,s.jsxs)(t.p,{children:["This is the use of ",(0,s.jsx)(t.strong,{children:"NFH.FileEmbed"})," in ",(0,s.jsx)(t.em,{children:"Countries.txt"})]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"USA\nGermany\nFrance\nRomania\nItaly\n\n"})})]})]}),"\n",(0,s.jsx)(t.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,s.jsx)(t.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,s.jsxs)(l.A,{children:[(0,s.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NFH.FileEmbed\\src\\EmbedDemo\\obj\\GX\\FileEmbed\\FileEmbed.FileEmbedGenerator\\EMBEDDED__Countries.txt.g.cs",label:"EMBEDDED__Countries.txt.g.cs",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'namespace EmbedDemo\n{\n\tpartial class TestData\n\t{\n\t\t[global::System.CodeDom.Compiler.GeneratedCodeAttribute("FileEmbed", "0.1.0.0")]\n\t\tpublic static partial global::System.ReadOnlySpan<byte> Countries() => "USA\\r\\nGermany\\r\\nFrance\\r\\nRomania\\r\\nItaly\\r\\n"u8;\n\t}\n}\n\n'})})}),(0,s.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NFH.FileEmbed\\src\\EmbedDemo\\obj\\GX\\FileEmbed\\FileEmbed.FileEmbedGenerator\\FileEmbedAttribute.g.cs",label:"FileEmbedAttribute.g.cs",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'namespace FileEmbed\n{\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("FileEmbed", "0.1.0.0")]\n    [global::System.Diagnostics.Conditional("FILE_EMBED_KEEP_SOURCE_GENERATOR_ATTRIBUTE")]\n    [global::System.AttributeUsage(global::System.AttributeTargets.Method, Inherited = false)]\n    internal class FileEmbedAttribute : global::System.Attribute\n    {\n        public string FilePath \\{ get; }\n\n        public long Offset \\{ get; }\n\n        public int Length \\{ get; }\n\n        public FileEmbedAttribute(string filePath) : this(filePath, 0, -1) \\{ }\n\n        public FileEmbedAttribute(string filePath, long offset) : this(filePath, offset, -1) \\{ }\n\n        public FileEmbedAttribute(string filePath, long offset, int length)\n        {\n            FilePath = filePath;\n            Offset = offset;\n            Length = length;\n        }\n    }\n}\n'})})})]}),"\n",(0,s.jsx)(t.h2,{id:"useful",children:"Useful"}),"\n",(0,s.jsx)(t.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(48813).A+"",children:"Download Example project NFH.FileEmbed "})})}),"\n",(0,s.jsx)(t.h3,{id:"share-nfhfileembed",children:"Share NFH.FileEmbed"}),"\n",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNFH.FileEmbed&quote=NFH.FileEmbed",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNFH.FileEmbed&text=NFH.FileEmbed:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNFH.FileEmbed",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNFH.FileEmbed&title=NFH.FileEmbed",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNFH.FileEmbed&title=NFH.FileEmbed&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNFH.FileEmbed",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/NFH.FileEmbed",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/NFH.FileEmbed"})}),"\n",(0,s.jsx)(t.p,{children:"aaa"}),"\n",(0,s.jsx)(d.Ay,{})]})}function b(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},48813:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/files/NFH.FileEmbed-b0ae0c6015da01305eb8aaeb92528014.zip"}}]);