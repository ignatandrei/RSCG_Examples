"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[5931],{4707:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>p,contentTitle:()=>h,default:()=>g,frontMatter:()=>d,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"RSCG-Examples/RazorSlices","title":"164 - RazorSlices","description":"Generating html from razor templates. Attention, generates IHttpResult, not html string.","source":"@site/docs/RSCG-Examples/RazorSlices.md","sourceDirName":"RSCG-Examples","slug":"/RazorSlices","permalink":"/RSCG_Examples/v2/docs/RazorSlices","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1640,"frontMatter":{"sidebar_position":1640,"title":"164 - RazorSlices","description":"Generating html from razor templates. Attention, generates IHttpResult, not html string.","slug":"/RazorSlices"},"sidebar":"tutorialSidebar","previous":{"title":"163 - TypedSignalR.Client","permalink":"/RSCG_Examples/v2/docs/TypedSignalR.Client"},"next":{"title":"165 - rscg_queryables","permalink":"/RSCG_Examples/v2/docs/rscg_queryables"}}');var i=s(74848),l=s(28453),t=s(11470),a=s(19365),o=s(14252),c=s(54725);const d={sidebar_position:1640,title:"164 - RazorSlices",description:"Generating html from razor templates. Attention, generates IHttpResult, not html string.",slug:"/RazorSlices"},h="RazorSlices  by Damiam Edwards",p={},m=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Getting Started",id:"getting-started",level:2},{value:"Installation",id:"installation",level:2},{value:"NuGet Releases",id:"nuget-releases",level:3},{value:"CI Builds",id:"ci-builds",level:3},{value:"Features",id:"features",level:2},{value:"Currently supported",id:"currently-supported",level:3},{value:"Interested in supporting but not sure yet",id:"interested-in-supporting-but-not-sure-yet",level:3},{value:"No intention to support",id:"no-intention-to-support",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share RazorSlices",id:"share-razorslices",level:3},...c.RM];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"razorslices--by-damiam-edwards",children:"RazorSlices  by Damiam Edwards"})}),"\n",(0,i.jsx)(o.A,{toc:m}),"\n",(0,i.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/RazorSlices/",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/RazorSlices?label=RazorSlices",alt:"Nuget"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/DamianEdwards/RazorSlices",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/DamianEdwards/RazorSlices?label=updated",alt:"GitHub last commit"})}),"\n",(0,i.jsx)(n.img,{src:"https://img.shields.io/github/stars/DamianEdwards/RazorSlices?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,i.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,i.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["Name: ",(0,i.jsx)(n.strong,{children:"RazorSlices"})]}),(0,i.jsx)(n.p,{children:"Package Description"}),(0,i.jsx)(n.p,{children:"Author: Damiam Edwards"}),(0,i.jsxs)(n.p,{children:["NuGet:\n",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/RazorSlices/",children:"https://www.nuget.org/packages/RazorSlices/"})})]}),(0,i.jsxs)(n.p,{children:["You can find more details at ",(0,i.jsx)(n.a,{href:"https://github.com/DamianEdwards/RazorSlices",children:"https://github.com/DamianEdwards/RazorSlices"})]}),(0,i.jsxs)(n.p,{children:["Source: ",(0,i.jsx)(n.a,{href:"https://github.com/DamianEdwards/RazorSlices",children:"https://github.com/DamianEdwards/RazorSlices"})]})]}),"\n",(0,i.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.h1,{id:"razor-slices",children:"Razor Slices"}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/DamianEdwards/RazorSlices/actions/workflows/ci.yml",children:(0,i.jsx)(n.img,{src:"https://github.com/DamianEdwards/RazorSlices/actions/workflows/ci.yml/badge.svg",alt:"CI (main)"})}),"\n",(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/RazorSlices/",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/nuget/v/RazorSlices",alt:"Nuget"})})]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.em,{children:"Lightweight"})," Razor-based templates for ASP.NET Core without MVC, Razor Pages, or Blazor, optimized for high-performance, unbuffered rendering with low allocations. Compatible with trimming and native AOT. Great for returning dynamically rendered HTML from Minimal APIs, middleware, etc. Supports .NET 8+"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#getting-started",children:"Getting Started"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#installation",children:"Installation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#features",children:"Features"})}),"\n"]}),(0,i.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"#installation",children:"Install the NuGet package"})," into your ASP.NET Core project (.NET 8+):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"> dotnet add package RazorSlices\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Create a directory in your project called ",(0,i.jsx)(n.em,{children:"Slices"})," and add a ",(0,i.jsx)(n.em,{children:"_ViewImports.cshtml"})," file to it with the following content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cshtml",children:"@inherits RazorSliceHttpResult\n\n@using System.Globalization;\n@using Microsoft.AspNetCore.Razor;\n@using Microsoft.AspNetCore.Http.HttpResults;\n\n@tagHelperPrefix __disable_tagHelpers__:\n@removeTagHelper *, Microsoft.AspNetCore.Mvc.Razor\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["In the same directory, add a ",(0,i.jsx)(n.em,{children:"Hello.cshtml"})," file with the following content:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cshtml",children:'@inherits RazorSliceHttpResult<DateTime>\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <title>Hello from Razor Slices!</title>\n</head>\n<body>\n    <p>\n        Hello from Razor Slices! The time is @Model\n    </p>\n</body>\n</html>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Each ",(0,i.jsx)(n.em,{children:".cshtml"})," file will have a proxy type generated for it by the Razor Slices source generator that you can use as the generic argument to the various APIs in Razor Slices for rendering slices."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Add a minimal API to return the slice in your ",(0,i.jsx)(n.em,{children:"Program.cs"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c#",children:'app.MapGet("/hello", () => Results.Extensions.RazorSlice<MyApp.Slices.Hello, DateTime>(DateTime.Now));\n'})}),"\n"]}),"\n"]}),(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),(0,i.jsx)(n.h3,{id:"nuget-releases",children:"NuGet Releases"}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/RazorSlices/",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/nuget/v/RazorSlices",alt:"Nuget"})})}),(0,i.jsxs)(n.p,{children:["This package is currently available from ",(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/RazorSlices/",children:"nuget.org"}),":"]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-console",children:"> dotnet add package RazorSlices\n"})}),(0,i.jsx)(n.h3,{id:"ci-builds",children:"CI Builds"}),(0,i.jsxs)(n.p,{children:["If you wish to use builds from this repo's ",(0,i.jsx)(n.code,{children:"main"})," branch you can install them from ",(0,i.jsx)(n.a,{href:"https://github.com/DamianEdwards/RazorSlices/pkgs/nuget/RazorSlices",children:"this repo's package feed"}),"."]}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/settings/tokens/new",children:"Create a personal access token"})," for your GitHub account with the ",(0,i.jsx)(n.code,{children:"read:packages"})," scope with your desired expiration length:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/settings/tokens/new",children:(0,i.jsx)("img",{width:"583",alt:"image",src:"https://user-images.githubusercontent.com/249088/160220117-7e79822e-a18a-445c-89ff-b3d9ca84892f.png"})})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["At the command line, navigate to your user profile directory and run the following command to add the package feed to your NuGet configuration, replacing the ",(0,i.jsx)(n.code,{children:"<GITHUB_USER_NAME>"})," and ",(0,i.jsx)(n.code,{children:"<PERSONAL_ACCESS_TOKEN>"})," placeholders with the relevant values:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"~> dotnet nuget add source -n GitHub -u <GITHUB_USER_NAME> -p <PERSONAL_ACCESS_TOKEN> https://nuget.pkg.github.com/DamianEdwards/index.json\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["You should now be able to add a reference to the package specifying a version from the ",(0,i.jsx)(n.a,{href:"https://github.com/DamianEdwards/RazorSlices/pkgs/nuget/RazorSlices",children:"repository packages feed"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-nuget-registry",children:"these instructions"})," for further details about working with GitHub package feeds."]}),"\n"]}),"\n"]}),(0,i.jsx)(n.h2,{id:"features",children:"Features"}),(0,i.jsx)(n.p,{children:"The library is still new and features are being actively added."}),(0,i.jsx)(n.h3,{id:"currently-supported",children:"Currently supported"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"ASP.NET Core 8.0 and above"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Strongly-typed models (via ",(0,i.jsx)(n.code,{children:"@inherits RazorSlice<MyModel>"})," or ",(0,i.jsx)(n.code,{children:"@inherits RazorSliceHttpResult<MyModel>"}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Razor constructs:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#implicit-razor-expressions",children:"Implicit expressions"}),", e.g. ",(0,i.jsx)(n.code,{children:"@someVariable"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#implicit-razor-expressions",children:"Explicit expressions"}),", e.g. ",(0,i.jsx)(n.code,{children:"@(someBool ? thisThing : thatThing)"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#control-structures",children:"Control structures"}),", e.g. ",(0,i.jsx)(n.code,{children:"@if()"}),", ",(0,i.jsx)(n.code,{children:"@switch()"}),", etc."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#looping-for-foreach-while-and-do-while",children:"Looping"}),", e.g. ",(0,i.jsx)(n.code,{children:"@for"}),", ",(0,i.jsx)(n.code,{children:"@foreach"}),", ",(0,i.jsx)(n.code,{children:"@while"}),", ",(0,i.jsx)(n.code,{children:"@do"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#razor-code-blocks",children:"Code blocks"}),", e.g. ",(0,i.jsx)(n.code,{children:"@{ var someThing = someOtherThing; }"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#conditional-attribute-rendering",children:"Conditional attribute rendering"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Functions, e.g."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cshtml",children:'@functions {\n    private readonly string _someString = "A very important string";\n    private int DoAThing() => 123;\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#templated-razor-delegates",children:"Templated Razor delegates"}),", e.g."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cshtml",children:"@inherits RazorSlice<Todo>\n\n<h1>@Title(Model)</h1>\n\n@functions {\n    private IHtmlContent Title(Todo todo)\n    {\n        <text>Todo @todo.Id: @todo.Title</text>\n        return HtmlString.Empty;\n    }\n}\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["DI-activated properties via ",(0,i.jsx)(n.code,{children:"@inject"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Rendering slices from slices (aka partials) via ",(0,i.jsx)(n.code,{children:"@(await RenderPartialAsync<MyPartial>())"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Using slices as layouts for other slices, including layouts with strongly-typed models:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For the layout slice, inherit from ",(0,i.jsx)(n.code,{children:"RazorLayoutSlice"})," or ",(0,i.jsx)(n.code,{children:"RazorLayoutSlice<TModel>"})," and use ",(0,i.jsx)(n.code,{children:"@await RenderBodyAsync()"})," in the layout to render the body"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cshtml",children:'@inherits RazorLayoutSlice<LayoutModel>\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <title>@Model.Title</title>\n    @await RenderSectionAsync("head")\n</head>\n<body>\n  @await RenderBodyAsync()\n\n  <footer>\n      @await RenderSectionAsync("footer")\n  </footer>\n</body>\n</html>\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["For the slice using the layout, implement ",(0,i.jsx)(n.code,{children:"IUsesLayout<TLayout>"})," or ",(0,i.jsx)(n.code,{children:"IUsesLayout<TLayout, TModel>"})," to declare which layout to use. If using a layout with a model, ensure you implement the ",(0,i.jsx)(n.code,{children:"LayoutModel"})," property in your ",(0,i.jsx)(n.code,{children:"@functions"})," block, e.g"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cshtml",children:'@inherits RazorSlice<SomeModel>\n@implements IUsesLayout<LayoutSlice, LayoutModel>\n\n<div>\n    @* Content here *@\n</div>\n\n@functions {\n    public LayoutModel LayoutModel => new() { Title = "My Layout" };\n}\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Layouts can render sections via ",(0,i.jsx)(n.code,{children:'@await RenderSectionAsync("SectionName")'})," and slices can render content into sections by overriding ",(0,i.jsx)(n.code,{children:"ExecuteSectionAsync"}),", e.g.:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cshtml",children:'protected override Task ExecuteSectionAsync(string name)\n{\n    if (name == "lorem-header")\n    {\n        <p class="text-info">This page renders a custom <code>IHtmlContent</code> type that contains lorem ipsum content.</p>\n    }\n\n    return Task.CompletedTask;\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Note: The ",(0,i.jsx)(n.code,{children:"@section"})," directive is not supported as it's incompatible with the rendering approach of Razor Slices"]})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Asynchronous rendering, i.e. the template can contain ",(0,i.jsx)(n.code,{children:"await"})," statements, e.g. ",(0,i.jsx)(n.code,{children:"@await WriteTheThing()"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Writing UTF8 ",(0,i.jsx)(n.code,{children:"byte[]"})," values directly to the output"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Rendering directly to ",(0,i.jsx)(n.code,{children:"PipeWriter"}),", ",(0,i.jsx)(n.code,{children:"Stream"}),", ",(0,i.jsx)(n.code,{children:"TextWriter"}),", ",(0,i.jsx)(n.code,{children:"StringBuilder"}),", and ",(0,i.jsx)(n.code,{children:"string"})," outputs, including optimizations for not boxing struct values, zero-allocation rendering of primitives like numbers, etc. (rather than just calling ",(0,i.jsx)(n.code,{children:"ToString()"})," on everything)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Return a slice instance directly as an ",(0,i.jsx)(n.code,{children:"IResult"})," in minimal APIs via ",(0,i.jsx)(n.code,{children:"@inherits RazorSliceHttpResult"})," and ",(0,i.jsx)(n.code,{children:'Results.Extensions.RazorSlice("/Slices/Hello.cshtml")'})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Full support for trimming and native AOT when used in conjunction with ASP.NET Core Minimal APIs"}),"\n"]}),"\n"]}),(0,i.jsx)(n.h3,{id:"interested-in-supporting-but-not-sure-yet",children:"Interested in supporting but not sure yet"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Extensions to help support using HTMX with Razor Slices"}),"\n",(0,i.jsxs)(n.li,{children:["Getting small updates to the Razor compiler itself to get some usability and performance improvements, e.g.:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Don't mark the template's ",(0,i.jsx)(n.code,{children:"ExecuteAsync"})," method as an ",(0,i.jsx)(n.code,{children:"async"})," method unless the template contains ",(0,i.jsx)(n.code,{children:"await"})," statements to save on the async state machine overhead"]}),"\n",(0,i.jsxs)(n.li,{children:["Support compiling static template elements to UTF8 string literals (",(0,i.jsx)(n.code,{children:"ReadOnlySpan<byte>"}),") instead of string literals to save on the UTF16 to UTF8 conversion during rendering"]}),"\n",(0,i.jsxs)(n.li,{children:["Support disabling the default registered ",(0,i.jsx)(n.code,{children:"@addtaghelper"})," and ",(0,i.jsx)(n.code,{children:"@model"})," directives which rely on MVC"]}),"\n"]}),"\n"]}),"\n"]}),(0,i.jsx)(n.h3,{id:"no-intention-to-support",children:"No intention to support"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Tag Helpers and View Components (they\'re tied to MVC and are intrinsically "heavy")'}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@model"})," directive (the Razor compiler does not support its use in conjunction with custom base-types via ",(0,i.jsx)(n.code,{children:"@inherits"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@attribute [Authorize]"})," (wrong layer of abstraction for minimal APIs, etc.)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"@section"})," directive (the Razor compiler emits code that is incompatible with the rendering approach of Razor Slices)"]}),"\n"]})]}),"\n",(0,i.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Generating html from razor templates. Attention, generates IHttpResult, not html string."})}),"\n",(0,i.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,i.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,i.jsxs)(t.A,{children:[(0,i.jsxs)(a.A,{value:"csproj",label:"CSharp Project",children:[(0,i.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,i.jsx)(n.strong,{children:"RazorSlices"})]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {11}",children:'<Project Sdk="Microsoft.NET.Sdk.Web">\n\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <Nullable>enable</Nullable>\n    <ImplicitUsings>enable</ImplicitUsings>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.10" />\n    <PackageReference Include="RazorSlices" Version="0.8.1" />\n    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.6.2" />\n  </ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n</Project>\n\n'})})]}),(0,i.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Program.cs",label:"Program.cs",children:[(0,i.jsxs)(n.p,{children:["This is the use of ",(0,i.jsx)(n.strong,{children:"RazorSlices"})," in ",(0,i.jsx)(n.em,{children:"Program.cs"})]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using RazorDemoSlices;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Add services to the container.\n// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n\nvar app = builder.Build();\n\n// Configure the HTTP request pipeline.\n//if (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\n\nvar summaries = new[]\n{\n    "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching"\n};\napp.MapGet("/hello", (string firstName,string lastName) \n    => Results.Extensions.RazorSlice<RazorDemoSlices.Slices.PersonHTML, Person>(\n        new Person { FirstName = firstName, LastName = lastName }\n    ));\n\napp.MapGet("/weatherforecast", () =>\n{\n    var forecast = Enumerable.Range(1, 5).Select(index =>\n        new WeatherForecast\n        (\n            DateOnly.FromDateTime(DateTime.Now.AddDays(index)),\n            Random.Shared.Next(-20, 55),\n            summaries[Random.Shared.Next(summaries.Length)]\n        ))\n        .ToArray();\n    return forecast;\n})\n.WithName("GetWeatherForecast")\n.WithOpenApi();\n\napp.Run();\n\ninternal record WeatherForecast(DateOnly Date, int TemperatureC, string? Summary)\n{\n    public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);\n}\n\n'})})]}),(0,i.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\PersonHTML.cshtml",label:"PersonHTML.cshtml",children:[(0,i.jsxs)(n.p,{children:["This is the use of ",(0,i.jsx)(n.strong,{children:"RazorSlices"})," in ",(0,i.jsx)(n.em,{children:"PersonHTML.cshtml"})]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'@inherits RazorSliceHttpResult<RazorDemoSlices.Person>\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <title>Hello from Razor Slices!</title>\n</head>\n<body>\n    <p>\n        My name is @Model.FirstName @Model.LastName\n    </p>\n</body>\n</html>\n'})})]}),(0,i.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Person.cs",label:"Person.cs",children:[(0,i.jsxs)(n.p,{children:["This is the use of ",(0,i.jsx)(n.strong,{children:"RazorSlices"})," in ",(0,i.jsx)(n.em,{children:"Person.cs"})]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"namespace RazorDemoSlices;\n\npublic class Person\n{\n    public string FirstName { get; set; }=string.Empty;\n    public string LastName { get; set; }= string.Empty;\n}\n\n"})})]})]}),"\n",(0,i.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,i.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,i.jsxs)(t.A,{children:[(0,i.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\obj\\GX\\Microsoft.CodeAnalysis.Razor.Compiler\\Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator\\Slices_PersonHTML_cshtml.g.cs",label:"Slices_PersonHTML_cshtml.g.cs",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'#pragma checksum "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\PersonHTML.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "6b3710e80836b438a5d8935ea469d238fc095e46298456ca847e09519393bb5e"\n// <auto-generated/>\n#pragma warning disable 1591\n[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Slices_PersonHTML), @"mvc.1.0.view", @"/Slices/PersonHTML.cshtml")]\nnamespace AspNetCoreGeneratedDocument\n{\n    #line default\n    using global::System;\n    using global::System.Collections.Generic;\n    using global::System.Linq;\n    using global::System.Threading.Tasks;\n    using global::Microsoft.AspNetCore.Mvc;\n    using global::Microsoft.AspNetCore.Mvc.Rendering;\n    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;\n#nullable restore\n#line (3,2)-(3,29) "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing System.Globalization;\n\n#nullable disable\n#nullable restore\n#line (4,2)-(4,35) "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing Microsoft.AspNetCore.Razor;\n\n#nullable disable\n#nullable restore\n#line (5,2)-(5,46) "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing Microsoft.AspNetCore.Http.HttpResults;\n\n#nullable disable\n    #line default\n    #line hidden\n    [global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemMetadataAttribute("Identifier", "/Slices/PersonHTML.cshtml")]\n    [global::System.Runtime.CompilerServices.CreateNewOnMetadataUpdateAttribute]\n    #nullable restore\n    internal sealed class Slices_PersonHTML : \n#nullable restore\n#line (1,11)-(1,55) "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\PersonHTML.cshtml"\nRazorSliceHttpResult<RazorDemoSlices.Person>\n\n#line default\n#line hidden\n#nullable disable\n\n    #nullable disable\n    {\n        #pragma warning disable 1998\n        public async override global::System.Threading.Tasks.Task ExecuteAsync()\n        {\n            WriteLiteral("<!DOCTYPE html>\\r\\n<html lang=\\"en\\">\\r\\n<head>\\r\\n    <meta charset=\\"utf-8\\">\\r\\n    <title>Hello from Razor Slices!</title>\\r\\n</head>\\r\\n<body>\\r\\n    <p>\\r\\n        My name is ");\n            Write(\n#nullable restore\n#line (10,21)-(10,36) "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\PersonHTML.cshtml"\nModel.FirstName\n\n#line default\n#line hidden\n#nullable disable\n            );\n            WriteLiteral(" ");\n            Write(\n#nullable restore\n#line (10,38)-(10,52) "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\PersonHTML.cshtml"\nModel.LastName\n\n#line default\n#line hidden\n#nullable disable\n            );\n            WriteLiteral("\\r\\n    </p>\\r\\n</body>\\r\\n</html>");\n        }\n        #pragma warning restore 1998\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;\n        #nullable disable\n    }\n}\n#pragma warning restore 1591\n\n'})})}),(0,i.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\obj\\GX\\Microsoft.CodeAnalysis.Razor.Compiler\\Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator\\Slices__ViewImports_cshtml.g.cs",label:"Slices__ViewImports_cshtml.g.cs",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'#pragma checksum "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\_ViewImports.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "95493514af34e5705fffb1e5c7121f0e7abde13ee7a1cff8fbafa2085da18fff"\n// <auto-generated/>\n#pragma warning disable 1591\n[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Slices__ViewImports), @"mvc.1.0.view", @"/Slices/_ViewImports.cshtml")]\nnamespace AspNetCoreGeneratedDocument\n{\n    #line default\n    using global::System;\n    using global::System.Collections.Generic;\n    using global::System.Linq;\n    using global::System.Threading.Tasks;\n    using global::Microsoft.AspNetCore.Mvc;\n    using global::Microsoft.AspNetCore.Mvc.Rendering;\n    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;\n#nullable restore\n#line (3,2)-(3,29) "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing System.Globalization;\n\n#nullable disable\n#nullable restore\n#line (4,2)-(4,35) "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing Microsoft.AspNetCore.Razor;\n\n#nullable disable\n#nullable restore\n#line (5,2)-(5,46) "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing Microsoft.AspNetCore.Http.HttpResults;\n\n#nullable disable\n    #line default\n    #line hidden\n    [global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemMetadataAttribute("Identifier", "/Slices/_ViewImports.cshtml")]\n    [global::System.Runtime.CompilerServices.CreateNewOnMetadataUpdateAttribute]\n    #nullable restore\n    internal sealed class Slices__ViewImports : \n#nullable restore\n#line (1,11)-(1,31) "D:\\eu\\GitHub\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nRazorSliceHttpResult\n\n#line default\n#line hidden\n#nullable disable\n\n    #nullable disable\n    {\n        #pragma warning disable 1998\n        public async override global::System.Threading.Tasks.Task ExecuteAsync()\n        {\n            WriteLiteral("\\r\\n");\n            WriteLiteral("\\r\\n");\n        }\n        #pragma warning restore 1998\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;\n        #nullable disable\n    }\n}\n#pragma warning restore 1591\n\n'})})}),(0,i.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\obj\\GX\\RazorSlices.SourceGenerator\\RazorSlices.SourceGenerator.RazorSliceProxyGenerator\\RazorDemoSlices.RazorSliceProxies.g.cs",label:"RazorDemoSlices.RazorSliceProxies.g.cs",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n\nusing global::System.Diagnostics.CodeAnalysis;\nusing global::RazorSlices;\n\n#nullable enable\n\nnamespace RazorDemoSlices\n{\n    /// <summary>\n    /// All calls to create Razor Slices instances via the generated <see cref="global::RazorSlices.IRazorSliceProxy"/> classes\n    /// go through this factory to ensure that the generated types\' Create methods are always invoked via the static abstract\n    /// methods defined in the <see cref="global::RazorSlices.IRazorSliceProxy"/> interface. This ensures that the interface\n    /// implementation is never trimmed from the generated types.\n    /// </summary>\n    /// <remarks>\n    /// Workaround for https://github.com/dotnet/runtime/issues/102796\n    /// </remarks>\n    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)] // Hide from IntelliSense.\n    internal static class RazorSlicesGenericFactory\n    {\n        public static RazorSlice CreateSlice<TProxy>() where TProxy : IRazorSliceProxy => TProxy.CreateSlice();\n\n        public static RazorSlice<TModel> CreateSlice<TProxy, TModel>(TModel model) where TProxy : IRazorSliceProxy => TProxy.CreateSlice(model);\n    }\n}\nnamespace RazorDemoSlices.Slices\n{\n    /// <summary>\n    /// Static proxy for the Razor Slice defined in <c>Slices\\PersonHTML.cshtml</c>.\n    /// </summary>\n    public sealed class PersonHTML : global::RazorSlices.IRazorSliceProxy\n    {\n        [global::System.Diagnostics.CodeAnalysis.DynamicDependency(global::System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All, TypeName, "RazorDemoSlices")]\n        private const string TypeName = "AspNetCoreGeneratedDocument.Slices_PersonHTML, RazorDemoSlices";\n        [global::System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(global::System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]\n        private static readonly global::System.Type _sliceType = global::System.Type.GetType(TypeName)\n            ?? throw new global::System.InvalidOperationException($"Razor view type \'{TypeName}\' was not found. This is likely a bug in the RazorSlices source generator.");\n        private static readonly global::RazorSlices.SliceDefinition _sliceDefinition = new(_sliceType);\n\n        /// <summary>\n        /// Creates a new instance of the Razor Slice defined in <c>Slices\\PersonHTML.cshtml</c> .\n        /// </summary>\n        public static global::RazorSlices.RazorSlice Create()\n            => global::RazorDemoSlices.RazorSlicesGenericFactory.CreateSlice<global::RazorDemoSlices.Slices.PersonHTML>();\n\n        /// <summary>\n        /// Creates a new instance of the Razor Slice defined in <c>Slices\\PersonHTML.cshtml</c> with the given model.\n        /// </summary>\n        public static global::RazorSlices.RazorSlice<TModel> Create<TModel>(TModel model)\n            => global::RazorDemoSlices.RazorSlicesGenericFactory.CreateSlice<global::RazorDemoSlices.Slices.PersonHTML, TModel>(model);\n\n        // Explicit interface implementation\n        static global::RazorSlices.RazorSlice global::RazorSlices.IRazorSliceProxy.CreateSlice() => _sliceDefinition.CreateSlice();\n\n        // Explicit interface implementation\n        static global::RazorSlices.RazorSlice<TModel> global::RazorSlices.IRazorSliceProxy.CreateSlice<TModel>(TModel model) => _sliceDefinition.CreateSlice(model);\n    }\n}\n\n\n'})})})]}),"\n",(0,i.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,i.jsx)(n.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(21639).A+"",children:"Download Example project RazorSlices "})})}),"\n",(0,i.jsx)(n.h3,{id:"share-razorslices",children:"Share RazorSlices"}),"\n",(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices&quote=RazorSlices",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices&text=RazorSlices:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices&title=RazorSlices",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices&title=RazorSlices&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RazorSlices",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RazorSlices"})}),"\n",(0,i.jsx)(n.p,{children:"aaa"}),"\n",(0,i.jsx)(c.Ay,{})]})}function g(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},21639:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/files/RazorSlices-213eebb9210b2537540a9fe0e0fd0f9b.zip"},54725:(e,n,s)=>{s.d(n,{Ay:()=>a,RM:()=>l});var r=s(74848),i=s(28453);const l=[{value:"Category &quot;Templating&quot; has the following generators:",id:"category-templating-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function t(e){const n={a:"a",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"category-templating-has-the-following-generators",children:'Category "Templating" has the following generators:'}),"\n",(0,r.jsxs)(n.p,{children:["1 ",(0,r.jsx)(n.a,{href:"/docs/Gobie",children:"Gobie"})]}),"\n",(0,r.jsxs)(n.p,{children:["2 ",(0,r.jsx)(n.a,{href:"/docs/InlineComposition",children:"InlineComposition"})]}),"\n",(0,r.jsxs)(n.p,{children:["3 ",(0,r.jsx)(n.a,{href:"/docs/InterceptorTemplate",children:"InterceptorTemplate"})]}),"\n",(0,r.jsxs)(n.p,{children:["4 ",(0,r.jsx)(n.a,{href:"/docs/JKToolKit.TemplatePropertyGenerator",children:"JKToolKit.TemplatePropertyGenerator"})]}),"\n",(0,r.jsxs)(n.p,{children:["5 ",(0,r.jsx)(n.a,{href:"/docs/Microsoft.NET.Sdk.Razor.SourceGenerators",children:"Microsoft.NET.Sdk.Razor.SourceGenerators"})]}),"\n",(0,r.jsxs)(n.p,{children:["6 ",(0,r.jsx)(n.a,{href:"/docs/NTypewriter",children:"NTypewriter"})]}),"\n",(0,r.jsxs)(n.p,{children:["7 ",(0,r.jsx)(n.a,{href:"/docs/RazorBlade",children:"RazorBlade"})]}),"\n",(0,r.jsxs)(n.p,{children:["8 ",(0,r.jsx)(n.a,{href:"/docs/RazorSlices",children:"RazorSlices"})]}),"\n",(0,r.jsxs)(n.p,{children:["9 ",(0,r.jsx)(n.a,{href:"/docs/RSCG_IFormattable",children:"RSCG_IFormattable"})]}),"\n",(0,r.jsxs)(n.p,{children:["10 ",(0,r.jsx)(n.a,{href:"/docs/RSCG_Templating",children:"RSCG_Templating"})]}),"\n",(0,r.jsxs)(n.p,{children:["11 ",(0,r.jsx)(n.a,{href:"/docs/spreadcheetah",children:"spreadcheetah"})]}),"\n",(0,r.jsxs)(n.p,{children:["12 ",(0,r.jsx)(n.a,{href:"/docs/Tortuga.Shipwright",children:"Tortuga.Shipwright"})]}),"\n",(0,r.jsx)(n.h3,{id:"see-category",children:"See category"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/docs/Categories/Templating",children:"Templating"})})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}}}]);