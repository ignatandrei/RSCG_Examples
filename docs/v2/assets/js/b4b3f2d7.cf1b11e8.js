"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[4221],{43603:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>g,frontMatter:()=>l,metadata:()=>m,toc:()=>c});var a=n(87462),r=(n(67294),n(3905)),s=n(73992),o=n(18679),i=n(68839);const l={sidebar_position:1220,title:"122 - RSCG_JSON2Class",description:"transform any json into a class",slug:"/RSCG_JSON2Class"},p="RSCG_JSON2Class  by Andrei Ignat",m={unversionedId:"RSCG-Examples/RSCG_JSON2Class",id:"RSCG-Examples/RSCG_JSON2Class",title:"122 - RSCG_JSON2Class",description:"transform any json into a class",source:"@site/docs/RSCG-Examples/RSCG_JSON2Class.md",sourceDirName:"RSCG-Examples",slug:"/RSCG_JSON2Class",permalink:"/RSCG_Examples/v2/docs/RSCG_JSON2Class",draft:!1,tags:[],version:"current",sidebarPosition:1220,frontMatter:{sidebar_position:1220,title:"122 - RSCG_JSON2Class",description:"transform any json into a class",slug:"/RSCG_JSON2Class"},sidebar:"tutorialSidebar",previous:{title:"121 - AutoSpectre",permalink:"/RSCG_Examples/v2/docs/AutoSpectre"},next:{title:"v1",permalink:"/RSCG_Examples/v2/docs/v1"}},u={},c=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share RSCG_JSON2Class",id:"share-rscg_json2class",level:3},{value:"In the same category (FilesToCode) - 10 other generators",id:"in-the-same-category-filestocode---10-other-generators",level:3},{value:"Chorn.EmbeddedResourceAccessGenerator",id:"chornembeddedresourceaccessgenerator",level:4},{value:"corecraft",id:"corecraft",level:4},{value:"EmbedResourceCSharp",id:"embedresourcecsharp",level:4},{value:"LingoGen",id:"lingogen",level:4},{value:"NotNotAppSettings",id:"notnotappsettings",level:4},{value:"Podimo.ConstEmbed",id:"podimoconstembed",level:4},{value:"ResXGenerator",id:"resxgenerator",level:4},{value:"RSCG_Utils",id:"rscg_utils",level:4},{value:"ThisAssembly_Resources",id:"thisassembly_resources",level:4},{value:"Weave",id:"weave",level:4}],d={toc:c},N="wrapper";function g(e){let{components:t,...l}=e;return(0,r.kt)(N,(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rscg_json2class--by-andrei-ignat"},"RSCG_JSON2Class  by Andrei Ignat"),(0,r.kt)(i.Z,{toc:c,mdxType:"TOCInline"}),(0,r.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RSCG_JSON2Class/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/RSCG_JSON2Class?label=RSCG_JSON2Class",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_JSON2Class"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/ignatandrei/RSCG_JSON2Class?label=updated",alt:"GitHub last commit"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/ignatandrei/RSCG_JSON2Class?style=social",alt:"GitHub Repo stars"})),(0,r.kt)("h2",{id:"details"},"Details"),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Name: ",(0,r.kt)("strong",{parentName:"p"},"RSCG_JSON2Class")),(0,r.kt)("p",{parentName:"admonition"},"This package transforms any json into a class"),(0,r.kt)("p",{parentName:"admonition"},"Author: Andrei Ignat"),(0,r.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/RSCG_JSON2Class/"},"https://www.nuget.org/packages/RSCG_JSON2Class/")),"   "),(0,r.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_JSON2Class"},"https://github.com/ignatandrei/RSCG_JSON2Class")),(0,r.kt)("p",{parentName:"admonition"},"Source : ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_JSON2Class"},"https://github.com/ignatandrei/RSCG_JSON2Class"))),(0,r.kt)("h3",{id:"original-readme"},"Original Readme"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("h1",{parentName:"admonition",id:"rscg_json2class"},"RSCG_JSON2Class"),(0,r.kt)("p",{parentName:"admonition"},"Transform any json ( including appsettings ) into a class"),(0,r.kt)("h2",{parentName:"admonition",id:"usage"},"Usage"),(0,r.kt)("p",{parentName:"admonition"},"Install the nuget package into your project"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<ItemGroup>\n  <PackageReference Include="RSCG_JSON2Class" Version="2024.2.29.807" OutputItemType="Analyzer" ReferenceOutputAssembly="false"  />\n</ItemGroup>\n<PropertyGroup>\n    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n    <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    <GenerateDocumentationFile>True</GenerateDocumentationFile>\n</PropertyGroup>\n\n')),(0,r.kt)("p",{parentName:"admonition"},"Verify that the json file is set analyzer ( and , if you want to deserialize, copy to the output directory)"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<ItemGroup>\n  <None Remove="testData.json" />\n</ItemGroup>\n<ItemGroup>\n<AdditionalFiles Include="testData.json">\n<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\n</AdditionalFiles>\n</ItemGroup>\n\n')),(0,r.kt)("p",{parentName:"admonition"},"Access from C# code"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using System.Text.Json;\nvar testData = JsonSerializer.Deserialize<JSON2ClassConsole.SettingsJson.testData>(System.IO.File.ReadAllText("testData.json"));\nArgumentNullException.ThrowIfNull(testData);\nConsole.WriteLine(testData.Logging.LogLevel.Default);\nConsole.WriteLine(testData.DictData.Number_2);\n'))),(0,r.kt)("h3",{id:"about"},"About"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"transform any json into a class")),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,r.kt)("p",null,"This is the CSharp Project that references ",(0,r.kt)("strong",{parentName:"p"},"RSCG_JSON2Class")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {20}",showLineNumbers:!0,"{20}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n<ItemGroup>\n  <None Remove="testData.json" />\n</ItemGroup>\n<ItemGroup>\n  <AdditionalFiles Include="testData.json">\n    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\n  </AdditionalFiles>\n</ItemGroup>\n    \n\n    <ItemGroup>\n  <PackageReference Include="RSCG_JSON2Class" Version="2024.2.29.807" OutputItemType="Analyzer" ReferenceOutputAssembly="false"  />\n</ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n        <GenerateDocumentationFile>True</GenerateDocumentationFile>\n    </PropertyGroup>\n\n\n</Project>\n\n'))),(0,r.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_JSON2Class\\src\\JSON2ClassConsole\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"RSCG_JSON2Class")," in ",(0,r.kt)("em",{parentName:"p"},"Program.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using System.Text.Json;\nvar testData = JsonSerializer.Deserialize<JSON2ClassConsole.SettingsJson.testData>(System.IO.File.ReadAllText("testData.json"));\nArgumentNullException.ThrowIfNull(testData);\nConsole.WriteLine(testData.Logging.LogLevel.Default);\nConsole.WriteLine(testData.DictData.Number_2);\n'))),(0,r.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_JSON2Class\\src\\JSON2ClassConsole\\testData.json",label:"testData.json",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"RSCG_JSON2Class")," in ",(0,r.kt)("em",{parentName:"p"},"testData.json")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'{\n  "Logging": {\n    "LogLevel": {\n      "Default": "Information",\n      "Microsoft": "Warning",\n      "MicrosoftHostingLifetime": "Trace"\n    }\n  },\n  "PropChars": {\n    "a": "ab\'"\n  },\n  "NoProp": {},\n  "AllowedHosts": "*",\n  "MyTest": "\'aa < >",\n  "DictData": {\n    "Test": {\n      "1234a": [\n        "1a",\n        "b"\n      ]\n    },\n    "A": "asdasd",\n    "2": "asdasd",\n    "MyNumber": 10,\n    "55": {\n      "a": "b1",\n      "2": "test1"\n    }\n  }\n}\n')))),(0,r.kt)("h3",{id:"generated-files"},"Generated Files"),(0,r.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_JSON2Class\\src\\JSON2ClassConsole\\obj\\GX\\RSCG_JSON2Class\\RSCG_JSON2Class.RSCG_JSON2Class\\testData.cs",label:"testData.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//     Runtime Version:\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nusing System;\nusing System.Collections.Generic;\nusing System.Runtime.Serialization;\nnamespace JSON2ClassConsole.SettingsJson\n{\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class LogLevel \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "DEFAULT":\n                    return this.Default ;\n                \n                case "MICROSOFT":\n                    return this.Microsoft ;\n                \n                case "MICROSOFTHOSTINGLIFETIME":\n                    return this.MicrosoftHostingLifetime ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from LogLevel prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "Default" ;\n            \n                yield return "Microsoft" ;\n            \n                yield return "MicrosoftHostingLifetime" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("Default")]\n        public string Default { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("Microsoft")]\n        public string Microsoft { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("MicrosoftHostingLifetime")]\n        public string MicrosoftHostingLifetime { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class Logging \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "LOGLEVEL":\n                    return this.LogLevel ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from Logging prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "LogLevel" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("LogLevel")]\n        public LogLevel LogLevel { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class PropChars \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "A":\n                    return this.A ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from PropChars prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "A" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("a")]\n        public string A { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class NoProp \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from NoProp prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n            yield break;\n        }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class Test \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "NUMBER_1234A":\n                    return this.Number_1234a ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from Test prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "Number_1234a" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("1234a")]\n        public IList<string> Number_1234a { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class Number_55 \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "A":\n                    return this.A ;\n                \n                case "NUMBER_2":\n                    return this.Number_2 ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from Number_55 prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "A" ;\n            \n                yield return "Number_2" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("a")]\n        public string A { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("2")]\n        public string Number_2 { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class DictData \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "TEST":\n                    return this.Test ;\n                \n                case "A":\n                    return this.A ;\n                \n                case "NUMBER_2":\n                    return this.Number_2 ;\n                \n                case "MYNUMBER":\n                    return this.MyNumber ;\n                \n                case "NUMBER_55":\n                    return this.Number_55 ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from DictData prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "Test" ;\n            \n                yield return "A" ;\n            \n                yield return "Number_2" ;\n            \n                yield return "MyNumber" ;\n            \n                yield return "Number_55" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("Test")]\n        public Test Test { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("A")]\n        public string A { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("2")]\n        public string Number_2 { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("MyNumber")]\n        public int MyNumber { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("55")]\n        public Number_55 Number_55 { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class testData \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "LOGGING":\n                    return this.Logging ;\n                \n                case "PROPCHARS":\n                    return this.PropChars ;\n                \n                case "NOPROP":\n                    return this.NoProp ;\n                \n                case "ALLOWEDHOSTS":\n                    return this.AllowedHosts ;\n                \n                case "MYTEST":\n                    return this.MyTest ;\n                \n                case "DICTDATA":\n                    return this.DictData ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from testData prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "Logging" ;\n            \n                yield return "PropChars" ;\n            \n                yield return "NoProp" ;\n            \n                yield return "AllowedHosts" ;\n            \n                yield return "MyTest" ;\n            \n                yield return "DictData" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("Logging")]\n        public Logging Logging { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("PropChars")]\n        public PropChars PropChars { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("NoProp")]\n        public NoProp NoProp { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("AllowedHosts")]\n        public string AllowedHosts { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("MyTest")]\n        public string MyTest { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("DictData")]\n        public DictData DictData { get; set; }\n        \n        \n    }\n\n}\n\n')))),(0,r.kt)("h2",{id:"usefull"},"Usefull"),(0,r.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{target:"_blank",href:n(23685).Z},"Download Example project RSCG_JSON2Class "))),(0,r.kt)("h3",{id:"share-rscg_json2class"},"Share RSCG_JSON2Class"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class&quote=RSCG_JSON2Class",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class&text=RSCG_JSON2Class:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class&title=RSCG_JSON2Class",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class&title=RSCG_JSON2Class&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RSCG_JSON2Class"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RSCG_JSON2Class")),(0,r.kt)("h3",{id:"in-the-same-category-filestocode---10-other-generators"},"In the same category (FilesToCode) - 10 other generators"),(0,r.kt)("h4",{id:"chornembeddedresourceaccessgenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Chorn.EmbeddedResourceAccessGenerator"},"Chorn.EmbeddedResourceAccessGenerator")),(0,r.kt)("h4",{id:"corecraft"},(0,r.kt)("a",{parentName:"h4",href:"/docs/corecraft"},"corecraft")),(0,r.kt)("h4",{id:"embedresourcecsharp"},(0,r.kt)("a",{parentName:"h4",href:"/docs/EmbedResourceCSharp"},"EmbedResourceCSharp")),(0,r.kt)("h4",{id:"lingogen"},(0,r.kt)("a",{parentName:"h4",href:"/docs/LingoGen"},"LingoGen")),(0,r.kt)("h4",{id:"notnotappsettings"},(0,r.kt)("a",{parentName:"h4",href:"/docs/NotNotAppSettings"},"NotNotAppSettings")),(0,r.kt)("h4",{id:"podimoconstembed"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Podimo.ConstEmbed"},"Podimo.ConstEmbed")),(0,r.kt)("h4",{id:"resxgenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/ResXGenerator"},"ResXGenerator")),(0,r.kt)("h4",{id:"rscg_utils"},(0,r.kt)("a",{parentName:"h4",href:"/docs/RSCG_Utils"},"RSCG_Utils")),(0,r.kt)("h4",{id:"thisassembly_resources"},(0,r.kt)("a",{parentName:"h4",href:"/docs/ThisAssembly_Resources"},"ThisAssembly_Resources")),(0,r.kt)("h4",{id:"weave"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Weave"},"Weave")))}g.isMDXComponent=!0},23685:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/RSCG_JSON2Class-b93c40b76643098d91d77d5b3b31e3d7.zip"}}]);