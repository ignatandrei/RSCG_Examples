"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[6642],{2339:(e,t,n)=>{n.d(t,{Ay:()=>l,RM:()=>r});var i=n(74848),s=n(28453);const r=[{value:"Category &quot;Console&quot; has the following generators:",id:"category-console-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function a(e){const t={a:"a",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h3,{id:"category-console-has-the-following-generators",children:'Category "Console" has the following generators:'}),"\n",(0,i.jsxs)(t.p,{children:["1 ",(0,i.jsx)(t.a,{href:"/docs/ConsoleAppFramework",children:"ConsoleAppFramework"})]}),"\n",(0,i.jsxs)(t.p,{children:["2 ",(0,i.jsx)(t.a,{href:"/docs/Figgle",children:"Figgle"})]}),"\n",(0,i.jsx)(t.h3,{id:"see-category",children:"See category"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"/docs/Categories/Console",children:"Console"})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},26220:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>_});const i=JSON.parse('{"id":"RSCG-Examples/Figgle","title":"200 - Figgle","description":"Generating ASCII art text for console applications","source":"@site/docs/RSCG-Examples/Figgle.md","sourceDirName":"RSCG-Examples","slug":"/Figgle","permalink":"/RSCG_Examples/v2/docs/Figgle","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2000,"frontMatter":{"sidebar_position":2000,"title":"200 - Figgle","description":"Generating ASCII art text for console applications","slug":"/Figgle"},"sidebar":"tutorialSidebar","previous":{"title":"199 - SuperFluid","permalink":"/RSCG_Examples/v2/docs/SuperFluid"},"next":{"title":"201 - Strings.ResourceGenerator","permalink":"/RSCG_Examples/v2/docs/Strings.ResourceGenerator"}}');var s=n(74848),r=n(28453),a=n(11470),l=n(19365),o=n(14252),g=n(2339);const c={sidebar_position:2e3,title:"200 - Figgle",description:"Generating ASCII art text for console applications",slug:"/Figgle"},d="Figgle  by Drew Noakes",h={},_=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"ASCII banner generation for .NET",id:"ascii-banner-generation-for-net",level:2},{value:"Installation",id:"installation",level:2},{value:"Sample apps",id:"sample-apps",level:2},{value:"More output examples",id:"more-output-examples",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share Figgle",id:"share-figgle",level:3},...g.RM];function m(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"figgle--by-drew-noakes",children:"Figgle  by Drew Noakes"})}),"\n",(0,s.jsx)(o.A,{toc:_}),"\n",(0,s.jsx)(t.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/Figgle.Generator/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/Figgle.Generator?label=Figgle.Generator",alt:"Nuget"})}),"\n",(0,s.jsx)(t.a,{href:"https://github.com/drewnoakes/figgle",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/github/last-commit/drewnoakes/figgle?label=updated",alt:"GitHub last commit"})}),"\n",(0,s.jsx)(t.img,{src:"https://img.shields.io/github/stars/drewnoakes/figgle?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,s.jsx)(t.h2,{id:"details",children:"Details"}),"\n",(0,s.jsx)(t.h3,{id:"info",children:"Info"}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsxs)(t.p,{children:["Name: ",(0,s.jsx)(t.strong,{children:"Figgle"})]}),(0,s.jsx)(t.p,{children:"A source generator that produces ASCII banners at compile-time."}),(0,s.jsx)(t.p,{children:"This package is a great choice if the strings you want to render\nare static (i.e. string literals). If you want to render dynamic\nstrings, use the Figgle package directly instead. You can use both\nat the same time."}),(0,s.jsx)(t.p,{children:"Author: Drew Noakes"}),(0,s.jsxs)(t.p,{children:["NuGet:\n",(0,s.jsx)(t.em,{children:(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/Figgle.Generator/",children:"https://www.nuget.org/packages/Figgle.Generator/"})})]}),(0,s.jsxs)(t.p,{children:["You can find more details at ",(0,s.jsx)(t.a,{href:"https://github.com/drewnoakes/figgle",children:"https://github.com/drewnoakes/figgle"})]}),(0,s.jsxs)(t.p,{children:["Source: ",(0,s.jsx)(t.a,{href:"https://github.com/drewnoakes/figgle",children:"https://github.com/drewnoakes/figgle"})]})]}),"\n",(0,s.jsx)(t.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,s.jsxs)(t.admonition,{type:"note",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:" _____ _         _     \n|   __|_|___ ___| |___ \n|   __| | . | . | | -_|\n|__|  |_|_  |_  |_|___|\n        |___|___|      \n"})}),(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/drewnoakes/figgle/actions/",children:(0,s.jsx)(t.img,{src:"https://github.com/drewnoakes/figgle/actions/workflows/CI.yml/badge.svg",alt:"Figgle Build Status"})}),"\n",(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/Figgle/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/Figgle",alt:"Figgle NuGet download count"})})]}),(0,s.jsx)(t.h2,{id:"ascii-banner-generation-for-net",children:"ASCII banner generation for .NET"}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-c#",children:'Console.WriteLine(\n    FiggleFonts.Standard.Render("Hello, World!"));\n'})}),(0,s.jsx)(t.p,{children:"Produces..."}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"  _   _      _ _         __        __         _     _ _\n | | | | ___| | | ___    \\ \\      / /__  _ __| | __| | |\n | |_| |/ _ \\ | |/ _ \\    \\ \\ /\\ / / _ \\| '__| |/ _` | |\n |  _  |  __/ | | (_) |    \\ V  V / (_) | |  | | (_| |_|\n |_| |_|\\___|_|_|\\___( )    \\_/\\_/ \\___/|_|  |_|\\__,_(_)\n                     |/\n"})}),(0,s.jsx)(t.p,{children:"Use Figgle's source generator to embed just the fonts you want into your assembly, or\u2014if the text to render is known ahead of time\u2014render that text during compilation, so you don't need to ship Figgle binaries with your app."}),(0,s.jsx)(t.h2,{id:"installation",children:"Installation"}),(0,s.jsx)(t.p,{children:"Figgle ships as NuGet packages that target .NET Standard 2.0, so runs almost everywhere."}),(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Project"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Badges"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/drewnoakes/figgle/tree/master/src/Figgle",children:"Figgle"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/Figgle/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/nuget/v/Figgle",alt:"v"})})," ",(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/Figgle/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/Figgle",alt:"dl"})})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The core library. Supports parsing font files and rendering text."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/drewnoakes/figgle/tree/master/src/Figgle.Fonts",children:"Figgle.Fonts"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/Figgle.Fonts/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/nuget/v/Figgle.Fonts",alt:"v"})})," ",(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/Figgle.Fonts/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/Figgle.Fonts",alt:"dl"})})]}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A collection of 250+ ",(0,s.jsx)(t.a,{href:"http://www.figlet.org/",children:"FIGlet"})," fonts, for use with Figgle."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/drewnoakes/figgle/tree/master/src/Figgle.Generator",children:"Figgle.Generator"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/Figgle.Generator/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/nuget/v/Figgle.Generator",alt:"v"})})," ",(0,s.jsx)(t.a,{href:"https://www.nuget.org/packages/Figgle.Generator/",children:(0,s.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/Figgle.Generator",alt:"dl"})})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A source generator to embedding fonts and render static text at compile-time."})]})]})]}),(0,s.jsx)(t.h2,{id:"sample-apps",children:"Sample apps"}),(0,s.jsx)(t.p,{children:"If you just want to see some code (it's not that complex) check out one of the following sample projects:"}),(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Sample"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/drewnoakes/figgle/samples/1-basics",children:"Basics"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"The easiest option, if you don't care about application size or memory use."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/drewnoakes/figgle/samples/2-static-text",children:"Static text generation"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.strong,{children:"For statically-known text"}),", have a source generator embed the rendered text directly into your assembly. Uses the ",(0,s.jsx)(t.code,{children:"Figgle.Generator"})," package, and uses a single attribute to render the text at compile time. If all Figgle text is rendered this way, you don't have to ship any ",(0,s.jsx)(t.code,{children:"Figgle"})," assembly with your app."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.a,{href:"https://github.com/drewnoakes/figgle/samples/3-embed-font-from-package",children:"Embed font from package"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsxs)(t.strong,{children:["For dynamic text, using a font from the ",(0,s.jsx)(t.code,{children:"Figgle.Fonts"})," package"]})," via an attribute. The font is embedded directly into your assembly. With this approach, you only need the lightweight ",(0,s.jsx)(t.code,{children:"Figgle"})," package at runtime."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsxs)(t.a,{href:"https://github.com/drewnoakes/figgle/samples/4-embed-font-from-file",children:["Embed font from ",(0,s.jsx)(t.code,{children:".flf"})," file"]})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsxs)(t.strong,{children:["For dynamic text, using a ",(0,s.jsx)(t.code,{children:".flf"})," font file"]})," via an attribute and ",(0,s.jsx)(t.code,{children:"<AdditionalFiles>"})," project item in the ",(0,s.jsx)(t.code,{children:".csproj"}),". The font is embedded directly into your assembly. With this approach, you only need the lightweight ",(0,s.jsx)(t.code,{children:"Figgle"})," package at runtime."]})]})]})]}),(0,s.jsx)(t.h2,{id:"more-output-examples",children:"More output examples"}),(0,s.jsxs)(t.p,{children:["Using ",(0,s.jsx)(t.code,{children:"FiggleFonts.Graffiti"}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"  ___ ___         .__  .__               __      __            .__       .___._.\n /   |   \\   ____ |  | |  |   ____      /  \\    /  \\___________|  |    __| _/| |\n/    ~    \\_/ __ \\|  | |  |  /  _ \\     \\   \\/\\/   /  _ \\_  __ \\  |   / __ | | |\n\\    Y    /\\  ___/|  |_|  |_(  <_> )     \\        (  <_> )  | \\/  |__/ /_/ |  \\|\n \\___|_  /  \\___  >____/____/\\____/  /\\   \\__/\\  / \\____/|__|  |____/\\____ |  __\n       \\/       \\/                   )/        \\/                         \\/  \\/\n"})}),(0,s.jsxs)(t.p,{children:["Using ",(0,s.jsx)(t.code,{children:"FiggleFonts.ThreePoint"}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"|_| _ || _    \\    / _  _| _||\n| |(/_||(_),   \\/\\/ (_)| |(_|.\n"})}),(0,s.jsxs)(t.p,{children:["Using ",(0,s.jsx)(t.code,{children:"FiggleFonts.Ogre"}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"            _ _          __    __           _     _   _ \n  /\\  /\\___| | | ___    / / /\\ \\ \\___  _ __| | __| | / \\\n / /_/ / _ \\ | |/ _ \\   \\ \\/  \\/ / _ \\| '__| |/ _` |/  /\n/ __  /  __/ | | (_) |   \\  /\\  / (_) | |  | | (_| /\\_/ \n\\/ /_/ \\___|_|_|\\___( )   \\/  \\/ \\___/|_|  |_|\\__,_\\/   \n                    |/                                  \n"})}),(0,s.jsxs)(t.p,{children:["Using ",(0,s.jsx)(t.code,{children:"FiggleFonts.Rectangles"}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"                                            __ \n _____     _ _          _ _ _         _   _|  |\n|  |  |___| | |___     | | | |___ ___| |_| |  |\n|     | -_| | | . |_   | | | | . |  _| | . |__|\n|__|__|___|_|_|___| |  |_____|___|_| |_|___|__|\n                  |_|                          \n"})}),(0,s.jsxs)(t.p,{children:["Using ",(0,s.jsx)(t.code,{children:"FiggleFonts.Slant"}),":"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"    __  __     ____           _       __           __    ____\n   / / / /__  / / /___       | |     / /___  _____/ /___/ / /\n  / /_/ / _ \\/ / / __ \\      | | /| / / __ \\/ ___/ / __  / / \n / __  /  __/ / / /_/ /      | |/ |/ / /_/ / /  / / /_/ /_/  \n/_/ /_/\\___/_/_/\\____( )     |__/|__/\\____/_/  /_/\\__,_(_)   \n                     |/                                      \n"})})]}),"\n",(0,s.jsx)(t.h3,{id:"about",children:"About"}),"\n",(0,s.jsx)(t.admonition,{type:"note",children:(0,s.jsx)(t.p,{children:"Generating ASCII art text for console applications"})}),"\n",(0,s.jsx)(t.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,s.jsx)(t.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsxs)(l.A,{value:"csproj",label:"CSharp Project",children:[(0,s.jsxs)(t.p,{children:["This is the CSharp Project that references ",(0,s.jsx)(t.strong,{children:"Figgle"})]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-xml",metastring:"showLineNumbers {11}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Figgle.Generator" Version="0.6.4" PrivateAssets="all"  />\n  </ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\n</Project>\n\n'})})]}),(0,s.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Figgle\\src\\FiggleDemo\\Program.cs",label:"Program.cs",children:[(0,s.jsxs)(t.p,{children:["This is the use of ",(0,s.jsx)(t.strong,{children:"Figgle"})," in ",(0,s.jsx)(t.em,{children:"Program.cs"})]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"Console.WriteLine(MyTexts.MyName);\n"})})]}),(0,s.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Figgle\\src\\FiggleDemo\\MyTexts.cs",label:"MyTexts.cs",children:[(0,s.jsxs)(t.p,{children:["This is the use of ",(0,s.jsx)(t.strong,{children:"Figgle"})," in ",(0,s.jsx)(t.em,{children:"MyTexts.cs"})]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'\n[Figgle.GenerateFiggleText(memberName: "MyName", fontName: "standard", sourceText: "AndreiIgnat")]\ninternal static partial class MyTexts\n{\n}\n/*\nList of available fonts from https://github.com/drewnoakes/figgle/blob/master/src/Figgle.Fonts/Aliases.csv\n1row,OneRow\n3-d,ThreeD\n3d_diagonal,ThreeDDiagonal\n3x5,ThreeByFive\n4max,FourMax\n5lineoblique,FiveLineOblique\namc3line,Amc3Line\namc3liv1,Amc3Liv1\namcaaa01,AmcAaa01\namcneko,AmcNeko\namcrazo2,AmcRazor2\namcrazor,AmcRazor\namcslash,AmcSlash\namcslder,AmcSlder\namcthin,AmcThin\namctubes,AmcTubes\namcun1,AmcUn1\nbarbwire,BarbWire\nbigchief,BigChief\nbigfig,BigFig\nbroadway_kb,BroadwayKB\ncalgphy2,Caligraphy2\ncatwalk,CatWalk\ncyberlarge,CyberLarge\ncybermedium,CyberMedium\ncybersmall,CyberSmall\ndancingfont,DancingFont\ndefleppard,DefLeppard\ndietcola,DietCola\ndosrebel,DosRebel\ndotmatrix,DotMatrix\ndoubleshorts,DoubleShorts\ndrpepper,DRPepper\ndwhistled,DWhistled\neftichess,EftiChess\neftifont,EftiFont\neftipiti,EftiPiti\neftirobot,EftiRobot\neftitalic,EftiItalic\neftiwall,EftiWall\neftiwater,EftiWater\nflowerpower,FlowerPower\nfourtops,FourTops\nfunface,FunFace\nfunfaces,FunFaces\ngeorgi16,Georgia16\nGeorgia11,Georgia11\ngraffiti,Graffiti\nhenry3d,Henry3d\nhorizontalleft,HorizontalLeft\nhorizontalright,HorizontalRight\nimpossible,Impossible\nkontoslant,KontoSlant\nlarry3d,Larry3d\nlildevil,LilDevil\nlineblocks,LineBlocks\nlockergnome,LockerGnome\nmaxfour,MaxFour\nmshebrew210,Mshebrew210\nnancyj,NancyJ\nnancyj-fancy,NancyJFancy\nnancyj-improved,NancyJImproved\nnancyj-underlined,NancyJUnderlined\nnscript,NScript\nntgreek,NTGreek\nnvscript,NVScript\noldbanner,OldBanner\nos2,OS2\nogre,Ogre\npeaksslant,PeaksSlant\nrectangles,Rectangles\nrowancap,RowanCap\nsantaclara,SantaClara\nsblood,SBlood\nslant,Slant\nslscript,ScriptSlant\nserifcap,SerifCap\nsmallcaps,SmallCaps\nsmisome1,IsometricSmall\nsmkeyboard,KeyboardSmall\nsmpoison,PoisonSmall\nsmscript,ScriptSmall\nsmshadow,ShadowSmall\nsmslant,SlantSmall\nsmtengwar,TengwarSmall\nstandard,Standard\nthreepoint,ThreePoint\nticksslant,TicksSlant\ntinker-toy,TinkerToy\ntwopoint,TwoPoint\nusaflag,UsaFlag\nwetletter,WetLetter\n\n*/\n'})})]})]}),"\n",(0,s.jsx)(t.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,s.jsx)(t.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Figgle\\src\\FiggleDemo\\obj\\GX\\Figgle.Generator\\Figgle.Generator.EmbedFontSourceGenerator\\EmbedFiggleFontAttribute.cs",label:"EmbedFiggleFontAttribute.cs",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// Copyright Drew Noakes. Licensed under the Apache-2.0 license. See the LICENSE file for more details.\n\n// <auto-generated>\n//     This code was generated by Figgle.Generator.\n//\n//     https://github.com/drewnoakes/figgle\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n\nusing System;\nusing System.Diagnostics;\nusing System.Diagnostics.CodeAnalysis;\n\nnamespace Figgle\n{\n    /// <summary>\n    /// Instructs a source generator to embed a Figgle font in the assembly, making it available\n    /// via a static property on class this attribute is applied to.\n    /// </summary>\n    /// <remarks>\n    /// <para>\n    /// This attribute is processed by a source generator in the <c>Figgle.Generator</c> package.\n    /// </para>\n    /// <para>\n    /// This source generator will embed the specified Figgle font into your assembly, which is a\n    /// more performant alternative to using the <c>Figgle.Fonts</c> package, which embeds all of\n    /// the Figgle fonts.\n    /// </para>\n    /// <para>\n    /// If the text you want Figgle to render is not statically known at compile time, you should\n    /// use this generator and ship the <c>Figgle</c> package.\n    /// </para>\n    /// <para>\n    /// If the text you want Figgle to render is statically known at compile time, you should use\n    /// <see cref="GenerateFiggleTextAttribute" /> instead.\n    /// </para>\n    /// </remarks>\n    [Conditional("INCLUDE_FIGGLE_GENERATOR_ATTRIBUTES")]\n    [ExcludeFromCodeCoverage]\n    [DebuggerNonUserCode]\n    [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)]\n    internal sealed class EmbedFiggleFontAttribute : Attribute\n    {\n        /// <summary>\n        /// The name of the property to add, whose getter will return the embedded <see cref="FiggleFont" />.\n        /// </summary>\n        public string MemberName { get; }\n\n        /// <summary>\n        /// The name of the font to use when rendering the text.\n        /// </summary>\n        public string FontName { get; }\n\n        /// <summary>\n        /// Initializes a new instance of the <see cref="EmbedFiggleFontAttribute"/> class.\n        /// </summary>\n        /// <param name="memberName">The name of the property to add, whose getter returns the embedded <paramref name="FiggleFont" />.</param>\n        /// <param name="fontName">The name of the font to use when rendering the text.</param>\n        public EmbedFiggleFontAttribute(string memberName, string fontName)\n        {\n            MemberName = memberName;\n            FontName = fontName;\n        }\n    }\n}\n'})})}),(0,s.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Figgle\\src\\FiggleDemo\\obj\\GX\\Figgle.Generator\\Figgle.Generator.RenderTextSourceGenerator\\GenerateFiggleTextAttribute.cs",label:"GenerateFiggleTextAttribute.cs",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// Copyright Drew Noakes. Licensed under the Apache-2.0 license. See the LICENSE file for more details.\n\n// <auto-generated>\n//     This code was generated by Figgle.Generator.\n//\n//     https://github.com/drewnoakes/figgle\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n\nusing System;\nusing System.Diagnostics;\nusing System.Diagnostics.CodeAnalysis;\n\nnamespace Figgle\n{\n    /// <summary>\n    /// Instructs a source generator to render a statically known string with a Figgle font, and to\n    /// make the value available via a static property of the class this attribute is applied to.\n    /// </summary>\n    /// <remarks>\n    /// <para>\n    /// This attribute is processed by a source generator in the <c>Figgle.Generator</c> package.\n    /// </para>\n    /// <para>\n    /// This source generator will embed rendered text directly into your code at compile time.\n    /// If the text you want Figgle to render is statically known at compile time, you should use\n    /// this generator and avoid shipping any Figgle binaries.\n    /// </para>\n    /// <para>\n    /// If the text you want Figgle to render is not statically known at compile time, you should\n    /// use <see cref="EmbedFiggleFontAttribute" /> instead.\n    /// </para>\n    /// </remarks>\n    [Conditional("INCLUDE_FIGGLE_GENERATOR_ATTRIBUTES")]\n    [ExcludeFromCodeCoverage]\n    [DebuggerNonUserCode]\n    [AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)]\n    internal sealed class GenerateFiggleTextAttribute : Attribute\n    {\n        /// <summary>\n        /// The name of the property to add, whose getter returns the rendered <see cref="SourceText" />.\n        /// </summary>\n        public string MemberName { get; }\n\n        /// <summary>\n        /// The name of the font to use when rendering the text.\n        /// </summary>\n        public string FontName { get; }\n\n        /// <summary>\n        /// The text to render using the specified font.\n        /// </summary>\n        public string SourceText { get; }\n\n        /// <summary>\n        /// Initializes a new instance of the <see cref="GenerateFiggleTextAttribute"/> class.\n        /// </summary>\n        /// <param name="memberName">The name of the property to add, whose getter will return the rendered <paramref name="sourceText" />.</param>\n        /// <param name="fontName">The name of the font to use when rendering the text.</param>\n        /// <param name="sourceText">The text to render using the specified font.</param>\n        public GenerateFiggleTextAttribute(string memberName, string fontName, string sourceText)\n        {\n            MemberName = memberName;\n            FontName = fontName;\n            SourceText = sourceText;\n        }\n    }\n}\n'})})}),(0,s.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Figgle\\src\\FiggleDemo\\obj\\GX\\Figgle.Generator\\Figgle.Generator.RenderTextSourceGenerator\\MyTexts.g.cs",label:"MyTexts.g.cs",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// Copyright Drew Noakes. Licensed under the Apache-2.0 license. See the LICENSE file for more details.\n\n// <auto-generated>\n//     This code was generated by Figgle.Generator.\n//\n//     https://github.com/drewnoakes/figgle\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n\npartial class MyTexts\n{\n    public static string MyName { get; } = @\"     _              _          _ ___                  _   \n    / \\   _ __   __| |_ __ ___(_)_ _|__ _ _ __   __ _| |_ \n   / _ \\ | '_ \\ / _` | '__/ _ \\ || |/ _` | '_ \\ / _` | __|\n  / ___ \\| | | | (_| | | |  __/ || | (_| | | | | (_| | |_ \n /_/   \\_\\_| |_|\\__,_|_|  \\___|_|___\\__, |_| |_|\\__,_|\\__|\n                                    |___/                 \n\";\n}\n"})})})]}),"\n",(0,s.jsx)(t.h2,{id:"useful",children:"Useful"}),"\n",(0,s.jsx)(t.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(64148).A+"",children:"Download Example project Figgle "})})}),"\n",(0,s.jsx)(t.h3,{id:"share-figgle",children:"Share Figgle"}),"\n",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFiggle&quote=Figgle",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFiggle&text=Figgle:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFiggle",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFiggle&title=Figgle",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFiggle&title=Figgle&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFiggle",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Figgle",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Figgle"})}),"\n",(0,s.jsx)(t.p,{children:"aaa"}),"\n",(0,s.jsx)(g.Ay,{})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},64148:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/files/Figgle-a3d3073a7605a9430eb51d459ed70eee.zip"}}]);