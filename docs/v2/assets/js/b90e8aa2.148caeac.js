"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[4648],{54181:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>h,frontMatter:()=>l,metadata:()=>m,toc:()=>d});var a=t(87462),o=(t(67294),t(3905)),r=t(73992),i=t(18679),s=t(68839);const l={sidebar_position:1200,title:"120 - LingoGen",description:"Translating from multiple languages",slug:"/LingoGen"},u="LingoGen  by Ruben Broere",m={unversionedId:"RSCG-Examples/LingoGen",id:"RSCG-Examples/LingoGen",title:"120 - LingoGen",description:"Translating from multiple languages",source:"@site/docs/RSCG-Examples/LingoGen.md",sourceDirName:"RSCG-Examples",slug:"/LingoGen",permalink:"/RSCG_Examples/v2/docs/LingoGen",draft:!1,tags:[],version:"current",sidebarPosition:1200,frontMatter:{sidebar_position:1200,title:"120 - LingoGen",description:"Translating from multiple languages",slug:"/LingoGen"},sidebar:"tutorialSidebar",previous:{title:"119 - AutoGen",permalink:"/RSCG_Examples/v2/docs/AutoGen"},next:{title:"121 - AutoSpectre",permalink:"/RSCG_Examples/v2/docs/AutoSpectre"}},p={},d=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use-1",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share LingoGen",id:"share-lingogen",level:3},{value:"In the same category (FilesToCode) - 10 other generators",id:"in-the-same-category-filestocode---10-other-generators",level:3},{value:"Chorn.EmbeddedResourceAccessGenerator",id:"chornembeddedresourceaccessgenerator",level:4},{value:"corecraft",id:"corecraft",level:4},{value:"EmbedResourceCSharp",id:"embedresourcecsharp",level:4},{value:"NotNotAppSettings",id:"notnotappsettings",level:4},{value:"Podimo.ConstEmbed",id:"podimoconstembed",level:4},{value:"ResXGenerator",id:"resxgenerator",level:4},{value:"RSCG_JSON2Class",id:"rscg_json2class",level:4},{value:"RSCG_Utils",id:"rscg_utils",level:4},{value:"ThisAssembly_Resources",id:"thisassembly_resources",level:4},{value:"Weave",id:"weave",level:4}],g={toc:d},c="wrapper";function h(e){let{components:n,...l}=e;return(0,o.kt)(c,(0,a.Z)({},g,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"lingogen--by-ruben-broere"},"LingoGen  by Ruben Broere"),(0,o.kt)(s.Z,{toc:d,mdxType:"TOCInline"}),(0,o.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RubenBroere.LingoGen/"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/RubenBroere.LingoGen?label=RubenBroere.LingoGen",alt:"Nuget"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/RubenBroere/lingo-gen"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/RubenBroere/lingo-gen?label=updated",alt:"GitHub last commit"})),"\n",(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/RubenBroere/lingo-gen?style=social",alt:"GitHub Repo stars"})),(0,o.kt)("h2",{id:"details"},"Details"),(0,o.kt)("h3",{id:"info"},"Info"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Name: ",(0,o.kt)("strong",{parentName:"p"},"LingoGen")),(0,o.kt)("p",{parentName:"admonition"},"A Roslyn source generator for statically typed string localization"),(0,o.kt)("p",{parentName:"admonition"},"Author: Ruben Broere"),(0,o.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/RubenBroere.LingoGen/"},"https://www.nuget.org/packages/RubenBroere.LingoGen/")),"   "),(0,o.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/RubenBroere/lingo-gen"},"https://github.com/RubenBroere/lingo-gen")),(0,o.kt)("p",{parentName:"admonition"},"Source : ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/RubenBroere/lingo-gen"},"https://github.com/RubenBroere/lingo-gen"))),(0,o.kt)("h3",{id:"original-readme"},"Original Readme"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("h1",{parentName:"admonition",id:"lingogen"},"LingoGen"),(0,o.kt)("p",{parentName:"admonition"},"LingoGen is a Roslyn source generator that generates strongly typed localized strings from a json file."),(0,o.kt)("h2",{parentName:"admonition",id:"why-strongly-typed-localized-strings"},"Why strongly typed localized strings?"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Compile time safety"),": You can't misspell a key or use a key that doesn't exist."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Refactoring"),": If you rename a key, the compiler will tell you all the places you need to update."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Discoverability"),": You get intellisense for all your localized strings."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Performance"),": The classes are build on compile time so no lookup in dictionaries."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Easy to use"),": Just add a json file and the required translations and you're good to go."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Feedback"),": LingoGen has a lot of warning and error feedback to help you create good translations.")),(0,o.kt)("h2",{parentName:"admonition",id:"how-to-use"},"How to use"),(0,o.kt)("ol",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ol"},"Add the ",(0,o.kt)("inlineCode",{parentName:"li"},"RubenBroere.LingoGen")," package to your project."),(0,o.kt)("li",{parentName:"ol"},"Create a ",(0,o.kt)("a",{parentName:"li",href:"#lingo-json"},"lingo.json")," file with the translations."),(0,o.kt)("li",{parentName:"ol"},"Add the ",(0,o.kt)("a",{parentName:"li",href:"#lingo-json"},"lingo.json")," file to your ",(0,o.kt)("inlineCode",{parentName:"li"},".csproj")," as an ",(0,o.kt)("inlineCode",{parentName:"li"},"AdditionalFiles")," item.   "),(0,o.kt)("li",{parentName:"ol"},"Use the generated classes in your code.")),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'using LingoGen;\n\npublic class MyClass\n{\n    public void MyMethod()\n    {\n        // From the lingo.json phrase "Sorry for the inconvenience."\n        Console.WriteLine(Lingo.SorryForTheInconvenience);\n        // Returns "Sorry voor het ongemak." if the current UI culture is Dutch. \n    }\n}\n')),(0,o.kt)("h2",{parentName:"admonition",id:"lingo-json"},"Lingo JSON"),(0,o.kt)("p",{parentName:"admonition"},"The Lingo.json file is a json file that contains the metadata, phrases and nouns.\nAs of now nouns are not supported but will be in the future."),(0,o.kt)("h3",{parentName:"admonition",id:"metadata"},"Metadata"),(0,o.kt)("p",{parentName:"admonition"},"Metadata stores global configuration and is required for LingoGen to work."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "metadata": {\n    "version": "0.0.0",\n    "languages": ["nl", "fr"] \n  }\n}\n')),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"version")," (optional): The version of the lingo file. May be used for future features."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"languages")," (required): An array of languages that are supported by the lingo file. English is always supported.")),(0,o.kt)("p",{parentName:"admonition"},"LingoGen uses ",(0,o.kt)("inlineCode",{parentName:"p"},"CultureInfo.CurrentUICulture.TwoLetterISOLanguageName")," to determine the current language.\nIf the current language is not supported, an error string will be returned. "),(0,o.kt)("h3",{parentName:"admonition",id:"phrases"},"Phrases"),(0,o.kt)("p",{parentName:"admonition"},"Phrases are the main feature as of now. They are the localized strings that are generated."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "phrases": {\n    "Sorry for the inconvenience.": {\n      "nl": "Sorry voor het ongemak.",\n      "fr": "D\xe9sol\xe9 pour le d\xe9rangement."\n    },\n    "Select a(n) {Noun}": {\n      "nl": "Selecteer een {Noun}",\n      "fr": "S\xe9lectionnez un(e) {Noun}"\n    }\n  }\n}\n')),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"phrases")," (required): A dictionary of english phrases with the required translations for the languages specified in the metadata. ")),(0,o.kt)("p",{parentName:"admonition"},"A phrase can contain arguments which are enclosed in curly braces.\nThis phrase will generate a method with the arguments as parameters. "),(0,o.kt)("h3",{parentName:"admonition",id:"nouns"},"Nouns"),(0,o.kt)("p",{parentName:"admonition"},"Nouns are currently not supported but will be in the future."),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "nouns": {\n    "World": {\n      "en": ["world", "worlds"],\n      "nl": ["wereld", "werelden"],\n      "fr": ["monde", "mondes"]\n    },\n    "Person": {\n      "en": ["person", "people"],\n      "nl": ["persoon", "mensen"],\n      "fr": ["personne", "personnes"]\n    }\n  }\n}\n')),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"nouns")," (required): A dictionary of nouns with the required translations for the languages specified in the metadata.")),(0,o.kt)("h2",{parentName:"admonition",id:"lingo-generated-classes"},"Lingo generated classes"),(0,o.kt)("p",{parentName:"admonition"},"The lingo generated classes are generated in the namespace ",(0,o.kt)("inlineCode",{parentName:"p"},"LingoGen")," and are named after the keywords inside the ",(0,o.kt)("a",{parentName:"p",href:"#lingo-json"},"lingo.json"),"."),(0,o.kt)("h3",{parentName:"admonition",id:"phrases-1"},"Phrases"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "phrases": {\n    "Sorry for the inconvenience.": {\n      "nl": "Sorry voor het ongemak.",\n      "fr": "D\xe9sol\xe9 pour le d\xe9rangement."\n    },\n    "Select a(n) {Noun}": {\n      "nl": "Selecteer een {Noun}",\n      "fr": "S\xe9lectionnez un(e) {Noun}"\n    }\n  }\n}\n')),(0,o.kt)("p",{parentName:"admonition"},"These example phrases will generate the following property and method:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'// In \'Lingo.SorryForTheInconvenience.g.cs\' \n\n/// <summary>\n/// Sorry for the inconvenience.\n/// </summary>\npublic static string SorryForTheInconvenience => CultureInfo.CurrentUICulture.TwoLetterISOLanguageName switch\n{\n    "nl" => "Sorry voor het ongemak.",\n    "fr" => "D\xe9sol\xe9 pour le d\xe9rangement.",\n    "en" => "Sorry for the inconvenience.",\n    _ => $"[ No \'SorryForTheInconvenience\' lingo for \'{CultureInfo.CurrentUICulture.TwoLetterISOLanguageName}\' ]"\n};\n\n// In \'Lingo.SelectAn_.g.cs\'\n\n/// <summary>\n/// Select a(n) {Noun}\n/// </summary>\npublic static string SelectAn_(string Noun) => CultureInfo.CurrentUICulture.TwoLetterISOLanguageName switch\n{\n    "nl" => $"Selecteer een {Noun}",\n    "fr" => $"S\xe9lectionnez un(e) {Noun}",\n    "en" => $"Select a(n) {Noun}",\n    _ => $"[ No \'SelectAn_\' lingo for \'{CultureInfo.CurrentUICulture.TwoLetterISOLanguageName}\' ]"\n};\n')),(0,o.kt)("p",{parentName:"admonition"},"All phrases are generated in a separate file with the name of the phrase.\nThis will make the incremental source generator faster than one big class. "),(0,o.kt)("h2",{parentName:"admonition",id:"roadmap"},"Roadmap"),(0,o.kt)("ul",{parentName:"admonition",className:"contains-task-list"},(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Nouns"),(0,o.kt)("li",{parentName:"ul",className:"task-list-item"},(0,o.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Custom noun metadata"))),(0,o.kt)("h3",{id:"about"},"About"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Translating from multiple languages")),(0,o.kt)("h2",{id:"how-to-use-1"},"How to use"),(0,o.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,o.kt)("p",null,"This is the CSharp Project that references ",(0,o.kt)("strong",{parentName:"p"},"LingoGen")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {19}",showLineNumbers:!0,"{19}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <None Remove="lingo.json" />\n  </ItemGroup>\n\n  <ItemGroup>\n    <AdditionalFiles Include="lingo.json" />\n  </ItemGroup>\n\n  <ItemGroup>\n    <PackageReference Include="RubenBroere.LingoGen" Version="0.2.1" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,o.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\LingoGen\\src\\TranslateDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,o.kt)("p",null,"  This is the use of ",(0,o.kt)("strong",{parentName:"p"},"LingoGen")," in ",(0,o.kt)("em",{parentName:"p"},"Program.cs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using System.Globalization;\n\nvar name = "Andrei ";\n\nCultureInfo newCulture = new CultureInfo("en");\nThread.CurrentThread.CurrentUICulture = newCulture;\n\nConsole.WriteLine(LingoGen.Lingo.Hello_(name));\n\nnewCulture = new CultureInfo("fr");\nThread.CurrentThread.CurrentUICulture = newCulture;\n\nConsole.WriteLine(LingoGen.Lingo.Hello_(name));\n\nnewCulture = new CultureInfo("it");\nThread.CurrentThread.CurrentUICulture = newCulture;\n\nConsole.WriteLine(LingoGen.Lingo.Hello_(name));\n\n')))),(0,o.kt)("h3",{id:"generated-files"},"Generated Files"),(0,o.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\LingoGen\\src\\TranslateDemo\\obj\\GX\\LingoGen.Generator\\LingoGen.Generator.LingoGenerator\\Lingo.g.cs",label:"Lingo.g.cs",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated/>\n\n\nnamespace LingoGen;\n\n/// <summary>\n/// Static class containing all lingo entries.\n/// </summary>\npublic static partial class Lingo\n{\n\n}\n\n"))),(0,o.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\LingoGen\\src\\TranslateDemo\\obj\\GX\\LingoGen.Generator\\LingoGen.Generator.LingoGenerator\\Lingo.Hello_.g.cs",label:"Lingo.Hello_.g.cs",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n\nusing System;\nusing System.Globalization;\n\nnamespace LingoGen;\n\npublic static partial class Lingo\n{\n    /// <summary>\n    /// Hello {Name}\n    /// </summary>\n    public static string Hello_(string Name) => CultureInfo.CurrentUICulture.TwoLetterISOLanguageName switch\n    {\n        "it" => $"Buongiorno {Name}",\n        "fr" => $"Bonjour {Name}",\n        "en" => $"Hello {Name}",\n        _ => $"[ No \'Hello_\' lingo for \'{CultureInfo.CurrentUICulture.TwoLetterISOLanguageName}\' ]"\n    };\n}\n\n')))),(0,o.kt)("h2",{id:"usefull"},"Usefull"),(0,o.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{target:"_blank",href:t(9298).Z},"Download Example project LingoGen "))),(0,o.kt)("h3",{id:"share-lingogen"},"Share LingoGen"),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FLingoGen&quote=LingoGen",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FLingoGen&text=LingoGen:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FLingoGen",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FLingoGen&title=LingoGen",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FLingoGen&title=LingoGen&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FLingoGen",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/LingoGen"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/LingoGen")),(0,o.kt)("h3",{id:"in-the-same-category-filestocode---10-other-generators"},"In the same category (FilesToCode) - 10 other generators"),(0,o.kt)("h4",{id:"chornembeddedresourceaccessgenerator"},(0,o.kt)("a",{parentName:"h4",href:"/docs/Chorn.EmbeddedResourceAccessGenerator"},"Chorn.EmbeddedResourceAccessGenerator")),(0,o.kt)("h4",{id:"corecraft"},(0,o.kt)("a",{parentName:"h4",href:"/docs/corecraft"},"corecraft")),(0,o.kt)("h4",{id:"embedresourcecsharp"},(0,o.kt)("a",{parentName:"h4",href:"/docs/EmbedResourceCSharp"},"EmbedResourceCSharp")),(0,o.kt)("h4",{id:"notnotappsettings"},(0,o.kt)("a",{parentName:"h4",href:"/docs/NotNotAppSettings"},"NotNotAppSettings")),(0,o.kt)("h4",{id:"podimoconstembed"},(0,o.kt)("a",{parentName:"h4",href:"/docs/Podimo.ConstEmbed"},"Podimo.ConstEmbed")),(0,o.kt)("h4",{id:"resxgenerator"},(0,o.kt)("a",{parentName:"h4",href:"/docs/ResXGenerator"},"ResXGenerator")),(0,o.kt)("h4",{id:"rscg_json2class"},(0,o.kt)("a",{parentName:"h4",href:"/docs/RSCG_JSON2Class"},"RSCG_JSON2Class")),(0,o.kt)("h4",{id:"rscg_utils"},(0,o.kt)("a",{parentName:"h4",href:"/docs/RSCG_Utils"},"RSCG_Utils")),(0,o.kt)("h4",{id:"thisassembly_resources"},(0,o.kt)("a",{parentName:"h4",href:"/docs/ThisAssembly_Resources"},"ThisAssembly_Resources")),(0,o.kt)("h4",{id:"weave"},(0,o.kt)("a",{parentName:"h4",href:"/docs/Weave"},"Weave")))}h.isMDXComponent=!0},9298:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/files/LingoGen-49730ec77e0a4b6289475f83991ca8db.zip"}}]);