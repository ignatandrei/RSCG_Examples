"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[2401],{96842:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>p,default:()=>k,frontMatter:()=>s,metadata:()=>m,toc:()=>u});var r=a(87462),n=(a(67294),a(3905)),i=a(73992),l=a(18679),o=a(68839);const s={sidebar_position:630,title:"63 - StringLiteral",description:"Optimizing memory for strings",slug:"/StringLiteral"},p="StringLiteral  by Nobuyuki Iwanaga",m={unversionedId:"RSCG-Examples/StringLiteral",id:"RSCG-Examples/StringLiteral",title:"63 - StringLiteral",description:"Optimizing memory for strings",source:"@site/docs/RSCG-Examples/StringLiteral.md",sourceDirName:"RSCG-Examples",slug:"/StringLiteral",permalink:"/RSCG_Examples/v2/docs/StringLiteral",draft:!1,tags:[],version:"current",sidebarPosition:630,frontMatter:{sidebar_position:630,title:"63 - StringLiteral",description:"Optimizing memory for strings",slug:"/StringLiteral"},sidebar:"tutorialSidebar",previous:{title:"62 - RSCG_Decorator",permalink:"/RSCG_Examples/v2/docs/RSCG_Decorator"},next:{title:"64 - ResXGenerator",permalink:"/RSCG_Examples/v2/docs/ResXGenerator"}},g={},u=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share StringLiteral",id:"share-stringliteral",level:3},{value:"In the same category (Optimizer) - 0 other generators",id:"in-the-same-category-optimizer---0-other-generators",level:3}],c={toc:u},d="wrapper";function k(e){let{components:t,...s}=e;return(0,n.kt)(d,(0,r.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"stringliteral--by-nobuyuki-iwanaga"},"StringLiteral  by Nobuyuki Iwanaga"),(0,n.kt)(o.Z,{toc:u,mdxType:"TOCInline"}),(0,n.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/StringLiteralGenerator/"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/StringLiteralGenerator?label=StringLiteralGenerator",alt:"Nuget"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/ufcpp/StringLiteralGenerator"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/ufcpp/StringLiteralGenerator?label=updated",alt:"GitHub last commit"})),"\n",(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/ufcpp/StringLiteralGenerator?style=social",alt:"GitHub Repo stars"})),(0,n.kt)("h2",{id:"details"},"Details"),(0,n.kt)("h3",{id:"info"},"Info"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Name: ",(0,n.kt)("strong",{parentName:"p"},"StringLiteral")),(0,n.kt)("p",{parentName:"admonition"},"A C# Source Generator for optimizing UTF-8 binaries."),(0,n.kt)("p",{parentName:"admonition"},"Author: Nobuyuki Iwanaga"),(0,n.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/StringLiteralGenerator/"},"https://www.nuget.org/packages/StringLiteralGenerator/")),"   "),(0,n.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/ufcpp/StringLiteralGenerator"},"https://github.com/ufcpp/StringLiteralGenerator")),(0,n.kt)("p",{parentName:"admonition"},"Source : ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/ufcpp/StringLiteralGenerator"},"https://github.com/ufcpp/StringLiteralGenerator"))),(0,n.kt)("h3",{id:"original-readme"},"Original Readme"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("h1",{parentName:"admonition",id:"c-stringliteralgenerator"},"C# StringLiteralGenerator"),(0,n.kt)("p",{parentName:"admonition"},"A C# ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/dotnet/roslyn/blob/master/docs/features/source-generators.md"},"Source Generator")," for optimizing UTF-8 binaries."),(0,n.kt)("p",{parentName:"admonition"},"Original source (manually written):"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-cs"},'namespace Sample\n{\n    partial class Literals\n    {\n        [StringLiteral.Utf8Attribute("a\u03b1\u3042\ud83d\ude0a")]\n        public static partial System.ReadOnlySpan<byte> S();\n    }\n}\n')),(0,n.kt)("p",{parentName:"admonition"},"Generated source:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-cs"},"namespace Sample\n{\n    partial class Literals\n    {\n        public static partial System.ReadOnlySpan<byte> S() => new byte[] {97, 206, 177, 227, 129, 130, 240, 159, 152, 138, };\n    }\n}\n")),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Generates UTF-8 binary data from string literals (UTF-16)."),(0,n.kt)("li",{parentName:"ul"},"The UTF-8 data is optimized to avoid allocation. see: ",(0,n.kt)("a",{parentName:"li",href:"https://vcsjones.dev/2019/02/01/csharp-readonly-span-bytes-static/"},"C# ReadOnlySpan and static data"))),(0,n.kt)("h2",{parentName:"admonition",id:"nuget"},"NuGet"),(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/StringLiteralGenerator"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/StringLiteralGenerator?style=flat-square",alt:"NuGet"}))),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-xml"},'<Project Sdk="Microsoft.NET.Sdk">\n\n    <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net5.0</TargetFramework>\n    </PropertyGroup>\n\n    <ItemGroup>\n        <PackageReference Include="StringLiteralGenerator" Version="1.0.0" />\n    </ItemGroup>\n\n</Project>\n')),(0,n.kt)("p",{parentName:"admonition"},"For versions earlier than .NET 5 SDK RC2 you may also need to add a reference to ",(0,n.kt)("inlineCode",{parentName:"p"},"Microsoft.Net.Compilers.Toolset"),".\nSo the ",(0,n.kt)("inlineCode",{parentName:"p"},"csproj")," may look like this:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-xml"},'<Project Sdk="Microsoft.NET.Sdk">\n\n    <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net5.0</TargetFramework>\n    </PropertyGroup>\n\n    <ItemGroup>\n        <PackageReference Include="StringLiteralGenerator" Version="1.0.0-preiew" />\n        <PackageReference Include="Microsoft.Net.Compilers.Toolset" Version="3.8.0-4.final" PrivateAssets="all" />\n    </ItemGroup>\n\n</Project>\n'))),(0,n.kt)("h3",{id:"about"},"About"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Optimizing memory for strings")),(0,n.kt)("h2",{id:"how-to-use"},"How to use"),(0,n.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,n.kt)(i.Z,{mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,n.kt)("p",null,"This is the CSharp Project that references ",(0,n.kt)("strong",{parentName:"p"},"StringLiteral")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {11}",showLineNumbers:!0,"{11}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="StringLiteralGenerator" Version="2.0.0" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,n.kt)(l.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\StringLiteral\\src\\StringLiteralDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"StringLiteral")," in ",(0,n.kt)("em",{parentName:"p"},"Program.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using StringLiteralDemo;\nusing System.Text;\n\nConsole.WriteLine(Encoding.UTF8.GetString(LiteralConstants.MyName()));\n\n"))),(0,n.kt)(l.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\StringLiteral\\src\\StringLiteralDemo\\LiteralConstants.cs",label:"LiteralConstants.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"StringLiteral")," in ",(0,n.kt)("em",{parentName:"p"},"LiteralConstants.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'namespace StringLiteralDemo;\n\npartial class LiteralConstants\n{\n    [StringLiteral.Utf8Attribute("Andrei Ignat")]\n    public static partial System.ReadOnlySpan<byte> MyName();\n}\n\n')))),(0,n.kt)("h3",{id:"generated-files"},"Generated Files"),(0,n.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,n.kt)(i.Z,{mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\StringLiteral\\src\\StringLiteralDemo\\obj\\GX\\StringLiteralGenerator\\StringLiteralGenerator.Utf8StringLiteralGenerator\\StringLiteralDemo_LiteralConstants_utf8literal.cs",label:"StringLiteralDemo_LiteralConstants_utf8literal.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated />\nnamespace StringLiteralDemo\n{\npartial class LiteralConstants\n{\n    public static partial System.ReadOnlySpan<byte> MyName() => new byte[] {65, 110, 100, 114, 101, 105, 32, 73, 103, 110, 97, 116, };\n}\n}\n\n"))),(0,n.kt)(l.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\StringLiteral\\src\\StringLiteralDemo\\obj\\GX\\StringLiteralGenerator\\StringLiteralGenerator.Utf8StringLiteralGenerator\\Utf8Attribute.cs",label:"Utf8Attribute.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated />\nusing System;\nnamespace StringLiteral\n{\n    [System.Diagnostics.Conditional("COMPILE_TIME_ONLY")]\n    [AttributeUsage(AttributeTargets.Method, Inherited = false, AllowMultiple = false)]\n    sealed class Utf8Attribute : Attribute\n    {\n        public Utf8Attribute(string s) { }\n    }\n}\n\n')))),(0,n.kt)("h2",{id:"usefull"},"Usefull"),(0,n.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{target:"_blank",href:a(75504).Z},"Download Example project StringLiteral "))),(0,n.kt)("h3",{id:"share-stringliteral"},"Share StringLiteral"),(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStringLiteral&quote=StringLiteral",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStringLiteral&text=StringLiteral:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStringLiteral",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStringLiteral&title=StringLiteral",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStringLiteral&title=StringLiteral&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStringLiteral",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/StringLiteral"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/StringLiteral")),(0,n.kt)("h3",{id:"in-the-same-category-optimizer---0-other-generators"},"In the same category (Optimizer) - 0 other generators"))}k.isMDXComponent=!0},75504:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/files/StringLiteral-51a5d7291642b2de9b71739a73b3de80.zip"}}]);