"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[2921],{2280:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/files/DeeDee-2d7915ebfe6fae567f70fe331a8dbb8c.zip"},42476:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>g,frontMatter:()=>c,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"RSCG-Examples/DeeDee","title":"35 - DeeDee","description":"Mediatr generated data","source":"@site/docs/RSCG-Examples/DeeDee.md","sourceDirName":"RSCG-Examples","slug":"/DeeDee","permalink":"/RSCG_Examples/v2/docs/DeeDee","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/RSCG-Examples/DeeDee.md","tags":[],"version":"current","sidebarPosition":350,"frontMatter":{"sidebar_position":350,"title":"35 - DeeDee","description":"Mediatr generated data","slug":"/DeeDee"},"sidebar":"tutorialSidebar","previous":{"title":"34 - MemoryPack","permalink":"/RSCG_Examples/v2/docs/MemoryPack"},"next":{"title":"36 - ProxyGen","permalink":"/RSCG_Examples/v2/docs/ProxyGen"}}');var s=i(74848),r=i(28453),a=i(11470),o=i(19365),l=i(14252);const c={sidebar_position:350,title:"35 - DeeDee",description:"Mediatr generated data",slug:"/DeeDee"},d="DeeDee  by joh-pot",p={},h=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share DeeDee",id:"share-deedee",level:3},{value:"In the same category (Mediator) - 2 other generators",id:"in-the-same-category-mediator---2-other-generators",level:3},{value:"Immediate.Handlers",id:"immediatehandlers",level:4},{value:"Mediator",id:"mediator",level:4}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"deedee--by-joh-pot",children:"DeeDee  by joh-pot"})}),"\n",(0,s.jsx)(l.A,{toc:h}),"\n",(0,s.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/DeeDee/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/DeeDee?label=DeeDee",alt:"Nuget"})}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/joh-pot/DeeDee/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/joh-pot/DeeDee?label=updated",alt:"GitHub last commit"})}),"\n",(0,s.jsx)(n.img,{src:"https://img.shields.io/github/stars/joh-pot/DeeDee?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,s.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,s.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["Name: ",(0,s.jsx)(n.strong,{children:"DeeDee"})]}),(0,s.jsx)(n.p,{children:"Mediator pattern using source generation for .NET"}),(0,s.jsx)(n.p,{children:"Author: joh-pot"}),(0,s.jsxs)(n.p,{children:["NuGet:\n",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/DeeDee/",children:"https://www.nuget.org/packages/DeeDee/"})})]}),(0,s.jsxs)(n.p,{children:["You can find more details at ",(0,s.jsx)(n.a,{href:"https://github.com/joh-pot/DeeDee/",children:"https://github.com/joh-pot/DeeDee/"})]}),(0,s.jsxs)(n.p,{children:["Source: ",(0,s.jsx)(n.a,{href:"https://github.com/joh-pot/DeeDee/",children:"https://github.com/joh-pot/DeeDee/"})]})]}),"\n",(0,s.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.h1,{id:"deedee",children:"DeeDee"}),(0,s.jsx)(n.p,{children:"Mediator using source generation for .NET"}),(0,s.jsx)(n.p,{children:"Send in-process commands/queries to handlers either sync or async. The mechanism for sending is generated during compile time as overloads based on your code."}),(0,s.jsx)(n.h1,{id:"installation",children:"Installation"}),(0,s.jsxs)(n.p,{children:["Nuget Package manager>",(0,s.jsx)(n.code,{children:"Install-Package DeeDee"})]}),(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"https://github.com/joh-pot/DeeDee/wiki",children:"wiki"})," for full details"]})]}),"\n",(0,s.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Mediatr generated data"})}),"\n",(0,s.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,s.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsxs)(o.A,{value:"csproj",label:"CSharp Project",children:[(0,s.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,s.jsx)(n.strong,{children:"DeeDee"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {14}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\t<ItemGroup>\n\t\t<PackageReference Include="DeeDee" Version="2.0.0" />\n\t\t<PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />\n\t\t\n\t</ItemGroup>\n\n</Project>\n\n'})})]}),(0,s.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\Program.cs",label:"Program.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"DeeDee"})," in ",(0,s.jsx)(n.em,{children:"Program.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'Console.WriteLine("Hello, World!");\nServiceCollection services = new ();\nDeeDeeDemo.DeeDee.Generated.IocExtensions.AddDispatcher(services);\n\nservices.AddSingleton(typeof(IPipelineAction<Ping, Pong>), typeof(GenericLoggerHandler)); // This will run 1st\n\nvar serviceProvider = services.BuildServiceProvider();\n\nvar mediator = serviceProvider.GetRequiredService<DeeDeeDemo.DeeDee.Generated.Models.IDispatcher>();\nvar id = Guid.NewGuid();\nvar request = new Ping(id);\n\nvar response = mediator.Send(request);\n\nConsole.WriteLine("-----------------------------------");\nConsole.WriteLine("ID: " + id);\nConsole.WriteLine(request);\nConsole.WriteLine(response);\n\n\n'})})]}),(0,s.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\PingPong.cs",label:"PingPong.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"DeeDee"})," in ",(0,s.jsx)(n.em,{children:"PingPong.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'public sealed record Ping(Guid Id) : IRequest<Pong>;\n\npublic sealed record Pong(Guid Id);\n\n\npublic sealed class PingHandler : IPipelineAction<Ping, Pong>\n{\n\n    public Pong Invoke(Ping request, ref PipelineContext<Pong> context, Next<Pong> next)\n    {\n        Console.WriteLine("4) Returning pong!");\n        return new Pong(request.Id);\n    }\n}\n\n'})})]}),(0,s.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\GenericLoggerHandler.cs",label:"GenericLoggerHandler.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"DeeDee"})," in ",(0,s.jsx)(n.em,{children:"GenericLoggerHandler.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'public sealed class GenericLoggerHandler : IPipelineAction<Ping, Pong>\n{\n    public Pong Invoke(Ping request, ref PipelineContext<Pong> context, Next<Pong> next)\n    {\n        Console.WriteLine("1) Running logger handler");\n        try\n        {\n            var response = next(request , ref context);\n            Console.WriteLine("5) No error!");\n            return response;\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("error:" + ex.Message);\n            throw;\n        }\n    }\n}\n'})})]})]}),"\n",(0,s.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,s.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\obj\\GX\\DeeDee\\DeeDee.SourceGenerator\\Dispatcher.cs",label:"Dispatcher.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"using System;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Linq;\nusing DeeDee.Models;\nusing ServiceProvider = DeeDee.Models.ServiceProvider;\n\nnamespace DeeDeeDemo.DeeDee.Generated.Models\n{\n    public class Dispatcher : IDispatcher\n    {\n        private readonly ServiceProvider _serviceFactory;\n        private readonly Lazy<Next<Pong>> _Ping_Pong_lazy;\n        public Dispatcher(ServiceProvider service)\n        {\n            _serviceFactory = service;\n            _Ping_Pong_lazy = new Lazy<Next<Pong>>(Build<Ping, Pong>);\n        }\n\n        public Pong Send(Ping request)\n        {\n            var context = new PipelineContext<Pong>();\n            Next<Pong> builtPipeline = _Ping_Pong_lazy.Value;\n            return builtPipeline(request, ref context);\n        }\n\n        private NextAsync BuildAsync<TRequest>()\n            where TRequest : IRequest\n        {\n            {\n                var actions = _serviceFactory.GetServices<IPipelineActionAsync<TRequest>>();\n                var builtPipeline = actions.Aggregate((NextAsync)((req, ctx, tkn) => Task.CompletedTask), (next, pipeline) => (req, ctx, tkn) => pipeline.InvokeAsync((TRequest)req, ctx, next, tkn));\n                return builtPipeline;\n            }\n        }\n\n        private Next Build<TRequest>()\n            where TRequest : IRequest\n        {\n            {\n                var actions = _serviceFactory.GetServices<IPipelineAction<TRequest>>();\n                var builtPipeline = actions.Aggregate((Next)((IRequest req, ref PipelineContext ctx) =>\n                {\n                    {\n                    }\n                }), (next, pipeline) => (IRequest req, ref PipelineContext ctx) => pipeline.Invoke((TRequest)req, ref ctx, next));\n                return builtPipeline;\n            }\n        }\n\n        private NextAsync<TResponse> BuildAsync<TRequest, TResponse>()\n            where TRequest : IRequest<TResponse>\n        {\n            {\n                var actions = _serviceFactory.GetServices<IPipelineActionAsync<TRequest, TResponse>>();\n                var builtPipeline = actions.Aggregate((NextAsync<TResponse>)((req, ctx, tkn) => Task.FromResult(ctx.Result)), (next, pipeline) => (req, ctx, tkn) => pipeline.InvokeAsync((TRequest)req, ctx, next, tkn));\n                return builtPipeline;\n            }\n        }\n\n        private Next<TResponse> Build<TRequest, TResponse>()\n            where TRequest : IRequest<TResponse>\n        {\n            {\n                var actions = _serviceFactory.GetServices<IPipelineAction<TRequest, TResponse>>();\n                var builtPipeline = actions.Aggregate((Next<TResponse>)((IRequest<TResponse> req, ref PipelineContext<TResponse> ctx) => ctx.Result), (next, pipeline) => (IRequest<TResponse> req, ref PipelineContext<TResponse> ctx) => pipeline.Invoke((TRequest)req, ref ctx, next));\n                return builtPipeline;\n            }\n        }\n    }\n}\n"})})}),(0,s.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\obj\\GX\\DeeDee\\DeeDee.SourceGenerator\\IDispatcher.cs",label:"IDispatcher.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"using System;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing DeeDee.Models;\n\nnamespace DeeDeeDemo.DeeDee.Generated.Models\n{\n    public interface IDispatcher\n    {\n        public Pong Send(Ping request);\n    }\n}\n"})})}),(0,s.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\obj\\GX\\DeeDee\\DeeDee.SourceGenerator\\IocExtensions.cs",label:"IocExtensions.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\n            using System;\n            using System.Linq;\n            using System.Reflection;\n            using DeeDee.Models;\n            using DeeDeeDemo.DeeDee.Generated.Models;\n            using Microsoft.Extensions.DependencyInjection;\n            using ServiceProvider = DeeDee.Models.ServiceProvider;\n            namespace DeeDeeDemo.DeeDee.Generated\n\n            {\n                internal static class IocExtensions\n                {\n                    public static IServiceCollection AddDispatcher(this IServiceCollection services, Lifetime lifetime = Lifetime.Singleton)\n                    {\n                        switch(lifetime)\n                        {\n                            case Lifetime.Singleton:\n                                services.AddSingleton<IDispatcher, Dispatcher>();\n                                services.AddSingleton<ServiceProvider>(ctx => ctx.GetRequiredService);\n                                break;\n\n                            case Lifetime.Scoped:\n                                services.AddScoped<IDispatcher, Dispatcher>();\n                                services.AddScoped<ServiceProvider>(ctx => ctx.GetRequiredService);\n                                break;\n\n                            case Lifetime.Transient:\n                                services.AddTransient<IDispatcher, Dispatcher>();\n                                services.AddTransient<ServiceProvider>(ctx => ctx.GetRequiredService);\n                                break;\n                        }\n                        \n                        RegisterPipelineActions(services);\n                        \n                        return services;\n                    }\n\n                    private static void RegisterPipelineActions(IServiceCollection services)\n                    {\n                        var pipelineTypes = AppDomain\n                            .CurrentDomain\n                            .GetAssemblies()\n                            .SelectMany\n                            (\n                                a => a.GetTypes().Where\n                                (\n                                   x => !x.IsInterface &&\n                                        !x.IsAbstract &&\n                                        x.GetInterfaces()\n                                            .Any\n                                            (\n                                                y => y.Name.Equals(typeof(IPipelineActionAsync<,>).Name,\n                                                         StringComparison.InvariantCulture) ||\n                                                     y.Name.Equals(typeof(IPipelineActionAsync<>).Name,\n                                                         StringComparison.InvariantCulture) ||\n                                                     y.Name.Equals(typeof(IPipelineAction<>).Name,\n                                                         StringComparison.InvariantCulture) ||\n                                                     y.Name.Equals(typeof(IPipelineAction<,>).Name, StringComparison.InvariantCulture)\n                                            )\n                                ).GroupBy(type => type.GetInterfaces()[0]).SelectMany(g => g.OrderByDescending(s => s.GetCustomAttribute<StepAttribute>()?.Order))\n                            );\n\n                        foreach (var type in pipelineTypes)\n                        {\n                            foreach (var implementedInterface in type.GetInterfaces())\n                            {\n                                var bindAs = type.GetCustomAttribute<BindAsAttribute>();\n                                switch (bindAs?.Lifetime)\n                                {\n                                    case Lifetime.Singleton:\n                                        services.AddSingleton(implementedInterface, type);\n                                        break;\n                                    case Lifetime.Scoped:\n                                        services.AddScoped(implementedInterface, type);\n                                        break;  \n                                    case Lifetime.Transient:\n                                        services.AddTransient(implementedInterface, type);\n                                        break;\n                                    default:\n                                        services.AddSingleton(implementedInterface, type);\n                                        break;\n                                }\n                                \n                            }\n                        } \n                    }\n                }\n            }\n"})})})]}),"\n",(0,s.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,s.jsx)(n.h3,{id:"download-example-net--c-",children:"Download Example (.NET  C# )"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(2280).A+"",children:"Download Example project DeeDee "})})}),"\n",(0,s.jsx)(n.h3,{id:"share-deedee",children:"Share DeeDee"}),"\n",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee&quote=DeeDee",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee&text=DeeDee:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee&title=DeeDee",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee&title=DeeDee&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/DeeDee",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/DeeDee"})}),"\n",(0,s.jsx)(n.h3,{id:"in-the-same-category-mediator---2-other-generators",children:"In the same category (Mediator) - 2 other generators"}),"\n",(0,s.jsx)(n.h4,{id:"immediatehandlers",children:(0,s.jsx)(n.a,{href:"/docs/Immediate.Handlers",children:"Immediate.Handlers"})}),"\n",(0,s.jsx)(n.h4,{id:"mediator",children:(0,s.jsx)(n.a,{href:"/docs/Mediator",children:"Mediator"})})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}}}]);