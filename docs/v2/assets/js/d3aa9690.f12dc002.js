"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[4512],{31599:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>m,toc:()=>d});var r=n(87462),a=(n(67294),n(3905)),o=n(73992),i=n(18679),s=n(68839);const l={sidebar_position:620,title:"62 - RSCG_Decorator",description:"Intercept methods - start, stop,exception",slug:"/RSCG_Decorator"},c="RSCG_Decorator  by Andrei Ignat",m={unversionedId:"RSCG-Examples/RSCG_Decorator",id:"RSCG-Examples/RSCG_Decorator",title:"62 - RSCG_Decorator",description:"Intercept methods - start, stop,exception",source:"@site/docs/RSCG-Examples/RSCG_Decorator.md",sourceDirName:"RSCG-Examples",slug:"/RSCG_Decorator",permalink:"/RSCG_Examples/v2/docs/RSCG_Decorator",draft:!1,tags:[],version:"current",sidebarPosition:620,frontMatter:{sidebar_position:620,title:"62 - RSCG_Decorator",description:"Intercept methods - start, stop,exception",slug:"/RSCG_Decorator"},sidebar:"tutorialSidebar",previous:{title:"61 - ProtobufSourceGenerator",permalink:"/RSCG_Examples/v2/docs/ProtobufSourceGenerator"},next:{title:"63 - StringLiteral",permalink:"/RSCG_Examples/v2/docs/StringLiteral"}},p={},d=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share RSCG_Decorator",id:"share-rscg_decorator",level:3},{value:"In the same category (EnhancementClass) - 26 other generators",id:"in-the-same-category-enhancementclass---26-other-generators",level:3},{value:"ApparatusAOT",id:"apparatusaot",level:4},{value:"AspectGenerator",id:"aspectgenerator",level:4},{value:"CommonCodeGenerator",id:"commoncodegenerator",level:4},{value:"DudNet",id:"dudnet",level:4},{value:"Enhanced.GetTypes",id:"enhancedgettypes",level:4},{value:"FastGenericNew",id:"fastgenericnew",level:4},{value:"GeneratorEquals",id:"generatorequals",level:4},{value:"HsuSgSync",id:"hsusgsync",level:4},{value:"Immutype",id:"immutype",level:4},{value:"Ling.Audit",id:"lingaudit",level:4},{value:"Lombok.NET",id:"lomboknet",level:4},{value:"M31.FluentAPI",id:"m31fluentapi",level:4},{value:"MemoryPack",id:"memorypack",level:4},{value:"Meziantou.Polyfill",id:"meziantoupolyfill",level:4},{value:"Microsoft.Extensions.Logging",id:"microsoftextensionslogging",level:4},{value:"Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator",id:"microsoftextensionsoptionsgeneratorsoptionsvalidatorgenerator",level:4},{value:"Microsoft.Interop.JavaScript.JSImportGenerator",id:"microsoftinteropjavascriptjsimportgenerator",level:4},{value:"OptionToStringGenerator",id:"optiontostringgenerator",level:4},{value:"QueryStringGenerator",id:"querystringgenerator",level:4},{value:"RSCG_UtilityTypes",id:"rscg_utilitytypes",level:4},{value:"StaticReflection",id:"staticreflection",level:4},{value:"SyncMethodGenerator",id:"syncmethodgenerator",level:4},{value:"System.Runtime.InteropServices",id:"systemruntimeinteropservices",level:4},{value:"System.Text.RegularExpressions",id:"systemtextregularexpressions",level:4},{value:"TelemetryLogging",id:"telemetrylogging",level:4},{value:"ThisClass",id:"thisclass",level:4}],g={toc:d},u="wrapper";function h(e){let{components:t,...l}=e;return(0,a.kt)(u,(0,r.Z)({},g,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rscg_decorator--by-andrei-ignat"},"RSCG_Decorator  by Andrei Ignat"),(0,a.kt)(s.Z,{toc:d,mdxType:"TOCInline"}),(0,a.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RSCG_Decorator/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/RSCG_Decorator?label=RSCG_Decorator",alt:"Nuget"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_Decorator"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/ignatandrei/RSCG_Decorator?label=updated",alt:"GitHub last commit"})),"\n",(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/ignatandrei/RSCG_Decorator?style=social",alt:"GitHub Repo stars"})),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("h3",{id:"info"},"Info"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Name: ",(0,a.kt)("strong",{parentName:"p"},"RSCG_Decorator")),(0,a.kt)("p",{parentName:"admonition"},"Roslyn Decorator for a class- intercept methods"),(0,a.kt)("p",{parentName:"admonition"},"Author: Andrei Ignat"),(0,a.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/RSCG_Decorator/"},"https://www.nuget.org/packages/RSCG_Decorator/")),"   "),(0,a.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_Decorator"},"https://github.com/ignatandrei/RSCG_Decorator")),(0,a.kt)("p",{parentName:"admonition"},"Source : ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_Decorator"},"https://github.com/ignatandrei/RSCG_Decorator"))),(0,a.kt)("h3",{id:"original-readme"},"Original Readme"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("h1",{parentName:"admonition",id:"rscg_decorator"},"RSCG_Decorator"),(0,a.kt)("p",{parentName:"admonition"},"Decorator for classes , permit to know when method start and ends"),(0,a.kt)("h2",{parentName:"admonition",id:"usage"},"Usage"),(0,a.kt)("p",{parentName:"admonition"},"Add reference to RSCG_Decorator and RSCG_DecoratorCommon"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<ItemGroup>\n    \n      <PackageReference Include="RSCG_Decorator" Version="7.2023.930.2116" OutputItemType="Analyzer" ReferenceOutputAssembly="false"  />\n      <PackageReference Include="RSCG_DecoratorCommon" Version="7.2023.930.2116" />\n</ItemGroup>\n<PropertyGroup>\n    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n    <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n</PropertyGroup>\n    \n')),(0,a.kt)("p",{parentName:"admonition"},"For any class that you want to intercept methods, implement interface IDecoratorMethodV1"),(0,a.kt)("p",{parentName:"admonition"},"See example at the RSCG_DecoratorTestConsole"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'public partial class Person : IDecoratorMethodV1\n{\n    public void EndMethod(MethodRecognizer recognizer)\n    {\n        logger.LogInformation("end "+recognizer.UniqueId);\n    }\n\n   \n    public void ExceptionMethod(Exception ex, MethodRecognizer recognizer)\n    {\n        logger.LogError(ex, "exception on " + recognizer.UniqueId+ " Value Parameters:" + recognizer.ValueTypeParametersString); \n    }\n\n\n    public void StartMethod(MethodRecognizer recognizer)\n    {\n        logger.LogInformation("start " + recognizer.UniqueId + " Value Parameters:"+recognizer.ValueTypeParametersString);\n   }\n}\n')),(0,a.kt)("h2",{parentName:"admonition",id:"usage-with-aspnet-core---or-any-di-framework"},"Usage with ASP.NET Core - or any DI framework"),(0,a.kt)("p",{parentName:"admonition"},"Let's take Person with interface IPerson. You have the following:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"serviceCollection \n          .AddTransient<IPerson, Person>();\n\n")),(0,a.kt)("p",{parentName:"admonition"},"You can add this as the latest"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"serviceCollection = serviceCollection\n     .AddTransient<Person, Person>()\n     .AddTransient<IPerson, Person_Decorator>();\n     \n")),(0,a.kt)("p",{parentName:"admonition"},"And when asking for IPerson , the last wins:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"\nvar data = serviceProvider.GetRequiredService<IPerson>();\n//obtaining Person_Decorator because is the last one\n\n"))),(0,a.kt)("h3",{id:"about"},"About"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Intercept methods - start, stop,exception")),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,a.kt)("p",null,"This is the CSharp Project that references ",(0,a.kt)("strong",{parentName:"p"},"RSCG_Decorator")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {22}",showLineNumbers:!0,"{22}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n      <IsPackable>false</IsPackable>\n  </PropertyGroup>\n\n  <PropertyGroup>\n    <TreatWarningsAsErrors>True</TreatWarningsAsErrors>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />\n    <PackageReference Include="Microsoft.Extensions.Logging" Version="7.0.0" />\n    <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="7.0.0" />\n  </ItemGroup>\n\n  <ItemGroup>\n      <PackageReference Include="RSCG_Decorator" Version="7.2023.930.2116" OutputItemType="Analyzer" ReferenceOutputAssembly="false"  />\n      <PackageReference Include="RSCG_DecoratorCommon" Version="7.2023.930.2116" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_Decorator\\src\\RSCG_DecoratorTestConsole\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"RSCG_Decorator")," in ",(0,a.kt)("em",{parentName:"p"},"Program.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'\nvar serviceCollection = new ServiceCollection()\n          .AddLogging(builder =>\n        builder.AddSimpleConsole(options =>\n        {\n            options.IncludeScopes = true;\n            options.SingleLine = true;\n            options.TimestampFormat = "HH:mm:ss ";\n        }))\n          .AddTransient<IPerson, Person>();\n\n//register here the decorator\n    serviceCollection = serviceCollection\n        .AddTransient<Person, Person>()\n        .AddTransient<IPerson, Person_Decorator>();\n\nvar serviceProvider=serviceCollection.BuildServiceProvider();\n\nArgumentNullException.ThrowIfNull(serviceProvider);\n\nvar logger = serviceProvider.GetRequiredService<ILoggerFactory>()\n    .CreateLogger<Program>();\n\n\n//using (logger.BeginScope("[scope is enabled]"))\n//{\n//    logger.LogInformation("Hello World!");\n//}\nlogger.LogInformation("Starting app!");\n\nvar data = serviceProvider.GetRequiredService<IPerson>();\ndata.FirstName = "Andrei";\ndata.LastName = "Ignat";\n\nConsole.WriteLine(data.GetType().FullName);\nConsole.WriteLine( data.FullName("|"));\n\ntry\n{\n    await data.SaveId(-100);\n}\ncatch(Exception ex)\n{\n    logger.LogError(ex, "in the main program");\n}\n//Console.ReadLine();\n\npublic partial class Program\n{\n\n}\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_Decorator\\src\\RSCG_DecoratorTestConsole\\PersonLogger.cs",label:"PersonLogger.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"RSCG_Decorator")," in ",(0,a.kt)("em",{parentName:"p"},"PersonLogger.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using RSCG_DecoratorCommon;\n\nnamespace RSCG_DecoratorTestConsole;\npublic partial class Person : IDecoratorMethodV1\n{\n    public void EndMethod(MethodRecognizer recognizer)\n    {\n        logger.LogInformation("end "+recognizer.UniqueId);\n    }\n\n   \n    public void ExceptionMethod(Exception ex, MethodRecognizer recognizer)\n    {\n        logger.LogError(ex, "exception on " + recognizer.UniqueId+ " Value Parameters:" + recognizer.ValueTypeParametersString); \n    }\n\n\n    public void StartMethod(MethodRecognizer recognizer)\n    {\n        logger.LogInformation("start " + recognizer.UniqueId + " Value Parameters:"+recognizer.ValueTypeParametersString);\n   }\n}\n\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_Decorator\\src\\RSCG_DecoratorTestConsole\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"RSCG_Decorator")," in ",(0,a.kt)("em",{parentName:"p"},"Person.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using Microsoft.Extensions.Logging;\nusing System.Text;\n\nnamespace RSCG_DecoratorTestConsole;\n\npublic partial  class Person : IPerson \n{\n    internal readonly ILogger<Person> logger;    \n    public Person(ILogger<Person> logger)\n    {\n        this.logger = logger;\n    }\n    public string? FirstName { get; set; }\n    public string? LastName { get; set; }\n    public string FullName(string separator=" ")\n    {\n        logger.LogInformation("from original method");\n        return FirstName+separator+LastName;\n    }\n    public void DisplayNameOnConsole()\n    {\n        Console.WriteLine(FullName());\n    }\n    public async Task<string> GetName()\n    {\n        await Task.Delay(1000);\n        return FirstName??"";\n    }\n    public Task<string> GetFullName()\n    {\n        return Task.FromResult( FullName());\n    }\n    public Task SaveId(int id)\n    {\n        if (id < 0)\n        {\n            throw new ArgumentException("this is an error because is <0 ");\n        }\n        return Task.CompletedTask;\n    }\n}\n\n')))),(0,a.kt)("h3",{id:"generated-files"},"Generated Files"),(0,a.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_Decorator\\src\\RSCG_DecoratorTestConsole\\obj\\GX\\RSCG_Decorator\\RSCG_Decorator.GeneratorDecorator\\RSCG_DecoratorTestConsole.Person_MethodDecoratorV1.cs",label:"RSCG_DecoratorTestConsole.Person_MethodDecoratorV1.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//generated by RSCG_Decorator, version 7.2023.930.2116\nnamespace RSCG_DecoratorTestConsole {\n    partial class Person_Decorator :RSCG_DecoratorTestConsole.IPerson {\n        private Person original;\n        public Person_Decorator (Person original ){\n            this.original=original;\n        }\n        //now decorate methods : 5\n\n\n        public string? FirstName {\n            get{\n        return original.FirstName;\n        }\n        set{\n        original.FirstName=value;\n    }            \n            \n} \n    \n        public string? LastName {\n            get{\n        return original.LastName;\n        }\n        set{\n        original.LastName=value;\n    }            \n            \n} \n    \n        /*\n        FullName \n        */\n        public string FullName(string separator = " ")\n        {\n        var FullName_14 =new RSCG_DecoratorCommon.MethodRecognizer("Person","FullName");\n        FullName_14.FileName="D:\\\\gth\\\\RSCG_Examples\\\\v2\\\\rscg_examples\\\\RSCG_Decorator\\\\src\\\\RSCG_DecoratorTestConsole\\\\Person.cs";\n        FullName_14.Line=14;\n\n            FullName_14.ValueTypeParameters.Add("separator", separator);\n                    using var mrUtils= new RSCG_DecoratorCommon.MRUtils(FullName_14, original);\n        try{\n             return original.FullName(separator);\n        }\n        catch(Exception ex){\n        mrUtils.SendException(ex);\n            throw;\n        }\n        \n        }\n        \n    \n        /*\n        DisplayNameOnConsole \n        */\n        public void DisplayNameOnConsole()\n        {\n        var DisplayNameOnConsole_19 =new RSCG_DecoratorCommon.MethodRecognizer("Person","DisplayNameOnConsole");\n        DisplayNameOnConsole_19.FileName="D:\\\\gth\\\\RSCG_Examples\\\\v2\\\\rscg_examples\\\\RSCG_Decorator\\\\src\\\\RSCG_DecoratorTestConsole\\\\Person.cs";\n        DisplayNameOnConsole_19.Line=19;\n        using var mrUtils= new RSCG_DecoratorCommon.MRUtils(DisplayNameOnConsole_19, original);\n        try{\n            original.DisplayNameOnConsole();\n        }\n        catch(Exception ex){\n        mrUtils.SendException(ex);\n            throw;\n        }\n        \n        }\n        \n    \n        /*\n        GetName \n        */\n        public async System.Threading.Tasks.Task<string> GetName()\n        {\n        var GetName_23 =new RSCG_DecoratorCommon.MethodRecognizer("Person","GetName");\n        GetName_23.FileName="D:\\\\gth\\\\RSCG_Examples\\\\v2\\\\rscg_examples\\\\RSCG_Decorator\\\\src\\\\RSCG_DecoratorTestConsole\\\\Person.cs";\n        GetName_23.Line=23;\n        using var mrUtils= new RSCG_DecoratorCommon.MRUtils(GetName_23, original);\n        try{\n            return await original.GetName();\n        }\n        catch(Exception ex){\n        mrUtils.SendException(ex);\n            throw;\n        }\n        \n        }\n        \n    \n        /*\n        GetFullName \n        */\n        public async System.Threading.Tasks.Task<string> GetFullName()\n        {\n        var GetFullName_28 =new RSCG_DecoratorCommon.MethodRecognizer("Person","GetFullName");\n        GetFullName_28.FileName="D:\\\\gth\\\\RSCG_Examples\\\\v2\\\\rscg_examples\\\\RSCG_Decorator\\\\src\\\\RSCG_DecoratorTestConsole\\\\Person.cs";\n        GetFullName_28.Line=28;\n        using var mrUtils= new RSCG_DecoratorCommon.MRUtils(GetFullName_28, original);\n        try{\n            return await original.GetFullName();\n        }\n        catch(Exception ex){\n        mrUtils.SendException(ex);\n            throw;\n        }\n        \n        }\n        \n    \n        /*\n        SaveId \n        */\n        public async System.Threading.Tasks.Task SaveId(int id)\n        {\n        var SaveId_32 =new RSCG_DecoratorCommon.MethodRecognizer("Person","SaveId");\n        SaveId_32.FileName="D:\\\\gth\\\\RSCG_Examples\\\\v2\\\\rscg_examples\\\\RSCG_Decorator\\\\src\\\\RSCG_DecoratorTestConsole\\\\Person.cs";\n        SaveId_32.Line=32;\n\n            SaveId_32.ValueTypeParameters.Add("id", id);\n                    using var mrUtils= new RSCG_DecoratorCommon.MRUtils(SaveId_32, original);\n        try{\n            await original.SaveId(id);\n        }\n        catch(Exception ex){\n        mrUtils.SendException(ex);\n            throw;\n        }\n        \n        }\n        \n    \n    }\n}\n\n\n')))),(0,a.kt)("h2",{id:"usefull"},"Usefull"),(0,a.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{target:"_blank",href:n(93841).Z},"Download Example project RSCG_Decorator "))),(0,a.kt)("h3",{id:"share-rscg_decorator"},"Share RSCG_Decorator"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_Decorator&quote=RSCG_Decorator",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_Decorator&text=RSCG_Decorator:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_Decorator",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_Decorator&title=RSCG_Decorator",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_Decorator&title=RSCG_Decorator&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_Decorator",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RSCG_Decorator"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RSCG_Decorator")),(0,a.kt)("h3",{id:"in-the-same-category-enhancementclass---26-other-generators"},"In the same category (EnhancementClass) - 26 other generators"),(0,a.kt)("h4",{id:"apparatusaot"},(0,a.kt)("a",{parentName:"h4",href:"/docs/ApparatusAOT"},"ApparatusAOT")),(0,a.kt)("h4",{id:"aspectgenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/AspectGenerator"},"AspectGenerator")),(0,a.kt)("h4",{id:"commoncodegenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/CommonCodeGenerator"},"CommonCodeGenerator")),(0,a.kt)("h4",{id:"dudnet"},(0,a.kt)("a",{parentName:"h4",href:"/docs/DudNet"},"DudNet")),(0,a.kt)("h4",{id:"enhancedgettypes"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Enhanced.GetTypes"},"Enhanced.GetTypes")),(0,a.kt)("h4",{id:"fastgenericnew"},(0,a.kt)("a",{parentName:"h4",href:"/docs/FastGenericNew"},"FastGenericNew")),(0,a.kt)("h4",{id:"generatorequals"},(0,a.kt)("a",{parentName:"h4",href:"/docs/GeneratorEquals"},"GeneratorEquals")),(0,a.kt)("h4",{id:"hsusgsync"},(0,a.kt)("a",{parentName:"h4",href:"/docs/HsuSgSync"},"HsuSgSync")),(0,a.kt)("h4",{id:"immutype"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Immutype"},"Immutype")),(0,a.kt)("h4",{id:"lingaudit"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Ling.Audit"},"Ling.Audit")),(0,a.kt)("h4",{id:"lomboknet"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Lombok.NET"},"Lombok.NET")),(0,a.kt)("h4",{id:"m31fluentapi"},(0,a.kt)("a",{parentName:"h4",href:"/docs/M31.FluentAPI"},"M31.FluentAPI")),(0,a.kt)("h4",{id:"memorypack"},(0,a.kt)("a",{parentName:"h4",href:"/docs/MemoryPack"},"MemoryPack")),(0,a.kt)("h4",{id:"meziantoupolyfill"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Meziantou.Polyfill"},"Meziantou.Polyfill")),(0,a.kt)("h4",{id:"microsoftextensionslogging"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Microsoft.Extensions.Logging"},"Microsoft.Extensions.Logging")),(0,a.kt)("h4",{id:"microsoftextensionsoptionsgeneratorsoptionsvalidatorgenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator"},"Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator")),(0,a.kt)("h4",{id:"microsoftinteropjavascriptjsimportgenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Microsoft.Interop.JavaScript.JSImportGenerator"},"Microsoft.Interop.JavaScript.JSImportGenerator")),(0,a.kt)("h4",{id:"optiontostringgenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/OptionToStringGenerator"},"OptionToStringGenerator")),(0,a.kt)("h4",{id:"querystringgenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/QueryStringGenerator"},"QueryStringGenerator")),(0,a.kt)("h4",{id:"rscg_utilitytypes"},(0,a.kt)("a",{parentName:"h4",href:"/docs/RSCG_UtilityTypes"},"RSCG_UtilityTypes")),(0,a.kt)("h4",{id:"staticreflection"},(0,a.kt)("a",{parentName:"h4",href:"/docs/StaticReflection"},"StaticReflection")),(0,a.kt)("h4",{id:"syncmethodgenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/SyncMethodGenerator"},"SyncMethodGenerator")),(0,a.kt)("h4",{id:"systemruntimeinteropservices"},(0,a.kt)("a",{parentName:"h4",href:"/docs/System.Runtime.InteropServices"},"System.Runtime.InteropServices")),(0,a.kt)("h4",{id:"systemtextregularexpressions"},(0,a.kt)("a",{parentName:"h4",href:"/docs/System.Text.RegularExpressions"},"System.Text.RegularExpressions")),(0,a.kt)("h4",{id:"telemetrylogging"},(0,a.kt)("a",{parentName:"h4",href:"/docs/TelemetryLogging"},"TelemetryLogging")),(0,a.kt)("h4",{id:"thisclass"},(0,a.kt)("a",{parentName:"h4",href:"/docs/ThisClass"},"ThisClass")))}h.isMDXComponent=!0},93841:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/RSCG_Decorator-58b4b279636cc2d93734fd2832ea2821.zip"}}]);