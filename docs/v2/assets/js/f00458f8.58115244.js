"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[3954],{13:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>T,metadata:()=>g,toc:()=>A});var t=n(7462),s=(n(7294),n(4137)),a=n(3992),p=n(425),i=n(8839);const T={sidebar_position:400,title:"40 - FastGenericNew",description:"Creating instances fast. As generator show source code. Otherwise could be a dll",slug:"/FastGenericNew"},o="FastGenericNew  by Boring3 Nyrest",g={unversionedId:"RSCG-Examples/FastGenericNew",id:"RSCG-Examples/FastGenericNew",title:"40 - FastGenericNew",description:"Creating instances fast. As generator show source code. Otherwise could be a dll",source:"@site/docs/RSCG-Examples/FastGenericNew.md",sourceDirName:"RSCG-Examples",slug:"/FastGenericNew",permalink:"/RSCG_Examples/v2/docs/FastGenericNew",draft:!1,tags:[],version:"current",sidebarPosition:400,frontMatter:{sidebar_position:400,title:"40 - FastGenericNew",description:"Creating instances fast. As generator show source code. Otherwise could be a dll",slug:"/FastGenericNew"},sidebar:"tutorialSidebar",previous:{title:"39 - Breezy",permalink:"/RSCG_Examples/v2/docs/Breezy"},next:{title:"41 - GeneratorEquals",permalink:"/RSCG_Examples/v2/docs/GeneratorEquals"}},l={},A=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share FastGenericNew",id:"share-fastgenericnew",level:3},{value:"In the same category (EnhancementClass)",id:"in-the-same-category-enhancementclass",level:2},{value:"ApparatusAOT",id:"apparatusaot",level:3},{value:"BuilderGenerator",id:"buildergenerator",level:3},{value:"EnumClass",id:"enumclass",level:3},{value:"GeneratorEquals",id:"generatorequals",level:3},{value:"Immutype",id:"immutype",level:3},{value:"Lombok.NET",id:"lomboknet",level:3},{value:"M31.FluentAPI",id:"m31fluentapi",level:3},{value:"MemoryPack",id:"memorypack",level:3},{value:"Meziantou.Polyfill",id:"meziantoupolyfill",level:3},{value:"Microsoft.Extensions.Logging",id:"microsoftextensionslogging",level:3},{value:"Microsoft.Interop.JavaScript.JSImportGenerator",id:"microsoftinteropjavascriptjsimportgenerator",level:3},{value:"NetEscapades.EnumGenerators",id:"netescapadesenumgenerators",level:3},{value:"Roozie.AutoInterface",id:"roozieautointerface",level:3},{value:"RSCG_Decorator",id:"rscg_decorator",level:3},{value:"RSCG_Static",id:"rscg_static",level:3},{value:"SyncMethodGenerator",id:"syncmethodgenerator",level:3},{value:"System.Runtime.InteropServices",id:"systemruntimeinteropservices",level:3},{value:"System.Text.RegularExpressions",id:"systemtextregularexpressions",level:3}],c={toc:A},y="wrapper";function m(e){let{components:r,...T}=e;return(0,s.kt)(y,(0,t.Z)({},c,T,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"fastgenericnew--by-boring3-nyrest"},"FastGenericNew  by Boring3 Nyrest"),(0,s.kt)(i.Z,{toc:A,mdxType:"TOCInline"}),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/FastGenericNew.SourceGenerator/"},(0,s.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/FastGenericNew.SourceGenerator?label=FastGenericNew.SourceGenerator",alt:"Nuget"})),"\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Nyrest/FastGenericNew"},(0,s.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/Nyrest/FastGenericNew?label=updated",alt:"GitHub last commit"})),"\n",(0,s.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/Nyrest/FastGenericNew?style=social",alt:"GitHub Repo stars"})),(0,s.kt)("h2",{id:"details"},"Details"),(0,s.kt)("h3",{id:"info"},"Info"),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"Name: ",(0,s.kt)("strong",{parentName:"p"},"FastGenericNew")),(0,s.kt)("p",{parentName:"admonition"},"Configurable Source Generator of FastGenericNew\nMinimum required: .NET Standard 2.0 & C# 8.0\nThe ultimate fast alternative to Activator.CreateInstance"),(0,s.kt)("p",{parentName:"admonition"},"Up to 50x faster than Activator.CreateInstance\nGeneric Parameters Support\nNon-Public Constructor Support\nNo Generic Constraints\nTryGetValue-like TryFastNew API\nLink Mode PublishTrimmed Support\nC# 8 Nullable Support\nC# 10 Parameterless struct constructors Support (Both invokes or not)"),(0,s.kt)("p",{parentName:"admonition"},"Author: Boring3 Nyrest"),(0,s.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,s.kt)("em",{parentName:"p"},(0,s.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/FastGenericNew.SourceGenerator/"},"https://www.nuget.org/packages/FastGenericNew.SourceGenerator/")),"   "),(0,s.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Nyrest/FastGenericNew"},"https://github.com/Nyrest/FastGenericNew")),(0,s.kt)("p",{parentName:"admonition"},"Source : ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/Nyrest/FastGenericNew"},"https://github.com/Nyrest/FastGenericNew"))),(0,s.kt)("h3",{id:"original-readme"},"Original Readme"),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("div",{align:"center"},(0,s.kt)("a",{href:"https://github.com/Nyrest/FastGenericNew"},(0,s.kt)("img",{height:"320",src:"https://github.com/Nyrest/FastGenericNew/raw/main/Assets/FastGenericNew-Wide.svg"})),(0,s.kt)("a",{href:"https://github.com/Nyrest/FastGenericNew/actions/workflows/tests.yml"},(0,s.kt)("img",{src:"https://img.shields.io/github/workflow/status/Nyrest/FastGenericNew/Tests?style=for-the-badge"})),(0,s.kt)("a",{href:"https://www.nuget.org/packages/FastGenericNew/"},(0,s.kt)("img",{src:"https://img.shields.io/nuget/vpre/FastGenericNew?style=for-the-badge&color=0065b3"})),(0,s.kt)("a",{href:"https://www.nuget.org/packages/FastGenericNew.SourceGenerator/"},(0,s.kt)("img",{src:"https://img.shields.io/nuget/vpre/FastGenericNew.SourceGenerator?label=SourceGenerator&style=for-the-badge&color=0065b3"}))),(0,s.kt)("h2",{parentName:"admonition",id:"-features"},"\u2728 Features"),(0,s.kt)("ul",{parentName:"admonition"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\u2714\ufe0f ",(0,s.kt)("strong",{parentName:"p"},"The best")," ",(0,s.kt)("inlineCode",{parentName:"p"},"CreateInstance")," ever"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Up to 50x faster than ",(0,s.kt)("inlineCode",{parentName:"li"},"Activator.CreateInstance")),(0,s.kt)("li",{parentName:"ul"},"Generic Parameters Support"),(0,s.kt)("li",{parentName:"ul"},"Zero boxing/unboxing"),(0,s.kt)("li",{parentName:"ul"},"TryGetValue-like TryFastNew API"),(0,s.kt)("li",{parentName:"ul"},"Link Mode ",(0,s.kt)("inlineCode",{parentName:"li"},"PublishTrimmed")," Support"),(0,s.kt)("li",{parentName:"ul"},"Non-Public Constructor Support"),(0,s.kt)("li",{parentName:"ul"},"No Generic Constraints"),(0,s.kt)("li",{parentName:"ul"},"Compatible with .NET Standard 2.0"),(0,s.kt)("li",{parentName:"ul"},"Multiple backend implementations."),(0,s.kt)("li",{parentName:"ul"},"Heavily tested on Win/Mac/Linux"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\ud83e\ude9b ",(0,s.kt)("strong",{parentName:"p"},"Modern")," Compiler Integration"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"Source Generator v2 (Incremental Generator)"),(0,s.kt)("li",{parentName:"ul"},"Highly Configurable (",(0,s.kt)("a",{parentName:"li",href:"https://github.com/Nyrest/FastGenericNew/wiki/SourceGenerator-Options"},"Props"),")"),(0,s.kt)("li",{parentName:"ul"},"Multi-threaded Generation"))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"\ud83d\udd25 ",(0,s.kt)("strong",{parentName:"p"},"Lastest")," C#/.NET Features Support"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/nullable-reference-types"},"C# 8 Nullable")," Support"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-10.0/parameterless-struct-constructors"},"C# 10 Parameterless struct constructors")," Support (Both invokes or not)"),(0,s.kt)("li",{parentName:"ul"},"WebAssembly Support")))),(0,s.kt)("h2",{parentName:"admonition",id:"-installation"},"\ud83d\udd27 Installation"),(0,s.kt)("blockquote",{parentName:"admonition"},(0,s.kt)("p",{parentName:"blockquote"},"You should only use one of them")),(0,s.kt)("h3",{parentName:"admonition",id:"pre-compiled-version"},"Pre-Compiled Version"),(0,s.kt)("pre",{parentName:"admonition"},(0,s.kt)("code",{parentName:"pre",className:"language-powershell"},"dotnet add package FastGenericNew --version 3.1.0-preview1\n")),(0,s.kt)("pre",{parentName:"admonition"},(0,s.kt)("code",{parentName:"pre",className:"language-xml"},'<ItemGroup>\n  <PackageReference Include="FastGenericNew" Version="3.1.0-preview1" />\n</ItemGroup>\n')),(0,s.kt)("h3",{parentName:"admonition",id:"sourcegenerator-version"},"SourceGenerator Version"),(0,s.kt)("pre",{parentName:"admonition"},(0,s.kt)("code",{parentName:"pre",className:"language-powershell"},"dotnet add package FastGenericNew.SourceGenerator --version 3.1.0-preview1\n")),(0,s.kt)("pre",{parentName:"admonition"},(0,s.kt)("code",{parentName:"pre",className:"language-xml"},'<ItemGroup>\n  <PackageReference Include="FastGenericNew.SourceGenerator" Version="3.1.0-preview1" />\n</ItemGroup>\n')),(0,s.kt)("h4",{parentName:"admonition",id:"sourcegeneratorv2-requires"},"SourceGeneratorV2 requires"),(0,s.kt)("blockquote",{parentName:"admonition"},(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},".NET Standard 2.0"))," or above",(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"C# 8.0"))," or above",(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"Roslyn 4.0.1"))," or above",(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"Modern IDE"))," ",(0,s.kt)("em",{parentName:"p"},"(Optional)"),"  ","[VS2022, Rider, VSCode]")),(0,s.kt)("h2",{parentName:"admonition",id:"-examples"},"\ud83d\udcd6 Examples"),(0,s.kt)("pre",{parentName:"admonition"},(0,s.kt)("code",{parentName:"pre",className:"language-cs"},'using FastGenericNew;\n\n// Simply replace \'Activator\' to \'FastNew\'\nvar obj = FastNew.CreateInstance<T>();\n\n// With parameter(s)\nvar obj2 = FastNew.CreateInstance<T, string>("text");\nvar obj3 = FastNew.CreateInstance<T, string, int>("text", 0);\n\n// Try pattern\n// NOTE: Try pattern will only check the constructor could be called (exist & callable)\n//       It will not catch or handle any exceptions thrown in the constructor.\nif (FastNew.TryCreateInstance<T, string>("arg0", out T result));\n{\n    // ...\n}\n')),(0,s.kt)("h3",{parentName:"admonition",id:"notes"},"Notes"),(0,s.kt)("blockquote",{parentName:"admonition"},(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("strong",{parentName:"p"},"With .NET Framework"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"Activator.CreateInstance<T>()")," invokes the parameterless constructor of ",(0,s.kt)("strong",{parentName:"p"},"ValueType")," if",(0,s.kt)("br",{parentName:"p"}),"\n","the constraint is ",(0,s.kt)("inlineCode",{parentName:"p"},"where T : new()")," but appears to ",(0,s.kt)("strong",{parentName:"p"},"ignore the parameterless constructor if the constraint is ",(0,s.kt)("inlineCode",{parentName:"strong"},"where T : struct")),".",(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("strong",{parentName:"p"},"But ",(0,s.kt)("inlineCode",{parentName:"strong"},"FastNew.CreateInstance<T>()")," will always invoke the parameterless constructor if it's available."),"  "),(0,s.kt)("p",{parentName:"blockquote"},"If you don't want to invoke the parameterless constructor of ",(0,s.kt)("strong",{parentName:"p"},"ValueType"),".",(0,s.kt)("br",{parentName:"p"}),"\n","Consider to use ",(0,s.kt)("inlineCode",{parentName:"p"},"FastNew.NewOrDefault<T>()")," which ",(0,s.kt)("strong",{parentName:"p"},"will never invoke the parameterless constructor of ",(0,s.kt)("inlineCode",{parentName:"strong"},"ValueType")))),(0,s.kt)("h2",{parentName:"admonition",id:"-benchmark"},"\ud83d\ude80 Benchmark"),(0,s.kt)("h3",{parentName:"admonition",id:"environment"},(0,s.kt)("strong",{parentName:"h3"},"Environment")),(0,s.kt)("pre",{parentName:"admonition"},(0,s.kt)("code",{parentName:"pre",className:"language-ini"},"BenchmarkDotNet=v0.13.1, OS=Windows 10.0.22000\nAMD Ryzen 9 3900X, 1 CPU, 24 logical and 12 physical cores\n.NET SDK=6.0.200-preview.22055.15\n  [Host]             : .NET 6.0.2 (6.0.222.6406), X64 RyuJIT\n  .NET 5.0           : .NET 5.0.14 (5.0.1422.5710), X64 RyuJIT\n  .NET 6.0           : .NET 6.0.2 (6.0.222.6406), X64 RyuJIT\n  .NET Framework 4.8 : .NET Framework 4.8 (4.8.4470.0), X64 RyuJIT\n")),(0,s.kt)("h3",{parentName:"admonition",id:"reference-types"},"Reference Types"),(0,s.kt)("p",{parentName:"admonition"},(0,s.kt)("a",{parentName:"p",href:"https://github.com/Nyrest/FastGenericNew/blob/main/FastGenericNew.Benchmarks/Benchmarks/ReferenceTypeBenchmark.cs"},(0,s.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/Nyrest/FastGenericNew/main/Assets/Benchmark_ReferenceType.png",alt:"Benchmark Result of Reference Types"}))),(0,s.kt)("h3",{parentName:"admonition",id:"value-types"},"Value Types"),(0,s.kt)("p",{parentName:"admonition"},(0,s.kt)("a",{parentName:"p",href:"https://github.com/Nyrest/FastGenericNew/blob/main/FastGenericNew.Benchmarks/Benchmarks/ValueTypeBenchmark.cs"},(0,s.kt)("img",{parentName:"a",src:"https://raw.githubusercontent.com/Nyrest/FastGenericNew/main/Assets/Benchmark_ValueType.png",alt:"Benchmark Result of Value Types"}))),(0,s.kt)("h2",{parentName:"admonition",id:"-license"},"\ud83d\udcdc License"),(0,s.kt)("p",{parentName:"admonition"},"FastGenericNew is licensed under the MIT license.")),(0,s.kt)("h3",{id:"about"},"About"),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("p",{parentName:"admonition"},"Creating instances fast. As generator show source code. Otherwise could be a dll")),(0,s.kt)("h2",{id:"how-to-use"},"How to use"),(0,s.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,s.kt)(a.Z,{mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,s.kt)("p",null,"This is the CSharp Project that references ",(0,s.kt)("strong",{parentName:"p"},"FastGenericNew")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {14}",showLineNumbers:!0,"{14}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n    <ItemGroup>\n      <PackageReference Include="FastGenericNew.SourceGenerator" Version="3.1.0-preview1">\n        <PrivateAssets>all</PrivateAssets>\n        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n      </PackageReference>\n    </ItemGroup>\n</Project>\n\n'))),(0,s.kt)(p.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FastGenericNew\\src\\FastGenericNewDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,s.kt)("p",null,"  This is the use of ",(0,s.kt)("strong",{parentName:"p"},"FastGenericNew")," in ",(0,s.kt)("em",{parentName:"p"},"Program.cs")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// See https://aka.ms/new-console-template for more information\nusing FastGenericNew;\nusing FastGenericNewDemo;\n\nConsole.WriteLine("Hello, World!");\n//private constructor\nvar p= FastNew.CreateInstance<Person>() ;\nConsole.WriteLine(p.FirstName);\n//public constructor\np = FastNew.CreateInstance<Person,string>("test");\nConsole.WriteLine(p.FirstName);\n\n\n'))),(0,s.kt)(p.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FastGenericNew\\src\\FastGenericNewDemo\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,s.kt)("p",null,"  This is the use of ",(0,s.kt)("strong",{parentName:"p"},"FastGenericNew")," in ",(0,s.kt)("em",{parentName:"p"},"Person.cs")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'namespace FastGenericNewDemo;\n\nclass Person\n{\n    private Person()\n    {\n        FirstName = "Andrei";\n    }\n    public Person(string firstName)\n    {\n        this.FirstName=firstName;\n    }\n    public string FirstName { get; set; }\n}\n\n')))),(0,s.kt)("h3",{id:"generated-files"},"Generated Files"),(0,s.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,s.kt)(a.Z,{mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FastGenericNew\\src\\FastGenericNewDemo\\obj\\GX\\FastGenericNew.SourceGenerator\\FastGenericNew.SourceGenerator.Generator\\FastNew.CreateInstance.g.cs",label:"FastNew.CreateInstance.g.cs",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by FastGenericNew.SourceGenerator\n//     Please do not modify this file directly\n// <auto-generated/>\n//------------------------------------------------------------------------------\n#nullable enable\nusing System;\nusing System.Collections.Generic;\nusing System.Runtime.CompilerServices;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Reflection;\nusing System.Reflection.Emit;\nusing System.ComponentModel;\n\nnamespace @FastGenericNew\n{\npublic static partial class FastNew{\n\n        /// <summary>\n        /// <para>Create an instance of <typeparamref name="T" /></para>\n        /// <para>Returns <c><see langword="new" /> <typeparamref name="T" />()</c> if <typeparamref name="T"/> is a <see cref="ValueType"/>(struct)</para>\n        /// <para>This <b>CAN</b> call the Parameterless Constructor of the <see cref="ValueType"/>(struct)</para>\n        /// </summary>\n        /// <typeparam name="T">The type to create.</typeparam>\n        /// <returns>A new instance of <typeparamref name="T" /></returns>\n        /// <remarks>\n        /// Equivalent to <c><see langword="new" /> <typeparamref name="T" />()</c> for both Reference Types and Value Types\n        /// </remarks>\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\n        public static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT>()\n        {\n#if NETFRAMEWORK\n            return global::@FastGenericNew.FastNew<T>.CompiledDelegate();\n#else\n            return typeof(T).IsValueType\n                ? System.Activator.CreateInstance<T>() // This will be optimized by JIT\n                : global::@FastGenericNew.FastNew<T>.CompiledDelegate();\n#endif\n        }\n        /// <summary>\n        /// Create an instance of <typeparamref name="T" /> <br/>\n        /// Returns <c><see langword="default" />(<typeparamref name="T" />)</c> if <typeparamref name="T"/> is a <see cref="ValueType"/>(struct) <br/>\n        /// This <b>WILL NOT</b> call the Parameterless Constructor of the <see cref="ValueType"/>(struct)\n        /// </summary>\n        /// <typeparam name="T">The type to create.</typeparam>\n        /// <returns>A new instance of <typeparamref name="T" /></returns>\n        /// <remarks>\n        /// For reference types, equivalent to <c><see langword="new" /> <typeparamref name="T" />()</c> <br/>\n        /// For value types, equivalent to <c><see langword="default" />(<typeparamref name="T" />)</c>\n        /// </remarks>\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\n        public static T NewOrDefault<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT>()\n        {\n#if NETFRAMEWORK\n            return global::@FastGenericNew.FastNew<T>._isValueTypeT\n#else\n            return typeof(T).IsValueType\n#endif\n                ? default(T)! // This will never be null since T is a ValueType\n                : FastNew<T>.CompiledDelegate();\n        }\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0>(TArg0 p0) =>\nglobal::@FastGenericNew.FastNew<T, TArg0>.CompiledDelegate(p0);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1>(TArg0 p0, TArg1 p1) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1>.CompiledDelegate(p0, p1);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2>(TArg0 p0, TArg1 p1, TArg2 p2) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2>.CompiledDelegate(p0, p1, p2);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3>.CompiledDelegate(p0, p1, p2, p3);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4>.CompiledDelegate(p0, p1, p2, p3, p4);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5>.CompiledDelegate(p0, p1, p2, p3, p4, p5);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10, TArg11 p11) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10, TArg11 p11, TArg12 p12) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10, TArg11 p11, TArg12 p12, TArg13 p13) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10, TArg11 p11, TArg12 p12, TArg13 p13, TArg14 p14) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);\npublic static T CreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10, TArg11 p11, TArg12 p12, TArg13 p13, TArg14 p14, TArg15 p15) =>\nglobal::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15);\n}\n}\n\n'))),(0,s.kt)(p.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FastGenericNew\\src\\FastGenericNewDemo\\obj\\GX\\FastGenericNew.SourceGenerator\\FastGenericNew.SourceGenerator.Generator\\FastNew.TryCreateInstance.g.cs",label:"FastNew.TryCreateInstance.g.cs",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by FastGenericNew.SourceGenerator\n//     Please do not modify this file directly\n// <auto-generated/>\n//------------------------------------------------------------------------------\n#nullable enable\nusing System;\nusing System.Collections.Generic;\nusing System.Runtime.CompilerServices;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Reflection;\nusing System.Reflection.Emit;\nusing System.ComponentModel;\n\nnamespace @FastGenericNew\n{\npublic static partial class FastNew{\n\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\n        public static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT>(out T result)\n        {\n            if(global::@FastGenericNew.FastNew<T>.IsValid)\n            {\n#if NETFRAMEWORK\n                result = global::@FastGenericNew.FastNew<T>.CompiledDelegate();\n#else\n                result = typeof(T).IsValueType\n                    ? System.Activator.CreateInstance<T>()\n                    : global::@FastGenericNew.FastNew<T>.CompiledDelegate();\n#endif\n                return true;\n            }\n            //Unsafe.SkipInit<T>(out result);\n            result = default!;\n            return false;\n        }\n\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\n        public static bool TryNewOrDefault<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT>(out T result)\n        {\n            if(global::@FastGenericNew.FastNew<T>.IsValid)\n            {\n#if NETFRAMEWORK\n                result = global::@FastGenericNew.FastNew<T>._isValueTypeT\n#else\n                result = typeof(T).IsValueType\n#endif\n                    ? default(T)! // This will never be null since T is a ValueType\n                    : FastNew<T>.CompiledDelegate();\n                    return true;\n            }\n            //Unsafe.SkipInit<T>(out result);\n            result = default!;\n            return false;\n        }\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0>(TArg0 p0, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0>.CompiledDelegate(p0);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1>(TArg0 p0, TArg1 p1, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1>.CompiledDelegate(p0, p1);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2>(TArg0 p0, TArg1 p1, TArg2 p2, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2>.CompiledDelegate(p0, p1, p2);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3>.CompiledDelegate(p0, p1, p2, p3);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4>.CompiledDelegate(p0, p1, p2, p3, p4);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5>.CompiledDelegate(p0, p1, p2, p3, p4, p5);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10, TArg11 p11, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10, TArg11 p11, TArg12 p12, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10, TArg11 p11, TArg12 p12, TArg13 p13, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10, TArg11 p11, TArg12 p12, TArg13 p13, TArg14 p14, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14);\nreturn true;\n}\nresult = default!;return false;\n}\n[MethodImpl(MethodImplOptions.AggressiveInlining)]\npublic static bool TryCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>(TArg0 p0, TArg1 p1, TArg2 p2, TArg3 p3, TArg4 p4, TArg5 p5, TArg6 p6, TArg7 p7, TArg8 p8, TArg9 p9, TArg10 p10, TArg11 p11, TArg12 p12, TArg13 p13, TArg14 p14, TArg15 p15, out T result)\n{\nif (global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>.IsValid)\n{\nresult = global::@FastGenericNew.FastNew<T, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>.CompiledDelegate(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15);\nreturn true;\n}\nresult = default!;return false;\n}\n}\n}\n\n"))),(0,s.kt)(p.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FastGenericNew\\src\\FastGenericNewDemo\\obj\\GX\\FastGenericNew.SourceGenerator\\FastGenericNew.SourceGenerator.Generator\\FastNew{T}.g.cs",label:"FastNew{T}.g.cs",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by FastGenericNew.SourceGenerator\n//     Please do not modify this file directly\n// <auto-generated/>\n//------------------------------------------------------------------------------\n#nullable enable\nusing System;\nusing System.Collections.Generic;\nusing System.Runtime.CompilerServices;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Reflection;\nusing System.Reflection.Emit;\nusing System.ComponentModel;\n\nnamespace @FastGenericNew\n{\ninternal \n#if NETFRAMEWORK\nstatic partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT>\n    {\n#if NETFRAMEWORK\n        [EditorBrowsable(EditorBrowsableState.Never)]\n        internal static readonly bool _isValueTypeT = typeof(T).IsValueType;\n#endif\n        /// <summary>\n        /// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n        /// Could be <see langword="null" /> if the constructor couldn\'t be found.\n        /// </summary>\n        public static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, Type.EmptyTypes, null);\n\n        public static readonly Func<T> CompiledDelegate = System.Linq.Expressions.Expression.Lambda<Func<T>>(typeof(T).IsValueType\n            ? (global::@FastGenericNew.FastNew<T>.CachedConstructor != null\n                ? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(global::@FastGenericNew.FastNew<T>.CachedConstructor)\n                : (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(typeof(T)))\n            : ((global::@FastGenericNew.FastNew<T>.CachedConstructor != null && !typeof(T).IsAbstract)\n                ? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(global::@FastGenericNew.FastNew<T>.CachedConstructor)\n                : (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>()))\n            , Array.Empty<System.Linq.Expressions.ParameterExpression>()).Compile();\n    \n        public static readonly bool IsValid = typeof(T).IsValueType || (global::@FastGenericNew.FastNew<T>.CachedConstructor != null && !typeof(T).IsAbstract);\n    }\n#else\nstatic partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT>\n    {\n        /// <summary>\n        /// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n        /// Could be <see langword="null" /> if the constructor couldn\'t be found.\n        /// </summary>\n        public static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, Type.EmptyTypes, null);\n\n#if NETFRAMEWORK\n        [EditorBrowsable(EditorBrowsableState.Never)]\n        internal static readonly bool _isValueTypeT = typeof(T).IsValueType;\n#endif\n\n        public static readonly Func<T> CompiledDelegate;\n    \n        public static readonly bool IsValid = typeof(T).IsValueType || (global::@FastGenericNew.FastNew<T>.CachedConstructor != null && !typeof(T).IsAbstract);\n    \n        static FastNew()\n        {\n            var dm = new DynamicMethod("", typeof(T), global::@FastGenericNew._FastNewDynMetClosure.InstanceOnlyArray, restrictedSkipVisibility: true);\n            var il = dm.GetILGenerator();\n            if (IsValid)\n            {\n                if (global::@FastGenericNew.FastNew<T>.CachedConstructor != null)\n                    il.Emit(OpCodes.Newobj, CachedConstructor!);\n                else\n                {\n                    il.DeclareLocal(typeof(T));\n                    //il.Emit(OpCodes.Ldloca_S, (short)0)\n                    //il.Emit(OpCodes.Initobj, typeof(T));\n                    il.Emit(OpCodes.Ldloc_0);\n                }\n            }\n            else\n            {\n                il.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n            }\n            il.Emit(OpCodes.Ret);\n            CompiledDelegate = (Func<T>)dm.CreateDelegate(typeof(Func<T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n        }\n    }\n#endif\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\n}, null);\npublic static readonly Func<TArg0, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(10);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, T>)dm.CreateDelegate(typeof(Func<TArg0, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\n}, null);\npublic static readonly Func<TArg0, TArg1, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(11);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(12);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(13);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(14);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\ntypeof(TArg5),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nvar p5 = System.Linq.Expressions.Expression.Parameter(typeof(TArg5));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4, p5)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4, p5 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(15);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Ldarg_S, (byte)6);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\ntypeof(TArg5),\ntypeof(TArg6),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nvar p5 = System.Linq.Expressions.Expression.Parameter(typeof(TArg5));\nvar p6 = System.Linq.Expressions.Expression.Parameter(typeof(TArg6));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4, p5, p6)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4, p5, p6 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(16);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Ldarg_S, (byte)6);\nil.Emit(OpCodes.Ldarg_S, (byte)7);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\ntypeof(TArg5),\ntypeof(TArg6),\ntypeof(TArg7),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nvar p5 = System.Linq.Expressions.Expression.Parameter(typeof(TArg5));\nvar p6 = System.Linq.Expressions.Expression.Parameter(typeof(TArg6));\nvar p7 = System.Linq.Expressions.Expression.Parameter(typeof(TArg7));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4, p5, p6, p7)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4, p5, p6, p7 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(17);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Ldarg_S, (byte)6);\nil.Emit(OpCodes.Ldarg_S, (byte)7);\nil.Emit(OpCodes.Ldarg_S, (byte)8);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\ntypeof(TArg5),\ntypeof(TArg6),\ntypeof(TArg7),\ntypeof(TArg8),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nvar p5 = System.Linq.Expressions.Expression.Parameter(typeof(TArg5));\nvar p6 = System.Linq.Expressions.Expression.Parameter(typeof(TArg6));\nvar p7 = System.Linq.Expressions.Expression.Parameter(typeof(TArg7));\nvar p8 = System.Linq.Expressions.Expression.Parameter(typeof(TArg8));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4, p5, p6, p7, p8)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4, p5, p6, p7, p8 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(18);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Ldarg_S, (byte)6);\nil.Emit(OpCodes.Ldarg_S, (byte)7);\nil.Emit(OpCodes.Ldarg_S, (byte)8);\nil.Emit(OpCodes.Ldarg_S, (byte)9);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\ntypeof(TArg5),\ntypeof(TArg6),\ntypeof(TArg7),\ntypeof(TArg8),\ntypeof(TArg9),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nvar p5 = System.Linq.Expressions.Expression.Parameter(typeof(TArg5));\nvar p6 = System.Linq.Expressions.Expression.Parameter(typeof(TArg6));\nvar p7 = System.Linq.Expressions.Expression.Parameter(typeof(TArg7));\nvar p8 = System.Linq.Expressions.Expression.Parameter(typeof(TArg8));\nvar p9 = System.Linq.Expressions.Expression.Parameter(typeof(TArg9));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(19);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Ldarg_S, (byte)6);\nil.Emit(OpCodes.Ldarg_S, (byte)7);\nil.Emit(OpCodes.Ldarg_S, (byte)8);\nil.Emit(OpCodes.Ldarg_S, (byte)9);\nil.Emit(OpCodes.Ldarg_S, (byte)10);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\ntypeof(TArg5),\ntypeof(TArg6),\ntypeof(TArg7),\ntypeof(TArg8),\ntypeof(TArg9),\ntypeof(TArg10),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nvar p5 = System.Linq.Expressions.Expression.Parameter(typeof(TArg5));\nvar p6 = System.Linq.Expressions.Expression.Parameter(typeof(TArg6));\nvar p7 = System.Linq.Expressions.Expression.Parameter(typeof(TArg7));\nvar p8 = System.Linq.Expressions.Expression.Parameter(typeof(TArg8));\nvar p9 = System.Linq.Expressions.Expression.Parameter(typeof(TArg9));\nvar p10 = System.Linq.Expressions.Expression.Parameter(typeof(TArg10));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(20);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Ldarg_S, (byte)6);\nil.Emit(OpCodes.Ldarg_S, (byte)7);\nil.Emit(OpCodes.Ldarg_S, (byte)8);\nil.Emit(OpCodes.Ldarg_S, (byte)9);\nil.Emit(OpCodes.Ldarg_S, (byte)10);\nil.Emit(OpCodes.Ldarg_S, (byte)11);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\ntypeof(TArg5),\ntypeof(TArg6),\ntypeof(TArg7),\ntypeof(TArg8),\ntypeof(TArg9),\ntypeof(TArg10),\ntypeof(TArg11),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nvar p5 = System.Linq.Expressions.Expression.Parameter(typeof(TArg5));\nvar p6 = System.Linq.Expressions.Expression.Parameter(typeof(TArg6));\nvar p7 = System.Linq.Expressions.Expression.Parameter(typeof(TArg7));\nvar p8 = System.Linq.Expressions.Expression.Parameter(typeof(TArg8));\nvar p9 = System.Linq.Expressions.Expression.Parameter(typeof(TArg9));\nvar p10 = System.Linq.Expressions.Expression.Parameter(typeof(TArg10));\nvar p11 = System.Linq.Expressions.Expression.Parameter(typeof(TArg11));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(21);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Ldarg_S, (byte)6);\nil.Emit(OpCodes.Ldarg_S, (byte)7);\nil.Emit(OpCodes.Ldarg_S, (byte)8);\nil.Emit(OpCodes.Ldarg_S, (byte)9);\nil.Emit(OpCodes.Ldarg_S, (byte)10);\nil.Emit(OpCodes.Ldarg_S, (byte)11);\nil.Emit(OpCodes.Ldarg_S, (byte)12);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\ntypeof(TArg5),\ntypeof(TArg6),\ntypeof(TArg7),\ntypeof(TArg8),\ntypeof(TArg9),\ntypeof(TArg10),\ntypeof(TArg11),\ntypeof(TArg12),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nvar p5 = System.Linq.Expressions.Expression.Parameter(typeof(TArg5));\nvar p6 = System.Linq.Expressions.Expression.Parameter(typeof(TArg6));\nvar p7 = System.Linq.Expressions.Expression.Parameter(typeof(TArg7));\nvar p8 = System.Linq.Expressions.Expression.Parameter(typeof(TArg8));\nvar p9 = System.Linq.Expressions.Expression.Parameter(typeof(TArg9));\nvar p10 = System.Linq.Expressions.Expression.Parameter(typeof(TArg10));\nvar p11 = System.Linq.Expressions.Expression.Parameter(typeof(TArg11));\nvar p12 = System.Linq.Expressions.Expression.Parameter(typeof(TArg12));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(22);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Ldarg_S, (byte)6);\nil.Emit(OpCodes.Ldarg_S, (byte)7);\nil.Emit(OpCodes.Ldarg_S, (byte)8);\nil.Emit(OpCodes.Ldarg_S, (byte)9);\nil.Emit(OpCodes.Ldarg_S, (byte)10);\nil.Emit(OpCodes.Ldarg_S, (byte)11);\nil.Emit(OpCodes.Ldarg_S, (byte)12);\nil.Emit(OpCodes.Ldarg_S, (byte)13);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\ntypeof(TArg5),\ntypeof(TArg6),\ntypeof(TArg7),\ntypeof(TArg8),\ntypeof(TArg9),\ntypeof(TArg10),\ntypeof(TArg11),\ntypeof(TArg12),\ntypeof(TArg13),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nvar p5 = System.Linq.Expressions.Expression.Parameter(typeof(TArg5));\nvar p6 = System.Linq.Expressions.Expression.Parameter(typeof(TArg6));\nvar p7 = System.Linq.Expressions.Expression.Parameter(typeof(TArg7));\nvar p8 = System.Linq.Expressions.Expression.Parameter(typeof(TArg8));\nvar p9 = System.Linq.Expressions.Expression.Parameter(typeof(TArg9));\nvar p10 = System.Linq.Expressions.Expression.Parameter(typeof(TArg10));\nvar p11 = System.Linq.Expressions.Expression.Parameter(typeof(TArg11));\nvar p12 = System.Linq.Expressions.Expression.Parameter(typeof(TArg12));\nvar p13 = System.Linq.Expressions.Expression.Parameter(typeof(TArg13));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(23);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Ldarg_S, (byte)6);\nil.Emit(OpCodes.Ldarg_S, (byte)7);\nil.Emit(OpCodes.Ldarg_S, (byte)8);\nil.Emit(OpCodes.Ldarg_S, (byte)9);\nil.Emit(OpCodes.Ldarg_S, (byte)10);\nil.Emit(OpCodes.Ldarg_S, (byte)11);\nil.Emit(OpCodes.Ldarg_S, (byte)12);\nil.Emit(OpCodes.Ldarg_S, (byte)13);\nil.Emit(OpCodes.Ldarg_S, (byte)14);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\ntypeof(TArg5),\ntypeof(TArg6),\ntypeof(TArg7),\ntypeof(TArg8),\ntypeof(TArg9),\ntypeof(TArg10),\ntypeof(TArg11),\ntypeof(TArg12),\ntypeof(TArg13),\ntypeof(TArg14),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nvar p5 = System.Linq.Expressions.Expression.Parameter(typeof(TArg5));\nvar p6 = System.Linq.Expressions.Expression.Parameter(typeof(TArg6));\nvar p7 = System.Linq.Expressions.Expression.Parameter(typeof(TArg7));\nvar p8 = System.Linq.Expressions.Expression.Parameter(typeof(TArg8));\nvar p9 = System.Linq.Expressions.Expression.Parameter(typeof(TArg9));\nvar p10 = System.Linq.Expressions.Expression.Parameter(typeof(TArg10));\nvar p11 = System.Linq.Expressions.Expression.Parameter(typeof(TArg11));\nvar p12 = System.Linq.Expressions.Expression.Parameter(typeof(TArg12));\nvar p13 = System.Linq.Expressions.Expression.Parameter(typeof(TArg13));\nvar p14 = System.Linq.Expressions.Expression.Parameter(typeof(TArg14));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13), typeof(TArg14) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(24);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Ldarg_S, (byte)6);\nil.Emit(OpCodes.Ldarg_S, (byte)7);\nil.Emit(OpCodes.Ldarg_S, (byte)8);\nil.Emit(OpCodes.Ldarg_S, (byte)9);\nil.Emit(OpCodes.Ldarg_S, (byte)10);\nil.Emit(OpCodes.Ldarg_S, (byte)11);\nil.Emit(OpCodes.Ldarg_S, (byte)12);\nil.Emit(OpCodes.Ldarg_S, (byte)13);\nil.Emit(OpCodes.Ldarg_S, (byte)14);\nil.Emit(OpCodes.Ldarg_S, (byte)15);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\ninternal static partial class FastNew<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>\n{\n/// <summary>\n/// The constructor of <typeparamref name="T" /> with given arguments. <br/>\n/// Could be <see langword="null" /> if the constructor couldn\'t be found.\n/// </summary>\npublic static readonly ConstructorInfo? CachedConstructor = typeof(T).GetConstructor(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, null, new Type[]\n{\ntypeof(TArg0),\ntypeof(TArg1),\ntypeof(TArg2),\ntypeof(TArg3),\ntypeof(TArg4),\ntypeof(TArg5),\ntypeof(TArg6),\ntypeof(TArg7),\ntypeof(TArg8),\ntypeof(TArg9),\ntypeof(TArg10),\ntypeof(TArg11),\ntypeof(TArg12),\ntypeof(TArg13),\ntypeof(TArg14),\ntypeof(TArg15),\n}, null);\npublic static readonly Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, T> CompiledDelegate;\npublic static readonly bool IsValid;\nstatic FastNew()\n{\nIsValid = CachedConstructor != null && !typeof(T).IsAbstract;\n#if NETFRAMEWORK\nvar p0 = System.Linq.Expressions.Expression.Parameter(typeof(TArg0));\nvar p1 = System.Linq.Expressions.Expression.Parameter(typeof(TArg1));\nvar p2 = System.Linq.Expressions.Expression.Parameter(typeof(TArg2));\nvar p3 = System.Linq.Expressions.Expression.Parameter(typeof(TArg3));\nvar p4 = System.Linq.Expressions.Expression.Parameter(typeof(TArg4));\nvar p5 = System.Linq.Expressions.Expression.Parameter(typeof(TArg5));\nvar p6 = System.Linq.Expressions.Expression.Parameter(typeof(TArg6));\nvar p7 = System.Linq.Expressions.Expression.Parameter(typeof(TArg7));\nvar p8 = System.Linq.Expressions.Expression.Parameter(typeof(TArg8));\nvar p9 = System.Linq.Expressions.Expression.Parameter(typeof(TArg9));\nvar p10 = System.Linq.Expressions.Expression.Parameter(typeof(TArg10));\nvar p11 = System.Linq.Expressions.Expression.Parameter(typeof(TArg11));\nvar p12 = System.Linq.Expressions.Expression.Parameter(typeof(TArg12));\nvar p13 = System.Linq.Expressions.Expression.Parameter(typeof(TArg13));\nvar p14 = System.Linq.Expressions.Expression.Parameter(typeof(TArg14));\nvar p15 = System.Linq.Expressions.Expression.Parameter(typeof(TArg15));\nCompiledDelegate = (System.Linq.Expressions.Expression.Lambda<Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, T>>(IsValid\n? (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.New(CachedConstructor!, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15)\n: (System.Linq.Expressions.Expression)System.Linq.Expressions.Expression.Call(global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>())\n, new System.Linq.Expressions.ParameterExpression[] { p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 })).Compile();\n#else\nvar dm = new DynamicMethod("", typeof(T), new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure), typeof(TArg0), typeof(TArg1), typeof(TArg2), typeof(TArg3), typeof(TArg4), typeof(TArg5), typeof(TArg6), typeof(TArg7), typeof(TArg8), typeof(TArg9), typeof(TArg10), typeof(TArg11), typeof(TArg12), typeof(TArg13), typeof(TArg14), typeof(TArg15) }, restrictedSkipVisibility: true);\nvar il = dm.GetILGenerator(25);\nif (IsValid)\n{\nil.Emit(OpCodes.Ldarg_1);\nil.Emit(OpCodes.Ldarg_2);\nil.Emit(OpCodes.Ldarg_3);\nil.Emit(OpCodes.Ldarg_S, (byte)4);\nil.Emit(OpCodes.Ldarg_S, (byte)5);\nil.Emit(OpCodes.Ldarg_S, (byte)6);\nil.Emit(OpCodes.Ldarg_S, (byte)7);\nil.Emit(OpCodes.Ldarg_S, (byte)8);\nil.Emit(OpCodes.Ldarg_S, (byte)9);\nil.Emit(OpCodes.Ldarg_S, (byte)10);\nil.Emit(OpCodes.Ldarg_S, (byte)11);\nil.Emit(OpCodes.Ldarg_S, (byte)12);\nil.Emit(OpCodes.Ldarg_S, (byte)13);\nil.Emit(OpCodes.Ldarg_S, (byte)14);\nil.Emit(OpCodes.Ldarg_S, (byte)15);\nil.Emit(OpCodes.Ldarg_S, (byte)16);\nil.Emit(OpCodes.Newobj, CachedConstructor!);\n}\nelse\n{\nil.Emit(OpCodes.Call, global::@FastGenericNew.ThrowHelper.GetSmartThrow<T>());\n}\nil.Emit(OpCodes.Ret);\nCompiledDelegate = (Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, T>)dm.CreateDelegate(typeof(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, T>), global::@FastGenericNew._FastNewDynMetClosure.Instance);\n#endif\n}\n}\n}\n\n'))),(0,s.kt)(p.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FastGenericNew\\src\\FastGenericNewDemo\\obj\\GX\\FastGenericNew.SourceGenerator\\FastGenericNew.SourceGenerator.Generator\\ThrowHelper.g.cs",label:"ThrowHelper.g.cs",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by FastGenericNew.SourceGenerator\n//     Please do not modify this file directly\n// <auto-generated/>\n//------------------------------------------------------------------------------\n#nullable enable\nusing System;\nusing System.Collections.Generic;\nusing System.Runtime.CompilerServices;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Reflection;\nusing System.Reflection.Emit;\nusing System.ComponentModel;\n\nnamespace @FastGenericNew\n{\n\n    [EditorBrowsable(EditorBrowsableState.Never)]\n    internal static partial class ThrowHelper\n    {\n        [MethodImpl(MethodImplOptions.NoInlining | MethodImplOptions.NoOptimization)]\n\n#if NET5_0_OR_GREATER\n        [DynamicDependency("SmartThrowImpl``1()", typeof(global::@FastGenericNew.ThrowHelper))]\n#endif\n\n        public static System.Reflection.MethodInfo GetSmartThrow<T>() => typeof(global::@FastGenericNew.ThrowHelper).GetMethod("SmartThrowImpl", System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Static)!.MakeGenericMethod(typeof(T));\n\n        public static T SmartThrowImpl<T>()\n        {\n            var qualifiedName = typeof(T).AssemblyQualifiedName;\n\n            if (typeof(T).IsInterface)\n                throw new System.MissingMethodException($"Cannot create an instance of an interface: \'{ qualifiedName }\'");\n\n            if (typeof(T).IsAbstract)\n                throw new System.MissingMethodException($"Cannot create an abstract class: \'{ qualifiedName }\'");\n\n            throw new System.MissingMethodException($"No match constructor found in type: \'{ qualifiedName }\'");\n        }\n    }\n}\n\n'))),(0,s.kt)(p.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FastGenericNew\\src\\FastGenericNewDemo\\obj\\GX\\FastGenericNew.SourceGenerator\\FastGenericNew.SourceGenerator.Generator\\TypeNew.CreateInstance.g.cs",label:"TypeNew.CreateInstance.g.cs",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by FastGenericNew.SourceGenerator\n//     Please do not modify this file directly\n// <auto-generated/>\n//------------------------------------------------------------------------------\n#nullable enable\nusing System;\nusing System.Collections.Generic;\nusing System.Runtime.CompilerServices;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Reflection;\nusing System.Reflection.Emit;\nusing System.ComponentModel;\n\nnamespace @FastGenericNew\n{\npublic static partial class FastNew{\npublic static Func<T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicParameterlessConstructor | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT>(Type type) =>\n(Func<T>)typeof(FastNew<>).MakeGenericType(type).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0>(Type type, Type p0) =>\n(Func<TArg0, T>)typeof(FastNew<,>).MakeGenericType(type, p0).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1>(Type type, Type p0, Type p1) =>\n(Func<TArg0, TArg1, T>)typeof(FastNew<,,>).MakeGenericType(type, p0, p1).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2>(Type type, Type p0, Type p1, Type p2) =>\n(Func<TArg0, TArg1, TArg2, T>)typeof(FastNew<,,,>).MakeGenericType(type, p0, p1, p2).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3>(Type type, Type p0, Type p1, Type p2, Type p3) =>\n(Func<TArg0, TArg1, TArg2, TArg3, T>)typeof(FastNew<,,,,>).MakeGenericType(type, p0, p1, p2, p3).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, T>)typeof(FastNew<,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4, Type p5) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, T>)typeof(FastNew<,,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4, p5).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4, Type p5, Type p6) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, T>)typeof(FastNew<,,,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4, p5, p6).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4, Type p5, Type p6, Type p7) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, T>)typeof(FastNew<,,,,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4, p5, p6, p7).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4, Type p5, Type p6, Type p7, Type p8) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, T>)typeof(FastNew<,,,,,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4, p5, p6, p7, p8).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4, Type p5, Type p6, Type p7, Type p8, Type p9) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, T>)typeof(FastNew<,,,,,,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4, Type p5, Type p6, Type p7, Type p8, Type p9, Type p10) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, T>)typeof(FastNew<,,,,,,,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4, Type p5, Type p6, Type p7, Type p8, Type p9, Type p10, Type p11) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, T>)typeof(FastNew<,,,,,,,,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4, Type p5, Type p6, Type p7, Type p8, Type p9, Type p10, Type p11, Type p12) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, T>)typeof(FastNew<,,,,,,,,,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4, Type p5, Type p6, Type p7, Type p8, Type p9, Type p10, Type p11, Type p12, Type p13) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, T>)typeof(FastNew<,,,,,,,,,,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4, Type p5, Type p6, Type p7, Type p8, Type p9, Type p10, Type p11, Type p12, Type p13, Type p14) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, T>)typeof(FastNew<,,,,,,,,,,,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14).GetField("CompiledDelegate")!.GetValue(null)!;public static Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, T> GetCreateInstance<\n#if NET5_0_OR_GREATER\n[DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstructors | DynamicallyAccessedMemberTypes.NonPublicConstructors)]\n#endif\nT, TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15>(Type type, Type p0, Type p1, Type p2, Type p3, Type p4, Type p5, Type p6, Type p7, Type p8, Type p9, Type p10, Type p11, Type p12, Type p13, Type p14, Type p15) =>\n(Func<TArg0, TArg1, TArg2, TArg3, TArg4, TArg5, TArg6, TArg7, TArg8, TArg9, TArg10, TArg11, TArg12, TArg13, TArg14, TArg15, T>)typeof(FastNew<,,,,,,,,,,,,,,,,>).MakeGenericType(type, p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15).GetField("CompiledDelegate")!.GetValue(null)!;}\n}\n\n'))),(0,s.kt)(p.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FastGenericNew\\src\\FastGenericNewDemo\\obj\\GX\\FastGenericNew.SourceGenerator\\FastGenericNew.SourceGenerator.Generator\\_DynMetClosure.g.cs",label:"_DynMetClosure.g.cs",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by FastGenericNew.SourceGenerator\n//     Please do not modify this file directly\n// <auto-generated/>\n//------------------------------------------------------------------------------\n#nullable enable\nusing System;\nusing System.Collections.Generic;\nusing System.Runtime.CompilerServices;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Reflection;\nusing System.Reflection.Emit;\nusing System.ComponentModel;\n\nnamespace @FastGenericNew\n{\n\n    [EditorBrowsable(EditorBrowsableState.Never)]\n    internal sealed partial class _FastNewDynMetClosure\n    {\n        public static readonly Type[] InstanceOnlyArray = new Type[] { typeof(global::@FastGenericNew._FastNewDynMetClosure) };\n\n        public static readonly global::@FastGenericNew._FastNewDynMetClosure Instance = new global::@FastGenericNew._FastNewDynMetClosure();\n    }\n}\n\n")))),(0,s.kt)("h2",{id:"usefull"},"Usefull"),(0,s.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},(0,s.kt)("a",{target:"_blank",href:n(1767).Z},"Download Example project FastGenericNew "))),(0,s.kt)("h3",{id:"share-fastgenericnew"},"Share FastGenericNew"),(0,s.kt)("ul",null,(0,s.kt)("li",null,(0,s.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFastGenericNew&quote=FastGenericNew",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,s.kt)("li",null,(0,s.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFastGenericNew&text=FastGenericNew:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFastGenericNew",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,s.kt)("li",null,(0,s.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFastGenericNew&title=FastGenericNew",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,s.kt)("li",null,(0,s.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFastGenericNew&title=FastGenericNew&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFastGenericNew",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/FastGenericNew"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/FastGenericNew")),(0,s.kt)("h2",{id:"in-the-same-category-enhancementclass"},"In the same category (EnhancementClass)"),(0,s.kt)("h3",{id:"apparatusaot"},(0,s.kt)("a",{parentName:"h3",href:"/docs/ApparatusAOT"},"ApparatusAOT")),(0,s.kt)("h3",{id:"buildergenerator"},(0,s.kt)("a",{parentName:"h3",href:"/docs/BuilderGenerator"},"BuilderGenerator")),(0,s.kt)("h3",{id:"enumclass"},(0,s.kt)("a",{parentName:"h3",href:"/docs/EnumClass"},"EnumClass")),(0,s.kt)("h3",{id:"generatorequals"},(0,s.kt)("a",{parentName:"h3",href:"/docs/GeneratorEquals"},"GeneratorEquals")),(0,s.kt)("h3",{id:"immutype"},(0,s.kt)("a",{parentName:"h3",href:"/docs/Immutype"},"Immutype")),(0,s.kt)("h3",{id:"lomboknet"},(0,s.kt)("a",{parentName:"h3",href:"/docs/Lombok.NET"},"Lombok.NET")),(0,s.kt)("h3",{id:"m31fluentapi"},(0,s.kt)("a",{parentName:"h3",href:"/docs/M31.FluentAPI"},"M31.FluentAPI")),(0,s.kt)("h3",{id:"memorypack"},(0,s.kt)("a",{parentName:"h3",href:"/docs/MemoryPack"},"MemoryPack")),(0,s.kt)("h3",{id:"meziantoupolyfill"},(0,s.kt)("a",{parentName:"h3",href:"/docs/Meziantou.Polyfill"},"Meziantou.Polyfill")),(0,s.kt)("h3",{id:"microsoftextensionslogging"},(0,s.kt)("a",{parentName:"h3",href:"/docs/Microsoft.Extensions.Logging"},"Microsoft.Extensions.Logging")),(0,s.kt)("h3",{id:"microsoftinteropjavascriptjsimportgenerator"},(0,s.kt)("a",{parentName:"h3",href:"/docs/Microsoft.Interop.JavaScript.JSImportGenerator"},"Microsoft.Interop.JavaScript.JSImportGenerator")),(0,s.kt)("h3",{id:"netescapadesenumgenerators"},(0,s.kt)("a",{parentName:"h3",href:"/docs/NetEscapades.EnumGenerators"},"NetEscapades.EnumGenerators")),(0,s.kt)("h3",{id:"roozieautointerface"},(0,s.kt)("a",{parentName:"h3",href:"/docs/Roozie.AutoInterface"},"Roozie.AutoInterface")),(0,s.kt)("h3",{id:"rscg_decorator"},(0,s.kt)("a",{parentName:"h3",href:"/docs/RSCG_Decorator"},"RSCG_Decorator")),(0,s.kt)("h3",{id:"rscg_static"},(0,s.kt)("a",{parentName:"h3",href:"/docs/RSCG_Static"},"RSCG_Static")),(0,s.kt)("h3",{id:"syncmethodgenerator"},(0,s.kt)("a",{parentName:"h3",href:"/docs/SyncMethodGenerator"},"SyncMethodGenerator")),(0,s.kt)("h3",{id:"systemruntimeinteropservices"},(0,s.kt)("a",{parentName:"h3",href:"/docs/System.Runtime.InteropServices"},"System.Runtime.InteropServices")),(0,s.kt)("h3",{id:"systemtextregularexpressions"},(0,s.kt)("a",{parentName:"h3",href:"/docs/System.Text.RegularExpressions"},"System.Text.RegularExpressions")))}m.isMDXComponent=!0},1767:(e,r,n)=>{n.d(r,{Z:()=>t});const t=n.p+"assets/files/FastGenericNew-a6b8710249d485f6989b13c391cd31e9.zip"}}]);