"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[3932],{8382:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>m,toc:()=>d});var o=a(7462),n=(a(7294),a(4137)),r=a(3992),i=a(425),p=a(8839);const l={sidebar_position:540,title:"54 - AutoDTO",description:"Generate DTO classes from business/ef classes",slug:"/AutoDTO"},s="AutoDTO  by Ohorodnikov",m={unversionedId:"RSCG-Examples/AutoDTO",id:"RSCG-Examples/AutoDTO",title:"54 - AutoDTO",description:"Generate DTO classes from business/ef classes",source:"@site/docs/RSCG-Examples/AutoDTO.md",sourceDirName:"RSCG-Examples",slug:"/AutoDTO",permalink:"/RSCG_Examples/v2/docs/AutoDTO",draft:!1,tags:[],version:"current",sidebarPosition:540,frontMatter:{sidebar_position:540,title:"54 - AutoDTO",description:"Generate DTO classes from business/ef classes",slug:"/AutoDTO"},sidebar:"tutorialSidebar",previous:{title:"53 - RSCG_WebAPIExports",permalink:"/RSCG_Examples/v2/docs/RSCG_WebAPIExports"},next:{title:"55 - M31.FluentAPI",permalink:"/RSCG_Examples/v2/docs/M31.FluentAPI"}},u={},d=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share AutoDTO",id:"share-autodto",level:3},{value:"In the same category (Mapper)",id:"in-the-same-category-mapper",level:2},{value:"JsonPolymorphicGenerator",id:"jsonpolymorphicgenerator",level:3},{value:"mapperly",id:"mapperly",level:3},{value:"MapTo",id:"mapto",level:3},{value:"NextGenMapper",id:"nextgenmapper",level:3}],c={toc:d},k="wrapper";function g(e){let{components:t,...l}=e;return(0,n.kt)(k,(0,o.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"autodto--by-ohorodnikov"},"AutoDTO  by Ohorodnikov"),(0,n.kt)(p.Z,{toc:d,mdxType:"TOCInline"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/AutoDTO/"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/AutoDTO?label=AutoDTO",alt:"Nuget"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Ohorodnikov/AutoDto"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/Ohorodnikov/AutoDto?label=updated",alt:"GitHub last commit"})),"\n",(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/Ohorodnikov/AutoDto?style=social",alt:"GitHub Repo stars"})),(0,n.kt)("h2",{id:"details"},"Details"),(0,n.kt)("h3",{id:"info"},"Info"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Name: ",(0,n.kt)("strong",{parentName:"p"},"AutoDTO")),(0,n.kt)("p",{parentName:"admonition"},"Auto copy properties from bl mode to dto"),(0,n.kt)("p",{parentName:"admonition"},"Author: Ohorodnikov"),(0,n.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/AutoDTO/"},"https://www.nuget.org/packages/AutoDTO/")),"   "),(0,n.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Ohorodnikov/AutoDto"},"https://github.com/Ohorodnikov/AutoDto")),(0,n.kt)("p",{parentName:"admonition"},"Source : ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Ohorodnikov/AutoDto"},"https://github.com/Ohorodnikov/AutoDto"))),(0,n.kt)("h3",{id:"original-readme"},"Original Readme"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("h1",{parentName:"admonition",id:"autodto"},"AutoDto"),(0,n.kt)("p",{parentName:"admonition"},"This tool allows to auto create DTO model from BL model in compile time."),(0,n.kt)("p",{parentName:"admonition"},"It supports different strategies for relations, such as ReplaceToIdProperty, AddIdProperty and ReplaceToDtoProperty"),(0,n.kt)("h2",{parentName:"admonition",id:"setup"},"Setup"),(0,n.kt)("p",{parentName:"admonition"},"To use AutoDto, first install the ",(0,n.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/AutoDto"},"NuGet package"),":"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"dotnet add package AutoDto\n")),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Declare partial DTO type like ",(0,n.kt)("inlineCode",{parentName:"li"},"public partial SomeDto {}")),(0,n.kt)("li",{parentName:"ul"},"Add attribute ",(0,n.kt)("inlineCode",{parentName:"li"},"[DtoFrom(typeof(SomeBlType))]")),(0,n.kt)("li",{parentName:"ul"},"Build project")),(0,n.kt)("p",{parentName:"admonition"},"Full simple setup:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"[DtoFrom(typeof(SomeBlType))]\npublic partial SomeDto {}\n")),(0,n.kt)("p",{parentName:"admonition"},"AutoDto tool will generate partial SomeDto class with all public properties from SomeBlType."),(0,n.kt)("h2",{parentName:"admonition",id:"relation-strategies"},"Relation Strategies"),(0,n.kt)("p",{parentName:"admonition"},"Relation strategy means what to do with relation property during generating DTO."),(0,n.kt)("p",{parentName:"admonition"},"Supported strategies:"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"None"),(0,n.kt)("li",{parentName:"ul"},"ReplaceToIdProperty"),(0,n.kt)("li",{parentName:"ul"},"AddIdProperty"),(0,n.kt)("li",{parentName:"ul"},"ReplaceToDtoProperty")),(0,n.kt)("h3",{parentName:"admonition",id:"usage"},"Usage"),(0,n.kt)("p",{parentName:"admonition"},"Set strategy in ",(0,n.kt)("inlineCode",{parentName:"p"},"[DtoFrom]")," attribute after BL type."),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"[DtoFrom(typeof(SomeBlType), RelationStrategy.AddIdProperty)]\npublic partial SomeDto {}\n")),(0,n.kt)("blockquote",{parentName:"admonition"},(0,n.kt)("p",{parentName:"blockquote"},"If not specified - RelationStrategy.None will be used")),(0,n.kt)("h3",{parentName:"admonition",id:"none"},"None"),(0,n.kt)("p",{parentName:"admonition"},"DTO will have property on BL type"),(0,n.kt)("h3",{parentName:"admonition",id:"replacetoidproperty"},"ReplaceToIdProperty"),(0,n.kt)("p",{parentName:"admonition"},"If BL relation property has ",(0,n.kt)("inlineCode",{parentName:"p"},"Id")," property:\nDTO will have only RelationPropName",(0,n.kt)("strong",{parentName:"p"},"Id")," property of BL relation Id prop type.\nIf BlType has relation with array or enumerable - generated name will be RelationPropName",(0,n.kt)("strong",{parentName:"p"},"Ids")),(0,n.kt)("blockquote",{parentName:"admonition"},(0,n.kt)("p",{parentName:"blockquote"},"\u2757 If no ",(0,n.kt)("inlineCode",{parentName:"p"},"Id")," found in relation entity - result will be same as with None strategy")),(0,n.kt)("h3",{parentName:"admonition",id:"addidproperty"},"AddIdProperty"),(0,n.kt)("p",{parentName:"admonition"},"DTO will have relation type property and ",(0,n.kt)("inlineCode",{parentName:"p"},"Id")," property is found"),(0,n.kt)("h3",{parentName:"admonition",id:"replacetodtoproperty"},"ReplaceToDtoProperty"),(0,n.kt)("p",{parentName:"admonition"},"Try find DTO, generated for RelationType and replace to RelationTypeDto."),(0,n.kt)("blockquote",{parentName:"admonition"},(0,n.kt)("p",{parentName:"blockquote"},"\u2757 If many DTOs exists for RelationType - use ",(0,n.kt)("inlineCode",{parentName:"p"},"[MainDto]")," attribute to mark which one should be used in ",(0,n.kt)("inlineCode",{parentName:"p"},"ReplaceToDtoProperty"))),(0,n.kt)("h2",{parentName:"admonition",id:"ignore-properties"},"Ignore properties"),(0,n.kt)("p",{parentName:"admonition"},"To avoid some properties from BlType, use ",(0,n.kt)("inlineCode",{parentName:"p"},"[DtoIgnore]")," attribute:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"[DtoFrom(typeof(SomeBlType), RelationStrategy.AddIdProperty)]\n[DtoIgnore(nameof(SomeBlType.PropName1), nameof(SomeBlType.PropName2))]\npublic partial SomeDto {}\n")),(0,n.kt)("h2",{parentName:"admonition",id:"options"},"Options"),(0,n.kt)("p",{parentName:"admonition"},"Options can be set only in ",(0,n.kt)("inlineCode",{parentName:"p"},".editorconfig"),"."),(0,n.kt)("blockquote",{parentName:"admonition"},(0,n.kt)("p",{parentName:"blockquote"},"\u2757 All options are applied once, after first generator running (mostly after open project).")),(0,n.kt)("h3",{parentName:"admonition",id:"generator-running"},"Generator running"),(0,n.kt)("p",{parentName:"admonition"},"Generator is based on ",(0,n.kt)("inlineCode",{parentName:"p"},"IIncrementalGenerator"),". Generator is running on every class declaration change event (on every change that affects class structure).\nTo avoid performance issues, it is used debouncer for collecting all events to regenerate classes. By default debounce time is 500 ms. After some time debouncer will collect execution statistic and rebalance timer."),(0,n.kt)("p",{parentName:"admonition"},"Any user can turn off debouncer, set initial time ets by setting options in ",(0,n.kt)("inlineCode",{parentName:"p"},".editorconfig"),"."),(0,n.kt)("p",{parentName:"admonition"},"Supported options:"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"auto_dto.debounce.enabled - true/false - use debounce or always run generation for every event"),(0,n.kt)("li",{parentName:"ul"},"auto_dto.debounce.interval - int - in milliseconds - set initial debounce interval"),(0,n.kt)("li",{parentName:"ul"},"auto_dto.debounce.auto_rebalance_enabled - true/false - allow auto timer change or not.")),(0,n.kt)("p",{parentName:"admonition"},"Default values:"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"auto_dto.debounce.enabled = true"),(0,n.kt)("li",{parentName:"ul"},"auto_dto.debounce.interval = 500"),(0,n.kt)("li",{parentName:"ul"},"auto_dto.debounce.auto_rebalance_enabled = true")),(0,n.kt)("blockquote",{parentName:"admonition"},(0,n.kt)("p",{parentName:"blockquote"},"\u26a0\ufe0f Debouncer can be turned off and switched to every request generating.")),(0,n.kt)("h3",{parentName:"admonition",id:"logging"},"Logging"),(0,n.kt)("p",{parentName:"admonition"},"Logger is disabled by default. If any issues with generator - enable logger, set folder path for logs and set logging level."),(0,n.kt)("p",{parentName:"admonition"},"Supported options:"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"auto_dto.logger.folder_path - string - path to folder where logs will be generated"),(0,n.kt)("li",{parentName:"ul"},"auto_dto.logger.enabled - true/false"),(0,n.kt)("li",{parentName:"ul"},"auto_dto.logger.log_level - Serilog log levels. See ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/serilog/serilog/blob/main/src/Serilog/Events/LogEventLevel.cs"},"LogEventLevel"))),(0,n.kt)("p",{parentName:"admonition"},"Default values:"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"auto_dto.logger.folder_path = Try get value from ",(0,n.kt)("inlineCode",{parentName:"li"},"build_property.projectdir"),". If cannot - ",(0,n.kt)("inlineCode",{parentName:"li"},'Path.Combine(Environment.CurrentDirectory, "Logs")')," is using"),(0,n.kt)("li",{parentName:"ul"},"auto_dto.logger.enabled = false"),(0,n.kt)("li",{parentName:"ul"},"auto_dto.logger.log_level = Warning"))),(0,n.kt)("h3",{id:"about"},"About"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Generate DTO classes from business/ef classes")),(0,n.kt)("h2",{id:"how-to-use"},"How to use"),(0,n.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,n.kt)(r.Z,{mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,n.kt)("p",null,"This is the CSharp Project that references ",(0,n.kt)("strong",{parentName:"p"},"AutoDTO")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {11}",showLineNumbers:!0,"{11}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="AutoDto" Version="2.1.0" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,n.kt)(i.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoDTO\\src\\AutoDTODemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"AutoDTO")," in ",(0,n.kt)("em",{parentName:"p"},"Program.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// See https://aka.ms/new-console-template for more information\nusing AutoDTODemo;\n\nvar d = new Department();\nd.Name = "IT";\nd.ID = 1;\nd.Employees=new Employee[] { new Employee() };\n\nvar dto= new DepartmentDTO();\n//it will be beneficial if it will have also a constructor\n//for transfer properties\ndto.Name = d.Name;\ndto.ID = d.ID;\n'))),(0,n.kt)(i.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoDTO\\src\\AutoDTODemo\\Department.cs",label:"Department.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"AutoDTO")," in ",(0,n.kt)("em",{parentName:"p"},"Department.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"namespace AutoDTODemo;\npublic class Department\n{\n    public int ID { get; set; }\n    public string? Name { get; set; }\n    public Employee[]? Employees { get; set; }\n}\n\n"))),(0,n.kt)(i.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoDTO\\src\\AutoDTODemo\\DepartmentDTO.cs",label:"DepartmentDTO.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"AutoDTO")," in ",(0,n.kt)("em",{parentName:"p"},"DepartmentDTO.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using AutoDto.Setup;\n\nnamespace AutoDTODemo;\n\n[DtoFrom(typeof(Department))]\n[DtoIgnore(nameof(Department.Employees))]\npublic partial class DepartmentDTO { \n}\n\n")))),(0,n.kt)("h3",{id:"generated-files"},"Generated Files"),(0,n.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,n.kt)(r.Z,{mdxType:"Tabs"},(0,n.kt)(i.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoDTO\\src\\AutoDTODemo\\obj\\GX\\AutoDto.SourceGen\\AutoDto.SourceGen.DtoFromBlGenerator\\DepartmentDTO.g.cs",label:"DepartmentDTO.g.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"namespace AutoDTODemo;\n\npublic partial class DepartmentDTO\n{\npublic System.Int32 ID { get; set; }\npublic System.String Name { get; set; }\n}\n")))),(0,n.kt)("h2",{id:"usefull"},"Usefull"),(0,n.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{target:"_blank",href:a(6492).Z},"Download Example project AutoDTO "))),(0,n.kt)("h3",{id:"share-autodto"},"Share AutoDTO"),(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoDTO&quote=AutoDTO",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoDTO&text=AutoDTO:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoDTO",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoDTO&title=AutoDTO",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoDTO&title=AutoDTO&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoDTO",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/AutoDTO"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/AutoDTO")),(0,n.kt)("h2",{id:"in-the-same-category-mapper"},"In the same category (Mapper)"),(0,n.kt)("h3",{id:"jsonpolymorphicgenerator"},(0,n.kt)("a",{parentName:"h3",href:"/docs/JsonPolymorphicGenerator"},"JsonPolymorphicGenerator")),(0,n.kt)("h3",{id:"mapperly"},(0,n.kt)("a",{parentName:"h3",href:"/docs/mapperly"},"mapperly")),(0,n.kt)("h3",{id:"mapto"},(0,n.kt)("a",{parentName:"h3",href:"/docs/MapTo"},"MapTo")),(0,n.kt)("h3",{id:"nextgenmapper"},(0,n.kt)("a",{parentName:"h3",href:"/docs/NextGenMapper"},"NextGenMapper")))}g.isMDXComponent=!0},6492:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/files/AutoDTO-8b6ea7202324bd79ddf0803fcae04279.zip"}}]);