"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[7945],{72103:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>g,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"RSCG-Examples/NotNot.AppSettings","title":"104 - NotNot.AppSettings","description":"Application Settings to strongly typed classes. Generate also from AppSettings development","source":"@site/docs/RSCG-Examples/NotNot.AppSettings.md","sourceDirName":"RSCG-Examples","slug":"/NotNot.AppSettings","permalink":"/RSCG_Examples/v2/docs/NotNot.AppSettings","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1040,"frontMatter":{"sidebar_position":1040,"title":"104 - NotNot.AppSettings","description":"Application Settings to strongly typed classes. Generate also from AppSettings development","slug":"/NotNot.AppSettings"},"sidebar":"tutorialSidebar","previous":{"title":"103 - HangfireRecurringJob","permalink":"/RSCG_Examples/v2/docs/HangfireRecurringJob"},"next":{"title":"104 - NotNotAppSettings","permalink":"/RSCG_Examples/v2/docs/NotNotAppSettings"}}');var i=n(74848),r=n(28453),a=n(11470),p=n(19365),o=n(14252);const l={sidebar_position:1040,title:"104 - NotNot.AppSettings",description:"Application Settings to strongly typed classes. Generate also from AppSettings development",slug:"/NotNot.AppSettings"},g="NotNot.AppSettings  by jasonswearingen",d={},c=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share NotNot.AppSettings",id:"share-notnotappsettings",level:3},{value:"In the same category (FilesToCode)",id:"in-the-same-category-filestocode",level:2},{value:"Chorn.EmbeddedResourceAccessGenerator",id:"chornembeddedresourceaccessgenerator",level:3},{value:"EmbedResourceCSharp",id:"embedresourcecsharp",level:3},{value:"Podimo.ConstEmbed",id:"podimoconstembed",level:3},{value:"ResXGenerator",id:"resxgenerator",level:3},{value:"RSCG_Utils",id:"rscg_utils",level:3},{value:"ThisAssembly_Resources",id:"thisassembly_resources",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"notnotappsettings--by-jasonswearingen",children:"NotNot.AppSettings  by jasonswearingen"})}),"\n",(0,i.jsx)(o.A,{toc:c}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://www.nuget.org/packages/NotNot.AppSettings/",children:(0,i.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/NotNot.AppSettings?label=NotNot.AppSettings",alt:"Nuget"})}),"\n",(0,i.jsx)(t.a,{href:"https://github.com/jasonswearingen/NotNot.AppSettings/tree/main",children:(0,i.jsx)(t.img,{src:"https://img.shields.io/github/last-commit/jasonswearingen/NotNot.AppSettings?label=updated",alt:"GitHub last commit"})}),"\n",(0,i.jsx)(t.img,{src:"https://img.shields.io/github/stars/jasonswearingen/NotNot.AppSettings?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,i.jsx)(t.h2,{id:"details",children:"Details"}),"\n",(0,i.jsx)(t.h3,{id:"info",children:"Info"}),"\n",(0,i.jsxs)(t.admonition,{type:"info",children:[(0,i.jsxs)(t.p,{children:["Name: ",(0,i.jsx)(t.strong,{children:"NotNot.AppSettings"})]}),(0,i.jsx)(t.p,{children:"Auto-generate strongly typed C# settings objects from your AppSettings.json."}),(0,i.jsx)(t.p,{children:"Author: jasonswearingen"}),(0,i.jsxs)(t.p,{children:["NuGet:\n",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.a,{href:"https://www.nuget.org/packages/NotNot.AppSettings/",children:"https://www.nuget.org/packages/NotNot.AppSettings/"})})]}),(0,i.jsxs)(t.p,{children:["You can find more details at ",(0,i.jsx)(t.a,{href:"https://github.com/jasonswearingen/NotNot.AppSettings/",children:"https://github.com/jasonswearingen/NotNot.AppSettings/"})]}),(0,i.jsxs)(t.p,{children:["Source: ",(0,i.jsx)(t.a,{href:"https://github.com/jasonswearingen/NotNot.AppSettings/tree/main",children:"https://github.com/jasonswearingen/NotNot.AppSettings/tree/main"})]})]}),"\n",(0,i.jsx)(t.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,i.jsx)(t.admonition,{type:"note"}),"\n",(0,i.jsx)(t.h3,{id:"about",children:"About"}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"Application Settings to strongly typed classes. Generate also from AppSettings development"})}),"\n",(0,i.jsx)(t.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,i.jsx)(t.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsxs)(p.A,{value:"csproj",label:"CSharp Project",children:[(0,i.jsxs)(t.p,{children:["This is the CSharp Project that references ",(0,i.jsx)(t.strong,{children:"NotNot.AppSettings"})]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",metastring:"showLineNumbers {12}",children:'<Project Sdk="Microsoft.NET.Sdk.Web">\n\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <Nullable>enable</Nullable>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <InvariantGlobalization>true</InvariantGlobalization>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.1" />\n    <PackageReference Include="NotNot.AppSettings" Version="1.0.0" OutputItemType="Analyzer" ReferenceOutputAssembly="true" />\n    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />\n  </ItemGroup>\n\n  <ItemGroup>\n    <AdditionalFiles Update="appsettings.json">\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\n    </AdditionalFiles>\n  </ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n</Project>\n\n'})})]}),(0,i.jsxs)(p.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NotNotAppSettings\\src\\TestAppSettings\\Program.cs",label:"Program.cs",children:[(0,i.jsxs)(t.p,{children:["This is the use of ",(0,i.jsx)(t.strong,{children:"NotNot.AppSettings"})," in ",(0,i.jsx)(t.em,{children:"Program.cs"})]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'var builder = WebApplication.CreateBuilder(args);\n\n// Add services to the container.\n// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\nbuilder.Services.AddSingleton<TestAppSettings.AppSettingsGen.IAppSettingsBinder, TestAppSettings.AppSettingsGen.AppSettingsBinder>();\n\nvar app = builder.Build();\n\n// Configure the HTTP request pipeline.\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\n\napp.UseHttpsRedirection();\n\nvar summaries = new[]\n{\n    "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching"\n};\n\nvar appSettings = app.Services.GetRequiredService<TestAppSettings.AppSettingsGen.IAppSettingsBinder>().AppSettings;\nConsole.WriteLine(appSettings.AppName);\n\napp.MapGet("/weatherforecast", () =>\n{\n    var forecast = Enumerable.Range(1, 5).Select(index =>\n        new WeatherForecast\n        (\n            DateOnly.FromDateTime(DateTime.Now.AddDays(index)),\n            Random.Shared.Next(-20, 55),\n            summaries[Random.Shared.Next(summaries.Length)]\n        ))\n        .ToArray();\n    return forecast;\n})\n.WithName("GetWeatherForecast")\n.WithOpenApi();\n\napp.Run();\n\ninternal record WeatherForecast(DateOnly Date, int TemperatureC, string? Summary)\n{\n    public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);\n}\n\n'})})]})]}),"\n",(0,i.jsx)(t.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,i.jsx)(t.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,i.jsxs)(a.A,{children:[(0,i.jsx)(p.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NotNotAppSettings\\src\\TestAppSettings\\obj\\GX\\NotNot.AppSettings\\NotNot.AppSettingsGen\\TestAppSettings.AppSettingsGen.AppSettings.cs",label:"TestAppSettings.AppSettingsGen.AppSettings.cs",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\n/** \n * This file is generated by the NotNot.AppSettings nuget package.\n * Do not edit this file directly, instead edit the appsettings.json files and rebuild the project.\n**/\nusing System;\nusing System.Runtime.CompilerServices;\nnamespace TestAppSettings.AppSettingsGen;\n\n[CompilerGenerated]\npublic partial class AppSettings {\n   public TestAppSettings.AppSettingsGen._AppSettings.Logging? Logging{get; set;}\n   public string? AllowedHosts{get; set;}\n   public string? AppName{get; set;}\n\n}\n\n"})})}),(0,i.jsx)(p.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NotNotAppSettings\\src\\TestAppSettings\\obj\\GX\\NotNot.AppSettings\\NotNot.AppSettingsGen\\TestAppSettings.AppSettingsGen._AppSettings.Logging.cs",label:"TestAppSettings.AppSettingsGen._AppSettings.Logging.cs",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\n/** \n * This file is generated by the NotNot.AppSettings nuget package.\n * Do not edit this file directly, instead edit the appsettings.json files and rebuild the project.\n**/\nusing System;\nusing System.Runtime.CompilerServices;\nnamespace TestAppSettings.AppSettingsGen._AppSettings;\n\n[CompilerGenerated]\npublic partial class Logging {\n   public TestAppSettings.AppSettingsGen._AppSettings._Logging.LogLevel? LogLevel{get; set;}\n\n}\n\n"})})}),(0,i.jsx)(p.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NotNotAppSettings\\src\\TestAppSettings\\obj\\GX\\NotNot.AppSettings\\NotNot.AppSettingsGen\\TestAppSettings.AppSettingsGen._AppSettings._Logging.LogLevel.cs",label:"TestAppSettings.AppSettingsGen._AppSettings._Logging.LogLevel.cs",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\n/** \n * This file is generated by the NotNot.AppSettings nuget package.\n * Do not edit this file directly, instead edit the appsettings.json files and rebuild the project.\n**/\nusing System;\nusing System.Runtime.CompilerServices;\nnamespace TestAppSettings.AppSettingsGen._AppSettings._Logging;\n\n[CompilerGenerated]\npublic partial class LogLevel {\n   public string? Default{get; set;}\n   public string? Microsoft_AspNetCore{get; set;}\n\n}\n\n"})})}),(0,i.jsx)(p.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NotNotAppSettings\\src\\TestAppSettings\\obj\\GX\\NotNot.AppSettings\\NotNot.AppSettingsGen\\_BinderShims.cs",label:"_BinderShims.cs",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'\n/** \n * This file is generated by the NotNot.AppSettings nuget package.\n * Do not edit this file directly, instead edit the appsettings.json files and rebuild the project.\n**/\n\nusing Microsoft.Extensions.Configuration;\nnamespace TestAppSettings.AppSettingsGen;\n\n\n/// <summary>\n/// Strongly typed AppSettings.json, recreated every build. \n/// <para>You can use this directly, extend it (it\'s a partial class), \n/// or get a populated instance of it via the <see cref="AppSettingsBinder"/> DI service</para>\n/// </summary>\npublic partial class AppSettings\n{\n}\n\n/// <summary>\n/// a DI service that contains a strongly-typed copy of your appsettings.json\n/// <para><strong>DI Usage:</strong></para>\n/// <para><c>builder.Services.AddSingleton&lt;IAppSettingsBinder, AppSettingsBinder&gt;();</c></para>\n/// <para><c>var app = builder.Build();</c></para>\n///  <para><c>var appSettings = app.Services.GetRequiredService&lt;IAppSettingsBinder&gt;().AppSettings;</c></para>\n/// <para><strong>Non-DI Usage:</strong></para>\n/// <para><c>var appSettings = AppSettingsBinder.LoadDirect();</c></para>\n/// </summary>\npublic partial class AppSettingsBinder : IAppSettingsBinder\n{\n   public AppSettings AppSettings { get; protected set; }\n\n   public AppSettingsBinder(IConfiguration _config)\n   {\n      AppSettings = new AppSettings();\n\n      //automatically reads and binds to config file\n      _config.Bind(AppSettings);\n   }\n\n   /// <summary>\n   /// Manually construct an AppSettings from your appsettings.json files.\n   /// <para>NOTE: This method is provided for non-DI users.  If you use DI, don\'t use this method.  Instead just register this class as a service.</para>\n   /// </summary>\n   /// <param name="appSettingsLocation">folder where to search for appsettings.json.  defaults to current app folder.</param>\n   /// <param name="appSettingsFileNames">lets you override the files to load up.  defaults to \'appsettings.json\' and \'appsettings.{DOTNET_ENVIRONMENT}.json\'</param>\n   /// <param name="throwIfFilesMissing">default is to silently ignore if any of the .json files are missing.</param>\n   /// <returns>your strongly typed appsettings with values from your .json loaded in</returns>\n   public static AppSettings LoadDirect(string? appSettingsLocation = null,IEnumerable<string>? appSettingsFileNames=null,bool throwIfFilesMissing=false )\n   {      \n      //pick what .json files to load\n      if (appSettingsFileNames is null)\n      {\n         //figure out what env\n         var env = Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT");\n         env ??= Environment.GetEnvironmentVariable("DOTNET_ENVIRONMENT");\n         env ??= Environment.GetEnvironmentVariable("ENVIRONMENT");\n         //env ??= "Development"; //default to "Development\n         if (env is null)\n         {\n            appSettingsFileNames = new[] { "appsettings.json" };\n         }\n         else\n         {\n            appSettingsFileNames = new[] { "appsettings.json", $"appsettings.{env}.json" };\n         }\n      }\n\n      //build a config from the specified files\n      var builder = new ConfigurationBuilder();\n      if (appSettingsLocation != null)\n      {\n         builder.SetBasePath(appSettingsLocation);\n      }\n      var optional = !throwIfFilesMissing;\n      foreach (var fileName in appSettingsFileNames)\n      {         \n         builder.AddJsonFile(fileName, optional: optional, reloadOnChange: false); // Add appsettings.json\n      }\n      IConfigurationRoot configuration = builder.Build();\n\n      //now finally get the appsettings we care about\n      var binder = new AppSettingsBinder(configuration);\n      return binder.AppSettings;\n   }\n}\n\n/// <summary>\n/// a DI service that contains a strongly-typed copy of your appsettings.json\n/// <para><strong>DI Usage:</strong></para>\n/// <para><c>builder.Services.AddSingleton&lt;IAppSettingsBinder, AppSettingsBinder&gt;();</c></para>\n/// <para><c>var app = builder.Build();</c></para>\n///  <para><c>var appSettings = app.Services.GetRequiredService&lt;IAppSettingsBinder&gt;().AppSettings;</c></para>\n/// <para><strong>Non-DI Usage:</strong></para>\n/// <para><c>var appSettings = AppSettingsBinder.LoadDirect();</c></para>\n/// </summary>\npublic interface IAppSettingsBinder\n{\n   public AppSettings AppSettings { get; }\n}\n\n'})})})]}),"\n",(0,i.jsx)(t.h2,{id:"useful",children:"Useful"}),"\n",(0,i.jsx)(t.h3,{id:"download-example-net--c-",children:"Download Example (.NET  C# )"}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(85458).A+"",children:"Download Example project NotNot.AppSettings "})})}),"\n",(0,i.jsx)(t.h3,{id:"share-notnotappsettings",children:"Share NotNot.AppSettings"}),"\n",(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNotNot.AppSettings&quote=NotNot.AppSettings",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNotNot.AppSettings&text=NotNot.AppSettings:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNotNot.AppSettings",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNotNot.AppSettings&title=NotNot.AppSettings",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNotNot.AppSettings&title=NotNot.AppSettings&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNotNot.AppSettings",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/NotNot.AppSettings",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/NotNot.AppSettings"})}),"\n",(0,i.jsx)(t.h2,{id:"in-the-same-category-filestocode",children:"In the same category (FilesToCode)"}),"\n",(0,i.jsx)(t.h3,{id:"chornembeddedresourceaccessgenerator",children:(0,i.jsx)(t.a,{href:"/docs/Chorn.EmbeddedResourceAccessGenerator",children:"Chorn.EmbeddedResourceAccessGenerator"})}),"\n",(0,i.jsx)(t.h3,{id:"embedresourcecsharp",children:(0,i.jsx)(t.a,{href:"/docs/EmbedResourceCSharp",children:"EmbedResourceCSharp"})}),"\n",(0,i.jsx)(t.h3,{id:"podimoconstembed",children:(0,i.jsx)(t.a,{href:"/docs/Podimo.ConstEmbed",children:"Podimo.ConstEmbed"})}),"\n",(0,i.jsx)(t.h3,{id:"resxgenerator",children:(0,i.jsx)(t.a,{href:"/docs/ResXGenerator",children:"ResXGenerator"})}),"\n",(0,i.jsx)(t.h3,{id:"rscg_utils",children:(0,i.jsx)(t.a,{href:"/docs/RSCG_Utils",children:"RSCG_Utils"})}),"\n",(0,i.jsx)(t.h3,{id:"thisassembly_resources",children:(0,i.jsx)(t.a,{href:"/docs/ThisAssembly_Resources",children:"ThisAssembly_Resources"})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},85458:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/files/NotNot.AppSettings-32c560faecf98573add1c49555764338.zip"}}]);