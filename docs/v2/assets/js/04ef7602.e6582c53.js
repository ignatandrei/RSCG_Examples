"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[7627],{73787:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>y,frontMatter:()=>p,metadata:()=>c,toc:()=>d});var n=a(87462),r=(a(67294),a(3905)),s=a(73992),i=a(18679),o=a(68839);const p={sidebar_position:1580,title:"158 - Enhanced.GetTypes",description:"Generating list of PUBLIC classes that implements an interface",slug:"/Enhanced.GetTypes"},l="Enhanced.GetTypes  by duskembayev",c={unversionedId:"RSCG-Examples/Enhanced.GetTypes",id:"RSCG-Examples/Enhanced.GetTypes",title:"158 - Enhanced.GetTypes",description:"Generating list of PUBLIC classes that implements an interface",source:"@site/docs/RSCG-Examples/Enhanced.GetTypes.md",sourceDirName:"RSCG-Examples",slug:"/Enhanced.GetTypes",permalink:"/RSCG_Examples/v2/docs/Enhanced.GetTypes",draft:!1,tags:[],version:"current",sidebarPosition:1580,frontMatter:{sidebar_position:1580,title:"158 - Enhanced.GetTypes",description:"Generating list of PUBLIC classes that implements an interface",slug:"/Enhanced.GetTypes"},sidebar:"tutorialSidebar",previous:{title:"157 - Sera.Union",permalink:"/RSCG_Examples/v2/docs/Sera.Union"},next:{title:"159 - LightweightObjectMapper",permalink:"/RSCG_Examples/v2/docs/LightweightObjectMapper"}},m={},d=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use-1",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share Enhanced.GetTypes",id:"share-enhancedgettypes",level:3},{value:"In the same category (EnhancementClass) - 26 other generators",id:"in-the-same-category-enhancementclass---26-other-generators",level:3},{value:"ApparatusAOT",id:"apparatusaot",level:4},{value:"AspectGenerator",id:"aspectgenerator",level:4},{value:"CommonCodeGenerator",id:"commoncodegenerator",level:4},{value:"CopyTo",id:"copyto",level:4},{value:"DudNet",id:"dudnet",level:4},{value:"FastGenericNew",id:"fastgenericnew",level:4},{value:"GeneratorEquals",id:"generatorequals",level:4},{value:"HsuSgSync",id:"hsusgsync",level:4},{value:"Immutype",id:"immutype",level:4},{value:"Ling.Audit",id:"lingaudit",level:4},{value:"Lombok.NET",id:"lomboknet",level:4},{value:"M31.FluentAPI",id:"m31fluentapi",level:4},{value:"MemoryPack",id:"memorypack",level:4},{value:"Meziantou.Polyfill",id:"meziantoupolyfill",level:4},{value:"Microsoft.Extensions.Logging",id:"microsoftextensionslogging",level:4},{value:"Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator",id:"microsoftextensionsoptionsgeneratorsoptionsvalidatorgenerator",level:4},{value:"Microsoft.Interop.JavaScript.JSImportGenerator",id:"microsoftinteropjavascriptjsimportgenerator",level:4},{value:"OptionToStringGenerator",id:"optiontostringgenerator",level:4},{value:"RSCG_Decorator",id:"rscg_decorator",level:4},{value:"RSCG_UtilityTypes",id:"rscg_utilitytypes",level:4},{value:"StaticReflection",id:"staticreflection",level:4},{value:"SyncMethodGenerator",id:"syncmethodgenerator",level:4},{value:"System.Runtime.InteropServices",id:"systemruntimeinteropservices",level:4},{value:"System.Text.RegularExpressions",id:"systemtextregularexpressions",level:4},{value:"TelemetryLogging",id:"telemetrylogging",level:4},{value:"ThisClass",id:"thisclass",level:4}],h={toc:d},u="wrapper";function y(e){let{components:t,...p}=e;return(0,r.kt)(u,(0,n.Z)({},h,p,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"enhancedgettypes--by-duskembayev"},"Enhanced.GetTypes  by duskembayev"),(0,r.kt)(o.Z,{toc:d,mdxType:"TOCInline"}),(0,r.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Enhanced.GetTypes/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Enhanced.GetTypes?label=Enhanced.GetTypes",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/duskembayev/Enhanced.GetTypes"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/duskembayev/Enhanced.GetTypes?label=updated",alt:"GitHub last commit"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/duskembayev/Enhanced.GetTypes?style=social",alt:"GitHub Repo stars"})),(0,r.kt)("h2",{id:"details"},"Details"),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Name: ",(0,r.kt)("strong",{parentName:"p"},"Enhanced.GetTypes")),(0,r.kt)("p",{parentName:"admonition"},"Enhanced.GetTypes is a NuGet package for simplified types retrieval in .NET Core applications. It uses a source generator for explicit types retrieval without reflection."),(0,r.kt)("p",{parentName:"admonition"},"Author: duskembayev"),(0,r.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/Enhanced.GetTypes/"},"https://www.nuget.org/packages/Enhanced.GetTypes/")),"   "),(0,r.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/duskembayev/Enhanced.GetTypes"},"https://github.com/duskembayev/Enhanced.GetTypes")),(0,r.kt)("p",{parentName:"admonition"},"Source : ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/duskembayev/Enhanced.GetTypes"},"https://github.com/duskembayev/Enhanced.GetTypes"))),(0,r.kt)("h3",{id:"original-readme"},"Original Readme"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("h1",{parentName:"admonition",id:"enhancedgettypes"},"Enhanced.GetTypes"),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/duskembayev/Enhanced.GetTypes/LICENSE"},(0,r.kt)("img",{parentName:"a",src:"https://flat.badgen.net/github/license/duskembayev/Enhanced.GetTypes",alt:"license"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Enhanced.GetTypes"},(0,r.kt)("img",{parentName:"a",src:"https://flat.badgen.net/nuget/v/Enhanced.GetTypes?icon=nuget",alt:"nuget"}))),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"Enhanced.GetTypes")," is a NuGet package for observing derived types in current assembly in .NET applications ",(0,r.kt)("strong",{parentName:"p"},"without reflection"),"."),(0,r.kt)("h2",{parentName:"admonition",id:"motivation"},"Motivation"),(0,r.kt)("p",{parentName:"admonition"},"The main goal of the package is to provide a way to get derived types in the current assembly without using reflection. This approach allows you to get the types at compile time and use them in different scenarios, such as registering them in the DI container, creating factories, etc."),(0,r.kt)("h2",{parentName:"admonition",id:"how-to-install"},"How to install"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"dotnet add package Enhanced.GetTypes\n")),(0,r.kt)("h2",{parentName:"admonition",id:"how-to-use"},"How to use"),(0,r.kt)("p",{parentName:"admonition"},"Let's say you have an interface ",(0,r.kt)("inlineCode",{parentName:"p"},"IService")," and you want to get all derived types of this interface in the current assembly.\nTo do this, you need to create a partial class and mark it with the ",(0,r.kt)("inlineCode",{parentName:"p"},"DerivedTypesAttribute")," attribute."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using System;\nusing System.Collections.Generic\nusing Enhanced.GetTypes;\n\nnamespace MyProject;\n\npublic partial class ProjectTypes\n{\n    [DerivedTypes(typeof(IService))]\n    public partial IEnumerable<Type> GetServices();\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"The body of the method will be generated by the source generator and will contain a list of all derived types of the ",(0,r.kt)("inlineCode",{parentName:"p"},"IService")," interface in the current assembly."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated />\nnamespace MyProject\n{\n    partial class ProjectTypes\n    {\n        private partial System.Collections.Generic.IEnumerable<System.Type> GetServices()\n        {\n            yield return typeof(MyProject.People.PeopleService);\n            yield return typeof(MyProject.Pets.PetsService);\n            yield return typeof(MyProject.Cars.CarsService);\n            yield break;\n        }\n    }\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Now you can use the generated method to get all derived types of the ",(0,r.kt)("inlineCode",{parentName:"p"},"IService")," interface for different purposes. For example, registering them in the DI container."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// ...\nvar serviceDescriptors = ProjectTypes.GetServices()\n                                     .Select(type => ServiceDescriptor.Transient(typeof(IService), type);\n\nbuilder.Services.TryAddEnumerable(serviceDescriptors);\n")),(0,r.kt)("p",{parentName:"admonition"},"Additionally, you can specify flags for the ",(0,r.kt)("inlineCode",{parentName:"p"},"DerivedTypesAttribute")," attribute to filter the types you need."),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IncludeInternal")," - include internal types."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IncludeAbstract")," - include abstract types."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"IncludeInterfaces")," - include interfaces.")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// ...\n[DerivedTypes(typeof(IService), IncludeInternal = true, IncludeAbstract = true, IncludeInterfaces = true)]\npublic partial IEnumerable<Type> GetServices();\n")),(0,r.kt)("h3",{parentName:"admonition",id:"important-notes"},"Important notes"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"The method marked with the ",(0,r.kt)("inlineCode",{parentName:"li"},"DerivedTypesAttribute")," attribute must return ",(0,r.kt)("inlineCode",{parentName:"li"},"IEnumerable<Type>"),"."),(0,r.kt)("li",{parentName:"ul"},"Types from referenced assemblies are not included."))),(0,r.kt)("h3",{id:"about"},"About"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Generating list of PUBLIC classes that implements an interface")),(0,r.kt)("h2",{id:"how-to-use-1"},"How to use"),(0,r.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,r.kt)("p",null,"This is the CSharp Project that references ",(0,r.kt)("strong",{parentName:"p"},"Enhanced.GetTypes")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {11}",showLineNumbers:!0,"{11}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Enhanced.GetTypes" Version="1.0.0" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Enhanced.GetTypes\\src\\GetTypesForInterface\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Enhanced.GetTypes")," in ",(0,r.kt)("em",{parentName:"p"},"Program.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// See https://aka.ms/new-console-template for more information\nusing GetTypesForInterface;\n\nConsole.WriteLine("Hello, World!");\nforeach (var type in ProjectTypes.GetIPersonTypes())\n{\n    Console.WriteLine(type.Name);\n}\n'))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Enhanced.GetTypes\\src\\GetTypesForInterface\\ProjectTypes.cs",label:"ProjectTypes.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Enhanced.GetTypes")," in ",(0,r.kt)("em",{parentName:"p"},"ProjectTypes.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using Enhanced.GetTypes.Annotation;\n\nnamespace GetTypesForInterface;\npublic partial class ProjectTypes\n{\n    [DerivedTypes(typeof(IPerson))]\n    public  static partial IEnumerable<Type> GetIPersonTypes();\n}\n\n"))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Enhanced.GetTypes\\src\\GetTypesForInterface\\IPerson.cs",label:"IPerson.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Enhanced.GetTypes")," in ",(0,r.kt)("em",{parentName:"p"},"IPerson.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"\nnamespace GetTypesForInterface;\ninternal interface IPerson\n{\n    public string Name { get; set; }\n}\n\n"))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Enhanced.GetTypes\\src\\GetTypesForInterface\\Student.cs",label:"Student.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Enhanced.GetTypes")," in ",(0,r.kt)("em",{parentName:"p"},"Student.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'\nnamespace GetTypesForInterface;\npublic class Student : IPerson\n{\n    public string Name { get; set; } = "";\n}\n    \n\n'))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Enhanced.GetTypes\\src\\GetTypesForInterface\\Teacher.cs",label:"Teacher.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Enhanced.GetTypes")," in ",(0,r.kt)("em",{parentName:"p"},"Teacher.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'namespace GetTypesForInterface;\npublic class Teacher:IPerson\n{\n    public string Name { get; set; } = "";\n}\n\n\n')))),(0,r.kt)("h3",{id:"generated-files"},"Generated Files"),(0,r.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Enhanced.GetTypes\\src\\GetTypesForInterface\\obj\\GX\\Enhanced.GetTypes.SourceGenerator\\Enhanced.GetTypes.SourceGenerator.GetTypesMethodSourceGenerator\\ProjectTypes.GetIPersonTypes.g.cs",label:"ProjectTypes.GetIPersonTypes.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated />\nnamespace GetTypesForInterface\n{\n    partial class ProjectTypes\n    {\n        public static partial System.Collections.Generic.IEnumerable<System.Type> GetIPersonTypes()\n        {\n            yield return typeof(GetTypesForInterface.Student);\n            yield return typeof(GetTypesForInterface.Teacher);\n            yield break;\n        }\n    }\n}\n\n")))),(0,r.kt)("h2",{id:"usefull"},"Usefull"),(0,r.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{target:"_blank",href:a(48528).Z},"Download Example project Enhanced.GetTypes "))),(0,r.kt)("h3",{id:"share-enhancedgettypes"},"Share Enhanced.GetTypes"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FEnhanced.GetTypes&quote=Enhanced.GetTypes",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FEnhanced.GetTypes&text=Enhanced.GetTypes:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FEnhanced.GetTypes",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FEnhanced.GetTypes&title=Enhanced.GetTypes",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FEnhanced.GetTypes&title=Enhanced.GetTypes&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FEnhanced.GetTypes",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Enhanced.GetTypes"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Enhanced.GetTypes")),(0,r.kt)("h3",{id:"in-the-same-category-enhancementclass---26-other-generators"},"In the same category (EnhancementClass) - 26 other generators"),(0,r.kt)("h4",{id:"apparatusaot"},(0,r.kt)("a",{parentName:"h4",href:"/docs/ApparatusAOT"},"ApparatusAOT")),(0,r.kt)("h4",{id:"aspectgenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/AspectGenerator"},"AspectGenerator")),(0,r.kt)("h4",{id:"commoncodegenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/CommonCodeGenerator"},"CommonCodeGenerator")),(0,r.kt)("h4",{id:"copyto"},(0,r.kt)("a",{parentName:"h4",href:"/docs/CopyTo"},"CopyTo")),(0,r.kt)("h4",{id:"dudnet"},(0,r.kt)("a",{parentName:"h4",href:"/docs/DudNet"},"DudNet")),(0,r.kt)("h4",{id:"fastgenericnew"},(0,r.kt)("a",{parentName:"h4",href:"/docs/FastGenericNew"},"FastGenericNew")),(0,r.kt)("h4",{id:"generatorequals"},(0,r.kt)("a",{parentName:"h4",href:"/docs/GeneratorEquals"},"GeneratorEquals")),(0,r.kt)("h4",{id:"hsusgsync"},(0,r.kt)("a",{parentName:"h4",href:"/docs/HsuSgSync"},"HsuSgSync")),(0,r.kt)("h4",{id:"immutype"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Immutype"},"Immutype")),(0,r.kt)("h4",{id:"lingaudit"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Ling.Audit"},"Ling.Audit")),(0,r.kt)("h4",{id:"lomboknet"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Lombok.NET"},"Lombok.NET")),(0,r.kt)("h4",{id:"m31fluentapi"},(0,r.kt)("a",{parentName:"h4",href:"/docs/M31.FluentAPI"},"M31.FluentAPI")),(0,r.kt)("h4",{id:"memorypack"},(0,r.kt)("a",{parentName:"h4",href:"/docs/MemoryPack"},"MemoryPack")),(0,r.kt)("h4",{id:"meziantoupolyfill"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Meziantou.Polyfill"},"Meziantou.Polyfill")),(0,r.kt)("h4",{id:"microsoftextensionslogging"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Microsoft.Extensions.Logging"},"Microsoft.Extensions.Logging")),(0,r.kt)("h4",{id:"microsoftextensionsoptionsgeneratorsoptionsvalidatorgenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator"},"Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator")),(0,r.kt)("h4",{id:"microsoftinteropjavascriptjsimportgenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Microsoft.Interop.JavaScript.JSImportGenerator"},"Microsoft.Interop.JavaScript.JSImportGenerator")),(0,r.kt)("h4",{id:"optiontostringgenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/OptionToStringGenerator"},"OptionToStringGenerator")),(0,r.kt)("h4",{id:"rscg_decorator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/RSCG_Decorator"},"RSCG_Decorator")),(0,r.kt)("h4",{id:"rscg_utilitytypes"},(0,r.kt)("a",{parentName:"h4",href:"/docs/RSCG_UtilityTypes"},"RSCG_UtilityTypes")),(0,r.kt)("h4",{id:"staticreflection"},(0,r.kt)("a",{parentName:"h4",href:"/docs/StaticReflection"},"StaticReflection")),(0,r.kt)("h4",{id:"syncmethodgenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/SyncMethodGenerator"},"SyncMethodGenerator")),(0,r.kt)("h4",{id:"systemruntimeinteropservices"},(0,r.kt)("a",{parentName:"h4",href:"/docs/System.Runtime.InteropServices"},"System.Runtime.InteropServices")),(0,r.kt)("h4",{id:"systemtextregularexpressions"},(0,r.kt)("a",{parentName:"h4",href:"/docs/System.Text.RegularExpressions"},"System.Text.RegularExpressions")),(0,r.kt)("h4",{id:"telemetrylogging"},(0,r.kt)("a",{parentName:"h4",href:"/docs/TelemetryLogging"},"TelemetryLogging")),(0,r.kt)("h4",{id:"thisclass"},(0,r.kt)("a",{parentName:"h4",href:"/docs/ThisClass"},"ThisClass")))}y.isMDXComponent=!0},48528:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Enhanced.GetTypes-00210fee7a081b928388383deab13162.zip"}}]);