"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[614],{46836:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var i=n(87462),a=(n(67294),n(3905)),r=n(73992),s=n(18679),o=n(68839);const l={sidebar_position:350,title:"35 - DeeDee",description:"Mediatr generated data",slug:"/DeeDee"},p="DeeDee  by joh-pot",c={unversionedId:"RSCG-Examples/DeeDee",id:"RSCG-Examples/DeeDee",title:"35 - DeeDee",description:"Mediatr generated data",source:"@site/docs/RSCG-Examples/DeeDee.md",sourceDirName:"RSCG-Examples",slug:"/DeeDee",permalink:"/RSCG_Examples/v2/docs/DeeDee",draft:!1,tags:[],version:"current",sidebarPosition:350,frontMatter:{sidebar_position:350,title:"35 - DeeDee",description:"Mediatr generated data",slug:"/DeeDee"},sidebar:"tutorialSidebar",previous:{title:"34 - MemoryPack",permalink:"/RSCG_Examples/v2/docs/MemoryPack"},next:{title:"36 - ProxyGen",permalink:"/RSCG_Examples/v2/docs/ProxyGen"}},d={},m=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share DeeDee",id:"share-deedee",level:3},{value:"In the same category (EnhancementProject) - 18 other generators",id:"in-the-same-category-enhancementproject---18-other-generators",level:3},{value:"AutoInvoke.Generator",id:"autoinvokegenerator",level:4},{value:"AutoSpectre",id:"autospectre",level:4},{value:"BuildInfo",id:"buildinfo",level:4},{value:"Com",id:"com",level:4},{value:"CommandLine",id:"commandline",level:4},{value:"LinqGen.Generator",id:"linqgengenerator",level:4},{value:"Mediator",id:"mediator",level:4},{value:"Pekspro.BuildInformationGenerator",id:"peksprobuildinformationgenerator",level:4},{value:"PlantUmlClassDiagramGenerator",id:"plantumlclassdiagramgenerator",level:4},{value:"RSCG_AMS",id:"rscg_ams",level:4},{value:"RSCG_ExportDiagram",id:"rscg_exportdiagram",level:4},{value:"RSCG_FunctionsWithDI",id:"rscg_functionswithdi",level:4},{value:"RSCG_NameGenerator",id:"rscg_namegenerator",level:4},{value:"RSCG_TimeBombComment",id:"rscg_timebombcomment",level:4},{value:"RSCG_Wait",id:"rscg_wait",level:4},{value:"ThisAssembly",id:"thisassembly",level:4},{value:"ThisAssembly.Constants",id:"thisassemblyconstants",level:4},{value:"ThisAssembly.Metadata",id:"thisassemblymetadata",level:4}],u={toc:m},g="wrapper";function h(e){let{components:t,...l}=e;return(0,a.kt)(g,(0,i.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deedee--by-joh-pot"},"DeeDee  by joh-pot"),(0,a.kt)(o.Z,{toc:m,mdxType:"TOCInline"}),(0,a.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/DeeDee/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/DeeDee?label=DeeDee",alt:"Nuget"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/joh-pot/DeeDee/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/joh-pot/DeeDee?label=updated",alt:"GitHub last commit"})),"\n",(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/joh-pot/DeeDee?style=social",alt:"GitHub Repo stars"})),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("h3",{id:"info"},"Info"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Name: ",(0,a.kt)("strong",{parentName:"p"},"DeeDee")),(0,a.kt)("p",{parentName:"admonition"},"Mediator pattern using source generation for .NET"),(0,a.kt)("p",{parentName:"admonition"},"Author: joh-pot"),(0,a.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/DeeDee/"},"https://www.nuget.org/packages/DeeDee/")),"   "),(0,a.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/joh-pot/DeeDee/"},"https://github.com/joh-pot/DeeDee/")),(0,a.kt)("p",{parentName:"admonition"},"Source : ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/joh-pot/DeeDee/"},"https://github.com/joh-pot/DeeDee/"))),(0,a.kt)("h3",{id:"original-readme"},"Original Readme"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("h1",{parentName:"admonition",id:"deedee"},"DeeDee"),(0,a.kt)("p",{parentName:"admonition"},"Mediator using source generation for .NET"),(0,a.kt)("p",{parentName:"admonition"},"Send in-process commands/queries to handlers either sync or async. The mechanism for sending is generated during compile time as overloads based on your code."),(0,a.kt)("h1",{parentName:"admonition",id:"installation"},"Installation"),(0,a.kt)("p",{parentName:"admonition"},"Nuget Package manager>",(0,a.kt)("inlineCode",{parentName:"p"},"Install-Package DeeDee")),(0,a.kt)("p",{parentName:"admonition"},"See ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/joh-pot/DeeDee/wiki"},"wiki")," for full details")),(0,a.kt)("h3",{id:"about"},"About"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Mediatr generated data")),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,a.kt)("p",null,"This is the CSharp Project that references ",(0,a.kt)("strong",{parentName:"p"},"DeeDee")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {14}",showLineNumbers:!0,"{14}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n    <ItemGroup>\n        <PackageReference Include="DeeDee" Version="2.0.0" />\n        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />\n        \n    </ItemGroup>\n\n</Project>\n\n'))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"DeeDee")," in ",(0,a.kt)("em",{parentName:"p"},"Program.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'Console.WriteLine("Hello, World!");\nServiceCollection services = new ();\nDeeDeeDemo.DeeDee.Generated.IocExtensions.AddDispatcher(services);\n\nservices.AddSingleton(typeof(IPipelineAction<Ping, Pong>), typeof(GenericLoggerHandler)); // This will run 1st\n\nvar serviceProvider = services.BuildServiceProvider();\n\nvar mediator = serviceProvider.GetRequiredService<DeeDeeDemo.DeeDee.Generated.Models.IDispatcher>();\nvar id = Guid.NewGuid();\nvar request = new Ping(id);\n\nvar response = mediator.Send(request);\n\nConsole.WriteLine("-----------------------------------");\nConsole.WriteLine("ID: " + id);\nConsole.WriteLine(request);\nConsole.WriteLine(response);\n\n\n'))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\PingPong.cs",label:"PingPong.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"DeeDee")," in ",(0,a.kt)("em",{parentName:"p"},"PingPong.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'public sealed record Ping(Guid Id) : IRequest<Pong>;\n\npublic sealed record Pong(Guid Id);\n\n\npublic sealed class PingHandler : IPipelineAction<Ping, Pong>\n{\n\n    public Pong Invoke(Ping request, ref PipelineContext<Pong> context, Next<Pong> next)\n    {\n        Console.WriteLine("4) Returning pong!");\n        return new Pong(request.Id);\n    }\n}\n\n'))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\GenericLoggerHandler.cs",label:"GenericLoggerHandler.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"DeeDee")," in ",(0,a.kt)("em",{parentName:"p"},"GenericLoggerHandler.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'public sealed class GenericLoggerHandler : IPipelineAction<Ping, Pong>\n{\n    public Pong Invoke(Ping request, ref PipelineContext<Pong> context, Next<Pong> next)\n    {\n        Console.WriteLine("1) Running logger handler");\n        try\n        {\n            var response = next(request , ref context);\n            Console.WriteLine("5) No error!");\n            return response;\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine("error:" + ex.Message);\n            throw;\n        }\n    }\n}\n')))),(0,a.kt)("h3",{id:"generated-files"},"Generated Files"),(0,a.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\obj\\GX\\DeeDee\\DeeDee.SourceGenerator\\Dispatcher.cs",label:"Dispatcher.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using System;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Linq;\nusing DeeDee.Models;\nusing ServiceProvider = DeeDee.Models.ServiceProvider;\n\nnamespace DeeDeeDemo.DeeDee.Generated.Models\n{\n    public class Dispatcher : IDispatcher\n    {\n        private readonly ServiceProvider _serviceFactory;\n        private readonly Lazy<Next<Pong>> _Ping_Pong_lazy;\n        public Dispatcher(ServiceProvider service)\n        {\n            _serviceFactory = service;\n            _Ping_Pong_lazy = new Lazy<Next<Pong>>(Build<Ping, Pong>);\n        }\n\n        public Pong Send(Ping request)\n        {\n            var context = new PipelineContext<Pong>();\n            Next<Pong> builtPipeline = _Ping_Pong_lazy.Value;\n            return builtPipeline(request, ref context);\n        }\n\n        private NextAsync BuildAsync<TRequest>()\n            where TRequest : IRequest\n        {\n            {\n                var actions = _serviceFactory.GetServices<IPipelineActionAsync<TRequest>>();\n                var builtPipeline = actions.Aggregate((NextAsync)((req, ctx, tkn) => Task.CompletedTask), (next, pipeline) => (req, ctx, tkn) => pipeline.InvokeAsync((TRequest)req, ctx, next, tkn));\n                return builtPipeline;\n            }\n        }\n\n        private Next Build<TRequest>()\n            where TRequest : IRequest\n        {\n            {\n                var actions = _serviceFactory.GetServices<IPipelineAction<TRequest>>();\n                var builtPipeline = actions.Aggregate((Next)((IRequest req, ref PipelineContext ctx) =>\n                {\n                    {\n                    }\n                }), (next, pipeline) => (IRequest req, ref PipelineContext ctx) => pipeline.Invoke((TRequest)req, ref ctx, next));\n                return builtPipeline;\n            }\n        }\n\n        private NextAsync<TResponse> BuildAsync<TRequest, TResponse>()\n            where TRequest : IRequest<TResponse>\n        {\n            {\n                var actions = _serviceFactory.GetServices<IPipelineActionAsync<TRequest, TResponse>>();\n                var builtPipeline = actions.Aggregate((NextAsync<TResponse>)((req, ctx, tkn) => Task.FromResult(ctx.Result)), (next, pipeline) => (req, ctx, tkn) => pipeline.InvokeAsync((TRequest)req, ctx, next, tkn));\n                return builtPipeline;\n            }\n        }\n\n        private Next<TResponse> Build<TRequest, TResponse>()\n            where TRequest : IRequest<TResponse>\n        {\n            {\n                var actions = _serviceFactory.GetServices<IPipelineAction<TRequest, TResponse>>();\n                var builtPipeline = actions.Aggregate((Next<TResponse>)((IRequest<TResponse> req, ref PipelineContext<TResponse> ctx) => ctx.Result), (next, pipeline) => (IRequest<TResponse> req, ref PipelineContext<TResponse> ctx) => pipeline.Invoke((TRequest)req, ref ctx, next));\n                return builtPipeline;\n            }\n        }\n    }\n}\n"))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\obj\\GX\\DeeDee\\DeeDee.SourceGenerator\\IDispatcher.cs",label:"IDispatcher.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using System;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing DeeDee.Models;\n\nnamespace DeeDeeDemo.DeeDee.Generated.Models\n{\n    public interface IDispatcher\n    {\n        public Pong Send(Ping request);\n    }\n}\n"))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DeeDee\\src\\MediatorDemo\\obj\\GX\\DeeDee\\DeeDee.SourceGenerator\\IocExtensions.cs",label:"IocExtensions.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"\n            using System;\n            using System.Linq;\n            using System.Reflection;\n            using DeeDee.Models;\n            using DeeDeeDemo.DeeDee.Generated.Models;\n            using Microsoft.Extensions.DependencyInjection;\n            using ServiceProvider = DeeDee.Models.ServiceProvider;\n            namespace DeeDeeDemo.DeeDee.Generated\n\n            {\n                internal static class IocExtensions\n                {\n                    public static IServiceCollection AddDispatcher(this IServiceCollection services, Lifetime lifetime = Lifetime.Singleton)\n                    {\n                        switch(lifetime)\n                        {\n                            case Lifetime.Singleton:\n                                services.AddSingleton<IDispatcher, Dispatcher>();\n                                services.AddSingleton<ServiceProvider>(ctx => ctx.GetRequiredService);\n                                break;\n\n                            case Lifetime.Scoped:\n                                services.AddScoped<IDispatcher, Dispatcher>();\n                                services.AddScoped<ServiceProvider>(ctx => ctx.GetRequiredService);\n                                break;\n\n                            case Lifetime.Transient:\n                                services.AddTransient<IDispatcher, Dispatcher>();\n                                services.AddTransient<ServiceProvider>(ctx => ctx.GetRequiredService);\n                                break;\n                        }\n                        \n                        RegisterPipelineActions(services);\n                        \n                        return services;\n                    }\n\n                    private static void RegisterPipelineActions(IServiceCollection services)\n                    {\n                        var pipelineTypes = AppDomain\n                            .CurrentDomain\n                            .GetAssemblies()\n                            .SelectMany\n                            (\n                                a => a.GetTypes().Where\n                                (\n                                   x => !x.IsInterface &&\n                                        !x.IsAbstract &&\n                                        x.GetInterfaces()\n                                            .Any\n                                            (\n                                                y => y.Name.Equals(typeof(IPipelineActionAsync<,>).Name,\n                                                         StringComparison.InvariantCulture) ||\n                                                     y.Name.Equals(typeof(IPipelineActionAsync<>).Name,\n                                                         StringComparison.InvariantCulture) ||\n                                                     y.Name.Equals(typeof(IPipelineAction<>).Name,\n                                                         StringComparison.InvariantCulture) ||\n                                                     y.Name.Equals(typeof(IPipelineAction<,>).Name, StringComparison.InvariantCulture)\n                                            )\n                                ).GroupBy(type => type.GetInterfaces()[0]).SelectMany(g => g.OrderByDescending(s => s.GetCustomAttribute<StepAttribute>()?.Order))\n                            );\n\n                        foreach (var type in pipelineTypes)\n                        {\n                            foreach (var implementedInterface in type.GetInterfaces())\n                            {\n                                var bindAs = type.GetCustomAttribute<BindAsAttribute>();\n                                switch (bindAs?.Lifetime)\n                                {\n                                    case Lifetime.Singleton:\n                                        services.AddSingleton(implementedInterface, type);\n                                        break;\n                                    case Lifetime.Scoped:\n                                        services.AddScoped(implementedInterface, type);\n                                        break;  \n                                    case Lifetime.Transient:\n                                        services.AddTransient(implementedInterface, type);\n                                        break;\n                                    default:\n                                        services.AddSingleton(implementedInterface, type);\n                                        break;\n                                }\n                                \n                            }\n                        } \n                    }\n                }\n            }\n")))),(0,a.kt)("h2",{id:"usefull"},"Usefull"),(0,a.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{target:"_blank",href:n(47093).Z},"Download Example project DeeDee "))),(0,a.kt)("h3",{id:"share-deedee"},"Share DeeDee"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee&quote=DeeDee",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee&text=DeeDee:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee&title=DeeDee",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee&title=DeeDee&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDeeDee",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/DeeDee"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/DeeDee")),(0,a.kt)("h3",{id:"in-the-same-category-enhancementproject---18-other-generators"},"In the same category (EnhancementProject) - 18 other generators"),(0,a.kt)("h4",{id:"autoinvokegenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/AutoInvoke.Generator"},"AutoInvoke.Generator")),(0,a.kt)("h4",{id:"autospectre"},(0,a.kt)("a",{parentName:"h4",href:"/docs/AutoSpectre"},"AutoSpectre")),(0,a.kt)("h4",{id:"buildinfo"},(0,a.kt)("a",{parentName:"h4",href:"/docs/BuildInfo"},"BuildInfo")),(0,a.kt)("h4",{id:"com"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Com"},"Com")),(0,a.kt)("h4",{id:"commandline"},(0,a.kt)("a",{parentName:"h4",href:"/docs/CommandLine"},"CommandLine")),(0,a.kt)("h4",{id:"linqgengenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/LinqGen.Generator"},"LinqGen.Generator")),(0,a.kt)("h4",{id:"mediator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Mediator"},"Mediator")),(0,a.kt)("h4",{id:"peksprobuildinformationgenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Pekspro.BuildInformationGenerator"},"Pekspro.BuildInformationGenerator")),(0,a.kt)("h4",{id:"plantumlclassdiagramgenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/PlantUmlClassDiagramGenerator"},"PlantUmlClassDiagramGenerator")),(0,a.kt)("h4",{id:"rscg_ams"},(0,a.kt)("a",{parentName:"h4",href:"/docs/RSCG_AMS"},"RSCG_AMS")),(0,a.kt)("h4",{id:"rscg_exportdiagram"},(0,a.kt)("a",{parentName:"h4",href:"/docs/RSCG_ExportDiagram"},"RSCG_ExportDiagram")),(0,a.kt)("h4",{id:"rscg_functionswithdi"},(0,a.kt)("a",{parentName:"h4",href:"/docs/RSCG_FunctionsWithDI"},"RSCG_FunctionsWithDI")),(0,a.kt)("h4",{id:"rscg_namegenerator"},(0,a.kt)("a",{parentName:"h4",href:"/docs/RSCG_NameGenerator"},"RSCG_NameGenerator")),(0,a.kt)("h4",{id:"rscg_timebombcomment"},(0,a.kt)("a",{parentName:"h4",href:"/docs/RSCG_TimeBombComment"},"RSCG_TimeBombComment")),(0,a.kt)("h4",{id:"rscg_wait"},(0,a.kt)("a",{parentName:"h4",href:"/docs/RSCG_Wait"},"RSCG_Wait")),(0,a.kt)("h4",{id:"thisassembly"},(0,a.kt)("a",{parentName:"h4",href:"/docs/ThisAssembly"},"ThisAssembly")),(0,a.kt)("h4",{id:"thisassemblyconstants"},(0,a.kt)("a",{parentName:"h4",href:"/docs/ThisAssembly.Constants"},"ThisAssembly.Constants")),(0,a.kt)("h4",{id:"thisassemblymetadata"},(0,a.kt)("a",{parentName:"h4",href:"/docs/ThisAssembly.Metadata"},"ThisAssembly.Metadata")))}h.isMDXComponent=!0},47093:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/files/DeeDee-2d7915ebfe6fae567f70fe331a8dbb8c.zip"}}]);