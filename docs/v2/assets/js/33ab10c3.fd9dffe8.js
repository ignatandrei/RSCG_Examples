"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[8217],{37008:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/files/Immutype-c76dab316a1e7a8b5020f672d7d269a6.zip"},78617:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>h,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"RSCG-Examples/Immutype","title":"42 - Immutype","description":"Immutable from constructors","source":"@site/docs/RSCG-Examples/Immutype.md","sourceDirName":"RSCG-Examples","slug":"/Immutype","permalink":"/RSCG_Examples/v2/docs/Immutype","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/RSCG-Examples/Immutype.md","tags":[],"version":"current","sidebarPosition":420,"frontMatter":{"sidebar_position":420,"title":"42 - Immutype","description":"Immutable from constructors","slug":"/Immutype"},"sidebar":"tutorialSidebar","previous":{"title":"41 - GeneratorEquals","permalink":"/RSCG_Examples/v2/docs/GeneratorEquals"},"next":{"title":"43 - spreadcheetah","permalink":"/RSCG_Examples/v2/docs/spreadcheetah"}}');var t=s(74848),i=s(28453),l=s(11470),o=s(19365),a=s(14252);const c={sidebar_position:420,title:"42 - Immutype",description:"Immutable from constructors",slug:"/Immutype"},d="Immutype  by Nikolay Pianikov",h={},m=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"NuGet package",id:"nuget-package",level:2},{value:"Development environment requirements",id:"development-environment-requirements",level:2},{value:"Supported frameworks",id:"supported-frameworks",level:2},{value:"Usage Scenarios",id:"usage-scenarios",level:2},{value:"Sample scenario",id:"sample-scenario",level:3},{value:"Array",id:"array",level:3},{value:"Applying defaults",id:"applying-defaults",level:3},{value:"Clearing",id:"clearing",level:3},{value:"Immutable collection",id:"immutable-collection",level:3},{value:"Removing",id:"removing",level:3},{value:"Generic types",id:"generic-types",level:3},{value:"Nullable collection",id:"nullable-collection",level:3},{value:"Set",id:"set",level:3},{value:"Record with constructor",id:"record-with-constructor",level:3},{value:"Explicit constructor choice",id:"explicit-constructor-choice",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share Immutype",id:"share-immutype",level:3},{value:"In the same category (EnhancementClass) - 27 other generators",id:"in-the-same-category-enhancementclass---27-other-generators",level:3},{value:"ApparatusAOT",id:"apparatusaot",level:4},{value:"AspectGenerator",id:"aspectgenerator",level:4},{value:"CommonCodeGenerator",id:"commoncodegenerator",level:4},{value:"Comparison",id:"comparison",level:4},{value:"DudNet",id:"dudnet",level:4},{value:"Enhanced.GetTypes",id:"enhancedgettypes",level:4},{value:"FastGenericNew",id:"fastgenericnew",level:4},{value:"HsuSgSync",id:"hsusgsync",level:4},{value:"Ling.Audit",id:"lingaudit",level:4},{value:"Lombok.NET",id:"lomboknet",level:4},{value:"M31.FluentAPI",id:"m31fluentapi",level:4},{value:"MemberAccessor",id:"memberaccessor",level:4},{value:"MemoryPack",id:"memorypack",level:4},{value:"Meziantou.Polyfill",id:"meziantoupolyfill",level:4},{value:"Microsoft.Extensions.Logging",id:"microsoftextensionslogging",level:4},{value:"Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator",id:"microsoftextensionsoptionsgeneratorsoptionsvalidatorgenerator",level:4},{value:"Microsoft.Interop.JavaScript.JSImportGenerator",id:"microsoftinteropjavascriptjsimportgenerator",level:4},{value:"OptionToStringGenerator",id:"optiontostringgenerator",level:4},{value:"QueryStringGenerator",id:"querystringgenerator",level:4},{value:"RSCG_Decorator",id:"rscg_decorator",level:4},{value:"RSCG_UtilityTypes",id:"rscg_utilitytypes",level:4},{value:"StaticReflection",id:"staticreflection",level:4},{value:"SyncMethodGenerator",id:"syncmethodgenerator",level:4},{value:"System.Runtime.InteropServices",id:"systemruntimeinteropservices",level:4},{value:"System.Text.RegularExpressions",id:"systemtextregularexpressions",level:4},{value:"TelemetryLogging",id:"telemetrylogging",level:4},{value:"ThisClass",id:"thisclass",level:4}];function u(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"immutype--by-nikolay-pianikov",children:"Immutype  by Nikolay Pianikov"})}),"\n",(0,t.jsx)(a.A,{toc:m}),"\n",(0,t.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://www.nuget.org/packages/Immutype/",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/Immutype?label=Immutype",alt:"Nuget"})}),"\n",(0,t.jsx)(n.a,{href:"https://github.com/DevTeam/Immutype",children:(0,t.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/DevTeam/Immutype?label=updated",alt:"GitHub last commit"})}),"\n",(0,t.jsx)(n.img,{src:"https://img.shields.io/github/stars/DevTeam/Immutype?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,t.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,t.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["Name: ",(0,t.jsx)(n.strong,{children:"Immutype"})]}),(0,t.jsx)(n.p,{children:"Immutable for .NET."}),(0,t.jsx)(n.p,{children:"Author: Nikolay Pianikov"}),(0,t.jsxs)(n.p,{children:["NuGet:\n",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.a,{href:"https://www.nuget.org/packages/Immutype/",children:"https://www.nuget.org/packages/Immutype/"})})]}),(0,t.jsxs)(n.p,{children:["You can find more details at ",(0,t.jsx)(n.a,{href:"https://github.com/DevTeam/Immutype",children:"https://github.com/DevTeam/Immutype"})]}),(0,t.jsxs)(n.p,{children:["Source: ",(0,t.jsx)(n.a,{href:"https://github.com/DevTeam/Immutype",children:"https://github.com/DevTeam/Immutype"})]})]}),"\n",(0,t.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.h1,{id:"immutype",children:"Immutype"}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.nuget.org/packages/Immutype",children:(0,t.jsx)(n.img,{src:"https://buildstats.info/nuget/Immutype",alt:"NuGet"})})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"http://teamcity.jetbrains.com/viewType.html?buildTypeId=OpenSourceProjects_DevTeam_Immutype_BuildAndTestBuildType&guest=1",children:(0,t.jsx)("img",{src:"http://teamcity.jetbrains.com/app/rest/builds/buildType:(id:OpenSourceProjects_DevTeam_Immutype_BuildAndTestBuildType)/statusIcon"})})}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Immutype"})," is ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/csharp/roslyn-sdk/source-generators-overview",children:".NET code generator"})," creating extension methods for records, structures, and classes marked by the attribute ",(0,t.jsx)(n.code,{children:"[Immutype.Target]"})," to efficiently operate with instances of these types like with immutable ones."]}),(0,t.jsxs)(n.p,{children:["For instance, for the type Foo for the constructor parameter ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"values"})})," of type ",(0,t.jsx)(n.code,{children:"IEnumerable<int>"})," following extension methods are generated:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Foo WithValues(this Foo it, params int[] values)"})," - to replace values by the new ones using a method with variable number of arguments"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Foo WithValues(this Foo it, IEnumerable<int> values)"})," - to replace values by the new ones"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Foo AddValues(this Foo it, params int[] values)"})," - to add values using a method with variable number of arguments"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Foo AddValues(this Foo it, IEnumerable<int> values)"})," - to add values"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Foo RemoveValues(this Foo it, params int[] values)"})," - to remove values using a method with variable number of arguments"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Foo RemoveValues(this Foo it, IEnumerable<int> values)"})," - to remove values"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Foo ClearValues(this Foo it)"})," - to clear all values"]}),"\n"]}),(0,t.jsxs)(n.p,{children:["For the type Foo for the constructor parameter ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"value"})})," of other types, like ",(0,t.jsx)(n.code,{children:"int"}),", with default value ",(0,t.jsx)(n.code,{children:"99"})," following extension methods are generated:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Foo WithValue(this Foo it, int value)"})," - to replace a value by the new one"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Foo WithDefaultValue(this Foo it)"})," - to replace a value by the default value ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"99"})})]}),"\n"]}),(0,t.jsxs)(n.p,{children:["The extensions methods above are generating automatically for each ",(0,t.jsx)(n.code,{children:"public"})," or ",(0,t.jsx)(n.code,{children:"internal"})," type, like ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Foo"})})," marked by the attribute ",(0,t.jsx)(n.code,{children:"[Immutype.Target]"})," in the static class named as ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"FooExtensions"})}),". This generated class ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"FooExtensions"})})," is static, has the same accessibility level and the same namespace like a target class ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Foo"})}),". Each generated static extension method has two attributes:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"[MethodImpl(MethodImplOptions.AggressiveInlining | MethodImplOptions.AggressiveOptimization)]"})," - to improve performance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"[Pure]"})," - to indicate that this method is pure, that is, it does not make any visible state changes"]}),"\n"]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Immutype"})," supports nullable ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/csharp/nullable-references",children:"reference"})," and ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/nullable-value-types",children:"value"})," types and the following list of enumerable types:"]}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Arrays"}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"IEnumerable<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"List<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"IList<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"IReadOnlyCollection<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"IReadOnlyList<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ICollection<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"HashSet<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ISet<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Queue<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"Stack<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"IReadOnlyCollection<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"IReadOnlyList<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"IReadOnlySet<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ImmutableList<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"IImmutableList<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ImmutableArray<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ImmutableQueue<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"IImmutableQueue<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"ImmutableStack<T>"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"IImmutableStack<T>"})}),"\n"]}),(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Immutype"})," supports ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/microsoft.codeanalysis.iincrementalgenerator",children:"IIncrementalGenerator"})," as well as ",(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/microsoft.codeanalysis.isourcegenerator",children:"ISourceGenerator"})," so it works quite effective."]}),(0,t.jsx)(n.h2,{id:"nuget-package",children:"NuGet package"}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://www.nuget.org/packages/Immutype",children:(0,t.jsx)(n.img,{src:"https://buildstats.info/nuget/Immutype",alt:"NuGet"})})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Package Manager"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Install-Package Immutype\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:".NET CLI"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"dotnet add package Immutype\n"})}),"\n"]}),"\n"]}),(0,t.jsx)(n.h2,{id:"development-environment-requirements",children:"Development environment requirements"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://dotnet.microsoft.com/download/dotnet/5.0",children:".NET SDK 5.0.102+"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-version-history#c-version-40",children:"C# v.6 or newer"})}),"\n"]}),(0,t.jsx)(n.h2,{id:"supported-frameworks",children:"Supported frameworks"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/core/",children:".NET and .NET Core"})," 1.0+"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/standard/net-standard",children:".NET Standard"})," 1.0+"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/framework/",children:".NET Framework"})," 3.5+"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/windows/uwp/index",children:"UWP/XBOX"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://dotnet.microsoft.com/apps/iot",children:".NET IoT"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://dotnet.microsoft.com/apps/xamarin",children:"Xamarin"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/maui/",children:".NET Multi-platform App UI (MAUI)"})}),"\n"]}),(0,t.jsx)(n.h2,{id:"usage-scenarios",children:"Usage Scenarios"}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Basics","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#sample-scenario",children:"Sample scenario"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#array",children:"Array"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#applying-defaults",children:"Applying defaults"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#clearing",children:"Clearing"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#immutable-collection",children:"Immutable collection"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#removing",children:"Removing"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#generic-types",children:"Generic types"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#nullable-collection",children:"Nullable collection"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#set",children:"Set"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#record-with-constructor",children:"Record with constructor"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#explicit-constructor-choice",children:"Explicit constructor choice"})}),"\n"]}),"\n"]}),"\n"]}),(0,t.jsx)(n.h3,{id:"sample-scenario",children:"Sample scenario"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CSharp",children:'[Immutype.Target]\ninternal record Person(\n    string Name,\n    bool HasPassport = true,\n    int Age = 0,\n    ImmutableArray<Person> Friends = default);\n\npublic class SampleScenario\n{\n    public void Run()\n    {\n        var john = new Person("John", false, 15)\n            .AddFriends(\n                new Person("David").WithAge(16),\n                new Person("James").WithAge(17)\n                    .WithFriends(new Person("Tyler").WithAge(16)));\n            \n        john.Friends.Length.ShouldBe(2);\n\n        john = john.WithAge(16).WithDefaultHasPassport();\n        john.Age.ShouldBe(16);\n        john.HasPassport.ShouldBeTrue();\n\n        john = john.AddFriends(\n            new Person("Daniel").WithAge(17),\n            new Person("Sophia").WithAge(18));\n        \n        john.Friends.Length.ShouldBe(4);\n            \n        john = john.RemoveFriends(new Person("David").WithAge(16));\n\n        john.Friends.Length.ShouldBe(3);\n    }\n}\n'})}),(0,t.jsx)(n.h3,{id:"array",children:"Array"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CSharp",children:'[Immutype.Target]\ninternal readonly record struct Person(string Name, int Age = 0, params Person[] Friends);\n\npublic class Array\n{ \n    public void Run()\n    {\n        var john = new Person("John")\n            .WithAge(15)\n            .AddFriends(new Person("David").WithAge(16))\n            .AddFriends(\n                new Person("James"),\n                new Person("Daniel").WithAge(17));\n        \n        john.Friends.Length.ShouldBe(3);\n    }\n}\n'})}),(0,t.jsx)(n.h3,{id:"applying-defaults",children:"Applying defaults"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CSharp",children:'[Immutype.Target]\ninternal readonly record struct Person(string Name = "John", int Age = 17);\n\npublic class ApplyingDefaults\n{\n    public void Run()\n    {\n        var john = new Person("David", 15)\n            .WithDefaultAge()\n            .WithDefaultName();\n        \n        john.Name.ShouldBe("John");\n        john.Age.ShouldBe(17);\n    }\n}\n'})}),(0,t.jsx)(n.h3,{id:"clearing",children:"Clearing"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CSharp",children:'[Immutype.Target]\ninternal readonly record struct Person(\n    string Name,\n    int Age = 0,\n    params Person[] Friends);\n\npublic class Clearing\n{\n    public void Run()\n    {\n        var john = new Person("John",15, new Person("David").WithAge(16))\n            .AddFriends(new Person("James"));\n\n        john = john.ClearFriends();\n        \n        john.Friends.Length.ShouldBe(0);\n    }\n}\n'})}),(0,t.jsx)(n.h3,{id:"immutable-collection",children:"Immutable collection"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CSharp",children:'[Immutype.Target]\ninternal readonly struct Person\n{\n    public readonly string Name;\n    public readonly int Age;\n    public readonly IImmutableList<Person> Friends;\n\n    public Person(\n        string name,\n        int age = 0,\n        IImmutableList<Person>? friends = default)\n    {\n        Name = name;\n        Age = age;\n        Friends = friends ?? ImmutableList<Person>.Empty;\n    }\n};\n\npublic class ImmutableCollection\n{\n    public void Run()\n    {\n        var john = new Person("John",15)\n            .WithFriends(\n                new Person("David").WithAge(16),\n                new Person("James").WithAge(17))\n            .AddFriends(\n                new Person("David").WithAge(22));\n        \n        john.Friends.Count.ShouldBe(3);\n    }\n}\n'})}),(0,t.jsx)(n.h3,{id:"removing",children:"Removing"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CSharp",children:'[Immutype.Target]\ninternal readonly record struct Person(\n    string Name,\n    int Age = 0,\n    params Person[] Friends);\n\npublic class Removing\n{\n    public void Run()\n    {\n        var john = new Person("John",15, new Person("David").WithAge(16))\n            .AddFriends(new Person("James"));\n\n        john = john.RemoveFriends(new Person("James"));\n        \n        john.Friends.Length.ShouldBe(1);\n    }\n}\n'})}),(0,t.jsx)(n.h3,{id:"generic-types",children:"Generic types"}),(0,t.jsx)(n.p,{children:"It is possible to use generic types including any generic constraints."}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CSharp",children:'[Immutype.Target]\ninternal record Person<TAge>(string Name, TAge Age = default, IEnumerable<Person<TAge>>? Friends = default) \n    where TAge : struct;\n\npublic class GenericTypes\n{ \n    public void Run()\n    {\n        var john = new Person<int>("John")\n            .WithAge(15)\n            .WithFriends(new Person<int>("David").WithAge(16))\n            .AddFriends(\n                new Person<int>("James"),\n                new Person<int>("Daniel").WithAge(17));\n        \n        john.Friends?.Count().ShouldBe(3);\n    }\n}\n'})}),(0,t.jsx)(n.h3,{id:"nullable-collection",children:"Nullable collection"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CSharp",children:'[Immutype.Target]\ninternal record Person(\n    string Name,\n    int? Age = default,\n    ICollection<Person>? Friends = default);\n\npublic class NullableCollection\n{\n    public void Run()\n    {\n        var john = new Person("John",15)\n            .AddFriends(\n                new Person("David").WithAge(16),\n                new Person("James").WithAge(17)\n                    .WithFriends(new Person("Tyler").WithAge(16)));\n        \n        john.Friends?.Count.ShouldBe(2);\n    }\n}\n'})}),(0,t.jsx)(n.h3,{id:"set",children:"Set"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CSharp",children:'[Immutype.Target]\ninternal record Person(\n    string Name,\n    int Age = 0,\n    ISet<Person>? Friends = default);\n\npublic class Set\n{\n    public void Run()\n    {\n        var john = new Person("John",15)\n            .AddFriends(\n                new Person("David").WithAge(16),\n                new Person("David").WithAge(16),\n                new Person("James").WithAge(17)\n                    .WithFriends(new Person("Tyler").WithAge(16)));\n        \n        john.Friends?.Count.ShouldBe(2);\n    }\n}\n'})}),(0,t.jsx)(n.h3,{id:"record-with-constructor",children:"Record with constructor"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CSharp",children:'[Immutype.Target]\ninternal record Person\n{\n    public Person(\n        string name,\n        int? age = default,\n        ICollection<Person>? friends = default)\n    {\n        Name = name;\n        Age = age;\n        Friends = friends;\n    }\n\n    public string Name { get; }\n\n    public int? Age { get; }\n\n    public ICollection<Person>? Friends { get; }\n\n    public void Deconstruct(\n        out string name,\n        out int? age,\n        out ICollection<Person>? friends)\n    {\n        name = Name;\n        age = Age;\n        friends = Friends;\n    }\n}\n\npublic class RecordWithConstructor\n{\n    public void Run()\n    {\n        var john = new Person("John",15)\n            .WithFriends(\n                new Person("David").WithAge(16),\n                new Person("James").WithAge(17)\n                    .WithFriends(new Person("Tyler").WithAge(16)));\n        \n        john.Friends?.Count.ShouldBe(2);\n    }\n}\n'})}),(0,t.jsx)(n.h3,{id:"explicit-constructor-choice",children:"Explicit constructor choice"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-CSharp",children:'[Immutype.Target]\ninternal readonly struct Person\n{\n    public readonly string Name;\n    public readonly int Age;\n    public readonly IImmutableList<Person> Friends;\n\n    // You can explicitly select a constructor by marking it with the [Immutype.Target] attribute\n    [Immutype.Target]\n    public Person(\n        string name,\n        int age = 0,\n        IImmutableList<Person>? friends = default)\n    {\n        Name = name;\n        Age = age;\n        Friends = friends ?? ImmutableList<Person>.Empty;\n    }\n    \n    public Person(\n        string name,\n        int age,\n        IImmutableList<Person>? friends,\n        int someArg = 99)\n    {\n        Name = name;\n        Age = age;\n        Friends = friends ?? ImmutableList<Person>.Empty;\n    }\n};\n\npublic class ExplicitConstructorChoice\n{\n    public void Run()\n    {\n        var john = new Person("John",15)\n            .WithFriends(\n                new Person("David").WithAge(16),\n                new Person("James").WithAge(17))\n            .AddFriends(\n                new Person("David").WithAge(22));\n        \n        john.Friends.Count.ShouldBe(3);\n    }\n}\n'})})]}),"\n",(0,t.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"Immutable from constructors"})}),"\n",(0,t.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,t.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsxs)(o.A,{value:"csproj",label:"CSharp Project",children:[(0,t.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,t.jsx)(n.strong,{children:"Immutype"})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {11}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Immutype" Version="1.0.14" OutputItemType="Analyzer" >\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n  </ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\n</Project>\n\n'})})]}),(0,t.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Immutype\\src\\ImmutypeDemo\\Program.cs",label:"Program.cs",children:[(0,t.jsxs)(n.p,{children:["This is the use of ",(0,t.jsx)(n.strong,{children:"Immutype"})," in ",(0,t.jsx)(n.em,{children:"Program.cs"})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using ImmutypeDemo;\n\nPerson p = new("Andrei","Ignat");\nvar p2= p.WithFirstName("Test");\nConsole.WriteLine(p2.LastName);\n'})})]}),(0,t.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Immutype\\src\\ImmutypeDemo\\Person.cs",label:"Person.cs",children:[(0,t.jsxs)(n.p,{children:["This is the use of ",(0,t.jsx)(n.strong,{children:"Immutype"})," in ",(0,t.jsx)(n.em,{children:"Person.cs"})]}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"namespace ImmutypeDemo;\n\n[Immutype.Target]\ninternal class Person\n{\n    public string? FirstName;\n    public Person()\n    {\n    }\n    public Person(string? FirstName,string LastName)\n    {\n        this.FirstName = FirstName;\n        this.LastName = LastName;\n    }\n    public int ID { get; set; }\n    public string? LastName { get; set;}\n}\n\n"})})]})]}),"\n",(0,t.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,t.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,t.jsxs)(l.A,{children:[(0,t.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Immutype\\src\\ImmutypeDemo\\obj\\GX\\Immutype\\Immutype.SourceGenerator\\Immutype.Components.Contracts.cs",label:"Immutype.Components.Contracts.cs",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// ReSharper disable CheckNamespace\n// ReSharper disable ClassNeverInstantiated.Global\nnamespace Immutype\n{\n    using System;\n    \n    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct | AttributeTargets.Constructor, Inherited = false)]\n    public class TargetAttribute: Attribute { }\n}\n"})})}),(0,t.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Immutype\\src\\ImmutypeDemo\\obj\\GX\\Immutype\\Immutype.SourceGenerator\\ImmutypeDemo.Person.cs",label:"ImmutypeDemo.Person.cs",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'namespace ImmutypeDemo;\n\nusing System.Collections.Generic;\nusing System.Linq;\n[System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage] \ninternal static partial class PersonExtensions{\n\n\n[System.Runtime.CompilerServices.MethodImplAttribute((System.Runtime.CompilerServices.MethodImplOptions)256),System.Diagnostics.Contracts.PureAttribute]\npublic static ImmutypeDemo.Person WithFirstName(this ImmutypeDemo.Person it,string? FirstName){\nif( it==default(ImmutypeDemo.Person))throw new System.ArgumentNullException("it");\nreturn new ImmutypeDemo.Person(FirstName, it.LastName );}\n\n[System.Runtime.CompilerServices.MethodImplAttribute((System.Runtime.CompilerServices.MethodImplOptions)256),System.Diagnostics.Contracts.PureAttribute]\npublic static ImmutypeDemo.Person WithLastName(this ImmutypeDemo.Person it,string LastName){\nif( it==default(ImmutypeDemo.Person))throw new System.ArgumentNullException("it");\nif(LastName==default(string ))throw new System.ArgumentNullException("LastName");\nreturn new ImmutypeDemo.Person( it.FirstName,LastName);}}\n\n'})})})]}),"\n",(0,t.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,t.jsx)(n.h3,{id:"download-example-net--c-",children:"Download Example (.NET  C# )"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:s(37008).A+"",children:"Download Example project Immutype "})})}),"\n",(0,t.jsx)(n.h3,{id:"share-immutype",children:"Share Immutype"}),"\n",(0,t.jsxs)("ul",{children:[(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmutype&quote=Immutype",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmutype&text=Immutype:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmutype",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmutype&title=Immutype",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,t.jsx)("li",{children:(0,t.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmutype&title=Immutype&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmutype",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Immutype",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Immutype"})}),"\n",(0,t.jsx)(n.h3,{id:"in-the-same-category-enhancementclass---27-other-generators",children:"In the same category (EnhancementClass) - 27 other generators"}),"\n",(0,t.jsx)(n.h4,{id:"apparatusaot",children:(0,t.jsx)(n.a,{href:"/docs/ApparatusAOT",children:"ApparatusAOT"})}),"\n",(0,t.jsx)(n.h4,{id:"aspectgenerator",children:(0,t.jsx)(n.a,{href:"/docs/AspectGenerator",children:"AspectGenerator"})}),"\n",(0,t.jsx)(n.h4,{id:"commoncodegenerator",children:(0,t.jsx)(n.a,{href:"/docs/CommonCodeGenerator",children:"CommonCodeGenerator"})}),"\n",(0,t.jsx)(n.h4,{id:"comparison",children:(0,t.jsx)(n.a,{href:"/docs/Comparison",children:"Comparison"})}),"\n",(0,t.jsx)(n.h4,{id:"dudnet",children:(0,t.jsx)(n.a,{href:"/docs/DudNet",children:"DudNet"})}),"\n",(0,t.jsx)(n.h4,{id:"enhancedgettypes",children:(0,t.jsx)(n.a,{href:"/docs/Enhanced.GetTypes",children:"Enhanced.GetTypes"})}),"\n",(0,t.jsx)(n.h4,{id:"fastgenericnew",children:(0,t.jsx)(n.a,{href:"/docs/FastGenericNew",children:"FastGenericNew"})}),"\n",(0,t.jsx)(n.h4,{id:"hsusgsync",children:(0,t.jsx)(n.a,{href:"/docs/HsuSgSync",children:"HsuSgSync"})}),"\n",(0,t.jsx)(n.h4,{id:"lingaudit",children:(0,t.jsx)(n.a,{href:"/docs/Ling.Audit",children:"Ling.Audit"})}),"\n",(0,t.jsx)(n.h4,{id:"lomboknet",children:(0,t.jsx)(n.a,{href:"/docs/Lombok.NET",children:"Lombok.NET"})}),"\n",(0,t.jsx)(n.h4,{id:"m31fluentapi",children:(0,t.jsx)(n.a,{href:"/docs/M31.FluentAPI",children:"M31.FluentAPI"})}),"\n",(0,t.jsx)(n.h4,{id:"memberaccessor",children:(0,t.jsx)(n.a,{href:"/docs/MemberAccessor",children:"MemberAccessor"})}),"\n",(0,t.jsx)(n.h4,{id:"memorypack",children:(0,t.jsx)(n.a,{href:"/docs/MemoryPack",children:"MemoryPack"})}),"\n",(0,t.jsx)(n.h4,{id:"meziantoupolyfill",children:(0,t.jsx)(n.a,{href:"/docs/Meziantou.Polyfill",children:"Meziantou.Polyfill"})}),"\n",(0,t.jsx)(n.h4,{id:"microsoftextensionslogging",children:(0,t.jsx)(n.a,{href:"/docs/Microsoft.Extensions.Logging",children:"Microsoft.Extensions.Logging"})}),"\n",(0,t.jsx)(n.h4,{id:"microsoftextensionsoptionsgeneratorsoptionsvalidatorgenerator",children:(0,t.jsx)(n.a,{href:"/docs/Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator",children:"Microsoft.Extensions.Options.Generators.OptionsValidatorGenerator"})}),"\n",(0,t.jsx)(n.h4,{id:"microsoftinteropjavascriptjsimportgenerator",children:(0,t.jsx)(n.a,{href:"/docs/Microsoft.Interop.JavaScript.JSImportGenerator",children:"Microsoft.Interop.JavaScript.JSImportGenerator"})}),"\n",(0,t.jsx)(n.h4,{id:"optiontostringgenerator",children:(0,t.jsx)(n.a,{href:"/docs/OptionToStringGenerator",children:"OptionToStringGenerator"})}),"\n",(0,t.jsx)(n.h4,{id:"querystringgenerator",children:(0,t.jsx)(n.a,{href:"/docs/QueryStringGenerator",children:"QueryStringGenerator"})}),"\n",(0,t.jsx)(n.h4,{id:"rscg_decorator",children:(0,t.jsx)(n.a,{href:"/docs/RSCG_Decorator",children:"RSCG_Decorator"})}),"\n",(0,t.jsx)(n.h4,{id:"rscg_utilitytypes",children:(0,t.jsx)(n.a,{href:"/docs/RSCG_UtilityTypes",children:"RSCG_UtilityTypes"})}),"\n",(0,t.jsx)(n.h4,{id:"staticreflection",children:(0,t.jsx)(n.a,{href:"/docs/StaticReflection",children:"StaticReflection"})}),"\n",(0,t.jsx)(n.h4,{id:"syncmethodgenerator",children:(0,t.jsx)(n.a,{href:"/docs/SyncMethodGenerator",children:"SyncMethodGenerator"})}),"\n",(0,t.jsx)(n.h4,{id:"systemruntimeinteropservices",children:(0,t.jsx)(n.a,{href:"/docs/System.Runtime.InteropServices",children:"System.Runtime.InteropServices"})}),"\n",(0,t.jsx)(n.h4,{id:"systemtextregularexpressions",children:(0,t.jsx)(n.a,{href:"/docs/System.Text.RegularExpressions",children:"System.Text.RegularExpressions"})}),"\n",(0,t.jsx)(n.h4,{id:"telemetrylogging",children:(0,t.jsx)(n.a,{href:"/docs/TelemetryLogging",children:"TelemetryLogging"})}),"\n",(0,t.jsx)(n.h4,{id:"thisclass",children:(0,t.jsx)(n.a,{href:"/docs/ThisClass",children:"ThisClass"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);