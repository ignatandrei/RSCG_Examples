"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[5379],{17669:(e,a,r)=>{r.d(a,{Ay:()=>o,RM:()=>s});var t=r(74848),n=r(28453);const s=[{value:"Category &quot;Mapper&quot; has the following generators:",id:"category-mapper-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function i(e){const a={a:"a",h3:"h3",p:"p",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h3,{id:"category-mapper-has-the-following-generators",children:'Category "Mapper" has the following generators:'}),"\n",(0,t.jsxs)(a.p,{children:["1 ",(0,t.jsx)(a.a,{href:"/docs/AutoDTO",children:"AutoDTO"})]}),"\n",(0,t.jsxs)(a.p,{children:["2 ",(0,t.jsx)(a.a,{href:"/docs/AutoGen",children:"AutoGen"})]}),"\n",(0,t.jsxs)(a.p,{children:["3 ",(0,t.jsx)(a.a,{href:"/docs/DynamicsMapper",children:"DynamicsMapper"})]}),"\n",(0,t.jsxs)(a.p,{children:["4 ",(0,t.jsx)(a.a,{href:"/docs/LightweightObjectMapper",children:"LightweightObjectMapper"})]}),"\n",(0,t.jsxs)(a.p,{children:["5 ",(0,t.jsx)(a.a,{href:"/docs/MagicMap",children:"MagicMap"})]}),"\n",(0,t.jsxs)(a.p,{children:["6 ",(0,t.jsx)(a.a,{href:"/docs/mapperly",children:"mapperly"})]}),"\n",(0,t.jsxs)(a.p,{children:["7 ",(0,t.jsx)(a.a,{href:"/docs/MapTo",children:"MapTo"})]}),"\n",(0,t.jsxs)(a.p,{children:["8 ",(0,t.jsx)(a.a,{href:"/docs/NextGenMapper",children:"NextGenMapper"})]}),"\n",(0,t.jsx)(a.h3,{id:"see-category",children:"See category"}),"\n",(0,t.jsx)(a.p,{children:(0,t.jsx)(a.a,{href:"/docs/Categories/Mapper",children:"Mapper"})})]})}function o(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},46881:(e,a,r)=>{r.d(a,{A:()=>t});const t=r.p+"assets/files/MagicMap-05090b65856cb87c0b8f66d7e8884ffe.zip"},77785:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>g,contentTitle:()=>m,default:()=>d,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"RSCG-Examples/MagicMap","title":"70 - MagicMap","description":"Auto mapping","source":"@site/docs/RSCG-Examples/MagicMap.md","sourceDirName":"RSCG-Examples","slug":"/MagicMap","permalink":"/RSCG_Examples/v2/docs/MagicMap","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":700,"frontMatter":{"sidebar_position":700,"title":"70 - MagicMap","description":"Auto mapping","slug":"/MagicMap"},"sidebar":"tutorialSidebar","previous":{"title":"69 - RSCG_Templating","permalink":"/RSCG_Examples/v2/docs/RSCG_Templating"},"next":{"title":"71 - DisposableHelpers","permalink":"/RSCG_Examples/v2/docs/DisposableHelpers"}}');var n=r(74848),s=r(28453),i=r(11470),o=r(19365),l=r(14252),p=r(17669);const c={sidebar_position:700,title:"70 - MagicMap",description:"Auto mapping",slug:"/MagicMap"},m="MagicMap  by Bramer Daniel",g={},u=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share MagicMap",id:"share-magicmap",level:3},...p.RM];function h(e){const a={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsx)(a.h1,{id:"magicmap--by-bramer-daniel",children:"MagicMap  by Bramer Daniel"})}),"\n",(0,n.jsx)(l.A,{toc:u}),"\n",(0,n.jsx)(a.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,n.jsxs)(a.p,{children:[(0,n.jsx)(a.a,{href:"https://www.nuget.org/packages/MagicMap/",children:(0,n.jsx)(a.img,{src:"https://img.shields.io/nuget/dt/MagicMap?label=MagicMap",alt:"Nuget"})}),"\n",(0,n.jsx)(a.a,{href:"https://github.com/bramerdaniel/MagicMap",children:(0,n.jsx)(a.img,{src:"https://img.shields.io/github/last-commit/bramerdaniel/MagicMap?label=updated",alt:"GitHub last commit"})}),"\n",(0,n.jsx)(a.img,{src:"https://img.shields.io/github/stars/bramerdaniel/MagicMap?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,n.jsx)(a.h2,{id:"details",children:"Details"}),"\n",(0,n.jsx)(a.h3,{id:"info",children:"Info"}),"\n",(0,n.jsxs)(a.admonition,{type:"info",children:[(0,n.jsxs)(a.p,{children:["Name: ",(0,n.jsx)(a.strong,{children:"MagicMap"})]}),(0,n.jsx)(a.p,{children:"Helper utility for generating type mapper classes and more"}),(0,n.jsx)(a.p,{children:"Author: Bramer Daniel"}),(0,n.jsxs)(a.p,{children:["NuGet:\n",(0,n.jsx)(a.em,{children:(0,n.jsx)(a.a,{href:"https://www.nuget.org/packages/MagicMap/",children:"https://www.nuget.org/packages/MagicMap/"})})]}),(0,n.jsxs)(a.p,{children:["You can find more details at ",(0,n.jsx)(a.a,{href:"https://github.com/bramerdaniel/MagicMap",children:"https://github.com/bramerdaniel/MagicMap"})]}),(0,n.jsxs)(a.p,{children:["Source: ",(0,n.jsx)(a.a,{href:"https://github.com/bramerdaniel/MagicMap",children:"https://github.com/bramerdaniel/MagicMap"})]})]}),"\n",(0,n.jsx)(a.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,n.jsxs)(a.admonition,{type:"note",children:[(0,n.jsx)(a.h1,{id:"magicmap",children:"MagicMap"}),(0,n.jsx)(a.p,{children:"SourceGenerator based package for generating boilerplate code like object mappers"}),(0,n.jsx)(a.p,{children:"This is still under construction"}),(0,n.jsx)(a.p,{children:"Mapping code from one class to another"}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-C#",children:"public class Person\n{\n   public string Name { get; set; } \n   public int Age { get; set; } \n}\n\npublic class PersonModel\n{\n   public string Name { get; set; }\n   public int Age { get; set; }\n}\n\n"})}),(0,n.jsx)(a.p,{children:"The required code to write"}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-C#",children:"[TypeMapper(typeof(Person), typeof(PersonModel))]\ninternal partial class PersonMapper {  }\n"})}),(0,n.jsx)(a.p,{children:"Usage"}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-C#",children:'var source = new Person { Name = "Peter", Age = 34 };\nvar model = source.ToPersonModel();\n'})})]}),"\n",(0,n.jsx)(a.h3,{id:"about",children:"About"}),"\n",(0,n.jsx)(a.admonition,{type:"note",children:(0,n.jsx)(a.p,{children:"Auto mapping"})}),"\n",(0,n.jsx)(a.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,n.jsx)(a.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,n.jsxs)(i.A,{children:[(0,n.jsxs)(o.A,{value:"csproj",label:"CSharp Project",children:[(0,n.jsxs)(a.p,{children:["This is the CSharp Project that references ",(0,n.jsx)(a.strong,{children:"MagicMap"})]}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-xml",metastring:"showLineNumbers {16}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\n\t<ItemGroup>\n\t  <PackageReference Include="MagicMap" Version="1.0.0-alpha.10" OutputItemType="Analyzer" />\n\t</ItemGroup>\n\n\n</Project>\n\n'})})]}),(0,n.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\Program.cs",label:"Program.cs",children:[(0,n.jsxs)(a.p,{children:["This is the use of ",(0,n.jsx)(a.strong,{children:"MagicMap"})," in ",(0,n.jsx)(a.em,{children:"Program.cs"})]}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// See https://aka.ms/new-console-template for more information\nusing mapperlyDemo;\nvar p=new Person();\np.FirstName = "Andrei";\np.LastName = "Ignat";\nPersonDTO dto = p.ToPersonDTO();\nConsole.WriteLine(dto.FullName);\n\n'})})]}),(0,n.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\Person.cs",label:"Person.cs",children:[(0,n.jsxs)(a.p,{children:["This is the use of ",(0,n.jsx)(a.strong,{children:"MagicMap"})," in ",(0,n.jsx)(a.em,{children:"Person.cs"})]}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\npublic class Person\n{\n    public int ID { get; set; }\n    public string? FirstName { get; set; }\n    public string? LastName { get; set; }\n}\n\n\n"})})]}),(0,n.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\PersonDTO.cs",label:"PersonDTO.cs",children:[(0,n.jsxs)(a.p,{children:["This is the use of ",(0,n.jsx)(a.strong,{children:"MagicMap"})," in ",(0,n.jsx)(a.em,{children:"PersonDTO.cs"})]}),(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using MagicMap;\nnamespace mapperlyDemo;\n\n[TypeMapper(typeof(Person), typeof(PersonDTO))]\ninternal partial class PersonMapper { }\npublic class PersonDTO\n{\n    public int ID { get; set; }\n    public string? FirstName { get; set; }\n    public string? LastName { get; set; }\n\n    public string FullName { \n        get\n        {\n            return FirstName + " " + LastName;\n        }\n    }\n}\n\n'})})]})]}),"\n",(0,n.jsx)(a.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,n.jsx)(a.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,n.jsxs)(i.A,{children:[(0,n.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\PersonMapper.generated.cs",label:"PersonMapper.generated.cs",children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace mapperlyDemo\n{\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]\n    partial class PersonMapper\n    {\n        /// <summary>\n        /// The default singleton instance of the generated type mapper.\n        /// To customize the creation of the default mapper, just implement this property in the defining partial part.\n        /// </summary>\n        public static PersonMapper Default { get; } = new PersonMapper(); \n\n\n        /// <summary>Maps all properties of the <see cref = "source"/> to the properties of the <see cref = "target"/></summary>\n        public void Map(global::Person source, global::mapperlyDemo.PersonDTO target)\n        {\n            target.ID = source.ID;\n            target.FirstName = source.FirstName;\n            target.LastName = source.LastName;\n            MapOverride(source, target);\n        }\n\n        internal global::mapperlyDemo.PersonDTO MapFrom(global::Person source)\n        {\n            var target = Default is MagicMap.ITypeFactory<global::mapperlyDemo.PersonDTO, global::Person> factory ? factory.Create(source) : new global::mapperlyDemo.PersonDTO();\n            Default.Map(source, target);\n            return target;\n        }\n\n        /// <summary>Maps all properties of the <see cref = "source"/> to the properties of the <see cref = "target"/></summary>\n        public void Map(global::mapperlyDemo.PersonDTO source, global::Person target)\n        {\n            target.ID = source.ID;\n            target.FirstName = source.FirstName;\n            target.LastName = source.LastName;\n            MapOverride(source, target);\n        }\n\n        internal global::Person MapFrom(global::mapperlyDemo.PersonDTO source)\n        {\n            var target = Default is MagicMap.ITypeFactory<global::Person, global::mapperlyDemo.PersonDTO> factory ? factory.Create(source) : new global::Person();\n            Default.Map(source, target);\n            return target;\n        }\n\n        /// <summary>Implement this method, to map the properties the mapper could not handle for any reason.</summary>\n        partial void MapOverride(global::Person source, global::mapperlyDemo.PersonDTO target); \n\n        /// <summary>Implement this method, to map the properties the mapper could not handle for any reason.</summary>\n        partial void MapOverride(global::mapperlyDemo.PersonDTO source, global::Person target); \n\n    }\n}\n\n'})})}),(0,n.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\PersonMapperExtensions.generated.cs",label:"PersonMapperExtensions.generated.cs",children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace mapperlyDemo\n{\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]\n    internal static partial class PersonMapperExtensions\n    {\n        /// <summary>\n        /// The instance of the <see cref = "PersonMapper"/> all extension methods use.\n        /// You can customize this by implementing this property in your own partial implementation of the extensions class.\n        /// </summary>\n        private static global::mapperlyDemo.PersonMapper Mapper => global::mapperlyDemo.PersonMapper.Default; \n\n\n        internal static global::mapperlyDemo.PersonDTO ToPersonDTO(this global::Person person)\n        {\n            if (person == null)\n                throw new global::System.ArgumentNullException(nameof(person)); \n\n            var result = Mapper is MagicMap.ITypeFactory<global::mapperlyDemo.PersonDTO, global::Person> factory ? factory.Create(person) : new global::mapperlyDemo.PersonDTO();\n            Mapper.Map(person, result);\n            return result;\n        }\n\n        internal static global::Person ToPerson(this global::mapperlyDemo.PersonDTO personDTO)\n        {\n            if (personDTO == null)\n                throw new global::System.ArgumentNullException(nameof(personDTO)); \n\n            var result = Mapper is MagicMap.ITypeFactory<global::Person, global::mapperlyDemo.PersonDTO> factory ? factory.Create(personDTO) : new global::Person();\n            Mapper.Map(personDTO, result);\n            return result;\n        }\n    }\n}\n\n'})})}),(0,n.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\PropertyMapperAttribute.generated.cs",label:"PropertyMapperAttribute.generated.cs",children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace MagicMap \n{\n   [global::System.Runtime.CompilerServices.CompilerGenerated]\n   [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]\n   [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = false, Inherited = false)]\n   /// <summary>Attribute that can be used mark a method as mapping method for a specific source property</summary>\n   internal sealed class PropertyMapperAttribute : global::System.Attribute\n   {\n      /// <summary>Marks a function as a custom mapping method for the specified property.</summary>\n      public PropertyMapperAttribute(global::System.Type targetType, string targetName)\n         : this(targetType, targetName, targetName)\n      {\n      }\n\n      /// <summary>Marks a function as a custom mapping method for the specified property.</summary>\n      public PropertyMapperAttribute(global::System.Type targetType, string targetName, string sourceName)\n      {\n         TargetType = targetType ?? throw new global::System.ArgumentNullException(nameof(targetType));\n         TargetName = targetName ?? throw new global::System.ArgumentNullException(nameof(targetName));\n         SourceName  = sourceName ?? throw new global::System.ArgumentNullException(nameof(sourceName));\n      }\n\n      /// <summary>Gets the type of the target class, the mapper should be used for.</summary>\n      public global::System.Type TargetType { get; }\n\n      /// <summary>Gets the name of the property that should be mapped to.</summary>\n      public string TargetName { get; }\n\n      /// <summary>Gets the name of the source property that should be mapped from.</summary>\n      public string SourceName { get; }\n   }\n}\n\n"})})}),(0,n.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\PropertyMappingAttribute.generated.cs",label:"PropertyMappingAttribute.generated.cs",children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace MagicMap \n{\n   [global::System.Runtime.CompilerServices.CompilerGenerated]\n   [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]\n   [global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = true, Inherited = false)]\n   /// <summary>Attribute that can be used to map a specific property from the left to the right object by their names</summary>\n   internal sealed class PropertyMappingAttribute : global::System.Attribute\n   {\n      public PropertyMappingAttribute(string leftName, string rightName)\n      {\n         LeftName = leftName ?? throw new global::System.ArgumentNullException(nameof(leftName));\n         RightName = rightName ?? throw new global::System.ArgumentNullException(nameof(rightName));\n      }\n\n      /// <summary>Gets the name of the left property.</summary>\n      public string LeftName { get; }\n\n      /// <summary>Gets the name of the right property.</summary>\n      public string RightName { get; }\n\n      /// <summary>Gets or sets a value indicating that the properties should be ignored for mapping generation.</summary>\n      public bool Ignore{ get; set; }\n   }\n}\n\n"})})}),(0,n.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\TypeFactory.generated.cs",label:"TypeFactory.generated.cs",children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace MagicMap \n{\n   [global::System.Runtime.CompilerServices.CompilerGenerated]\n   internal interface ITypeFactory<TTarget, TSource>  where TTarget : class\n   {\n      /// <summary>Created an instance of the type TTarget, that is used for a mapping.</summary>\n      TTarget Create(TSource source);\n   }\n}\n\n"})})}),(0,n.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\TypeMapperAttribute.generated.cs",label:"TypeMapperAttribute.generated.cs",children:(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace MagicMap \n{\n   [global::System.Runtime.CompilerServices.CompilerGenerated]\n   [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]\n   [global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = false, Inherited = false)]\n   internal sealed class TypeMapperAttribute : global::System.Attribute\n   {\n      public TypeMapperAttribute(global::System.Type left, global::System.Type right)\n      {\n         Left = left ?? throw new global::System.ArgumentNullException(nameof(left));\n         Right = right ?? throw new global::System.ArgumentNullException(nameof(right));\n      }\n\n      /// <summary>Gets the left type.</summary>\n      public global::System.Type Left { get; }\n\n      /// <summary>Gets the right type.</summary>\n      public global::System.Type Right { get; }\n\n      /// <summary>Gets or sets the <see cref="GenerationMode"/>.</summary>\n      public GeneratorMode Mode { get; set; } = GeneratorMode.TwoWay;\n\n      /// <summary>Gets or sets a flag, indicating if the source generator should generate partial methods\n      /// for properties he can not map, to enforce that they are handled by the user.</summary>\n      public bool ForceMappings { get; set; } = false;\n   }\n\n   /// <summary>Enum for configuring the source generator mode</summary>\n   internal enum GeneratorMode\n   {\n      /// <summary>Mappers are generated for both ways, from left to right and back</summary>\n      TwoWay,\n\n      /// <summary>Only a mapper from left to right typ is generated</summary>\n      LeftToRight,\n\n      /// <summary>Only a mapper from right to left typ is generated</summary>\n      RightToLeft\n   }\n}\n\n'})})})]}),"\n",(0,n.jsx)(a.h2,{id:"useful",children:"Useful"}),"\n",(0,n.jsx)(a.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,n.jsx)(a.admonition,{type:"tip",children:(0,n.jsx)(a.p,{children:(0,n.jsx)(a.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(46881).A+"",children:"Download Example project MagicMap "})})}),"\n",(0,n.jsx)(a.h3,{id:"share-magicmap",children:"Share MagicMap"}),"\n",(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap&quote=MagicMap",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap&text=MagicMap:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap&title=MagicMap",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap&title=MagicMap&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,n.jsx)(a.p,{children:(0,n.jsx)(a.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/MagicMap",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/MagicMap"})}),"\n",(0,n.jsx)(a.p,{children:"aaa"}),"\n",(0,n.jsx)(p.Ay,{})]})}function d(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);