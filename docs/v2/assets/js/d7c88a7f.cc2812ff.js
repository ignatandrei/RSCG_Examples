"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[7087],{10717:(e,n,t)=>{t.d(n,{Ay:()=>a,RM:()=>l});var s=t(74848),i=t(28453);const l=[{value:"Category &quot;Enum&quot; has the following generators:",id:"category-enum-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function r(e){const n={a:"a",h3:"h3",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"category-enum-has-the-following-generators",children:'Category "Enum" has the following generators:'}),"\n",(0,s.jsxs)(n.p,{children:["1 ",(0,s.jsx)(n.a,{href:"/docs/CredFetoEnum",children:"CredFetoEnum"})]}),"\n",(0,s.jsxs)(n.p,{children:["2 ",(0,s.jsx)(n.a,{href:"/docs/EnumClass",children:"EnumClass"})]}),"\n",(0,s.jsxs)(n.p,{children:["3 ",(0,s.jsx)(n.a,{href:"/docs/EnumsEnhanced",children:"EnumsEnhanced"})]}),"\n",(0,s.jsxs)(n.p,{children:["4 ",(0,s.jsx)(n.a,{href:"/docs/EnumUtilities",children:"EnumUtilities"})]}),"\n",(0,s.jsxs)(n.p,{children:["5 ",(0,s.jsx)(n.a,{href:"/docs/Flaggen",children:"Flaggen"})]}),"\n",(0,s.jsxs)(n.p,{children:["6 ",(0,s.jsx)(n.a,{href:"/docs/FusionReactor",children:"FusionReactor"})]}),"\n",(0,s.jsxs)(n.p,{children:["7 ",(0,s.jsx)(n.a,{href:"/docs/Genbox.FastEnum",children:"Genbox.FastEnum"})]}),"\n",(0,s.jsxs)(n.p,{children:["8 ",(0,s.jsx)(n.a,{href:"/docs/jos.enumeration",children:"jos.enumeration"})]}),"\n",(0,s.jsxs)(n.p,{children:["9 ",(0,s.jsx)(n.a,{href:"/docs/NetEscapades.EnumGenerators",children:"NetEscapades.EnumGenerators"})]}),"\n",(0,s.jsxs)(n.p,{children:["10 ",(0,s.jsx)(n.a,{href:"/docs/PMart.Enumeration",children:"PMart.Enumeration"})]}),"\n",(0,s.jsxs)(n.p,{children:["11 ",(0,s.jsx)(n.a,{href:"/docs/RapidEnum",children:"RapidEnum"})]}),"\n",(0,s.jsxs)(n.p,{children:["12 ",(0,s.jsx)(n.a,{href:"/docs/requiredenum",children:"requiredenum"})]}),"\n",(0,s.jsx)(n.h3,{id:"see-category",children:"See category"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/Categories/Enum",children:"Enum"})})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},38784:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>m,default:()=>x,frontMatter:()=>h,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"RSCG-Examples/RapidEnum","title":"234 - RapidEnum","description":"Generate enum values without reflection","source":"@site/docs/RSCG-Examples/RapidEnum.md","sourceDirName":"RSCG-Examples","slug":"/RapidEnum","permalink":"/RSCG_Examples/v2/docs/RapidEnum","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2340,"frontMatter":{"sidebar_position":2340,"title":"234 - RapidEnum","description":"Generate enum values without reflection","slug":"/RapidEnum"},"sidebar":"tutorialSidebar","previous":{"title":"233 - VYaml","permalink":"/RSCG_Examples/v2/docs/VYaml"},"next":{"title":"v1","permalink":"/RSCG_Examples/v2/docs/v1"}}');var i=t(74848),l=t(28453),r=t(11470),a=t(19365),d=t(14252),o=t(10717);const h={sidebar_position:2340,title:"234 - RapidEnum",description:"Generate enum values without reflection",slug:"/RapidEnum"},m="RapidEnum  by hanachiru",c={},u=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Author",id:"author",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"NuGet",id:"nuget",level:2},{value:"Unity",id:"unity",level:2},{value:"asmdef settings",id:"asmdef-settings",level:3},{value:"Basic usage",id:"basic-usage",level:2},{value:"How to use it for any enum",id:"how-to-use-it-for-any-enum",level:2},{value:"Get Name and Value as a pair",id:"get-name-and-value-as-a-pair",level:2},{value:"Use EnumMemberAttribute",id:"use-enummemberattribute",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use-1",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share RapidEnum",id:"share-rapidenum",level:3},...o.RM];function g(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"rapidenum--by-hanachiru",children:"RapidEnum  by hanachiru"})}),"\n",(0,i.jsx)(d.A,{toc:u}),"\n",(0,i.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/RapidEnum/",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/RapidEnum?label=RapidEnum",alt:"Nuget"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/hanachiru/RapidEnum",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/hanachiru/RapidEnum?label=updated",alt:"GitHub last commit"})}),"\n",(0,i.jsx)(n.img,{src:"https://img.shields.io/github/stars/hanachiru/RapidEnum?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,i.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,i.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["Name: ",(0,i.jsx)(n.strong,{children:"RapidEnum"})]}),(0,i.jsx)(n.p,{children:"Enum utility with SourceGenerator for C#/.NET"}),(0,i.jsx)(n.p,{children:"Author: hanachiru"}),(0,i.jsxs)(n.p,{children:["NuGet:\n",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/RapidEnum/",children:"https://www.nuget.org/packages/RapidEnum/"})})]}),(0,i.jsxs)(n.p,{children:["You can find more details at ",(0,i.jsx)(n.a,{href:"https://github.com/hanachiru/RapidEnum",children:"https://github.com/hanachiru/RapidEnum"})]}),(0,i.jsxs)(n.p,{children:["Source: ",(0,i.jsx)(n.a,{href:"https://github.com/hanachiru/RapidEnum",children:"https://github.com/hanachiru/RapidEnum"})]})]}),"\n",(0,i.jsx)(n.h3,{id:"author",children:"Author"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["hanachiru\n",(0,i.jsx)(n.img,{src:"https://github.com/hanachiru.png",alt:"Alt text"})]})}),"\n",(0,i.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.h1,{id:"rapidenum",children:"RapidEnum"}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/RapidEnum",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/nuget/v/RapidEnum",alt:"nuget"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/hanachiru/RapidEnum/releases",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/github/release/hanachiru/RapidEnum.svg",alt:"Releases"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/hanachiru/RapidEnum/LICENSE",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/LICENSE-MIT-green.svg",alt:"license"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/hanachiru/RapidEnum/actions/workflows/test.yml",children:(0,i.jsx)(n.img,{src:"https://github.com/hanachiru/RapidEnum/actions/workflows/test.yml/badge.svg",alt:"test"})})]}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/hanachiru/RapidEnum/README.jp.md",children:"\u65e5\u672c\u8a9e\u7248"})}),(0,i.jsxs)(n.p,{children:["RapidEnum is a Source Generator that provides fast-running enum utilities for C#/.NET. It is faster than the ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.enum?view=net-8.0",children:".NET API"})," and achieves zero allocation for all methods."]}),(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["Package - ",(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/RapidEnum",children:"RapidEnum"})]})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/hanachiru/RapidEnum/Images/PerformanceComparison.png",alt:"PerformanceComparison"})}),(0,i.jsxs)(n.p,{children:["It performed better than .NET API. It is also faster than ",(0,i.jsx)(n.a,{href:"https://github.com/xin9le/FastEnum/releases/tag/v1.8.0",children:"FastEnum v1.8.0"}),". For more information on performance comparisons, see ",(0,i.jsx)(n.a,{href:"https://github.com/hanachiru/RapidEnum",children:"this"}),"."]}),(0,i.jsxs)(n.p,{children:["RapidEnum is heavily influenced by ",(0,i.jsx)(n.a,{href:"https://github.com/xin9le/FastEnum",children:"FastEnum"}),". API is very similar to FastEnum. Thanks to ",(0,i.jsx)(n.a,{href:"https://github.com/xin9le",children:"xin9le"})," for creating a great library!"]}),(0,i.jsx)(n.h1,{id:"table-of-contents",children:"Table of Contents"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Requirements",children:"Requirements"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Installation",children:"Installation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#NuGet",children:"NuGet"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#Unity",children:"Unity"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#asmdef-settings",children:"asmdef settings"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"#How-to-use",children:"How to use"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Basic-usage",children:"Basic usage"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#How-to-use-it-for-any-enum",children:"How to use it for any enum"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Get-Name-and-Value-as-a-pair",children:"Get Name and Value as a pair"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Use-EnumMemberAttribute",children:"Use EnumMemberAttribute"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#Performance-comparison",children:"Performance comparison"})}),"\n"]}),(0,i.jsx)(n.h1,{id:"requirements",children:"Requirements"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:".NET Standard2.0 or newer"}),"\n",(0,i.jsx)(n.li,{children:"Unity 2022.3.12f1 or newer"}),"\n"]}),(0,i.jsx)(n.h1,{id:"installation",children:"Installation"}),(0,i.jsx)(n.h2,{id:"nuget",children:"NuGet"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"$ dotnet add package RapidEnum\n"})}),(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["nuget.org : ",(0,i.jsx)(n.a,{href:"https://www.nuget.org/packages/RapidEnum",children:"RapidEnum"})]})}),(0,i.jsx)(n.h2,{id:"unity",children:"Unity"}),(0,i.jsx)(n.p,{children:"Add the following git URL from the Package Manager"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"https://github.com/hanachiru/RapidEnum.git?path=/RapidEnum.Unity/Packages/com.hanachiru.rapidenum\n"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/hanachiru/RapidEnum/Images/UPM.png",alt:"UPM"})}),(0,i.jsx)(n.h3,{id:"asmdef-settings",children:"asmdef settings"}),(0,i.jsxs)(n.p,{children:["If you have created a ",(0,i.jsx)(n.code,{children:".asmdef"}),", you need to add ",(0,i.jsx)(n.code,{children:"RapidEnum"})," to the Assembly Definition References."]}),(0,i.jsx)("img",{src:"./Images/Asmdef.png",width:"300"}),(0,i.jsx)(n.h1,{id:"how-to-use",children:"How to use"}),(0,i.jsx)(n.h2,{id:"basic-usage",children:"Basic usage"}),(0,i.jsxs)(n.p,{children:["Attaching ",(0,i.jsx)(n.code,{children:"[RapidEnum]"})," to the target enum generates an enum utility class. Note that this is only valid for ",(0,i.jsx)(n.code,{children:"public"})," or ",(0,i.jsx)(n.code,{children:"internal"})," enum."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"[RapidEnum]\npublic enum Weather\n{\n    Sun,\n    Cloud,\n    Rain,\n    Snow\n}\n"})}),(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Enum name + EnumExtensions"})," class defines the relevant methods."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'// Sun,Cloud,Rain,Snow\nIReadOnlyList<Weather> values = WeatherEnumExtensions.GetValues();\n\n// Sun,Cloud,Rain,Snow\nIReadOnlyList<string> names = WeatherEnumExtensions.GetNames();\n\n// Rain\nstring name = WeatherEnumExtensions.GetName(Weather.Rain);\n\n// Cloud\nstring str = Weather.Cloud.ToStringFast();\n\n// True\nbool defined = WeatherEnumExtensions.IsDefined("Sun");\n\n// Sun\nWeather parse = WeatherEnumExtensions.Parse("Sun");\n\n// True\n// Sun\nbool tryParse = WeatherEnumExtensions.TryParse("Sun", out Weather value);\n'})}),(0,i.jsx)(n.h2,{id:"how-to-use-it-for-any-enum",children:"How to use it for any enum"}),(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"[RapidEnumWithType]"})," can be used to generate utility classes for any enum."]}),(0,i.jsxs)(n.p,{children:["For ",(0,i.jsx)(n.code,{children:"static partial class"})," that are ",(0,i.jsx)(n.code,{children:"public"})," or ",(0,i.jsx)(n.code,{children:"internal"}),", give them a ",(0,i.jsx)(n.code,{children:"[RapidEnumWithType]"})," with the target enum as an argument. The class name can be any string, but ",(0,i.jsx)(n.code,{children:"Enum name + EnumExtensions"})," is easier to understand."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"// System.DateTimeKind has Unspecified, Utc, Local\n[RapidEnumWithType(typeof(DateTimeKind))]\npublic static partial class DateTimeKindEnumExtensions\n{\n}\n"})}),(0,i.jsxs)(n.p,{children:["There is no performance difference compared to using ",(0,i.jsx)(n.code,{children:"[RapidEnum]"}),". Use ",(0,i.jsx)(n.code,{children:"[RapidEnumWithType]"})," if ",(0,i.jsx)(n.code,{children:"[RapidEnum]"})," cannot be given, such as an enum provided by a third-party library."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'// Unspecified,Utc,Local\nIReadOnlyList<DateTimeKind> values = DateTimeKindEnumExtensions.GetValues();\n\n// Unspecified,Utc,Local\nIReadOnlyList<string> names = DateTimeKindEnumExtensions.GetNames();\n\n// Local\nstring name = DateTimeKindEnumExtensions.GetName(DateTimeKind.Local);\n\n// Local\nstring str = DateTimeKind.Local.ToStringFast();\n\n// True\nbool defined = DateTimeKindEnumExtensions.IsDefined("Local");\n\n// Local\nDateTimeKind parse = DateTimeKindEnumExtensions.Parse("Local");\n\n// True\n// Local\nbool tryParse = DateTimeKindEnumExtensions.TryParse("Local", out DateTimeKind value);\n'})}),(0,i.jsx)(n.h2,{id:"get-name-and-value-as-a-pair",children:"Get Name and Value as a pair"}),(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"GetMembers"})," and ",(0,i.jsx)(n.code,{children:"GetMember"})," methods if you want to get the Name and Value of enum in pairs."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'WeatherEnumExtensions.Member member = WeatherEnumExtensions.GetMember(Weather.Rain);\nvar (name, value) = member;\n\nforeach (WeatherEnumExtensions.Member item in WeatherEnumExtensions.GetMembers())\n{\n    Console.WriteLine($"Name : {item.Name}, Value : {item.Value}");\n}\n'})}),(0,i.jsx)(n.h2,{id:"use-enummemberattribute",children:"Use EnumMemberAttribute"}),(0,i.jsxs)(n.p,{children:["If you use ",(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.runtime.serialization.enummemberattribute?view=net-9.0",children:"EnumMemberAttribute"}),", you can get the Value property of EnumMemberAttribute."]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'[RapidEnum]\npublic enum Weather\n{\n    [EnumMember(Value = "sun")]\n    Sun,\n    [EnumMember]\n    Cloud,\n    [EnumMember(Value = "rain")]\n    Rain,\n    Snow\n}\n'})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"// sun\nstring enumMemberValue = Weather.Sun.GetEnumMemberValue();\n\n// null\nstring enumMemberValue = Weather.Cloud.GetEnumMemberValue();\n"})}),(0,i.jsx)(n.h1,{id:"performance-comparison",children:"Performance comparison"}),(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Method"}),(0,i.jsx)(n.th,{style:{textAlign:"right"},children:"Mean"}),(0,i.jsx)(n.th,{style:{textAlign:"right"},children:"Error"}),(0,i.jsx)(n.th,{style:{textAlign:"right"},children:"StdDev"}),(0,i.jsx)(n.th,{style:{textAlign:"right"},children:"Median"}),(0,i.jsx)(n.th,{style:{textAlign:"right"},children:"Gen0"}),(0,i.jsx)(n.th,{style:{textAlign:"right"},children:"Allocated"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"RapidEnum_GetValues"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0042 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0059 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0052 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0028 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FastEnum_GetValues"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0083 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0086 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0081 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0055 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"NET_GetValues"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"64.4620 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.9908 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.9268 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"64.2767 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0048"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"40 B"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"RapidEnum_GetNames"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0006 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0017 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0015 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0000 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FastEnum_GetNames"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0025 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0031 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0028 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0012 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"NET_GetNames"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"12.3820 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.1086 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.1016 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"12.4076 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0067"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"56 B"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"RapidEnum_GetName"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0069 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0085 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0071 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0039 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FastEnum_GetName"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.2530 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0070 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0065 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.2527 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"NET_GetName"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"15.9190 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0524 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0490 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"15.9046 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0029"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"24 B"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"RapidEnum_ToString"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0103 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0049 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0046 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0110 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FastEnum_ToString"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.4844 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0062 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0052 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.4845 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"NET_ToString"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"6.1700 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0451 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0376 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"6.1493 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0029"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"24 B"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"RapidEnum_IsDefines"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0026 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0036 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0034 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0000 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FastEnum_IsDefines"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"4.6724 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0583 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0545 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"4.6434 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"NET_IsDefines"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"14.5923 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0355 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0332 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"14.5996 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"RapidEnum_Parse"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.9258 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0161 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0150 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.9240 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FastEnum_Parse"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"4.6223 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0082 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0073 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"4.6192 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"NET_Parse"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"8.8707 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0965 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0903 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"8.8293 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"RapidEnum_TryParse"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.7633 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0097 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0090 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.7657 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FastEnum_TryParse"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"4.6869 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0254 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0212 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"4.6852 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"NET_TryParse"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"8.8433 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0609 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"0.0569 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"8.8268 ns"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"}),(0,i.jsx)(n.td,{style:{textAlign:"right"},children:"-"})]})]})]}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/hanachiru/RapidEnum/Images/PerformanceComparison.png",alt:"PerformanceComparison"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/hanachiru/RapidEnum/tree/main/RapidEnum.Benchmark",children:"Benchmark Source"})}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"BenchmarkDotNet v0.14.0, macOS Sonoma 14.4.1 (23E224) [Darwin 23.4.0]\nApple M2 Pro, 1 CPU, 12 logical and 12 physical cores\n.NET SDK 8.0.303\n[Host]     : .NET 8.0.7 (8.0.724.31311), Arm64 RyuJIT AdvSIMD\nDefaultJob : .NET 8.0.7 (8.0.724.31311), Arm64 RyuJIT AdvSIMD\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsx)(n.p,{children:"Generate enum values without reflection"})}),"\n",(0,i.jsx)(n.h2,{id:"how-to-use-1",children:"How to use"}),"\n",(0,i.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsxs)(a.A,{value:"csproj",label:"CSharp Project",children:[(0,i.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,i.jsx)(n.strong,{children:"RapidEnum"})]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {16}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="RapidEnum" Version="1.0.2" />\n  </ItemGroup>\n\n</Project>\n\n'})})]}),(0,i.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RapidEnum\\src\\EnumDemo\\Program.cs",label:"Program.cs",children:[(0,i.jsxs)(n.p,{children:["This is the use of ",(0,i.jsx)(n.strong,{children:"RapidEnum"})," in ",(0,i.jsx)(n.em,{children:"Program.cs"})]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// See https://aka.ms/new-console-template for more information\nusing EnumDemo;\n\nConsole.WriteLine("Hello, World!");\nConsole.WriteLine("Car types:" + CarTypesEnumExtensions.GetValues().Count);\nvar cars = CarTypesEnumExtensions.GetValues();\nforeach (var car in cars)\n{\n    Console.WriteLine(car.ToStringFast());\n}\n'})})]}),(0,i.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RapidEnum\\src\\EnumDemo\\CarTypes.cs",label:"CarTypes.cs",children:[(0,i.jsxs)(n.p,{children:["This is the use of ",(0,i.jsx)(n.strong,{children:"RapidEnum"})," in ",(0,i.jsx)(n.em,{children:"CarTypes.cs"})]}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\nnamespace EnumDemo;\n[RapidEnum.RapidEnum]\npublic enum CarTypes \n{\n    None,\n    Dacia ,\n    Tesla ,\n    BMW ,\n    Mercedes ,\n}\n\n"})})]})]}),"\n",(0,i.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,i.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RapidEnum\\src\\EnumDemo\\obj\\GX\\RapidEnum.Generators\\RapidEnum.RapidEnumGenerator\\CarTypesEnumExtensions.g.cs",label:"CarTypesEnumExtensions.g.cs",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated />\n\nnamespace EnumDemo \n{\n    \n  public static partial class CarTypesEnumExtensions\n  {\n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static string ToStringFast(this global::EnumDemo.CarTypes value)\n      {\n          return value switch\n          {\n              global::EnumDemo.CarTypes.None => nameof(global::EnumDemo.CarTypes.None),\n              global::EnumDemo.CarTypes.Dacia => nameof(global::EnumDemo.CarTypes.Dacia),\n              global::EnumDemo.CarTypes.Tesla => nameof(global::EnumDemo.CarTypes.Tesla),\n              global::EnumDemo.CarTypes.BMW => nameof(global::EnumDemo.CarTypes.BMW),\n              global::EnumDemo.CarTypes.Mercedes => nameof(global::EnumDemo.CarTypes.Mercedes),\n              _ => value.ToString()\n          };\n      }\n      \n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static bool IsDefined(global::EnumDemo.CarTypes value)\n      {\n          return value switch\n          {\n              global::EnumDemo.CarTypes.None => true,\n              global::EnumDemo.CarTypes.Dacia => true,\n              global::EnumDemo.CarTypes.Tesla => true,\n              global::EnumDemo.CarTypes.BMW => true,\n              global::EnumDemo.CarTypes.Mercedes => true,\n              _ => false,\n          };\n      }\n      \n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static bool IsDefined(string name)\n      {\n          return name switch\n          {\n              nameof(global::EnumDemo.CarTypes.None) => true,\n              nameof(global::EnumDemo.CarTypes.Dacia) => true,\n              nameof(global::EnumDemo.CarTypes.Tesla) => true,\n              nameof(global::EnumDemo.CarTypes.BMW) => true,\n              nameof(global::EnumDemo.CarTypes.Mercedes) => true,\n              _ => false,\n          };\n      }\n      \n      private static readonly global::System.Collections.ObjectModel.ReadOnlyCollection<global::EnumDemo.CarTypes> CacheValues = new global::System.Collections.ObjectModel.ReadOnlyCollection<global::EnumDemo.CarTypes>(new[]\n      {\n          global::EnumDemo.CarTypes.None,\n          global::EnumDemo.CarTypes.Dacia,\n          global::EnumDemo.CarTypes.Tesla,\n          global::EnumDemo.CarTypes.BMW,\n          global::EnumDemo.CarTypes.Mercedes,\n      });\n      \n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static global::System.Collections.Generic.IReadOnlyList<global::EnumDemo.CarTypes> GetValues() => CacheValues;\n  \n      private static readonly global::System.Collections.ObjectModel.ReadOnlyCollection<string> CacheNames = new global::System.Collections.ObjectModel.ReadOnlyCollection<string>(new[]\n      {\n          nameof(global::EnumDemo.CarTypes.None),\n          nameof(global::EnumDemo.CarTypes.Dacia),\n          nameof(global::EnumDemo.CarTypes.Tesla),\n          nameof(global::EnumDemo.CarTypes.BMW),\n          nameof(global::EnumDemo.CarTypes.Mercedes),\n      });\n      \n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static global::System.Collections.Generic.IReadOnlyList<string> GetNames() => CacheNames;\n      \n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static string GetName(global::EnumDemo.CarTypes value)\n      {\n          return value.ToStringFast();\n      }\n      \n      private static readonly global::System.Collections.ObjectModel.ReadOnlyCollection<Member> CacheMembers =  new global::System.Collections.ObjectModel.ReadOnlyCollection<Member>(new[]\n      {\n          new Member(nameof(global::EnumDemo.CarTypes.None), global::EnumDemo.CarTypes.None),\n          new Member(nameof(global::EnumDemo.CarTypes.Dacia), global::EnumDemo.CarTypes.Dacia),\n          new Member(nameof(global::EnumDemo.CarTypes.Tesla), global::EnumDemo.CarTypes.Tesla),\n          new Member(nameof(global::EnumDemo.CarTypes.BMW), global::EnumDemo.CarTypes.BMW),\n          new Member(nameof(global::EnumDemo.CarTypes.Mercedes), global::EnumDemo.CarTypes.Mercedes),\n      });\n    \n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static global::System.Collections.Generic.IReadOnlyList<Member> GetMembers() => CacheMembers;\n      \n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static Member GetMember(global::EnumDemo.CarTypes value)\n      {\n          return value.ToMember();\n      }\n      \n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static Member ToMember(this global::EnumDemo.CarTypes value)\n      {\n          return new Member(ToStringFast(value), value);\n      }\n    \n      public sealed class Member\n      {\n          public string Name \\{ get; }\n          public global::EnumDemo.CarTypes Value \\{ get; }\n\n          internal Member(string name, global::EnumDemo.CarTypes value)\n          {\n              Name = name;\n              Value = value;\n          }\n          \n          public void Deconstruct(out string name, out global::EnumDemo.CarTypes value)\n          {\n              name = Name;\n              value = Value;\n          }\n      }\n      \n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static global::EnumDemo.CarTypes Parse(string name, bool ignoreCase = false)\n      {\n          if (TryParse(name, out var value, ignoreCase))\n          {\n              return value;\n          }\n          throw new global::System.ArgumentException($\"The value '{name}' is not defined in enum 'global::EnumDemo.CarTypes'.\");\n      }\n      \n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static bool TryParse(\n          string name,\n          out global::EnumDemo.CarTypes value,\n          bool ignoreCase = false)\n      {\n          return ignoreCase ? TryParseIgnoreCase(name, out value) : TryParse(name, out value);\n      }\n  \n      private static bool TryParseIgnoreCase(\n          string name,\n          out global::EnumDemo.CarTypes value)\n      {\n          switch (name)\n          {\n              case not null when name.Equals(nameof(global::EnumDemo.CarTypes.None), global::System.StringComparison.OrdinalIgnoreCase):\n                  value = global::EnumDemo.CarTypes.None;\n                  return true;\n              case not null when name.Equals(nameof(global::EnumDemo.CarTypes.Dacia), global::System.StringComparison.OrdinalIgnoreCase):\n                  value = global::EnumDemo.CarTypes.Dacia;\n                  return true;\n              case not null when name.Equals(nameof(global::EnumDemo.CarTypes.Tesla), global::System.StringComparison.OrdinalIgnoreCase):\n                  value = global::EnumDemo.CarTypes.Tesla;\n                  return true;\n              case not null when name.Equals(nameof(global::EnumDemo.CarTypes.BMW), global::System.StringComparison.OrdinalIgnoreCase):\n                  value = global::EnumDemo.CarTypes.BMW;\n                  return true;\n              case not null when name.Equals(nameof(global::EnumDemo.CarTypes.Mercedes), global::System.StringComparison.OrdinalIgnoreCase):\n                  value = global::EnumDemo.CarTypes.Mercedes;\n                  return true;\n              case not null when int.TryParse(name, out var val):\n                  value = (global::EnumDemo.CarTypes)val;\n                  return true;\n              default:\n                  value = default;\n                  return false;\n          }\n      }\n  \n      private static bool TryParse(\n          string name,\n          out global::EnumDemo.CarTypes value)\n      {\n          switch (name)\n          {\n              case nameof(global::EnumDemo.CarTypes.None):\n                   value = global::EnumDemo.CarTypes.None;\n                  return true;\n              case nameof(global::EnumDemo.CarTypes.Dacia):\n                   value = global::EnumDemo.CarTypes.Dacia;\n                  return true;\n              case nameof(global::EnumDemo.CarTypes.Tesla):\n                   value = global::EnumDemo.CarTypes.Tesla;\n                  return true;\n              case nameof(global::EnumDemo.CarTypes.BMW):\n                   value = global::EnumDemo.CarTypes.BMW;\n                  return true;\n              case nameof(global::EnumDemo.CarTypes.Mercedes):\n                   value = global::EnumDemo.CarTypes.Mercedes;\n                  return true;\n              case not null when int.TryParse(name, out var val):\n                  value = (global::EnumDemo.CarTypes)val;\n                  return true;\n              default:\n                  value = default;\n                  return false;\n          }\n      }\n      \n      private static readonly global::System.Type CacheUnderlyingType = global::System.Enum.GetUnderlyingType(typeof(global::EnumDemo.CarTypes));\n      public static global::System.Type GetUnderlyingType() => CacheUnderlyingType;\n      \n      [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n      public static string GetEnumMemberValue(this global::EnumDemo.CarTypes value)\n      {\n          return value switch\n          {\n              global::EnumDemo.CarTypes.None => null,\n              global::EnumDemo.CarTypes.Dacia => null,\n              global::EnumDemo.CarTypes.Tesla => null,\n              global::EnumDemo.CarTypes.BMW => null,\n              global::EnumDemo.CarTypes.Mercedes => null,\n              _ => null\n          };\n      }\n  }\n}\n"})})}),(0,i.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RapidEnum\\src\\EnumDemo\\obj\\GX\\RapidEnum.Generators\\RapidEnum.RapidEnumGenerator\\RapidEnumAttributes.g.cs",label:"RapidEnumAttributes.g.cs",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\n\nnamespace RapidEnum\n{\n    [global::System.AttributeUsage(global::System.AttributeTargets.Enum)]\n    internal sealed class RapidEnumAttribute : global::System.Attribute\n    {\n    \n    }\n    \n    [global::System.AttributeUsage(global::System.AttributeTargets.Class, Inherited = false)]\n    public sealed class RapidEnumWithTypeAttribute : global::System.Attribute\n    {\n        public global::System.Type Type \\{ get; }\n    \n        public RapidEnumWithTypeAttribute(global::System.Type type)\n        {\n            Type = type;\n        }\n    }\n}\n"})})})]}),"\n",(0,i.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,i.jsx)(n.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:t(71559).A+"",children:"Download Example project RapidEnum "})})}),"\n",(0,i.jsx)(n.h3,{id:"share-rapidenum",children:"Share RapidEnum"}),"\n",(0,i.jsxs)("ul",{children:[(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRapidEnum&quote=RapidEnum",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRapidEnum&text=RapidEnum:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRapidEnum",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRapidEnum&title=RapidEnum",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,i.jsx)("li",{children:(0,i.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRapidEnum&title=RapidEnum&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRapidEnum",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RapidEnum",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RapidEnum"})}),"\n",(0,i.jsx)(o.Ay,{})]})}function x(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},71559:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/files/RapidEnum-475af8dbb77b6376cbe46fd523678384.zip"}}]);