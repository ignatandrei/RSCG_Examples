"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[118],{50858:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>p,metadata:()=>l,toc:()=>u});var r=n(87462),a=(n(67294),n(3905)),o=n(73992),s=n(18679),i=n(68839);const p={sidebar_position:1790,title:"179 - ConstructorGenerator",description:"Generate constructor for classes",slug:"/ConstructorGenerator"},c="ConstructorGenerator  by Swarley97",l={unversionedId:"RSCG-Examples/ConstructorGenerator",id:"RSCG-Examples/ConstructorGenerator",title:"179 - ConstructorGenerator",description:"Generate constructor for classes",source:"@site/docs/RSCG-Examples/ConstructorGenerator.md",sourceDirName:"RSCG-Examples",slug:"/ConstructorGenerator",permalink:"/RSCG_Examples/v2/docs/ConstructorGenerator",draft:!1,tags:[],version:"current",sidebarPosition:1790,frontMatter:{sidebar_position:1790,title:"179 - ConstructorGenerator",description:"Generate constructor for classes",slug:"/ConstructorGenerator"},sidebar:"tutorialSidebar",previous:{title:"178 - Valuify",permalink:"/RSCG_Examples/v2/docs/Valuify"},next:{title:"180 - Pure.DI",permalink:"/RSCG_Examples/v2/docs/Pure.DI"}},d={},u=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share ConstructorGenerator",id:"share-constructorgenerator",level:3},{value:"In the same category (Constructor) - 6 other generators",id:"in-the-same-category-constructor---6-other-generators",level:3},{value:"AutoConstructor",id:"autoconstructor",level:4},{value:"AutoCtor",id:"autoctor",level:4},{value:"AutoDeconstruct",id:"autodeconstruct",level:4},{value:"PrimaryParameter",id:"primaryparameter",level:4},{value:"QuickConstructor",id:"quickconstructor",level:4},{value:"sourcedepend",id:"sourcedepend",level:4}],m={toc:u},g="wrapper";function h(e){let{components:t,...p}=e;return(0,a.kt)(g,(0,r.Z)({},m,p,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"constructorgenerator--by-swarley97"},"ConstructorGenerator  by Swarley97"),(0,a.kt)(i.Z,{toc:u,mdxType:"TOCInline"}),(0,a.kt)("h2",{id:"nuget--site-data"},"NuGet / site data"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/ConstructorGenerator/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/ConstructorGenerator?label=ConstructorGenerator",alt:"Nuget"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Swarley97/ConstructorGenerator"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/Swarley97/ConstructorGenerator?label=updated",alt:"GitHub last commit"})),"\n",(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/Swarley97/ConstructorGenerator?style=social",alt:"GitHub Repo stars"})),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("h3",{id:"info"},"Info"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Name: ",(0,a.kt)("strong",{parentName:"p"},"ConstructorGenerator")),(0,a.kt)("p",{parentName:"admonition"},"Generates constructors for you."),(0,a.kt)("p",{parentName:"admonition"},"Author: Swarley97"),(0,a.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/ConstructorGenerator/"},"https://www.nuget.org/packages/ConstructorGenerator/")),"   "),(0,a.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Swarley97/ConstructorGenerator"},"https://github.com/Swarley97/ConstructorGenerator")),(0,a.kt)("p",{parentName:"admonition"},"Source: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Swarley97/ConstructorGenerator"},"https://github.com/Swarley97/ConstructorGenerator"))),(0,a.kt)("h3",{id:"original-readme"},"Original Readme"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/ConstructorGenerator/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/ConstructorGenerator.svg",alt:"NuGet"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/k94ll13nn3/AutoConstructor/main/LICENSE"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/license-MIT-blue.svg",alt:"GitHub license"})),"\n",(0,a.kt)("img",{parentName:"p",src:"https://github.com/Swarley97/ConstructorGenerator/actions/workflows/main.yml/badge.svg",alt:"main_workflow"})),(0,a.kt)("h1",{parentName:"admonition",id:"constructorgenerator"},"ConstructorGenerator"),(0,a.kt)("p",{parentName:"admonition"},"ConstructorGenerator is a C# source generator which generates constructors for you."),(0,a.kt)("h2",{parentName:"admonition",id:"installation"},"Installation"),(0,a.kt)("p",{parentName:"admonition"},"Install the ",(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/ConstructorGenerator/"},"ConstructorGenerator NuGet package"),"."),(0,a.kt)("h3",{parentName:"admonition",id:"package-manager-console"},"Package Manager Console"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},"Install-Package ConstructorGenerator\n")),(0,a.kt)("h3",{parentName:"admonition",id:"net-cli"},".NET CLI"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"dotnet add package ConstructorGenerator\n")),(0,a.kt)("h2",{parentName:"admonition",id:"getting-started"},"Getting started"),(0,a.kt)("h3",{parentName:"admonition",id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",{parentName:"admonition"},"ConstructorGenerator requires C# 9.0 or later."),(0,a.kt)("h3",{parentName:"admonition",id:"usage"},"Usage"),(0,a.kt)("p",{parentName:"admonition"},"Add the ",(0,a.kt)("inlineCode",{parentName:"p"},"[GenerateFullConstructor]")," attribute to your class or struct and a constructor will be generated."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"[GenerateFullConstructor]\npublic partial class MyClass\n{\n    private readonly ILogger _logger;\n    private readonly IDependencyA _dependency;\n    private readonly IDependencyB _dependencyB;\n}\n")),(0,a.kt)("p",{parentName:"admonition"},"The generated constructor will look like this:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public MyClass(ILogger logger, IDependencyA dependency, IDependencyB dependencyB)\n{\n    _logger = logger;\n    _dependency = dependency;\n    _dependencyB = dependencyB;\n}\n")),(0,a.kt)("h3",{parentName:"admonition",id:"rules"},"Rules"),(0,a.kt)("p",{parentName:"admonition"},"Only for the following members a constructor parameter will be generated"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Read only fields with no initializer"),(0,a.kt)("li",{parentName:"ul"},"Get only Properties or init only properties with no initializer "),(0,a.kt)("li",{parentName:"ul"},"Properties or fields with the ",(0,a.kt)("inlineCode",{parentName:"li"},"[ConstructorDependency]")," attribute (this override the rules above)")),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},"Examples")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// ignored\nprivate readonly IDependency _dependency = new Dependency();\n")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// not-ignored\nprivate readonly IDependency _dependency;\n")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// not-ignored\n[ConstructorDependency]\nprivate readonly IDependency _dependency = new Dependency();\n")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// ignored\nprivate readonly IDependency _dependency { get; } = new Dependency();\n")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// ignored\nprivate readonly IDependency _dependency { get; set; }\n")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// not-ignored\nprivate readonly IDependency _dependency { get; init; }\n")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"// not-ignored\n[ConstructorDependency]\nprivate readonly IDependency _dependency { get; set; }\n")),(0,a.kt)("h3",{parentName:"admonition",id:"ignoring-properties-and-fields"},"Ignoring properties and fields"),(0,a.kt)("p",{parentName:"admonition"},"You can ignore properties and fields by adding the ",(0,a.kt)("inlineCode",{parentName:"p"},"[ExcludeConstructorDependency]")," attribute to them."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"[GenerateFullConstructor]\npublic partial class MyClass\n{\n    private readonly ILogger _logger;\n    private readonly IDependencyA _dependency;\n    \n    [ExcludeConstructorDependency]\n    private readonly IDependencyB _dependencyB;\n}\n")),(0,a.kt)("p",{parentName:"admonition"},"The generated constructor will look like this:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public MyClass(ILogger logger, IDependencyA dependency)\n{\n    _logger = logger;\n    _dependency = dependency;\n}\n")),(0,a.kt)("h3",{parentName:"admonition",id:"explicitly-specifying-properties-and-fields"},"Explicitly specifying properties and fields"),(0,a.kt)("p",{parentName:"admonition"},"You can explicitly specify the properties and fields which should be included in the generated constructor by adding the ",(0,a.kt)("inlineCode",{parentName:"p"},"[ConstructorDependency]")," attribute to them.\nThis can be useful for the following cases: "),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"If you do not want to use the ",(0,a.kt)("inlineCode",{parentName:"li"},"[GenerateFullConstructor]")," attribute on the class or struct"),(0,a.kt)("li",{parentName:"ul"},"If you want to add additional constructor dependencies which are not included by default (see ",(0,a.kt)("a",{parentName:"li",href:"#rules"},"Rules"),") "),(0,a.kt)("li",{parentName:"ul"},"If you want to specify it as optional parameter (see ",(0,a.kt)("a",{parentName:"li",href:"#optional-parameters"},"Optional parameters"),")")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public partial class MyClass\n{\n    [ConstructorDependency]\n    private readonly ILogger _logger = new NullLogger();\n    \n    [ConstructorDependency]\n    private readonly IDependencyA _dependency;\n    \n    private readonly IDependencyB _dependencyB;\n}\n")),(0,a.kt)("p",{parentName:"admonition"},"The generated constructor will look like this:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public MyClass(ILogger logger, IDependencyA dependency)\n{\n    _logger = logger;\n    _dependency = dependency;\n}\n")),(0,a.kt)("h3",{parentName:"admonition",id:"inheritance"},"Inheritance"),(0,a.kt)("p",{parentName:"admonition"},"ConstructorGenerator supports inheritance. You can put the ",(0,a.kt)("inlineCode",{parentName:"p"},"[GenerateFullConstructor]")," attribute on a derived class."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"\n[GenerateFullConstructor]\npublic MyClass(ILogger logger, IDependencyA dependency, IDependencyB dependencyB)\n{\n    _logger = logger;\n    _dependency = dependency;\n    _dependencyB = dependencyB;\n}\n\n[GenerateFullConstructor]\npublic partial class MyDerivedClass : MyClass\n{\n    public IDependencyC DependencyC { get; }\n}\n")),(0,a.kt)("p",{parentName:"admonition"},"The generated constructor will look like this:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public MyDerivedClass(ILogger logger, IDependencyA dependency, IDependencyB dependencyB, IDependencyC dependencyC)\n    : base(logger, dependency, dependencyB)\n{\n    DependencyC = dependencyC;\n}\n")),(0,a.kt)("p",{parentName:"admonition"},"Or, if you just want to generate the base constructor call (for example because your derived class have no constructor dependencies),\nyou can put the ",(0,a.kt)("inlineCode",{parentName:"p"},"[GenerateBaseConstructorCall]")," attribute on the derived class."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"\n// constructor of MyClass\npublic MyClass(ILogger logger, IDependencyA dependency, IDependencyB dependencyB)\n{\n    _logger = logger;\n    _dependency = dependency;\n    _dependencyB = dependencyB;\n}\n\n[GenerateBaseConstructorCall]\npublic partial class MyDerivedClass : MyClass\n{\n\n}\n")),(0,a.kt)("p",{parentName:"admonition"},"The generated constructor will look like this:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public MyDerivedClass(ILogger logger, IDependencyA dependency, IDependencyB dependencyB)\n    : base(logger, dependency, dependencyB)\n{\n}\n")),(0,a.kt)("blockquote",{parentName:"admonition"},(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note"),": It doesn't matter whether the base class constructor is also generated by the ConstructorGenerator or manually defined in the code. In either case, the constructor call will be generated.")),(0,a.kt)("h3",{parentName:"admonition",id:"optional-parameters"},"Optional parameters"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"[GenerateFullConstructor]\npublic partial class MyClass\n{\n    private readonly ILogger _logger;\n    private readonly IDependencyA _dependency;\n    [ConstructorDependency(IsOptional = true)]\n    private readonly IDependencyB _dependencyB;\n}\n")),(0,a.kt)("p",{parentName:"admonition"},"The generated constructor will look like this:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public MyClass(ILogger logger, IDependencyA dependency, IDependencyB dependencyB = null)\n{\n    _logger = logger;\n    _dependency = dependency;\n    _dependencyB = dependencyB;\n}\n")),(0,a.kt)("h3",{parentName:"admonition",id:"execute-code-in-the-generated-constructor"},"Execute code in the generated constructor"),(0,a.kt)("p",{parentName:"admonition"},"To execute code in the constructor (like attaching events or something like this) you can implement the partial method ",(0,a.kt)("inlineCode",{parentName:"p"},"OnConstructing")," which will be called after all fields and properties has been set."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'[GenerateFullConstructor]\npublic partial class MyClass\n{\n    private readonly ILogger _logger;\n    private readonly IDependencyA _dependency;\n    private readonly IDependencyB _dependencyB;\n    \n    partial void OnConstructing()\n    {\n        // do constructor stuff\n        _logger.Log("Constructor called");\n    }\n}\n')),(0,a.kt)("h3",{parentName:"admonition",id:"constructor-accessibility"},"Constructor accessibility"),(0,a.kt)("p",{parentName:"admonition"},"ConstructorGenerator supports specifying the accessibility of the generated constructor. You can put the ",(0,a.kt)("inlineCode",{parentName:"p"},"[ConstructorAccessibility]")," attribute on a class or struct and the constructor will be generated with the specified accessibility."),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"[GenerateFullConstructor]\n[ConstructorAccessibility(Accessibility.Internal)]\npublic partial class MyClass\n{\n    private readonly ILogger _logger;\n    private readonly IDependencyA _dependency;\n    private readonly IDependencyB _dependencyB;\n}\n")),(0,a.kt)("p",{parentName:"admonition"},"The generated constructor will look like this:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"\ninternal MyClass(ILogger logger, IDependencyA dependency, IDependencyB dependencyB)\n{\n    _logger = logger;\n    _dependency = dependency;\n    _dependencyB = dependencyB;\n}\n")),(0,a.kt)("h2",{parentName:"admonition",id:"license"},"License"),(0,a.kt)("p",{parentName:"admonition"},"ConstructorGenerator is licensed under the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Swarley97/ConstructorGenerator/LICENSE"},"MIT license"),".")),(0,a.kt)("h3",{id:"about"},"About"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Generate constructor for classes")),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("h3",{id:"example-source-csproj-source-files"},"Example (source csproj, source files)"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,a.kt)("p",null,"This is the CSharp Project that references ",(0,a.kt)("strong",{parentName:"p"},"ConstructorGenerator")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {16}",showLineNumbers:!0,"{16}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n    <ItemGroup>\n      <PackageReference Include="ConstructorGenerator" Version="1.0.2" />\n    </ItemGroup>\n</Project>\n\n'))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\ConstructorGenerator\\src\\ConstructorDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"ConstructorGenerator")," in ",(0,a.kt)("em",{parentName:"p"},"Program.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using QuickConstructorDemo;\n\nvar p = new Person("Andrei", "Ignat");\n\nConsole.WriteLine(p.FullName());\n'))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\ConstructorGenerator\\src\\ConstructorDemo\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"ConstructorGenerator")," in ",(0,a.kt)("em",{parentName:"p"},"Person.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using ConstructorGenerator.Attributes;\n\nnamespace QuickConstructorDemo;\n\n[GenerateFullConstructor]\ninternal partial class Person\n{\n    [ConstructorDependency]\n    private readonly string FirstName="";\n\n    private readonly string? LastName;\n    \n    public string FullName() => $"{FirstName} {LastName}";\n    \n}\n\n')))),(0,a.kt)("h3",{id:"generated-files"},"Generated Files"),(0,a.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\ConstructorGenerator\\src\\ConstructorDemo\\obj\\GX\\ConstructorGenerator\\ConstructorGenerator.ConstructorGenerator\\QuickConstructorDemo.Person_ConstructorGenerator.g.cs",label:"QuickConstructorDemo.Person_ConstructorGenerator.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"namespace QuickConstructorDemo\n{\n    internal partial class Person \n    {\n        public Person(string firstName, string lastName) \n        { \n            FirstName = firstName;\n            LastName = lastName; \n            OnConstructing();\n        }\n        partial void OnConstructing();\n    }\n}\n")))),(0,a.kt)("h2",{id:"useful"},"Useful"),(0,a.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{target:"_blank",href:n(61954).Z},"Download Example project ConstructorGenerator "))),(0,a.kt)("h3",{id:"share-constructorgenerator"},"Share ConstructorGenerator"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FConstructorGenerator&quote=ConstructorGenerator",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FConstructorGenerator&text=ConstructorGenerator:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FConstructorGenerator",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FConstructorGenerator&title=ConstructorGenerator",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FConstructorGenerator&title=ConstructorGenerator&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FConstructorGenerator",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/ConstructorGenerator"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/ConstructorGenerator")),(0,a.kt)("h3",{id:"in-the-same-category-constructor---6-other-generators"},"In the same category (Constructor) - 6 other generators"),(0,a.kt)("h4",{id:"autoconstructor"},(0,a.kt)("a",{parentName:"h4",href:"/docs/AutoConstructor"},"AutoConstructor")),(0,a.kt)("h4",{id:"autoctor"},(0,a.kt)("a",{parentName:"h4",href:"/docs/AutoCtor"},"AutoCtor")),(0,a.kt)("h4",{id:"autodeconstruct"},(0,a.kt)("a",{parentName:"h4",href:"/docs/AutoDeconstruct"},"AutoDeconstruct")),(0,a.kt)("h4",{id:"primaryparameter"},(0,a.kt)("a",{parentName:"h4",href:"/docs/PrimaryParameter"},"PrimaryParameter")),(0,a.kt)("h4",{id:"quickconstructor"},(0,a.kt)("a",{parentName:"h4",href:"/docs/QuickConstructor"},"QuickConstructor")),(0,a.kt)("h4",{id:"sourcedepend"},(0,a.kt)("a",{parentName:"h4",href:"/docs/sourcedepend"},"sourcedepend")))}h.isMDXComponent=!0},61954:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/ConstructorGenerator-fecefa15ad072169aa49cfd1e57b70ae.zip"}}]);