"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[2677],{73670:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"RSCG-Examples/AutoConstructor","title":"80 - AutoConstructor","description":"Generating constructor for class with many properties","source":"@site/docs/RSCG-Examples/AutoConstructor.md","sourceDirName":"RSCG-Examples","slug":"/AutoConstructor","permalink":"/RSCG_Examples/v2/docs/AutoConstructor","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":800,"frontMatter":{"sidebar_position":800,"title":"80 - AutoConstructor","description":"Generating constructor for class with many properties","slug":"/AutoConstructor"},"sidebar":"tutorialSidebar","previous":{"title":"79 - DudNet","permalink":"/RSCG_Examples/v2/docs/DudNet"},"next":{"title":"81 - N.SourceGenerators.UnionTypes","permalink":"/RSCG_Examples/v2/docs/N.SourceGenerators.UnionTypes"}}');var o=n(74848),i=n(28453),s=n(11470),a=n(19365),c=n(14252);const l={sidebar_position:800,title:"80 - AutoConstructor",description:"Generating constructor for class with many properties",slug:"/AutoConstructor"},u="AutoConstructor  by K\xe9vin Gallienne",d={},h=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Installation",id:"installation",level:2},{value:"Basic usage",id:"basic-usage",level:2},{value:"How to use",id:"how-to-use",level:2},{value:"Constructor accessibility",id:"constructor-accessibility",level:3},{value:"Initializer method",id:"initializer-method",level:3},{value:"Properties injection",id:"properties-injection",level:3},{value:"Configuration",id:"configuration",level:2},{value:"Generating <code>ArgumentNullException</code>",id:"generating-argumentnullexception",level:3},{value:"Generating XML documentation comment",id:"generating-xml-documentation-comment",level:3},{value:"Samples describing some cases",id:"samples-describing-some-cases",level:2},{value:"Sample for fields",id:"sample-for-fields",level:3},{value:"Sample for get-only properties",id:"sample-for-get-only-properties",level:3},{value:"Diagnostics",id:"diagnostics",level:2},{value:"ACONS01",id:"acons01",level:3},{value:"ACONS02",id:"acons02",level:3},{value:"ACONS03",id:"acons03",level:3},{value:"ACONS04",id:"acons04",level:3},{value:"ACONS05",id:"acons05",level:3},{value:"ACONS06",id:"acons06",level:3},{value:"ACONS07",id:"acons07",level:3},{value:"ACONS08",id:"acons08",level:3},{value:"ACONS09",id:"acons09",level:3},{value:"ACONS10",id:"acons10",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use-1",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share AutoConstructor",id:"share-autoconstructor",level:3},{value:"In the same category (Constructor) - 6 other generators",id:"in-the-same-category-constructor---6-other-generators",level:3},{value:"AutoCtor",id:"autoctor",level:4},{value:"AutoDeconstruct",id:"autodeconstruct",level:4},{value:"ConstructorGenerator",id:"constructorgenerator",level:4},{value:"PrimaryParameter",id:"primaryparameter",level:4},{value:"QuickConstructor",id:"quickconstructor",level:4},{value:"sourcedepend",id:"sourcedepend",level:4}];function p(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"autoconstructor--by-k\xe9vin-gallienne",children:"AutoConstructor  by K\xe9vin Gallienne"})}),"\n",(0,o.jsx)(c.A,{toc:h}),"\n",(0,o.jsx)(t.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://www.nuget.org/packages/AutoConstructor/",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/AutoConstructor?label=AutoConstructor",alt:"Nuget"})}),"\n",(0,o.jsx)(t.a,{href:"https://github.com/k94ll13nn3/AutoConstructor",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/github/last-commit/k94ll13nn3/AutoConstructor?label=updated",alt:"GitHub last commit"})}),"\n",(0,o.jsx)(t.img,{src:"https://img.shields.io/github/stars/k94ll13nn3/AutoConstructor?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,o.jsx)(t.h2,{id:"details",children:"Details"}),"\n",(0,o.jsx)(t.h3,{id:"info",children:"Info"}),"\n",(0,o.jsxs)(t.admonition,{type:"info",children:[(0,o.jsxs)(t.p,{children:["Name: ",(0,o.jsx)(t.strong,{children:"AutoConstructor"})]}),(0,o.jsx)(t.p,{children:"Source generator for automatic constructor generation."}),(0,o.jsx)(t.p,{children:"Author: K\xe9vin Gallienne"}),(0,o.jsxs)(t.p,{children:["NuGet:\n",(0,o.jsx)(t.em,{children:(0,o.jsx)(t.a,{href:"https://www.nuget.org/packages/AutoConstructor/",children:"https://www.nuget.org/packages/AutoConstructor/"})})]}),(0,o.jsxs)(t.p,{children:["You can find more details at ",(0,o.jsx)(t.a,{href:"https://github.com/k94ll13nn3/AutoConstructor",children:"https://github.com/k94ll13nn3/AutoConstructor"})]}),(0,o.jsxs)(t.p,{children:["Source: ",(0,o.jsx)(t.a,{href:"https://github.com/k94ll13nn3/AutoConstructor",children:"https://github.com/k94ll13nn3/AutoConstructor"})]})]}),"\n",(0,o.jsx)(t.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,o.jsxs)(t.admonition,{type:"note",children:[(0,o.jsx)(t.h1,{id:"autoconstructor",children:"AutoConstructor"}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://www.nuget.org/packages/AutoConstructor/",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/nuget/vpre/AutoConstructor?logo=nuget",alt:"NuGet"})}),"\n",(0,o.jsx)(t.a,{href:"https://github.com/k94ll13nn3/AutoConstructor/releases/latest",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/github/release/k94ll13nn3/AutoConstructor.svg?logo=github",alt:"GitHub release"})}),"\n",(0,o.jsx)(t.a,{href:"https://raw.githubusercontent.com/k94ll13nn3/AutoConstructor/main/LICENSE",children:(0,o.jsx)(t.img,{src:"https://img.shields.io/github/license/k94ll13nn3/AutoConstructor",alt:"GitHub license"})}),"\n",(0,o.jsx)(t.img,{src:"https://github.com/k94ll13nn3/AutoConstructor/workflows/.github/workflows/ci.yml/badge.svg",alt:"ci.yml"})]}),(0,o.jsx)(t.p,{children:"C# source generator that generates a constructor from readonly fields/properties in a class."}),(0,o.jsx)(t.h2,{id:"installation",children:"Installation"}),(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Grab the latest package on ",(0,o.jsx)(t.a,{href:"https://www.nuget.org/packages/AutoConstructor/",children:"NuGet"}),"."]}),"\n"]}),(0,o.jsx)(t.h2,{id:"basic-usage",children:"Basic usage"}),(0,o.jsx)(t.p,{children:"The following code:"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'[AutoConstructor]\npublic partial class MyClass\n{\n    private readonly MyDbContext _context;\n    private readonly IHttpClientFactory _clientFactory;\n    private readonly IService _service;\n\n    [AutoConstructorInject("options?.Value", "options", typeof(IOptions<ApplicationOptions>))]\n    private readonly ApplicationOptions _options;\n}\n'})}),(0,o.jsx)(t.p,{children:"will generate:"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:"partial class MyClass\n{\n    public MyClass(\n        MyApp.MyDbContext context,\n        System.Net.Http.IHttpClientFactory clientFactory,\n        MyApp.IService service,\n        Microsoft.Extensions.Options.IOptions<MyApp.ApplicationOptions> options)\n    {\n        this._context = context;\n        this._clientFactory = clientFactory;\n        this._service = service;\n        this._options = options?.Value;\n    }\n}\n"})}),(0,o.jsx)(t.p,{children:"A sample containing more cases is available at the end of this README."}),(0,o.jsx)(t.h2,{id:"how-to-use",children:"How to use"}),(0,o.jsx)(t.p,{children:"For any class where the generator will be used:"}),(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Mark the class as ",(0,o.jsx)(t.code,{children:"partial"})]}),"\n",(0,o.jsxs)(t.li,{children:["Use ",(0,o.jsx)(t.code,{children:"AutoConstructorAttribute"})," on the class"]}),"\n"]}),(0,o.jsxs)(t.p,{children:["By default, all ",(0,o.jsx)(t.code,{children:"readonly"})," non-",(0,o.jsx)(t.code,{children:"static"})," fields without initialization will be used. They will be injected with the same name without any leading ",(0,o.jsx)(t.code,{children:"_"}),"."]}),(0,o.jsxs)(t.p,{children:["Fields marked with ",(0,o.jsx)(t.code,{children:"AutoConstructorIgnoreAttribute"})," will be ignored."]}),(0,o.jsxs)(t.p,{children:["Use ",(0,o.jsx)(t.code,{children:"AutoConstructorInjectAttribute"})," to customize the behavior, usually when the injected parameter and the fields\ndo not have the same type. It takes three optional parameters:"]}),(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"initializer"}),": a string that will be used to initialize the field (by example ",(0,o.jsx)(t.code,{children:"myService.GetData()"}),"), default to the ",(0,o.jsx)(t.code,{children:"parameterName"})," if null or empty."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"parameterName"}),": the name of the parameter to used in the constructor  (by example ",(0,o.jsx)(t.code,{children:"myService"}),"), default to the field name trimmed if null or empty."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"injectedType"}),": the type of the parameter to used in the constructor  (by example ",(0,o.jsx)(t.code,{children:"IMyService"}),"), default to the field type if null."]}),"\n"]}),(0,o.jsx)(t.p,{children:"If no parameters are provided, the behavior will be the same as without the attribute. Using the attribute on a field that would not be injected otherwise\nwon't make the field injectable."}),(0,o.jsxs)(t.p,{children:["When using ",(0,o.jsx)(t.code,{children:"AutoConstructorInjectAttribute"}),", the parameter name can be shared across multiple fields,\nand even use a parameter from another field not annotated with ",(0,o.jsx)(t.code,{children:"AutoConstructorInjectAttribute"}),", but type must match."]}),(0,o.jsx)(t.h3,{id:"constructor-accessibility",children:"Constructor accessibility"}),(0,o.jsxs)(t.p,{children:["Constructor accessibility can be changed using the optionnal parameter ",(0,o.jsx)(t.code,{children:"accessibility"})," on ",(0,o.jsx)(t.code,{children:"AutoConstructorAttribute"})," (like ",(0,o.jsx)(t.code,{children:'[AutoConstructor("internal")]'}),").\nThe default is ",(0,o.jsx)(t.code,{children:"public"})," and it can be set to one of the following values:"]}),(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"public"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"private"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"protected"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"internal"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"protected internal"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:"private protected"})}),"\n"]}),(0,o.jsx)(t.h3,{id:"initializer-method",children:"Initializer method"}),(0,o.jsxs)(t.p,{children:["It is possible to add a method call at the end of the constructor. To do this, the attribute ",(0,o.jsx)(t.code,{children:"AutoConstructorInitializer"})," can be added to\na parameterless method that returns void. This will generate a call to the method at the end."]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:"[AutoConstructor]\ninternal partial class Test\n{\n    private readonly int _t;\n\n    [AutoConstructorInitializer]\n    public void Initializer()\n    {\n    }\n}\n"})}),(0,o.jsx)(t.p,{children:"will generate"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:"public Test(int t)\n{\n    this._t = t;\n\n    this.Initializer();\n}\n"})}),(0,o.jsx)(t.h3,{id:"properties-injection",children:"Properties injection"}),(0,o.jsxs)(t.p,{children:["Get-only properties (",(0,o.jsx)(t.code,{children:"public int Property { get; }"}),") are injected by the generator by default.\nNon get-only properties (",(0,o.jsx)(t.code,{children:"public int Property { get; set;}"}),") are injected only if marked with (",(0,o.jsx)(t.code,{children:"[field: AutoConstructorInject]"}),") attributte.\nThe behavior of the injection can be modified using ",(0,o.jsx)(t.a,{href:"https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/proposals/csharp-7.3/auto-prop-field-attrs",children:"auto-implemented property field-targeted attributes"})," on its backing field. The following code show an injected get-only property with a custom injecter:"]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'[field: AutoConstructorInject(initializer: "injected.ToString()", injectedType: typeof(int), parameterName: "injected")]\npublic int Property { get; }\n'})}),(0,o.jsx)(t.p,{children:"\u26a0\ufe0f The compiler support for auto-implemented property field-targeted attributes is not perfect (as described in the link above), and Roslyn analyzers are not running on backings fields so some warnings may not be reported."}),(0,o.jsx)(t.h2,{id:"configuration",children:"Configuration"}),(0,o.jsxs)(t.h3,{id:"generating-argumentnullexception",children:["Generating ",(0,o.jsx)(t.code,{children:"ArgumentNullException"})]}),(0,o.jsxs)(t.p,{children:["By default, null checks with ",(0,o.jsx)(t.code,{children:"ArgumentNullException"})," are not generated when needed.\nTo enable this behavior, set ",(0,o.jsx)(t.code,{children:"AutoConstructor_DisableNullChecking"})," to ",(0,o.jsx)(t.code,{children:"false"})," in the project file:"]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-xml",children:"<AutoConstructor_DisableNullChecking>false</AutoConstructor_DisableNullChecking>\n"})}),(0,o.jsx)(t.h3,{id:"generating-xml-documentation-comment",children:"Generating XML documentation comment"}),(0,o.jsxs)(t.p,{children:["By default, no XML documentation comment will be generated for the constructor.\nTo enable this behavior, set ",(0,o.jsx)(t.code,{children:"AutoConstructor_GenerateConstructorDocumentation"})," to ",(0,o.jsx)(t.code,{children:"true"})," in the project file:"]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-xml",children:"<AutoConstructor_GenerateConstructorDocumentation>true</AutoConstructor_GenerateConstructorDocumentation>\n"})}),(0,o.jsx)(t.p,{children:"This will generate a default comment like this one, with each parameter reusing the corresponding field summary if available, and the parameter name otherwise:"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-c#",children:'/// <summary>\n/// Initializes a new instance of the Test class.\n/// </summary>\n/// <param name=""t1"">Some field.</param>\n/// <param name=""t2"">t2</param>\n'})}),(0,o.jsxs)(t.p,{children:["By using the ",(0,o.jsx)(t.code,{children:"AutoConstructor_ConstructorDocumentationComment"})," property, you can configure the comment message:"]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-xml",children:"<AutoConstructor_ConstructorDocumentationComment>Some comment for the {0} class.</AutoConstructor_ConstructorDocumentationComment>\n"})}),(0,o.jsx)(t.p,{children:"This will generate the following code:"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-c#",children:'/// <summary>\n/// Some comment for the Test class.\n/// </summary>\n/// <param name=""t1"">Some field.</param>\n/// <param name=""t2"">t2</param>\n'})}),(0,o.jsx)(t.h2,{id:"samples-describing-some-cases",children:"Samples describing some cases"}),(0,o.jsx)(t.h3,{id:"sample-for-fields",children:"Sample for fields"}),(0,o.jsx)(t.p,{children:"The following code"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'[AutoConstructor]\npartial class Test\n{\n    private readonly string _name;\n\n    // Won\'t be injected\n    private readonly Uri _uri = new Uri("/non-modified", UriKind.Relative);\n\n    // Won\'t be injected\n    [AutoConstructorIgnore]\n    private readonly DateTime _dateNotTaken;\n\n    // Won\'t be injected because not readonly. Attribute would be taken into account if this were a property, not a field.\n    [AutoConstructorInject]\n    private int  _stuff;\n\n    // Won\'t be injected\n    private int? _toto;\n\n    // Support for nullables\n    private readonly DateTime? _date;\n\n    // Support for generics\n    private readonly List<DateTime> _items;\n\n    // Inject with custom initializer\n    [AutoConstructorInject("guid.ToString()", "guid", typeof(Guid))]\n    private readonly string _guidString;\n\n    // Use existing parameter defined with AutoConstructorInject\n    [AutoConstructorInject("guid.ToString().Length", "guid", typeof(Guid))]\n    private readonly int _guidLength;\n\n    // Use existing parameter from a basic injection\n    [AutoConstructorInject("name.ToUpper()", "name", typeof(string))]\n    private readonly string _nameShared;\n}\n'})}),(0,o.jsx)(t.p,{children:"will generate"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:"public Test(string name, System.DateTime? date, System.Collections.Generic.List<System.DateTime> items, System.Guid guid)\n{\n    this._name = name ?? throw new System.ArgumentNullException(nameof(name));\n    this._date = date ?? throw new System.ArgumentNullException(nameof(date));\n    this._items = items ?? throw new System.ArgumentNullException(nameof(items));\n    this._guidString = guid.ToString() ?? throw new System.ArgumentNullException(nameof(guid));\n    this._guidLength = guid.ToString().Length;\n    this._nameShared = name.ToUpper() ?? throw new System.ArgumentNullException(nameof(name));\n}\n"})}),(0,o.jsx)(t.h3,{id:"sample-for-get-only-properties",children:"Sample for get-only properties"}),(0,o.jsx)(t.p,{children:"The following code"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'[AutoConstructor]\npublic partial class Test\n{\n    [field: AutoConstructorInject]\n    public int Injected { get; }\n\n    public int AlsoInjectedEvenWhenMissingAttribute { get; }\n\n    /// <summary>\n    /// Some property.\n    /// </summary>\n    [field: AutoConstructorInject]\n    public int InjectedWithDocumentation { get; }\n\n    [field: AutoConstructorInject]\n    public int InjectedBecauseExplicitInjection { get; set; }\n\n    [field: AutoConstructorInject]\n    public static int NotInjectedBecauseStatic { get; }\n\n    [field: AutoConstructorInject]\n    public int NotInjectedBecauseInitialized { get; } = 2;\n\n    [field: AutoConstructorIgnore]\n    public int NotInjectedBecauseHasIgnoreAttribute { get; }\n\n    [field: AutoConstructorInject(initializer: ""injected.ToString()"", injectedType: typeof(int), parameterName: ""injected"")]\n    public string InjectedWithoutCreatingAParam { get; }\n}\n'})}),(0,o.jsx)(t.p,{children:"will generate"}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:' partial class Test\n    {\n        /// <summary>\n        /// Initializes a new instance of the Test class.\n        /// </summary>\n        /// <param name=""injected"">injected</param>\n        /// <param name=""injectedWithDocumentation"">Some property.</param>\n        /// <param name=""injectedBecauseExplicitInjection"">injectedBecauseExplicitInjection</param>\n        /// <param name=""alsoInjectedEvenWhenMissingAttribute"">alsoInjectedEvenWhenMissingAttribute</param>\n        public Test(int injected, int injectedWithDocumentation, int injectedBecauseExplicitInjection, int alsoInjectedEvenWhenMissingAttribute)\n        {\n            this.Injected = injected;\n            this.InjectedWithDocumentation = injectedWithDocumentation;\n            this.InjectedBecauseExplicitInjection = injectedBecauseExplicitInjection;\n            this.AlsoInjectedEvenWhenMissingAttribute = alsoInjectedEvenWhenMissingAttribute;\n            this.InjectedWithoutCreatingAParam = injected.ToString() ?? throw new System.ArgumentNullException(nameof(injected));\n        }\n    }\n'})}),(0,o.jsx)(t.h2,{id:"diagnostics",children:"Diagnostics"}),(0,o.jsx)(t.h3,{id:"acons01",children:"ACONS01"}),(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"AutoConstructor"})," attribute is used on a class that is not partial."]}),(0,o.jsx)(t.h3,{id:"acons02",children:"ACONS02"}),(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"AutoConstructor"})," attribute is used on a class without fields to inject."]}),(0,o.jsx)(t.h3,{id:"acons03",children:"ACONS03"}),(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"AutoConstructorIgnore"})," attribute is used on a field that won't already be processed."]}),(0,o.jsx)(t.h3,{id:"acons04",children:"ACONS04"}),(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"AutoConstructorInject"})," attribute is used on a field that won't already be processed."]}),(0,o.jsx)(t.h3,{id:"acons05",children:"ACONS05"}),(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"AutoConstructorIgnore"})," or ",(0,o.jsx)(t.code,{children:"AutoConstructorInject"})," are used on a class without the ",(0,o.jsx)(t.code,{children:"AutoConstructor"})," attribute."]}),(0,o.jsx)(t.h3,{id:"acons06",children:"ACONS06"}),(0,o.jsxs)(t.p,{children:["A type specified in ",(0,o.jsx)(t.code,{children:"AutoConstructorInject"})," attribute does not match the type of another parameter with the same name."]}),(0,o.jsxs)(t.p,{children:["In the following sample, both fields will be injected with ",(0,o.jsx)(t.code,{children:"guid"})," as parameter name, but one of type ",(0,o.jsx)(t.code,{children:"string"})," and the other of type ",(0,o.jsx)(t.code,{children:"Guid"}),",\npreventing the generator from running."]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'public partial class Test\n{\n    [AutoConstructorInject("guid.ToString()", "guid", typeof(Guid))]\n    private readonly string _guid2;\n    private readonly string _guid;\n}\n'})}),(0,o.jsx)(t.h3,{id:"acons07",children:"ACONS07"}),(0,o.jsxs)(t.p,{children:["The accessibility defined in the ",(0,o.jsx)(t.code,{children:"AutoConstructor"})," attribute is not an allowed value."]}),(0,o.jsx)(t.h3,{id:"acons08",children:"ACONS08"}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"AutoConstructorInitializer"})," attribute used on multiple methods."]}),(0,o.jsx)(t.h3,{id:"acons09",children:"ACONS09"}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"AutoConstructorInitializer"})," attribute used on a method not returning void."]}),(0,o.jsx)(t.h3,{id:"acons10",children:"ACONS10"}),(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"AutoConstructorInitializer"})," attribute used on a method with parameters."]})]}),"\n",(0,o.jsx)(t.h3,{id:"about",children:"About"}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"Generating constructor for class with many properties"})}),"\n",(0,o.jsx)(t.h2,{id:"how-to-use-1",children:"How to use"}),"\n",(0,o.jsx)(t.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,o.jsxs)(s.A,{children:[(0,o.jsxs)(a.A,{value:"csproj",label:"CSharp Project",children:[(0,o.jsxs)(t.p,{children:["This is the CSharp Project that references ",(0,o.jsx)(t.strong,{children:"AutoConstructor"})]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-xml",metastring:"showLineNumbers {16}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\n\t<ItemGroup>\n\t  <PackageReference Include="AutoConstructor" Version="4.1.1">\n\t    <PrivateAssets>all</PrivateAssets>\n\t    <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n\t  </PackageReference>\n\t</ItemGroup>\n</Project>\n\n'})})]}),(0,o.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoConstructor\\src\\ConstructorDemo\\Program.cs",label:"Program.cs",children:[(0,o.jsxs)(t.p,{children:["This is the use of ",(0,o.jsx)(t.strong,{children:"AutoConstructor"})," in ",(0,o.jsx)(t.em,{children:"Program.cs"})]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using QuickConstructorDemo;\n\nvar p = new Person("Andrei", "Ignat");\n\nConsole.WriteLine(p.FullName());\n'})})]}),(0,o.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoConstructor\\src\\ConstructorDemo\\Person.cs",label:"Person.cs",children:[(0,o.jsxs)(t.p,{children:["This is the use of ",(0,o.jsx)(t.strong,{children:"AutoConstructor"})," in ",(0,o.jsx)(t.em,{children:"Person.cs"})]}),(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'namespace QuickConstructorDemo;\n\n[AutoConstructor]\ninternal partial class Person\n{\n    private readonly string FirstName;\n    private readonly string? LastName;\n    \n    public string FullName() => $"{FirstName} {LastName}";\n    \n}\n\n'})})]})]}),"\n",(0,o.jsx)(t.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,o.jsx)(t.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,o.jsxs)(s.A,{children:[(0,o.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoConstructor\\src\\ConstructorDemo\\obj\\GX\\AutoConstructor.Generator\\AutoConstructor.Generator.AutoConstructorGenerator\\AutoConstructorAttribute.cs",label:"AutoConstructorAttribute.cs",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by the AutoConstructor source generator.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\n[System.AttributeUsage(System.AttributeTargets.Class, Inherited = false, AllowMultiple = false)]\ninternal sealed class AutoConstructorAttribute : System.Attribute\n{\n}\n\n"})})}),(0,o.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoConstructor\\src\\ConstructorDemo\\obj\\GX\\AutoConstructor.Generator\\AutoConstructor.Generator.AutoConstructorGenerator\\AutoConstructorIgnoreAttribute.cs",label:"AutoConstructorIgnoreAttribute.cs",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by the AutoConstructor source generator.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\n[System.AttributeUsage(System.AttributeTargets.Field, Inherited = false, AllowMultiple = false)]\ninternal sealed class AutoConstructorIgnoreAttribute : System.Attribute\n{\n}\n\n"})})}),(0,o.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoConstructor\\src\\ConstructorDemo\\obj\\GX\\AutoConstructor.Generator\\AutoConstructor.Generator.AutoConstructorGenerator\\AutoConstructorInjectAttribute.cs",label:"AutoConstructorInjectAttribute.cs",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by the AutoConstructor source generator.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\n[System.AttributeUsage(System.AttributeTargets.Field, Inherited = false, AllowMultiple = false)]\ninternal sealed class AutoConstructorInjectAttribute : System.Attribute\n{\n    public AutoConstructorInjectAttribute(string initializer = null, string parameterName = null, System.Type injectedType = null)\n    {\n        Initializer = initializer;\n        ParameterName = parameterName;\n        InjectedType = injectedType;\n    }\n\n    public string Initializer { get; }\n\n    public string ParameterName { get; }\n\n    public System.Type InjectedType { get; }\n}\n\n"})})}),(0,o.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoConstructor\\src\\ConstructorDemo\\obj\\GX\\AutoConstructor.Generator\\AutoConstructor.Generator.AutoConstructorGenerator\\QuickConstructorDemo.Person.g.cs",label:"QuickConstructorDemo.Person.g.cs",children:(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by the AutoConstructor source generator.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n#nullable enable\nnamespace QuickConstructorDemo\n{\n    partial class Person\n    {\n        public Person(string FirstName, string? LastName)\n        {\n            this.FirstName = FirstName;\n            this.LastName = LastName;\n        }\n    }\n}\n\n"})})})]}),"\n",(0,o.jsx)(t.h2,{id:"useful",children:"Useful"}),"\n",(0,o.jsx)(t.h3,{id:"download-example-net--c-",children:"Download Example (.NET  C# )"}),"\n",(0,o.jsx)(t.admonition,{type:"tip",children:(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(78229).A+"",children:"Download Example project AutoConstructor "})})}),"\n",(0,o.jsx)(t.h3,{id:"share-autoconstructor",children:"Share AutoConstructor"}),"\n",(0,o.jsxs)("ul",{children:[(0,o.jsx)("li",{children:(0,o.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoConstructor&quote=AutoConstructor",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,o.jsx)("li",{children:(0,o.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoConstructor&text=AutoConstructor:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoConstructor",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,o.jsx)("li",{children:(0,o.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoConstructor&title=AutoConstructor",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,o.jsx)("li",{children:(0,o.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoConstructor&title=AutoConstructor&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoConstructor",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/AutoConstructor",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/AutoConstructor"})}),"\n",(0,o.jsx)(t.h3,{id:"in-the-same-category-constructor---6-other-generators",children:"In the same category (Constructor) - 6 other generators"}),"\n",(0,o.jsx)(t.h4,{id:"autoctor",children:(0,o.jsx)(t.a,{href:"/docs/AutoCtor",children:"AutoCtor"})}),"\n",(0,o.jsx)(t.h4,{id:"autodeconstruct",children:(0,o.jsx)(t.a,{href:"/docs/AutoDeconstruct",children:"AutoDeconstruct"})}),"\n",(0,o.jsx)(t.h4,{id:"constructorgenerator",children:(0,o.jsx)(t.a,{href:"/docs/ConstructorGenerator",children:"ConstructorGenerator"})}),"\n",(0,o.jsx)(t.h4,{id:"primaryparameter",children:(0,o.jsx)(t.a,{href:"/docs/PrimaryParameter",children:"PrimaryParameter"})}),"\n",(0,o.jsx)(t.h4,{id:"quickconstructor",children:(0,o.jsx)(t.a,{href:"/docs/QuickConstructor",children:"QuickConstructor"})}),"\n",(0,o.jsx)(t.h4,{id:"sourcedepend",children:(0,o.jsx)(t.a,{href:"/docs/sourcedepend",children:"sourcedepend"})})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},78229:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/files/AutoConstructor-09386946b2962476a8431da141b3c2b6.zip"}}]);