"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[9669],{29888:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/files/AutoInterface-7da49284d68648f06eb831ec8a2a3855.zip"},43069:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>m});const a=JSON.parse('{"id":"RSCG-Examples/AutoInterface","title":"207 - AutoInterface","description":"generating interface from a class","source":"@site/docs/RSCG-Examples/AutoInterface.md","sourceDirName":"RSCG-Examples","slug":"/AutoInterface","permalink":"/RSCG_Examples/v2/docs/AutoInterface","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/RSCG-Examples/AutoInterface.md","tags":[],"version":"current","sidebarPosition":2070,"frontMatter":{"sidebar_position":2070,"title":"207 - AutoInterface","description":"generating interface from a class","slug":"/AutoInterface"},"sidebar":"tutorialSidebar","previous":{"title":"206 - ShadowWriterBuilder","permalink":"/RSCG_Examples/v2/docs/ShadowWriterBuilder"},"next":{"title":"208 - AsyncIt","permalink":"/RSCG_Examples/v2/docs/AsyncIt"}}');var r=n(74848),i=n(28453),s=n(11470),l=n(19365),c=n(14252);const o={sidebar_position:2070,title:"207 - AutoInterface",description:"generating interface from a class",slug:"/AutoInterface"},u="AutoInterface  by Black White Yoshi",d={},m=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Examples",id:"examples",level:2},{value:"AutoInterfaceAttribute on struct",id:"autointerfaceattribute-on-struct",level:3},{value:"AutoInterfaceAttribute with all kinds of members",id:"autointerfaceattribute-with-all-kinds-of-members",level:3},{value:"AutoInterfaceAttribute with explicit interface specifier",id:"autointerfaceattribute-with-explicit-interface-specifier",level:3},{value:"multiple AutoInterfaceAttributes on same class",id:"multiple-autointerfaceattributes-on-same-class",level:3},{value:"AutoInterfaceAttribute with summary documentation",id:"autointerfaceattribute-with-summary-documentation",level:3},{value:"AutoInterfaceAttribute with generic class",id:"autointerfaceattribute-with-generic-class",level:3},{value:"Parameter",id:"parameter",level:2},{value:"Name",id:"name",level:3},{value:"Modifier",id:"modifier",level:3},{value:"Namespace",id:"namespace",level:3},{value:"Inheritance",id:"inheritance",level:3},{value:"Nested",id:"nested",level:3},{value:"StaticMembers",id:"staticmembers",level:3},{value:"Access Modifier",id:"access-modifier",level:3},{value:"IgnoreAutoInterfaceAttribute",id:"ignoreautointerfaceattribute",level:3},{value:"Disable Attribute Generation",id:"disable-attribute-generation",level:2},{value:"Remarks",id:"remarks",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share AutoInterface",id:"share-autointerface",level:3},{value:"In the same category (Interface) - 12 other generators",id:"in-the-same-category-interface---12-other-generators",level:3},{value:"Biwen.AutoClassGen",id:"biwenautoclassgen",level:4},{value:"CopyCat",id:"copycat",level:4},{value:"Farskeptic.AutoCompose",id:"farskepticautocompose",level:4},{value:"MakeInterface.Generator",id:"makeinterfacegenerator",level:4},{value:"Matryoshki",id:"matryoshki",level:4},{value:"Minerals.AutoInterfaces",id:"mineralsautointerfaces",level:4},{value:"NetAutomaticInterface",id:"netautomaticinterface",level:4},{value:"ProxyGen",id:"proxygen",level:4},{value:"Roozie.AutoInterface",id:"roozieautointerface",level:4},{value:"RSCG_CompositeProvider",id:"rscg_compositeprovider",level:4},{value:"rscg_Interface_to_null_object",id:"rscg_interface_to_null_object",level:4},{value:"RSCG_Static",id:"rscg_static",level:4}];function p(e){const t={a:"a",admonition:"admonition",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"autointerface--by-black-white-yoshi",children:"AutoInterface  by Black White Yoshi"})}),"\n",(0,r.jsx)(c.A,{toc:m}),"\n",(0,r.jsx)(t.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://www.nuget.org/packages/AutoInterface/",children:(0,r.jsx)(t.img,{src:"https://img.shields.io/nuget/dt/AutoInterface?label=AutoInterface",alt:"Nuget"})}),"\n",(0,r.jsx)(t.a,{href:"https://github.com/BlackWhiteYoshi/AutoInterface",children:(0,r.jsx)(t.img,{src:"https://img.shields.io/github/last-commit/BlackWhiteYoshi/AutoInterface?label=updated",alt:"GitHub last commit"})}),"\n",(0,r.jsx)(t.img,{src:"https://img.shields.io/github/stars/BlackWhiteYoshi/AutoInterface?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,r.jsx)(t.h2,{id:"details",children:"Details"}),"\n",(0,r.jsx)(t.h3,{id:"info",children:"Info"}),"\n",(0,r.jsxs)(t.admonition,{type:"info",children:[(0,r.jsxs)(t.p,{children:["Name: ",(0,r.jsx)(t.strong,{children:"AutoInterface"})]}),(0,r.jsx)(t.p,{children:"AutoInterface is a source generator that generates an interface based on your class/struct. Basically, you write your class and get the corresponding interface for free."}),(0,r.jsx)(t.p,{children:"Author: Black White Yoshi"}),(0,r.jsxs)(t.p,{children:["NuGet:\n",(0,r.jsx)(t.em,{children:(0,r.jsx)(t.a,{href:"https://www.nuget.org/packages/AutoInterface/",children:"https://www.nuget.org/packages/AutoInterface/"})})]}),(0,r.jsxs)(t.p,{children:["You can find more details at ",(0,r.jsx)(t.a,{href:"https://github.com/BlackWhiteYoshi/AutoInterface",children:"https://github.com/BlackWhiteYoshi/AutoInterface"})]}),(0,r.jsxs)(t.p,{children:["Source: ",(0,r.jsx)(t.a,{href:"https://github.com/BlackWhiteYoshi/AutoInterface",children:"https://github.com/BlackWhiteYoshi/AutoInterface"})]})]}),"\n",(0,r.jsx)(t.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,r.jsxs)(t.admonition,{type:"note",children:[(0,r.jsx)(t.h1,{id:"autointerface",children:"AutoInterface"}),(0,r.jsxs)(t.p,{children:["AutoInterface is a source generator that generates an interface based on your class/struct.",(0,r.jsx)(t.br,{}),"\n","Basically, you write your class and get the corresponding interface for free."]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic class Example : IExample {\n    public int Number { get; private set; }\n\n    public Example() {\n        ResetNumber();\n    }\n\n    /// <summary>\n    /// some method description\n    /// </summary>\n    public int AddToNumber(int increase) {\n        Number += increase;\n        return Number;\n    }\n\n    private void ResetNumber() => Number = 0;\n}\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample {\n    int Number { get; }\n\n    /// <summary>\n    /// some method description\n    /// </summary>\n    int AddToNumber(int increase);\n}\n"})}),(0,r.jsx)(t.p,{children:"AutoInterface supports:"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#autointerfaceattribute-on-struct",children:"classes, records and structs"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#autointerfaceattribute-with-all-kinds-of-members",children:"all members (Method, Property, Indexer, Event)"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#autointerfaceattribute-with-explicit-interface-specifier",children:"also explicit Interface members"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#multiple-autointerfaceattributes-on-same-class",children:"multiple attributes on same class"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#autointerfaceattribute-with-summary-documentation",children:"summary of class/struct and members"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#autointerfaceattribute-with-generic-class",children:"generic"})}),"\n",(0,r.jsxs)(t.li,{children:["parameters for","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#name",children:"interface name"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#modifier",children:"interface modifier"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#namespace",children:"interface namespace"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#inheritance",children:"interface inheritance"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#nested",children:"interface nesting"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#staticmembers",children:"static members as static abstract"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#access-modifier",children:"access modifier"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"#ignoreautointerfaceattribute",children:"ignore specific members"})}),"\n"]}),"\n"]}),"\n"]}),(0,r.jsx)(t.h2,{id:"examples",children:"Examples"}),(0,r.jsx)(t.h3,{id:"autointerfaceattribute-on-struct",children:"AutoInterfaceAttribute on struct"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic struct Point {\n    public int X { get; private set; }\n    public int Y { get; private set; }\n\n    public Point(int x, int y) => (X, Y) = (x, y);\n}\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IPoint {\n    int X { get; }\n\n    int Y { get; }\n}\n"})}),(0,r.jsx)(t.h3,{id:"autointerfaceattribute-with-all-kinds-of-members",children:"AutoInterfaceAttribute with all kinds of members"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic sealed class FullExample {\n    public void SomeMethod() { }\n\n    public int SomeProperty { get; init; }\n\n    public int this[int i] => i;\n\n    public event Action? someEvent;\n\n    public event Action SomeEvent { add { } remove { } }\n}\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IFullExample {\n    void SomeMethod();\n\n    int SomeProperty { get; init; }\n\n    int this[int i] { get; }\n\n    event Action? someEvent;\n\n    event Action SomeEvent;\n}\n"})}),(0,r.jsx)(t.h3,{id:"autointerfaceattribute-with-explicit-interface-specifier",children:"AutoInterfaceAttribute with explicit interface specifier"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic sealed class ExplicitExample : IExplicitExample {\n    void IExplicitExample.SomeMethod() { }\n\n    int IExplicitExample.SomeProperty { get; init; }\n\n    int IExplicitExample.this[int i] => i;\n\n    event Action IExplicitExample.SomeEvent { add { } remove { } }\n}\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExplicitExample {\n    void SomeMethod();\n\n    int SomeProperty { get; init; }\n\n    int this[int i] { get; }\n\n    event Action SomeEvent;\n}\n"})}),(0,r.jsx)(t.h3,{id:"multiple-autointerfaceattributes-on-same-class",children:"multiple AutoInterfaceAttributes on same class"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:'using AutoInterfaceAttributes;\n\n[AutoInterface(Name = "IMultipleExample1")]\n[AutoInterface(Name = "IMultipleExample2")]\npublic sealed class MultipleExample : IMultipleExample1, IMultipleExample2 {\n    public void SomeMethod() { }\n\n    int IMultipleExample1.PropertyFirst { get; set; }\n\n    string IMultipleExample2.PropertySecond { get; set; }\n}\n'})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IMultipleExample1 {\n    void SomeMethod();\n\n    int PropertyFirst { get; set; }\n}\n\n...\n\n// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IMultipleExample2 {\n    void SomeMethod();\n\n    string PropertySecond { get; set; }\n}\n"})}),(0,r.jsx)(t.h3,{id:"autointerfaceattribute-with-summary-documentation",children:"AutoInterfaceAttribute with summary documentation"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"using AutoInterfaceAttributes;\n\n/// <summary>\n/// my class description\n/// </summary>\n[AutoInterface]\npublic sealed class SummaryExample {\n    /// <summary>\n    /// some method description\n    /// </summary>\n    public void SomeMethod() { }\n}\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\n/// <summary>\n/// my class description\n/// </summary>\npublic partial interface ISummaryExample {\n    /// <summary>\n    /// some method description\n    /// </summary>\n    void SomeMethod();\n}\n"})}),(0,r.jsx)(t.h3,{id:"autointerfaceattribute-with-generic-class",children:"AutoInterfaceAttribute with generic class"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic sealed class GenericExample<T> {\n    public T Identity(T parameter) => parameter;\n}\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IGenericExample<T> {\n    T Identity(T parameter);\n}\n"})}),(0,r.jsx)(t.h2,{id:"parameter",children:"Parameter"}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.h3,{id:"name",children:"Name"}),"\n"]}),"\n"]}),(0,r.jsxs)(t.p,{children:["Type: string",(0,r.jsx)(t.br,{}),"\n",'Default: $"I{ClassName}"']}),(0,r.jsx)(t.p,{children:"If you want another name for your interface, put it here."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:'using AutoInterfaceAttributes;\n\n[AutoInterface(Name = "NewName")]\npublic sealed class Example;\n'})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface NewName {}\n"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.h3,{id:"modifier",children:"Modifier"}),"\n"]}),"\n"]}),(0,r.jsxs)(t.p,{children:["Type: string",(0,r.jsx)(t.br,{}),"\n",'Default: "public partial"']}),(0,r.jsx)(t.p,{children:"If you want another visible modifier or make the interface non-partial or unsafe, you can do this here."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:'using AutoInterfaceAttributes;\n\n[AutoInterface(Modifier = "internal")]\npublic sealed class Example;\n'})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\ninternal interface IExample {}\n"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.h3,{id:"namespace",children:"Namespace"}),"\n"]}),"\n"]}),(0,r.jsxs)(t.p,{children:["Type: string",(0,r.jsx)(t.br,{}),"\n",'Default: $"{ClassNamespace}"']}),(0,r.jsxs)(t.p,{children:["When the generated interface should live in a specific namespace, you can specify it here.",(0,r.jsx)(t.br,{}),"\n","For global namespace, use an empty string."]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:'using AutoInterfaceAttributes;\n\nnamespace MyApp.Core;\n\n[AutoInterface(Namespace = "MyApp.Utils")]\npublic sealed class Example;\n'})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\nnamespace MyApp.Utils;\n\npublic partial interface IExample {}\n"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.h3,{id:"inheritance",children:"Inheritance"}),"\n"]}),"\n"]}),(0,r.jsxs)(t.p,{children:["Type: Type[]",(0,r.jsx)(t.br,{}),"\n","Default: []"]}),(0,r.jsx)(t.p,{children:"If the generated interface should inherit from one or more other interfaces, you can list them here."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"using AutoInterfaceAttributes;\n\n[AutoInterface(Inheritance = [typeof(ICore)])]\npublic sealed class Example;\n\npublic partial interface ICore { ... }\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample : ICore {}\n"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.h3,{id:"nested",children:"Nested"}),"\n"]}),"\n"]}),(0,r.jsxs)(t.p,{children:["Type: string[]",(0,r.jsx)(t.br,{}),"\n","Default: []"]}),(0,r.jsx)(t.p,{children:"When the interface should be nested inside other classes, structs or interfaces, declare them here."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:'using AutoInterfaceAttributes;\n\n[AutoInterface(Nested = ["public partial class MyWrapper", "public partial interface OuterInterface"])]\npublic sealed class Example {\n    public void SomeMethod() { }\n}\n'})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial class MyWrapper {\n    public partial interface OuterInterface {\n        public partial interface IExample {\n            void SomeMethod();\n        }\n    }\n}\n"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.h3,{id:"staticmembers",children:"StaticMembers"}),"\n"]}),"\n"]}),(0,r.jsxs)(t.p,{children:["Type: bool",(0,r.jsx)(t.br,{}),"\n","Default: false"]}),(0,r.jsxs)(t.p,{children:['Normally, static members are just ignored.\nHowever, an interface can contain static members as a "static abstract" member.',(0,r.jsx)(t.br,{}),"\n",'To accept static members to generate "static abstract" members, set this flag to true.']}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"using AutoInterfaceAttributes;\n\n[AutoInterface(StaticMembers = true)]\npublic sealed class Example {\n    public static void SomeMethod() { }\n}\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample {\n    static abstract void SomeMethod();\n}\n"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.h3,{id:"access-modifier",children:"Access Modifier"}),"\n"]}),"\n"]}),(0,r.jsxs)(t.p,{children:["When you want to set the visibility of a specific member, you can decorate it with a [AutoInterfaceVisibility...] attribute.",(0,r.jsx)(t.br,{}),"\n","There are 5 different Visibility attribute:"]}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"[AutoInterfaceVisibilityPublic]"}),"\n",(0,r.jsx)(t.li,{children:"[AutoInterfaceVisibilityInternal]"}),"\n",(0,r.jsx)(t.li,{children:"[AutoInterfaceVisibilityProtected]"}),"\n",(0,r.jsx)(t.li,{children:"[AutoInterfaceVisibilityProtectedInternal]"}),"\n",(0,r.jsx)(t.li,{children:"[AutoInterfaceVisibilityPrivateProtected]"}),"\n"]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic sealed class Example : IExample {\n    [AutoInterfaceVisibilityPublic]\n    public void PublicMethod() { }\n\n    [AutoInterfaceVisibilityInternal]\n    void IExample.InternalMethod() { }\n    \n    [AutoInterfaceVisibilityProtected]\n    void IExample.ProtectedMethod() { }\n    \n    [AutoInterfaceVisibilityProtectedInternal]\n    void IExample.ProtectedInternalMethod() { }\n    \n    [AutoInterfaceVisibilityPrivateProtected]\n    void IExample.PrivateProtectedMethod() { }\n}\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample {\n    [AutoInterfaceVisibilityPublic]\n    public void PublicMethod();\n\n    [AutoInterfaceVisibilityInternal]\n    internal void InternalMethod();\n    \n    [AutoInterfaceVisibilityProtected]\n    protected void ProtectedMethod();\n    \n    [AutoInterfaceVisibilityProtectedInternal]\n    protected internal void ProtectedInternalMethod();\n    \n    [AutoInterfaceVisibilityPrivateProtected]\n    private protected void PrivateProtectedMethod();\n}\n"})}),(0,r.jsxs)(t.p,{children:["Note:",(0,r.jsx)(t.br,{}),"\n","The access modifiers ",(0,r.jsx)(t.em,{children:"private"})," and ",(0,r.jsx)(t.em,{children:"file"})," are not possible,\nbecause ",(0,r.jsx)(t.em,{children:"private"})," members needs an implementation and ",(0,r.jsx)(t.em,{children:"file"})," members would not be visible to the outside."]}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsx)(t.h3,{id:"ignoreautointerfaceattribute",children:"IgnoreAutoInterfaceAttribute"}),"\n"]}),"\n"]}),(0,r.jsx)(t.p,{children:"When you want a specific member to be ignored by the generator, you can decorate it with [IgnoreAutoInterface]."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic sealed class Example {\n    [IgnoreAutoInterface]\n    public void SomeMethod() { }\n}\n"})}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample {}\n"})}),(0,r.jsx)(t.h2,{id:"disable-attribute-generation",children:"Disable Attribute Generation"}),(0,r.jsx)(t.p,{children:"You can disable the generation of the attributes by defining a constant for your compilation:"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-xml",children:"  <PropertyGroup>\n    <DefineConstants>AUTOINTERFACE_EXCLUDE_ATTRIBUTES</DefineConstants>\n  </PropertyGroup>\n"})}),(0,r.jsxs)(t.p,{children:["This functionality is specific for the use case when you have a project referencing another project, both projects using this generator and you have ",(0,r.jsx)("i",{children:"InternalsVisibleTo"})," enabled.\nIn that case you have the attributes defined twice in your referencing project and you get a warning about that.\nBy defining this constant in your referencing project, you prevent one generation, so the attributes are only defined once in the referenced project."]}),(0,r.jsx)(t.h2,{id:"remarks",children:"Remarks"}),(0,r.jsx)(t.p,{children:"Using-statements will always be placed on the top, so using not fully-qualified using-statements might cause compile errors."}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",children:'using AutoInterfaceAttributes;\n\nnamespace System.Collections {\n    using Generic; // <-- refers to "System.Collections.Generic"\n\n    [AutoInterface]\n    public sealed class Example;\n}\n\n\n// ...\n\n\n// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing Generic; // <-- refers to "Generic"\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample {}\n'})}),(0,r.jsx)(t.p,{children:"You also should not use not fully-qualified using-statements in the first place, because they can be ambiguous.\nBy introducing an additional namespace, the referring of a not fully-qualified using-statement might change and your application breaks at unrelated places.\nJust put your using statements at the top."})]}),"\n",(0,r.jsx)(t.h3,{id:"about",children:"About"}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:"generating interface from a class"})}),"\n",(0,r.jsx)(t.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,r.jsx)(t.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsxs)(l.A,{value:"csproj",label:"CSharp Project",children:[(0,r.jsxs)(t.p,{children:["This is the CSharp Project that references ",(0,r.jsx)(t.strong,{children:"AutoInterface"})]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-xml",metastring:"showLineNumbers {16}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\n\t<ItemGroup>\n\t  <PackageReference Include="AutoInterface" Version="2.4.0">\n\t    <PrivateAssets>all</PrivateAssets>\n\t    <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n\t  </PackageReference>\n\t</ItemGroup>\n</Project>\n\n'})})]}),(0,r.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\Program.cs",label:"Program.cs",children:[(0,r.jsxs)(t.p,{children:["This is the use of ",(0,r.jsx)(t.strong,{children:"AutoInterface"})," in ",(0,r.jsx)(t.em,{children:"Program.cs"})]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using NullInterface;\n\nConsole.WriteLine("Hello, World!");\n\nConsole.WriteLine("Hello, World!");\nIDepartment department = new Department();\ndepartment.Name = "IT";\nIEmployee employee = new Employee();\nemployee.FirstName = "Andrei";\nemployee.Department = department;\nConsole.WriteLine(employee.FirstName);\nConsole.WriteLine(employee.Department.Name);\nConsole.WriteLine(employee.GetFullNameAndDepartment(" - "));\n\n'})})]}),(0,r.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\Department.cs",label:"Department.cs",children:[(0,r.jsxs)(t.p,{children:["This is the use of ",(0,r.jsx)(t.strong,{children:"AutoInterface"})," in ",(0,r.jsx)(t.em,{children:"Department.cs"})]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\n\nusing AutoInterfaceAttributes;\n\nnamespace NullInterface;\n\n[AutoInterface]\npublic class Department : IDepartment\n{\n    public string Name { get; set; } = string.Empty;\n}\n\n"})})]}),(0,r.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\Employee.cs",label:"Employee.cs",children:[(0,r.jsxs)(t.p,{children:["This is the use of ",(0,r.jsx)(t.strong,{children:"AutoInterface"})," in ",(0,r.jsx)(t.em,{children:"Employee.cs"})]}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'\n\nusing AutoInterfaceAttributes;\n\nnamespace NullInterface;\n\n\n    [AutoInterface]\npublic class Employee: IEmployee\n{\n    public string FirstName { get; set; } = string.Empty;\n    public string LastName { get; set; } = string.Empty;\n    public IDepartment Department { get; set; }\n    public string GetFullName()=> $"{FirstName} {LastName}";\n\n    public string GetFullNameAndDepartment(string separator)=> $"{GetFullName()}{separator}{ Department?.Name}";\n    \n}\n\n'})})]})]}),"\n",(0,r.jsx)(t.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,r.jsx)(t.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceAttribute.g.cs",label:"AutoInterfaceAttribute.g.cs",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Generates an interface for the decorated class/struct.\n/// </summary>\n[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = true)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceAttribute : Attribute {\n    /// <summary>\n    /// <para>The name of the generated interface.</para>\n    /// <para>Default is "I{ClassName}"</para>\n    /// </summary>\n    public string Name { get; init; }\n\n    /// <summary>\n    /// <para>The modifier(s) for the interface.</para>\n    /// <para>Deault is "public partial"</para>\n    /// </summary>\n    public string Modifier { get; init; }\n\n    /// <summary>\n    /// <para>The namespace declaration for the interface.</para>\n    /// <para>If empty string, no namespace directive will be used (global namespace).<br />\n    /// Default (if not present) it will be mapped to the same namespace as the namespace of the class/struct.</para>\n    /// </summary>\n    public string Namespace { get; init; }\n\n    /// <summary>\n    /// <para>interface inheritance: Name(s) of interfaces this interface will inherit.</para>\n    /// <para>Default is Array.Empty</para>\n    /// </summary>\n    public Type[] Inheritance { get; init; }\n\n    /// <summary>\n    /// <para>\n    /// The Classes, structs or interfaces containing the generated interface.<br />\n    /// e.g. ["public sealed partial class Example"] will wrap the interface with that expression.\n    /// </para>\n    /// <para>Default is Array.Empty</para>\n    /// </summary>\n    public string[] Nested { get; init; }\n\n    /// <summary>\n    /// <para>If enabled, static members get accepted and are generating "static abstract" members.</para>\n    /// <para>Default is false</para>\n    /// </summary>\n    public bool StaticMembers { get; init; }\n}\n\n#endif\n\n'})})}),(0,r.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceVisibilityInternalAttribute.g.cs",label:"AutoInterfaceVisibilityInternalAttribute.g.cs",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Adds a "internal" access modifier to the interface member.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceVisibilityInternal : Attribute { }\n\n#endif\n\n'})})}),(0,r.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceVisibilityPrivateProtectedAttribute.g.cs",label:"AutoInterfaceVisibilityPrivateProtectedAttribute.g.cs",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Adds a "private protected" access modifier to the interface member.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceVisibilityPrivateProtected : Attribute { }\n\n#endif\n\n'})})}),(0,r.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceVisibilityProtectedAttribute.g.cs",label:"AutoInterfaceVisibilityProtectedAttribute.g.cs",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Adds a "protected" access modifier to the interface member.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceVisibilityProtected : Attribute { }\n\n#endif\n\n'})})}),(0,r.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceVisibilityProtectedInternalAttribute.g.cs",label:"AutoInterfaceVisibilityProtectedInternalAttribute.g.cs",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Adds a "protected internal" access modifier to the interface member.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceVisibilityProtectedInternal : Attribute { }\n\n#endif\n\n'})})}),(0,r.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceVisibilityPublicAttribute.g.cs",label:"AutoInterfaceVisibilityPublicAttribute.g.cs",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Adds a "public" access modifier to the interface member.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceVisibilityPublic : Attribute { }\n\n#endif\n\n'})})}),(0,r.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\IDepartment_NullInterface.Department_Department.cs.g.cs",label:"IDepartment_NullInterface.Department_Department.cs.g.cs",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\nnamespace NullInterface;\n\npublic partial interface IDepartment {\n    string Name { get; set; }\n}\n\n"})})}),(0,r.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\IDepartment_NullInterface.Department_IDepartment.cs.g.cs",label:"IDepartment_NullInterface.Department_IDepartment.cs.g.cs",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n\n\nnamespace NullInterface;\n\npublic partial interface IDepartment {\n    string Name { get; set; }\n}\n\n"})})}),(0,r.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\IEmployee_NullInterface.Employee_Employee.cs.g.cs",label:"IEmployee_NullInterface.Employee_Employee.cs.g.cs",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\nnamespace NullInterface;\n\npublic partial interface IEmployee {\n    string FirstName { get; set; }\n\n    string LastName { get; set; }\n\n    IDepartment Department { get; set; }\n\n    string GetFullName();\n\n    string GetFullNameAndDepartment(string separator);\n}\n\n"})})}),(0,r.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\IgnoreAutoInterfaceAttribute.g.cs",label:"IgnoreAutoInterfaceAttribute.g.cs",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// The decorated member will be Ignored by the generator.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class IgnoreAutoInterfaceAttribute : Attribute { }\n\n#endif\n\n'})})})]}),"\n",(0,r.jsx)(t.h2,{id:"useful",children:"Useful"}),"\n",(0,r.jsx)(t.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,r.jsx)(t.admonition,{type:"tip",children:(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(29888).A+"",children:"Download Example project AutoInterface "})})}),"\n",(0,r.jsx)(t.h3,{id:"share-autointerface",children:"Share AutoInterface"}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface&quote=AutoInterface",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface&text=AutoInterface:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface&title=AutoInterface",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface&title=AutoInterface&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/AutoInterface",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/AutoInterface"})}),"\n",(0,r.jsx)(t.h3,{id:"in-the-same-category-interface---12-other-generators",children:"In the same category (Interface) - 12 other generators"}),"\n",(0,r.jsx)(t.h4,{id:"biwenautoclassgen",children:(0,r.jsx)(t.a,{href:"/docs/Biwen.AutoClassGen",children:"Biwen.AutoClassGen"})}),"\n",(0,r.jsx)(t.h4,{id:"copycat",children:(0,r.jsx)(t.a,{href:"/docs/CopyCat",children:"CopyCat"})}),"\n",(0,r.jsx)(t.h4,{id:"farskepticautocompose",children:(0,r.jsx)(t.a,{href:"/docs/Farskeptic.AutoCompose",children:"Farskeptic.AutoCompose"})}),"\n",(0,r.jsx)(t.h4,{id:"makeinterfacegenerator",children:(0,r.jsx)(t.a,{href:"/docs/MakeInterface.Generator",children:"MakeInterface.Generator"})}),"\n",(0,r.jsx)(t.h4,{id:"matryoshki",children:(0,r.jsx)(t.a,{href:"/docs/Matryoshki",children:"Matryoshki"})}),"\n",(0,r.jsx)(t.h4,{id:"mineralsautointerfaces",children:(0,r.jsx)(t.a,{href:"/docs/Minerals.AutoInterfaces",children:"Minerals.AutoInterfaces"})}),"\n",(0,r.jsx)(t.h4,{id:"netautomaticinterface",children:(0,r.jsx)(t.a,{href:"/docs/NetAutomaticInterface",children:"NetAutomaticInterface"})}),"\n",(0,r.jsx)(t.h4,{id:"proxygen",children:(0,r.jsx)(t.a,{href:"/docs/ProxyGen",children:"ProxyGen"})}),"\n",(0,r.jsx)(t.h4,{id:"roozieautointerface",children:(0,r.jsx)(t.a,{href:"/docs/Roozie.AutoInterface",children:"Roozie.AutoInterface"})}),"\n",(0,r.jsx)(t.h4,{id:"rscg_compositeprovider",children:(0,r.jsx)(t.a,{href:"/docs/RSCG_CompositeProvider",children:"RSCG_CompositeProvider"})}),"\n",(0,r.jsx)(t.h4,{id:"rscg_interface_to_null_object",children:(0,r.jsx)(t.a,{href:"/docs/rscg_Interface_to_null_object",children:"rscg_Interface_to_null_object"})}),"\n",(0,r.jsx)(t.h4,{id:"rscg_static",children:(0,r.jsx)(t.a,{href:"/docs/RSCG_Static",children:"RSCG_Static"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);