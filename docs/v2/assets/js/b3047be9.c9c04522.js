"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[1923],{6148:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>g,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>m,toc:()=>c});var r=t(7462),n=(t(7294),t(4137)),s=t(3992),o=t(425),p=t(8839);const i={sidebar_position:700,title:"70 - MagicMap",description:"Auto mapping",slug:"/MagicMap"},l="MagicMap  by Bramer Daniel",m={unversionedId:"RSCG-Examples/MagicMap",id:"RSCG-Examples/MagicMap",title:"70 - MagicMap",description:"Auto mapping",source:"@site/docs/RSCG-Examples/MagicMap.md",sourceDirName:"RSCG-Examples",slug:"/MagicMap",permalink:"/RSCG_Examples/v2/docs/MagicMap",draft:!1,tags:[],version:"current",sidebarPosition:700,frontMatter:{sidebar_position:700,title:"70 - MagicMap",description:"Auto mapping",slug:"/MagicMap"},sidebar:"tutorialSidebar",previous:{title:"69 - RSCG_Templating",permalink:"/RSCG_Examples/v2/docs/RSCG_Templating"},next:{title:"71 - DisposableHelpers",permalink:"/RSCG_Examples/v2/docs/DisposableHelpers"}},g={},c=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share MagicMap",id:"share-magicmap",level:3},{value:"In the same category (Mapper)",id:"in-the-same-category-mapper",level:2},{value:"AutoDTO",id:"autodto",level:3},{value:"mapperly",id:"mapperly",level:3},{value:"MapTo",id:"mapto",level:3},{value:"NextGenMapper",id:"nextgenmapper",level:3}],u={toc:c},d="wrapper";function h(e){let{components:a,...i}=e;return(0,n.kt)(d,(0,r.Z)({},u,i,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"magicmap--by-bramer-daniel"},"MagicMap  by Bramer Daniel"),(0,n.kt)(p.Z,{toc:c,mdxType:"TOCInline"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MagicMap/"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/MagicMap?label=MagicMap",alt:"Nuget"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/bramerdaniel/MagicMap"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/bramerdaniel/MagicMap?label=updated",alt:"GitHub last commit"})),"\n",(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/bramerdaniel/MagicMap?style=social",alt:"GitHub Repo stars"})),(0,n.kt)("h2",{id:"details"},"Details"),(0,n.kt)("h3",{id:"info"},"Info"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Name: ",(0,n.kt)("strong",{parentName:"p"},"MagicMap")),(0,n.kt)("p",{parentName:"admonition"},"Helper utility for generating type mapper classes and more"),(0,n.kt)("p",{parentName:"admonition"},"Author: Bramer Daniel"),(0,n.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/MagicMap/"},"https://www.nuget.org/packages/MagicMap/")),"   "),(0,n.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/bramerdaniel/MagicMap"},"https://github.com/bramerdaniel/MagicMap")),(0,n.kt)("p",{parentName:"admonition"},"Source : ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/bramerdaniel/MagicMap"},"https://github.com/bramerdaniel/MagicMap"))),(0,n.kt)("h3",{id:"original-readme"},"Original Readme"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("h1",{parentName:"admonition",id:"magicmap"},"MagicMap"),(0,n.kt)("p",{parentName:"admonition"},"SourceGenerator based package for generating boilerplate code like object mappers"),(0,n.kt)("p",{parentName:"admonition"},"This is still under construction"),(0,n.kt)("p",{parentName:"admonition"},"Mapping code from one class to another"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-C#"},"public class Person\n{\n   public string Name { get; set; } \n   public int Age { get; set; } \n}\n\npublic class PersonModel\n{\n   public string Name { get; set; }\n   public int Age { get; set; }\n}\n\n")),(0,n.kt)("p",{parentName:"admonition"},"The required code to write"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-C#"},"[TypeMapper(typeof(Person), typeof(PersonModel))]\ninternal partial class PersonMapper {  }\n")),(0,n.kt)("p",{parentName:"admonition"},"Usage"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-C#"},'var source = new Person { Name = "Peter", Age = 34 };\nvar model = source.ToPersonModel();\n'))),(0,n.kt)("h3",{id:"about"},"About"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Auto mapping ")),(0,n.kt)("h2",{id:"how-to-use"},"How to use"),(0,n.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,n.kt)(s.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,n.kt)("p",null,"This is the CSharp Project that references ",(0,n.kt)("strong",{parentName:"p"},"MagicMap")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {16}",showLineNumbers:!0,"{16}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n    <ItemGroup>\n      <PackageReference Include="MagicMap" Version="1.0.0-alpha.10" OutputItemType="Analyzer" />\n    </ItemGroup>\n\n\n</Project>\n\n'))),(0,n.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"MagicMap")," in ",(0,n.kt)("em",{parentName:"p"},"Program.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// See https://aka.ms/new-console-template for more information\nusing mapperlyDemo;\nvar p=new Person();\np.FirstName = "Andrei";\np.LastName = "Ignat";\nPersonDTO dto = p.ToPersonDTO();\nConsole.WriteLine(dto.FullName);\n\n'))),(0,n.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"MagicMap")," in ",(0,n.kt)("em",{parentName:"p"},"Person.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"\npublic class Person\n{\n    public int ID { get; set; }\n    public string? FirstName { get; set; }\n    public string? LastName { get; set; }\n}\n\n\n"))),(0,n.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\PersonDTO.cs",label:"PersonDTO.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"MagicMap")," in ",(0,n.kt)("em",{parentName:"p"},"PersonDTO.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using MagicMap;\nnamespace mapperlyDemo;\n\n[TypeMapper(typeof(Person), typeof(PersonDTO))]\ninternal partial class PersonMapper { }\npublic class PersonDTO\n{\n    public int ID { get; set; }\n    public string? FirstName { get; set; }\n    public string? LastName { get; set; }\n\n    public string FullName { \n        get\n        {\n            return FirstName + " " + LastName;\n        }\n    }\n}\n\n')))),(0,n.kt)("h3",{id:"generated-files"},"Generated Files"),(0,n.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,n.kt)(s.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\PersonMapper.generated.cs",label:"PersonMapper.generated.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace mapperlyDemo\n{\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]\n    partial class PersonMapper\n    {\n        /// <summary>\n        /// The default singleton instance of the generated type mapper.\n        /// To customize the creation of the default mapper, just implement this property in the defining partial part.\n        /// </summary>\n        public static PersonMapper Default { get; } = new PersonMapper(); \n\n\n        /// <summary>Maps all properties of the <see cref = "source"/> to the properties of the <see cref = "target"/></summary>\n        public void Map(global::Person source, global::mapperlyDemo.PersonDTO target)\n        {\n            target.ID = source.ID;\n            target.FirstName = source.FirstName;\n            target.LastName = source.LastName;\n            MapOverride(source, target);\n        }\n\n        internal global::mapperlyDemo.PersonDTO MapFrom(global::Person source)\n        {\n            var target = Default is MagicMap.ITypeFactory<global::mapperlyDemo.PersonDTO, global::Person> factory ? factory.Create(source) : new global::mapperlyDemo.PersonDTO();\n            Default.Map(source, target);\n            return target;\n        }\n\n        /// <summary>Maps all properties of the <see cref = "source"/> to the properties of the <see cref = "target"/></summary>\n        public void Map(global::mapperlyDemo.PersonDTO source, global::Person target)\n        {\n            target.ID = source.ID;\n            target.FirstName = source.FirstName;\n            target.LastName = source.LastName;\n            MapOverride(source, target);\n        }\n\n        internal global::Person MapFrom(global::mapperlyDemo.PersonDTO source)\n        {\n            var target = Default is MagicMap.ITypeFactory<global::Person, global::mapperlyDemo.PersonDTO> factory ? factory.Create(source) : new global::Person();\n            Default.Map(source, target);\n            return target;\n        }\n\n        /// <summary>Implement this method, to map the properties the mapper could not handle for any reason.</summary>\n        partial void MapOverride(global::Person source, global::mapperlyDemo.PersonDTO target); \n\n        /// <summary>Implement this method, to map the properties the mapper could not handle for any reason.</summary>\n        partial void MapOverride(global::mapperlyDemo.PersonDTO source, global::Person target); \n\n    }\n}\n\n'))),(0,n.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\PersonMapperExtensions.generated.cs",label:"PersonMapperExtensions.generated.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace mapperlyDemo\n{\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]\n    internal static partial class PersonMapperExtensions\n    {\n        /// <summary>\n        /// The instance of the <see cref = "PersonMapper"/> all extension methods use.\n        /// You can customize this by implementing this property in your own partial implementation of the extensions class.\n        /// </summary>\n        private static global::mapperlyDemo.PersonMapper Mapper => global::mapperlyDemo.PersonMapper.Default; \n\n\n        internal static global::mapperlyDemo.PersonDTO ToPersonDTO(this global::Person person)\n        {\n            if (person == null)\n                throw new global::System.ArgumentNullException(nameof(person)); \n\n            var result = Mapper is MagicMap.ITypeFactory<global::mapperlyDemo.PersonDTO, global::Person> factory ? factory.Create(person) : new global::mapperlyDemo.PersonDTO();\n            Mapper.Map(person, result);\n            return result;\n        }\n\n        internal static global::Person ToPerson(this global::mapperlyDemo.PersonDTO personDTO)\n        {\n            if (personDTO == null)\n                throw new global::System.ArgumentNullException(nameof(personDTO)); \n\n            var result = Mapper is MagicMap.ITypeFactory<global::Person, global::mapperlyDemo.PersonDTO> factory ? factory.Create(personDTO) : new global::Person();\n            Mapper.Map(personDTO, result);\n            return result;\n        }\n    }\n}\n\n'))),(0,n.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\PropertyMapperAttribute.generated.cs",label:"PropertyMapperAttribute.generated.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace MagicMap \n{\n   [global::System.Runtime.CompilerServices.CompilerGenerated]\n   [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]\n   [global::System.AttributeUsage(global::System.AttributeTargets.Method, AllowMultiple = false, Inherited = false)]\n   /// <summary>Attribute that can be used mark a method as mapping method for a specific source property</summary>\n   internal sealed class PropertyMapperAttribute : global::System.Attribute\n   {\n      /// <summary>Marks a function as a custom mapping method for the specified property.</summary>\n      public PropertyMapperAttribute(global::System.Type targetType, string targetName)\n         : this(targetType, targetName, targetName)\n      {\n      }\n\n      /// <summary>Marks a function as a custom mapping method for the specified property.</summary>\n      public PropertyMapperAttribute(global::System.Type targetType, string targetName, string sourceName)\n      {\n         TargetType = targetType ?? throw new global::System.ArgumentNullException(nameof(targetType));\n         TargetName = targetName ?? throw new global::System.ArgumentNullException(nameof(targetName));\n         SourceName  = sourceName ?? throw new global::System.ArgumentNullException(nameof(sourceName));\n      }\n\n      /// <summary>Gets the type of the target class, the mapper should be used for.</summary>\n      public global::System.Type TargetType { get; }\n\n      /// <summary>Gets the name of the property that should be mapped to.</summary>\n      public string TargetName { get; }\n\n      /// <summary>Gets the name of the source property that should be mapped from.</summary>\n      public string SourceName { get; }\n   }\n}\n\n"))),(0,n.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\PropertyMappingAttribute.generated.cs",label:"PropertyMappingAttribute.generated.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace MagicMap \n{\n   [global::System.Runtime.CompilerServices.CompilerGenerated]\n   [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]\n   [global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = true, Inherited = false)]\n   /// <summary>Attribute that can be used to map a specific property from the left to the right object by their names</summary>\n   internal sealed class PropertyMappingAttribute : global::System.Attribute\n   {\n      public PropertyMappingAttribute(string leftName, string rightName)\n      {\n         LeftName = leftName ?? throw new global::System.ArgumentNullException(nameof(leftName));\n         RightName = rightName ?? throw new global::System.ArgumentNullException(nameof(rightName));\n      }\n\n      /// <summary>Gets the name of the left property.</summary>\n      public string LeftName { get; }\n\n      /// <summary>Gets the name of the right property.</summary>\n      public string RightName { get; }\n\n      /// <summary>Gets or sets a value indicating that the properties should be ignored for mapping generation.</summary>\n      public bool Ignore{ get; set; }\n   }\n}\n\n"))),(0,n.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\TypeFactory.generated.cs",label:"TypeFactory.generated.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace MagicMap \n{\n   [global::System.Runtime.CompilerServices.CompilerGenerated]\n   internal interface ITypeFactory<TTarget, TSource>  where TTarget : class\n   {\n      /// <summary>Created an instance of the type TTarget, that is used for a mapping.</summary>\n      TTarget Create(TSource source);\n   }\n}\n\n"))),(0,n.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MagicMap\\src\\mapperDemo\\obj\\GX\\MagicMap\\MagicMap.MagicMapSourceGenerator\\TypeMapperAttribute.generated.cs",label:"TypeMapperAttribute.generated.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//------------------------------------------------\n// <auto-generated>\n//     Generated by the MagicMap source generator\n// </auto-generated>\n//------------------------------------------------\nnamespace MagicMap \n{\n   [global::System.Runtime.CompilerServices.CompilerGenerated]\n   [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]\n   [global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = false, Inherited = false)]\n   internal sealed class TypeMapperAttribute : global::System.Attribute\n   {\n      public TypeMapperAttribute(global::System.Type left, global::System.Type right)\n      {\n         Left = left ?? throw new global::System.ArgumentNullException(nameof(left));\n         Right = right ?? throw new global::System.ArgumentNullException(nameof(right));\n      }\n\n      /// <summary>Gets the left type.</summary>\n      public global::System.Type Left { get; }\n\n      /// <summary>Gets the right type.</summary>\n      public global::System.Type Right { get; }\n\n      /// <summary>Gets or sets the <see cref="GenerationMode"/>.</summary>\n      public GeneratorMode Mode { get; set; } = GeneratorMode.TwoWay;\n\n      /// <summary>Gets or sets a flag, indicating if the source generator should generate partial methods\n      /// for properties he can not map, to enforce that they are handled by the user.</summary>\n      public bool ForceMappings { get; set; } = false;\n   }\n\n   /// <summary>Enum for configuring the source generator mode</summary>\n   internal enum GeneratorMode\n   {\n      /// <summary>Mappers are generated for both ways, from left to right and back</summary>\n      TwoWay,\n\n      /// <summary>Only a mapper from left to right typ is generated</summary>\n      LeftToRight,\n\n      /// <summary>Only a mapper from right to left typ is generated</summary>\n      RightToLeft\n   }\n}\n\n')))),(0,n.kt)("h2",{id:"usefull"},"Usefull"),(0,n.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{target:"_blank",href:t(4378).Z},"Download Example project MagicMap "))),(0,n.kt)("h3",{id:"share-magicmap"},"Share MagicMap"),(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap&quote=MagicMap",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap&text=MagicMap:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap&title=MagicMap",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap&title=MagicMap&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMagicMap",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/MagicMap"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/MagicMap")),(0,n.kt)("h2",{id:"in-the-same-category-mapper"},"In the same category (Mapper)"),(0,n.kt)("h3",{id:"autodto"},(0,n.kt)("a",{parentName:"h3",href:"/docs/AutoDTO"},"AutoDTO")),(0,n.kt)("h3",{id:"mapperly"},(0,n.kt)("a",{parentName:"h3",href:"/docs/mapperly"},"mapperly")),(0,n.kt)("h3",{id:"mapto"},(0,n.kt)("a",{parentName:"h3",href:"/docs/MapTo"},"MapTo")),(0,n.kt)("h3",{id:"nextgenmapper"},(0,n.kt)("a",{parentName:"h3",href:"/docs/NextGenMapper"},"NextGenMapper")))}h.isMDXComponent=!0},4378:(e,a,t)=>{t.d(a,{Z:()=>r});const r=t.p+"assets/files/MagicMap-05090b65856cb87c0b8f66d7e8884ffe.zip"}}]);