"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[2326],{26146:(e,r,n)=>{n.d(r,{Ay:()=>i,RM:()=>s});var t=n(74848),o=n(28453);const s=[{value:"Category &quot;DependencyInjection&quot; has the following generators:",id:"category-dependencyinjection-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function a(e){const r={a:"a",h3:"h3",p:"p",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h3,{id:"category-dependencyinjection-has-the-following-generators",children:'Category "DependencyInjection" has the following generators:'}),"\n",(0,t.jsxs)(r.p,{children:["1 ",(0,t.jsx)(r.a,{href:"/docs/AutoRegisterInject",children:"AutoRegisterInject"})]}),"\n",(0,t.jsxs)(r.p,{children:["2 ",(0,t.jsx)(r.a,{href:"/docs/BunnyTailServiceRegistration",children:"BunnyTailServiceRegistration"})]}),"\n",(0,t.jsxs)(r.p,{children:["3 ",(0,t.jsx)(r.a,{href:"/docs/DependencyModules.SourceGenerator",children:"DependencyModules.SourceGenerator"})]}),"\n",(0,t.jsxs)(r.p,{children:["4 ",(0,t.jsx)(r.a,{href:"/docs/depso",children:"depso"})]}),"\n",(0,t.jsxs)(r.p,{children:["5 ",(0,t.jsx)(r.a,{href:"/docs/FactoryGenerator",children:"FactoryGenerator"})]}),"\n",(0,t.jsxs)(r.p,{children:["6 ",(0,t.jsx)(r.a,{href:"/docs/FactoryGenerator.Abstractions",children:"FactoryGenerator.Abstractions"})]}),"\n",(0,t.jsxs)(r.p,{children:["7 ",(0,t.jsx)(r.a,{href:"/docs/Injectio",children:"Injectio"})]}),"\n",(0,t.jsxs)(r.p,{children:["8 ",(0,t.jsx)(r.a,{href:"/docs/jab",children:"jab"})]}),"\n",(0,t.jsxs)(r.p,{children:["9 ",(0,t.jsx)(r.a,{href:"/docs/Pure.DI",children:"Pure.DI"})]}),"\n",(0,t.jsxs)(r.p,{children:["10 ",(0,t.jsx)(r.a,{href:"/docs/ServiceScan.SourceGenerator",children:"ServiceScan.SourceGenerator"})]}),"\n",(0,t.jsx)(r.h3,{id:"see-category",children:"See category"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"/docs/Categories/DependencyInjection",children:"DependencyInjection"})})]})}function i(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},33360:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/files/FactoryGenerator.Abstractions-1b243fd66343c143b8fe96687dffffee.zip"},87313:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>p,contentTitle:()=>h,default:()=>g,frontMatter:()=>d,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"RSCG-Examples/FactoryGenerator.Abstractions","title":"224 - FactoryGenerator.Abstractions","description":"Generating DI Factory based on the first parameter(s)","source":"@site/docs/RSCG-Examples/FactoryGenerator.Abstractions.md","sourceDirName":"RSCG-Examples","slug":"/FactoryGenerator.Abstractions","permalink":"/RSCG_Examples/v2/docs/FactoryGenerator.Abstractions","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2240,"frontMatter":{"sidebar_position":2240,"title":"224 - FactoryGenerator.Abstractions","description":"Generating DI Factory based on the first parameter(s)","slug":"/FactoryGenerator.Abstractions"},"sidebar":"tutorialSidebar","previous":{"title":"223 - JinShil.MixinSourceGenerator","permalink":"/RSCG_Examples/v2/docs/JinShil.MixinSourceGenerator"},"next":{"title":"225 - Schema","permalink":"/RSCG_Examples/v2/docs/Schema"}}');var o=n(74848),s=n(28453),a=n(11470),i=n(19365),c=n(14252),l=n(26146);const d={sidebar_position:2240,title:"224 - FactoryGenerator.Abstractions",description:"Generating DI Factory based on the first parameter(s)",slug:"/FactoryGenerator.Abstractions"},h="FactoryGenerator.Abstractions  by Ivan Mazurenko",p={},u=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Author",id:"author",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Add the attribute to your class",id:"add-the-attribute-to-your-class",level:3},{value:"Register generated factories in the DI container",id:"register-generated-factories-in-the-di-container",level:3},{value:"Use the factory",id:"use-the-factory",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share FactoryGenerator.Abstractions",id:"share-factorygeneratorabstractions",level:3},...l.RM];function y(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.header,{children:(0,o.jsx)(r.h1,{id:"factorygeneratorabstractions--by-ivan-mazurenko",children:"FactoryGenerator.Abstractions  by Ivan Mazurenko"})}),"\n",(0,o.jsx)(c.A,{toc:u}),"\n",(0,o.jsx)(r.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,o.jsxs)(r.p,{children:[(0,o.jsx)(r.a,{href:"https://www.nuget.org/packages/FactoryGenerator.Abstractions/",children:(0,o.jsx)(r.img,{src:"https://img.shields.io/nuget/dt/FactoryGenerator.Abstractions?label=FactoryGenerator.Abstractions",alt:"Nuget"})}),(0,o.jsx)(r.a,{href:"https://www.nuget.org/packages/FactoryGenerator.Microsoft.Extensions.DependencyInjection/",children:(0,o.jsx)(r.img,{src:"https://img.shields.io/nuget/dt/FactoryGenerator.Microsoft.Extensions.DependencyInjection?label=FactoryGenerator.Microsoft.Extensions.DependencyInjection",alt:"Nuget"})}),"\n",(0,o.jsx)(r.a,{href:"https://github.com/ivmazurenko/factory-generator",children:(0,o.jsx)(r.img,{src:"https://img.shields.io/github/last-commit/ivmazurenko/factory-generator?label=updated",alt:"GitHub last commit"})}),"\n",(0,o.jsx)(r.img,{src:"https://img.shields.io/github/stars/ivmazurenko/factory-generator?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,o.jsx)(r.h2,{id:"details",children:"Details"}),"\n",(0,o.jsx)(r.h3,{id:"info",children:"Info"}),"\n",(0,o.jsxs)(r.admonition,{type:"info",children:[(0,o.jsxs)(r.p,{children:["Name: ",(0,o.jsx)(r.strong,{children:"FactoryGenerator.Abstractions"})]}),(0,o.jsx)(r.p,{children:"Package Description"}),(0,o.jsx)(r.p,{children:"Author: Ivan Mazurenko"}),(0,o.jsxs)(r.p,{children:["NuGet:\n",(0,o.jsx)(r.em,{children:(0,o.jsx)(r.a,{href:"https://www.nuget.org/packages/FactoryGenerator.Abstractions/",children:"https://www.nuget.org/packages/FactoryGenerator.Abstractions/"})})]}),(0,o.jsx)(r.p,{children:(0,o.jsx)(r.em,{children:(0,o.jsx)(r.a,{href:"https://www.nuget.org/packages/FactoryGenerator.Microsoft.Extensions.DependencyInjection/",children:"https://www.nuget.org/packages/FactoryGenerator.Microsoft.Extensions.DependencyInjection/"})})}),(0,o.jsxs)(r.p,{children:["You can find more details at ",(0,o.jsx)(r.a,{href:"https://github.com/ivmazurenko/factory-generator",children:"https://github.com/ivmazurenko/factory-generator"})]}),(0,o.jsxs)(r.p,{children:["Source: ",(0,o.jsx)(r.a,{href:"https://github.com/ivmazurenko/factory-generator",children:"https://github.com/ivmazurenko/factory-generator"})]})]}),"\n",(0,o.jsx)(r.h3,{id:"author",children:"Author"}),"\n",(0,o.jsx)(r.admonition,{type:"note",children:(0,o.jsxs)(r.p,{children:["Ivan Mazurenko\n",(0,o.jsx)(r.img,{src:"https://github.com/ivmazurenko.png",alt:"Alt text"})]})}),"\n",(0,o.jsx)(r.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,o.jsxs)(r.admonition,{type:"note",children:[(0,o.jsx)(r.h1,{id:"factorygenerator",children:"FactoryGenerator"}),(0,o.jsxs)(r.p,{children:[".NET source generator that automatically\ngenerates and registers ",(0,o.jsx)(r.a,{href:"https://github.com/ivmazurenko/factory-generator/blob/master/FactoryGenerator.Abstractions/IFactory.cs",children:"factories"})]}),(0,o.jsx)(r.h2,{id:"installation",children:"Installation"}),(0,o.jsx)(r.p,{children:"Add the following packages to your project:"}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-bash",children:"$ dotnet add package FactoryGenerator.Abstractions\n$ dotnet add package FactoryGenerator.Microsoft.Extensions.DependencyInjection\n"})}),(0,o.jsx)(r.h2,{id:"usage",children:"Usage"}),(0,o.jsx)(r.h3,{id:"add-the-attribute-to-your-class",children:"Add the attribute to your class"}),(0,o.jsxs)(r.p,{children:["Use one of the ",(0,o.jsx)(r.code,{children:"GenerateIFactory"})," attributes to specify how your factory should be\ngenerated:"]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-c#",children:"[GenerateIFactory<int>]\npublic class Service(int value, Dependency dependency)\n{\n    // ...\n}\n"})}),(0,o.jsxs)(r.p,{children:["This will generate an implementation of ",(0,o.jsx)(r.code,{children:"IFactory<int, Service>"}),", allowing you to create instances of ",(0,o.jsx)(r.code,{children:"Service"})," with an\n",(0,o.jsx)(r.code,{children:"int"})," parameter while automatically resolving other dependencies from the DI container. FactoryGenerator\nprovides ",(0,o.jsx)(r.a,{href:"https://github.com/ivmazurenko/factory-generator/blob/master/FactoryGenerator.Abstractions/GenerateIFactoryAttribute.cs",children:"multiple attribute variations"}),"\ndepending on the number of parameters your factory should accept."]}),(0,o.jsx)(r.h3,{id:"register-generated-factories-in-the-di-container",children:"Register generated factories in the DI container"}),(0,o.jsxs)(r.p,{children:["The ",(0,o.jsx)(r.code,{children:"RegisterGeneratedFactories()"})," method automatically registers all factories created by the source\ngenerator."]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-c#",children:"\nvar serviceCollection = new ServiceCollection()\n    .RegisterGeneratedFactories();\n\n"})}),(0,o.jsx)(r.h3,{id:"use-the-factory",children:"Use the factory"}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-c#",children:"using var serviceProvider = serviceCollection.BuildServiceProvider();\n\nvar factory = serviceProvider.GetRequiredService<IFactory<int, Service>>();\n\nvar service = factory.Create(1);\n"})}),(0,o.jsxs)(r.p,{children:["Full sample can be found ",(0,o.jsx)(r.a,{href:"https://github.com/ivmazurenko/factory-generator/blob/master/Samples/Program.cs",children:"here"}),"."]})]}),"\n",(0,o.jsx)(r.h3,{id:"about",children:"About"}),"\n",(0,o.jsx)(r.admonition,{type:"note",children:(0,o.jsx)(r.p,{children:"Generating DI Factory based on the first parameter(s)"})}),"\n",(0,o.jsx)(r.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,o.jsx)(r.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsxs)(i.A,{value:"csproj",label:"CSharp Project",children:[(0,o.jsxs)(r.p,{children:["This is the CSharp Project that references ",(0,o.jsx)(r.strong,{children:"FactoryGenerator.Abstractions"})]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-xml",metastring:"showLineNumbers {14}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\t<ItemGroup>\n\t  <PackageReference Include="FactoryGenerator.Abstractions" Version="0.0.23" />\n\t  <PackageReference Include="FactoryGenerator.Microsoft.Extensions.DependencyInjection" Version="0.0.22" />\n\t  <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.0.8" />\n\t</ItemGroup>\n\t\n</Project>\n\n'})})]}),(0,o.jsxs)(i.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator.Abstractions\\src\\InjectDemo\\Program.cs",label:"Program.cs",children:[(0,o.jsxs)(r.p,{children:["This is the use of ",(0,o.jsx)(r.strong,{children:"FactoryGenerator.Abstractions"})," in ",(0,o.jsx)(r.em,{children:"Program.cs"})]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using FactoryGenerator.Abstractions;\nusing InjectDemo;\nusing Microsoft.Extensions.DependencyInjection;\nusing System;\nusing AutoGeneratedNamespaceFromFactoryGenerator;\n\nConsole.WriteLine("Hello, World!");\nvar services = new ServiceCollection();\nservices.RegisterGeneratedFactories();\nvar prov = services.BuildServiceProvider();\nvar factory = prov.GetRequiredService<IFactory<PersonType, PersonFactory>>();\nvar factoryEmployee = factory.Create(PersonType.Employee);\nConsole.WriteLine(factoryEmployee.Create().TypeName);\n'})})]}),(0,o.jsxs)(i.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator.Abstractions\\src\\InjectDemo\\Person.cs",label:"Person.cs",children:[(0,o.jsxs)(r.p,{children:["This is the use of ",(0,o.jsx)(r.strong,{children:"FactoryGenerator.Abstractions"})," in ",(0,o.jsx)(r.em,{children:"Person.cs"})]}),(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"\nusing FactoryGenerator.Abstractions;\n\nnamespace InjectDemo;\npublic enum PersonType\n{\n    Employee,\n    Customer\n}\n[GenerateIFactory<PersonType>]\npublic class PersonFactory\n{\n    private readonly PersonType person;\n\n    public PersonFactory(PersonType person)\n    {\n        this.person = person;\n    }\n    public Person Create()\n    {\n        return person switch\n        {\n            PersonType.Employee => new Employee()\n            {\n                TypeName = nameof(Employee)\n            },\n            PersonType.Customer => new Customer()\n            {\n                TypeName = nameof(Customer)\n            },\n            _ => throw new NotImplementedException()\n        };\n    }\n}\n\npublic class Person\n{\n    public string Name \\{ get; set; \\} = string.Empty;\n    public string TypeName \\{ get;init; \\} = string.Empty;\n}\n\npublic class Employee : Person\n{\n}\npublic class Customer : Person\n{\n}\n\n\n"})})]})]}),"\n",(0,o.jsx)(r.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,o.jsx)(r.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,o.jsxs)(a.A,{children:[(0,o.jsx)(i.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator.Abstractions\\src\\InjectDemo\\obj\\GX\\FactoryGenerator.Microsoft.Extensions.DependencyInjection\\FactoryGenerator.Microsoft.Extensions.DependencyInjection.FactoryGenerator\\FactoryGenerator.Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.g.cs",label:"FactoryGenerator.Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.g.cs",children:(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\nusing FactoryGenerator.Abstractions;\nusing Microsoft.Extensions.DependencyInjection;\n\nnamespace AutoGeneratedNamespaceFromFactoryGenerator;\n\npublic static class ServiceCollectionExtensions\n{\n    public static IServiceCollection RegisterGeneratedFactories(this IServiceCollection self)\n    {\n        self.AddTransient<FactoryGenerator.Abstractions.IFactory<global::InjectDemo.PersonType, InjectDemo.PersonFactory>, InjectDemo.PersonTypePersonFactoryFactory>();\n\n        return self;\n    }\n}\n"})})}),(0,o.jsx)(i.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\FactoryGenerator.Abstractions\\src\\InjectDemo\\obj\\GX\\FactoryGenerator.Microsoft.Extensions.DependencyInjection\\FactoryGenerator.Microsoft.Extensions.DependencyInjection.FactoryGenerator\\InjectDemo.PersonTypePersonFactoryFactory.g.cs",label:"InjectDemo.PersonTypePersonFactoryFactory.g.cs",children:(0,o.jsx)(r.pre,{children:(0,o.jsx)(r.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated/>\n\nusing FactoryGenerator.Abstractions;\n\nnamespace InjectDemo;\n\npublic sealed class PersonTypePersonFactoryFactory : FactoryGenerator.Abstractions.IFactory<global::InjectDemo.PersonType, InjectDemo.PersonFactory>\n{\n    \n\n    public PersonTypePersonFactoryFactory()\n    {\n        \n    }\n\n    public InjectDemo.PersonFactory Create(global::InjectDemo.PersonType dependency0)\n    {\n        return new InjectDemo.PersonFactory(dependency0);\n    }\n}\n"})})})]}),"\n",(0,o.jsx)(r.h2,{id:"useful",children:"Useful"}),"\n",(0,o.jsx)(r.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,o.jsx)(r.admonition,{type:"tip",children:(0,o.jsx)(r.p,{children:(0,o.jsx)(r.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(33360).A+"",children:"Download Example project FactoryGenerator.Abstractions "})})}),"\n",(0,o.jsx)(r.h3,{id:"share-factorygeneratorabstractions",children:"Share FactoryGenerator.Abstractions"}),"\n",(0,o.jsxs)("ul",{children:[(0,o.jsx)("li",{children:(0,o.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator.Abstractions&quote=FactoryGenerator.Abstractions",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,o.jsx)("li",{children:(0,o.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator.Abstractions&text=FactoryGenerator.Abstractions:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator.Abstractions",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,o.jsx)("li",{children:(0,o.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator.Abstractions&title=FactoryGenerator.Abstractions",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,o.jsx)("li",{children:(0,o.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator.Abstractions&title=FactoryGenerator.Abstractions&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FFactoryGenerator.Abstractions",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,o.jsx)(r.p,{children:(0,o.jsx)(r.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/FactoryGenerator.Abstractions",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/FactoryGenerator.Abstractions"})}),"\n",(0,o.jsx)(l.Ay,{})]})}function g(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,o.jsx)(r,{...e,children:(0,o.jsx)(y,{...e})}):y(e)}}}]);