"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[9900],{6069:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>d,contentTitle:()=>p,default:()=>u,frontMatter:()=>m,metadata:()=>s,toc:()=>g});var n=a(7462),r=(a(7294),a(4137)),i=a(3992),l=a(425),o=a(8839);const m={sidebar_position:290,title:"29 - Gedaq",description:"Generating code from attribute query",slug:"/Gedaq"},p="Gedaq  by Vyacheslav Brevnov",s={unversionedId:"RSCG-Examples/Gedaq",id:"RSCG-Examples/Gedaq",title:"29 - Gedaq",description:"Generating code from attribute query",source:"@site/docs/RSCG-Examples/Gedaq.md",sourceDirName:"RSCG-Examples",slug:"/Gedaq",permalink:"/RSCG_Examples/v2/docs/Gedaq",draft:!1,tags:[],version:"current",sidebarPosition:290,frontMatter:{sidebar_position:290,title:"29 - Gedaq",description:"Generating code from attribute query",slug:"/Gedaq"},sidebar:"tutorialSidebar",previous:{title:"28 - Lombok.NET",permalink:"/RSCG_Examples/v2/docs/Lombok.NET"},next:{title:"30 - Refit",permalink:"/RSCG_Examples/v2/docs/Refit"}},d={},g=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share Gedaq",id:"share-gedaq",level:3},{value:"In the same category (Database)",id:"in-the-same-category-database",level:2},{value:"Breezy",id:"breezy",level:3}],k={toc:g},N="wrapper";function u(t){let{components:e,...m}=t;return(0,r.kt)(N,(0,n.Z)({},k,m,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"gedaq--by-vyacheslav-brevnov"},"Gedaq  by Vyacheslav Brevnov"),(0,r.kt)(o.Z,{toc:g,mdxType:"TOCInline"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Gedaq/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Gedaq?label=Gedaq",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/SoftStoneDevelop/Gedaq"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/SoftStoneDevelop/Gedaq?label=updated",alt:"GitHub last commit"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/SoftStoneDevelop/Gedaq?style=social",alt:"GitHub Repo stars"})),(0,r.kt)("h2",{id:"details"},"Details"),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Name: ",(0,r.kt)("strong",{parentName:"p"},"Gedaq")),(0,r.kt)("p",{parentName:"admonition"},"ORM Gedaq is roslyn generator of methods for obtaining data from databases."),(0,r.kt)("p",{parentName:"admonition"},"Author: Vyacheslav Brevnov"),(0,r.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/Gedaq/"},"https://www.nuget.org/packages/Gedaq/")),"   "),(0,r.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/SoftStoneDevelop/Gedaq"},"https://github.com/SoftStoneDevelop/Gedaq")),(0,r.kt)("p",{parentName:"admonition"},"Source : ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/SoftStoneDevelop/Gedaq"},"https://github.com/SoftStoneDevelop/Gedaq"))),(0,r.kt)("h3",{id:"original-readme"},"Original Readme"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("h1",{align:"center"},(0,r.kt)("a",null,"Gedaq")),(0,r.kt)("h1",{align:"center"},(0,r.kt)("a",{href:"https://discord.gg/xsR5EYU4ZM"},(0,r.kt)("img",{height:"30px",src:"https://img.shields.io/badge/Discord-7289DA?style=for-the-badge&logo=discord&logoColor=white"}))),(0,r.kt)("h3",{align:"center"},(0,r.kt)("p",{parentName:"admonition"},"  ",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Gedaq/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/Gedaq?logo=Gedaq",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Gedaq/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Gedaq.svg",alt:"Downloads"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/SoftStoneDevelop/Gedaq/stargazers"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/stars/SoftStoneDevelop/Gedaq?color=brightgreen",alt:"Stars"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://img.shields.io/badge/license-MIT-blue.svg"},"License"))),(0,r.kt)("p",{parentName:"admonition"},"Generator for obtaining and mapping data from the database.\nGenerates methods (synchronous and/or asynchronous):"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Creating a Command for a query")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Method of setting parameters in a Command")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Command execution, with data mapping")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Creating a QueryBatch Command")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Setting parameters in a QueryBatch Command")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Get data from a batch Command")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Receiving data from a batch of queries, with data mapping")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Getting data based on a query, with data mapping"))),(0,r.kt)("p",{parentName:"admonition"},"There are versions for all of these methods (if possible):"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Query"),(0,r.kt)("li",{parentName:"ul"},"NonQuery"),(0,r.kt)("li",{parentName:"ul"},"\u0415ecuteScalar (return type is determined automatically at the generation stage)",(0,r.kt)("br",null),"It also generates methods specific to each provider, such as BinaryImport and BinaryExport in PostgreSQL.")),(0,r.kt)("p",{parentName:"admonition"},"Supported databases(see examples and documentation in the relevant DB package):",(0,r.kt)("br",null)),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/SoftStoneDevelop/Gedaq.Npgsql"},"Npgsql")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/SoftStoneDevelop/Gedaq.DbConnection"},"DbConnection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/SoftStoneDevelop/Gedaq.SqlClient"},"SqlClient")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/SoftStoneDevelop/Gedaq.MySqlConnector"},"MySqlConnector")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/SoftStoneDevelop/Gedaq/issues/6"},"Oracle.ManagedDataAccess.Core"),(0,r.kt)("br",null))),(0,r.kt)("p",{parentName:"admonition"},"Usage:"),(0,r.kt)("p",{parentName:"admonition"},"For example, we have a Person class:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-C#"},"\npublic class Person\n{\n    public int Id { get; set; }\n\n    public string FirstName { get; set; }\n\n    public string MiddleName { get; set; }\n\n    public string LastName { get; set; }\n    \n    public Identification Identification { get; set; }\n}\n\npublic class Identification\n{\n    public int Id { get; set; }\n    public string TypeName { get; set; }\n}\n\n")),(0,r.kt)("p",{parentName:"admonition"},"We just mark anywhere in the code with a special attribute (class, structure, method) that tells the analyzer to generate the code.\nLet's mark the Person class itself with an attribute:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-C#"},'\n[Query(\n            @"\nSELECT \n    p.id,\n    p.firstname,\n~StartInner::Identification:id~\n    i.id,\n    i.typename,\n~EndInner::Identification~\n    p.middlename,\n    p.lastname\nFROM person p\nLEFT JOIN identification i ON i.id = p.identification_id\nWHERE p.id > $1\n",\n        "GetAllPerson",\n        typeof(Person),\n        MethodType.Sync | MethodType.Async\n        ),\n        Parametr(parametrType: typeof(int), position: 1)\n        ]\npublic class Person\n//...\n\n')),(0,r.kt)("p",{parentName:"admonition"},"Now in the code we can call the ready method:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-C#"},"\nvar persons = \n        connection\n        .GetAllPerson(49999)\n        .ToList();\n        \nvar personsAsync = \n        await connection\n        .GetAllPersonAsync(49999)\n        .ToListAsync();\n\n")),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/SoftStoneDevelop/Gedaq.Npgsql/blob/main/Src/NpgsqlBenchmark/Benchmarks/CompareDapper.cs"},"Comparison")," with ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/DapperLib/Dapper"},"Dapper")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/DapperLib/DapperAOT"},"DapperAOT")," of getting 50000 Person in a loop(Size is number of loop iterations) from the database:"),(0,r.kt)("h2",{parentName:"admonition",id:"net-7-benchmark"},".NET 7 Benchmark:"),(0,r.kt)("table",{parentName:"admonition"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Size"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Ratio"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Allocated"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Alloc Ratio"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Gedaq.Npgsql")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"10")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"445.5 ms")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"132.09 MB")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dapper"),(0,r.kt)("td",{parentName:"tr",align:null},"10"),(0,r.kt)("td",{parentName:"tr",align:"right"},"749.2 ms"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.68"),(0,r.kt)("td",{parentName:"tr",align:"right"},"150.41 MB"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DapperAOT"),(0,r.kt)("td",{parentName:"tr",align:null},"10"),(0,r.kt)("td",{parentName:"tr",align:"right"},"777.5 ms"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.75"),(0,r.kt)("td",{parentName:"tr",align:"right"},"150.4 MB"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Gedaq.Npgsql")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"20")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"901.9 ms")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"264.17 MB")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dapper"),(0,r.kt)("td",{parentName:"tr",align:null},"20"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1,510.0 ms"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.68"),(0,r.kt)("td",{parentName:"tr",align:"right"},"300.81 MB"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DapperAOT"),(0,r.kt)("td",{parentName:"tr",align:null},"20"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1,505.3 ms"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.67"),(0,r.kt)("td",{parentName:"tr",align:"right"},"300.81 MB"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Gedaq.Npgsql")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"30")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1,366.2 ms")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"396.28 MB")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dapper"),(0,r.kt)("td",{parentName:"tr",align:null},"30"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2,276.7 ms"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.67"),(0,r.kt)("td",{parentName:"tr",align:"right"},"451.22 MB"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DapperAOT"),(0,r.kt)("td",{parentName:"tr",align:null},"30"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2,279.6 ms"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.67"),(0,r.kt)("td",{parentName:"tr",align:"right"},"451.22 MB"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.14")))),(0,r.kt)("h2",{parentName:"admonition",id:"nativeaot-net-7-benchmark"},"NativeAOT .NET 7 Benchmark:"),(0,r.kt)("table",{parentName:"admonition"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:null},"Size"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Ratio"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Allocated"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Alloc Ratio"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Gedaq.Npgsql")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"10")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"433.6 ms")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"132.08 MB")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dapper"),(0,r.kt)("td",{parentName:"tr",align:null},"10"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DapperAOT"),(0,r.kt)("td",{parentName:"tr",align:null},"10"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Gedaq.Npgsql")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"20")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"927.6 ms")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"264.16 MB")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dapper"),(0,r.kt)("td",{parentName:"tr",align:null},"20"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DapperAOT"),(0,r.kt)("td",{parentName:"tr",align:null},"20"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"}),(0,r.kt)("td",{parentName:"tr",align:"right"})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Gedaq.Npgsql")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"30")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1,367.9 ms")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"396.25 MB")),(0,r.kt)("td",{parentName:"tr",align:"right"},(0,r.kt)("strong",{parentName:"td"},"1.00"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Dapper"),(0,r.kt)("td",{parentName:"tr",align:null},"30"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"DapperAOT"),(0,r.kt)("td",{parentName:"tr",align:null},"30"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?"),(0,r.kt)("td",{parentName:"tr",align:"right"},"NA"),(0,r.kt)("td",{parentName:"tr",align:"right"},"?")))),(0,r.kt)("p",{parentName:"admonition"},"But with Gedaq, we can prepare the command in advance."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-C#"},"\nvar personsCmd = connection.CreateGetAllPersonCommand(prepare: true);\npersonsCmd.SetGetAllPersonParametrs(49999);\nvar persons = personsCmd.ExecuteGetAllPersonCommand().ToList();\n\n//or\n\nvar personsCmd = await connection.CreateGetAllPersonCommandAsync(prepare: true);\npersonsCmd.SetGetAllPersonParametrs(49999);\nvar persons = await personsCmd.ExecuteGetAllPersonCommandAsync().ToListAsync();\n\n\n"))),(0,r.kt)("h3",{id:"about"},"About"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Generating code from attribute query")),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,r.kt)("p",null,"This is the CSharp Project that references ",(0,r.kt)("strong",{parentName:"p"},"Gedaq")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {14}",showLineNumbers:!0,"{14}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n    <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net7.0</TargetFramework>\n        <ImplicitUsings>enable</ImplicitUsings>\n        <Nullable>enable</Nullable>\n    </PropertyGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n    <ItemGroup>\n      <PackageReference Include="Gedaq" Version="1.4.10" OutputItemType="Analyzer" ReferenceOutputAssembly="True" />\n      <PackageReference Include="Gedaq.DbConnection" Version="1.2.4" />\n      <PackageReference Include="Gedaq.SqlClient" Version="0.2.4" />\n    </ItemGroup>\n</Project>\n\n'))),(0,r.kt)(l.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Gedaq\\src\\GedaqDemoConsole\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Gedaq")," in ",(0,r.kt)("em",{parentName:"p"},"Program.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using GedaqDemoConsole;\n\nvar data = new GetData();\n\nvar list=data.GetPersons();\n\n\n"))),(0,r.kt)(l.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Gedaq\\src\\GedaqDemoConsole\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Gedaq")," in ",(0,r.kt)("em",{parentName:"p"},"Person.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"\nnamespace GedaqDemoConsole;\n\npublic class Person\n{\n    public int Id { get; set; }\n\n    public string? FirstName { get; set; }\n\n    public string? MiddleName { get; set; }\n\n    public string? LastName { get; set; }\n\n}\n\n"))),(0,r.kt)(l.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Gedaq\\src\\GedaqDemoConsole\\GetData.cs",label:"GetData.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Gedaq")," in ",(0,r.kt)("em",{parentName:"p"},"GetData.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'\nusing Microsoft.Data.SqlClient;\n\nnamespace GedaqDemoConsole;\n\npublic partial class GetData\n{\n    string connectionString = "asdasd";\n\n    [Gedaq.SqlClient.Attributes.Query(\n        @"\nSELECT \n    p.id,\n    p.firstname,\nFROM person p\n"\n    ,\n        "GetPersons",\n        typeof(Person)\n        ),\n        ]\n    public Person[] GetPersons()\n    {\n        using (var sql = new SqlConnection(connectionString))\n        {\n            sql.Open();\n\n            return GetPersons(sql, 48).ToArray();//using generated method\n        }\n    }\n}\n\n')))),(0,r.kt)("h3",{id:"generated-files"},"Generated Files"),(0,r.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Gedaq\\src\\GedaqDemoConsole\\obj\\GX\\Gedaq\\Gedaq.Gedaq\\GetDataGetPersonsSqlClient.g.cs",label:"GetDataGetPersonsSqlClient.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'\nusing System;\nusing System.Data;\nusing System.Data.Common;\nusing Microsoft.Data.SqlClient;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Runtime.CompilerServices;\n\nnamespace GedaqDemoConsole\n{\n    public  partial class GetData\n    {\n        \n        public  IEnumerable<GedaqDemoConsole.Person> GetPersons(\n\n            SqlConnection connection\n,\n            int? timeout = null\n,\n            SqlTransaction transaction = null\n\n        )\n        {\n\n            bool needClose = connection.State == ConnectionState.Closed;\n            if(needClose)\n            {\n                connection.Open();\n            }\n\n            SqlCommand command = null;\n            SqlDataReader reader = null;\n            try\n            {\n                command =\n\n                CreateGetPersonsCommand(connection\n\n                , false)\n\n                ;\n                SetGetPersonsParametrs(\n                    command\n,\n                    timeout\n,\n                    transaction\n\n                    );\n\n                reader = command.ExecuteReader();\n\n                while (reader.Read())\n                {\n\n                    var item = new GedaqDemoConsole.Person();\n\n                        if(!reader.IsDBNull(0))\n                        {\n\n                            if(item == null)\n                            {\n                                 item = new GedaqDemoConsole.Person();\n                            }\n\n                            item.Id = reader.GetFieldValue<System.Int32>(0);\n\n                        }\n\n                        if(!reader.IsDBNull(1))\n                        {\n\n                            if(item == null)\n                            {\n                                 item = new GedaqDemoConsole.Person();\n                            }\n\n                            item.FirstName = reader.GetFieldValue<System.String>(1);\n\n                        }\n \n                    yield return item;\n\n                }\n\n                while (reader.NextResult())\n                {\n                }\n\n                reader.Dispose();\n                reader = null;\n            }\n            finally\n            {\n                if (reader != null)\n                {\n                    if (!reader.IsClosed)\n                    {\n                        try \n                        {\n                            command.Cancel();\n                        }\n                        catch { /* ignore */ }\n                    }\n                \n                    reader.Dispose();\n                }\n\n                if (needClose)\n                {\n                    connection.Close();\n                }\n\n                if(command != null)\n                {\n                    command.Parameters.Clear();\n                    command.Dispose();\n                }\n            }\n\n        }\n\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\n        public  SqlCommand CreateGetPersonsCommand(\n            SqlConnection connection\n,\n            bool prepare = false\n\n        )\n        {\n            var command = connection.CreateCommand();\n\n            command.CommandText = @"\n\nSELECT \n    p.id,\n    p.firstname,\nFROM person p\n\n";\n\n            if(prepare)\n            {\n                try\n                {\n                    command.Prepare();\n                }\n                catch\n                {\n                    command.Dispose();\n                    throw;\n                }\n            }\n\n            return command;\n        }\n\n        public  IEnumerable<GedaqDemoConsole.Person> ExecuteGetPersonsCommand(SqlCommand command)\n        {\n\n            SqlDataReader reader = null;\n            try\n            {\n\n                reader = command.ExecuteReader();\n                while (reader.Read())\n                {\n\n                    var item = new GedaqDemoConsole.Person();\n\n                        if(!reader.IsDBNull(0))\n                        {\n\n                            if(item == null)\n                            {\n                                 item = new GedaqDemoConsole.Person();\n                            }\n\n                            item.Id = reader.GetFieldValue<System.Int32>(0);\n\n                        }\n\n                        if(!reader.IsDBNull(1))\n                        {\n\n                            if(item == null)\n                            {\n                                 item = new GedaqDemoConsole.Person();\n                            }\n\n                            item.FirstName = reader.GetFieldValue<System.String>(1);\n\n                        }\n \n                    yield return item;\n\n                }\n\n                while (reader.NextResult())\n                {\n                }\n                reader.Dispose();\n                reader = null;\n            }\n            finally\n            {\n                if (reader != null)\n                {\n                    if (!reader.IsClosed)\n                    {\n                        try \n                        {\n                            command.Cancel();\n                        }\n                        catch { /* ignore */ }\n                    }\n                \n                    reader.Dispose();\n                }\n            }\n\n        }\n\n        [MethodImpl(MethodImplOptions.AggressiveInlining)]\n        public  void SetGetPersonsParametrs(\n            SqlCommand command\n,\n            int? timeout = null\n\n            ,\n            SqlTransaction transaction = null\n\n        )\n        {\n\n            if(timeout.HasValue)\n            {\n                command.CommandTimeout = timeout.Value;\n            }\n\n            if(transaction != null)\n            {\n                command.Transaction = transaction;\n            }\n\n        }\n\n    }\n}\n\n')))),(0,r.kt)("h2",{id:"usefull"},"Usefull"),(0,r.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{target:"_blank",href:a(8124).Z},"Download Example project Gedaq "))),(0,r.kt)("h3",{id:"share-gedaq"},"Share Gedaq"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGedaq&quote=Gedaq",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGedaq&text=Gedaq:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGedaq",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGedaq&title=Gedaq",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGedaq&title=Gedaq&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FGedaq",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Gedaq"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Gedaq")),(0,r.kt)("h2",{id:"in-the-same-category-database"},"In the same category (Database)"),(0,r.kt)("h3",{id:"breezy"},(0,r.kt)("a",{parentName:"h3",href:"/docs/Breezy"},"Breezy")))}u.isMDXComponent=!0},8124:(t,e,a)=>{a.d(e,{Z:()=>n});const n=a.p+"assets/files/Gedaq-867fe795db2e0ba2b1a9e295f66b8b2f.zip"}}]);