"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[5405],{29602:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>v,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var a=n(87462),i=(n(67294),n(3905)),r=n(73992),s=n(18679),o=n(68839);const l={sidebar_position:1970,title:"197 - BunnyTailServiceRegistration",description:"Generating service registration code from attributes",slug:"/BunnyTailServiceRegistration"},c="BunnyTailServiceRegistration  by Machi Pon",p={unversionedId:"RSCG-Examples/BunnyTailServiceRegistration",id:"RSCG-Examples/BunnyTailServiceRegistration",title:"197 - BunnyTailServiceRegistration",description:"Generating service registration code from attributes",source:"@site/docs/RSCG-Examples/BunnyTailServiceRegistration.md",sourceDirName:"RSCG-Examples",slug:"/BunnyTailServiceRegistration",permalink:"/RSCG_Examples/v2/docs/BunnyTailServiceRegistration",draft:!1,tags:[],version:"current",sidebarPosition:1970,frontMatter:{sidebar_position:1970,title:"197 - BunnyTailServiceRegistration",description:"Generating service registration code from attributes",slug:"/BunnyTailServiceRegistration"},sidebar:"tutorialSidebar",previous:{title:"196 - ArgumentParsing",permalink:"/RSCG_Examples/v2/docs/ArgumentParsing"},next:{title:"198 - DimonSmart.BuilderGenerator",permalink:"/RSCG_Examples/v2/docs/DimonSmart.BuilderGenerator"}},u={},m=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share BunnyTailServiceRegistration",id:"share-bunnytailserviceregistration",level:3},{value:"In the same category (DependencyInjection) - 8 other generators",id:"in-the-same-category-dependencyinjection---8-other-generators",level:3},{value:"AutoRegisterInject",id:"autoregisterinject",level:4},{value:"DependencyModules.SourceGenerator",id:"dependencymodulessourcegenerator",level:4},{value:"depso",id:"depso",level:4},{value:"FactoryGenerator",id:"factorygenerator",level:4},{value:"Injectio",id:"injectio",level:4},{value:"jab",id:"jab",level:4},{value:"Pure.DI",id:"puredi",level:4},{value:"ServiceScan.SourceGenerator",id:"servicescansourcegenerator",level:4}],d={toc:m},g="wrapper";function v(e){let{components:t,...l}=e;return(0,i.kt)(g,(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"bunnytailserviceregistration--by-machi-pon"},"BunnyTailServiceRegistration  by Machi Pon"),(0,i.kt)(o.Z,{toc:m,mdxType:"TOCInline"}),(0,i.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/BunnyTail.ServiceRegistration/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/BunnyTail.ServiceRegistration?label=BunnyTail.ServiceRegistration",alt:"Nuget"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/usausa/service-registration-generator"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/usausa/service-registration-generator?label=updated",alt:"GitHub last commit"})),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/usausa/service-registration-generator?style=social",alt:"GitHub Repo stars"})),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("h3",{id:"info"},"Info"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Name: ",(0,i.kt)("strong",{parentName:"p"},"BunnyTailServiceRegistration")),(0,i.kt)("p",{parentName:"admonition"},"Service registration source generator."),(0,i.kt)("p",{parentName:"admonition"},"Author: Machi Pon"),(0,i.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/BunnyTail.ServiceRegistration/"},"https://www.nuget.org/packages/BunnyTail.ServiceRegistration/")),"   "),(0,i.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/usausa/service-registration-generator"},"https://github.com/usausa/service-registration-generator")),(0,i.kt)("p",{parentName:"admonition"},"Source : ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/usausa/service-registration-generator"},"https://github.com/usausa/service-registration-generator"))),(0,i.kt)("h3",{id:"original-readme"},"Original Readme"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("h1",{parentName:"admonition",id:"bunnytailserviceregistrationgenerator"},"BunnyTail.ServiceRegistrationGenerator"),(0,i.kt)("table",{parentName:"admonition"},(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Package"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Info"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"BunnyTail.ServiceRegistration"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"https://www.nuget.org/packages/BunnyTail.ServiceRegistration"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/BunnyTail.ServiceRegistration.svg",alt:"NuGet"})))))),(0,i.kt)("h2",{parentName:"admonition",id:"what-is-this"},"What is this?"),(0,i.kt)("p",{parentName:"admonition"},"Service registory method generator."),(0,i.kt)("h2",{parentName:"admonition",id:"usage"},"Usage"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'using BunnyTail.ServiceRegistration;\n\nusing Microsoft.Extensions.DependencyInjection;\n\ninternal static class Program\n{\n    public static void Main()\n    {\n        using var provider = new ServiceCollection()\n            .AddServices()\n            .BuildServiceProvider();\n\n        var service = provider.GetRequiredService<TestService>();\n    }\n}\n\ninternal static partial class ServiceCollectionExtensions\n{\n    [ServiceRegistration(Lifetime.Singleton, "Service$")]\n    public static partial IServiceCollection AddServices(this IServiceCollection services);\n}\n\ninternal sealed class TestService\n{\n}\n'))),(0,i.kt)("h3",{id:"about"},"About"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Generating service registration code from attributes")),(0,i.kt)("h2",{id:"how-to-use"},"How to use"),(0,i.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,i.kt)("p",null,"This is the CSharp Project that references ",(0,i.kt)("strong",{parentName:"p"},"BunnyTailServiceRegistration")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {14}",showLineNumbers:!0,"{14}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n    <ItemGroup>\n     <PackageReference Include="BunnyTail.ServiceRegistration" Version="1.7.0" />\n     <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.0.2" />\n\n    </ItemGroup>\n</Project>\n\n'))),(0,i.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\BunnyTailServiceRegistration\\src\\InjectDemo\\ServiceCollectionExtensions.cs",label:"ServiceCollectionExtensions.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"BunnyTailServiceRegistration")," in ",(0,i.kt)("em",{parentName:"p"},"ServiceCollectionExtensions.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using BunnyTail.ServiceRegistration;\nusing Microsoft.Extensions.DependencyInjection;\n\ninternal static partial class ServiceCollectionExtensions\n{\n    [ServiceRegistration(Lifetime.Scoped, "Database")]\n    public static partial IServiceCollection AddDatabaseServices(this IServiceCollection services);\n}\n'))),(0,i.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\BunnyTailServiceRegistration\\src\\InjectDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"BunnyTailServiceRegistration")," in ",(0,i.kt)("em",{parentName:"p"},"Program.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using InjectDemo;\nusing Microsoft.Extensions.DependencyInjection;\n\n\nvar serviceCollection = new ServiceCollection();\n\nserviceCollection.AddDatabaseServices();\n\nvar provider = serviceCollection.BuildServiceProvider();\n\nvar service = provider.GetService<Database>();\n\nif(service == null)\n    throw new Exception("Service not found");\nelse\n    service.Open();\n'))),(0,i.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\BunnyTailServiceRegistration\\src\\InjectDemo\\IDatabase.cs",label:"IDatabase.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"BunnyTailServiceRegistration")," in ",(0,i.kt)("em",{parentName:"p"},"IDatabase.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"namespace InjectDemo\n{\n    internal interface IDatabase\n    {\n        public void Open();\n    }\n}\n"))),(0,i.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\BunnyTailServiceRegistration\\src\\InjectDemo\\Database.cs",label:"Database.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"BunnyTailServiceRegistration")," in ",(0,i.kt)("em",{parentName:"p"},"Database.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'namespace InjectDemo;\npartial class Database \n{\n    private readonly IDatabase con;\n\n    public Database(IDatabase con)\n    {\n        this.con = con;\n    }\n    public void Open()\n    {\n        Console.WriteLine($"open from database");\n        con.Open();\n    }\n\n}\n\n\n'))),(0,i.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\BunnyTailServiceRegistration\\src\\InjectDemo\\DatabaseCon.cs",label:"DatabaseCon.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"BunnyTailServiceRegistration")," in ",(0,i.kt)("em",{parentName:"p"},"DatabaseCon.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'\nnamespace InjectDemo;\npublic partial class DatabaseCon:IDatabase\n{\n    public string? Connection { get; set; }\n    public void Open()\n    {\n        Console.WriteLine("open from database con" );\n    }\n}\n\n\n')))),(0,i.kt)("h3",{id:"generated-files"},"Generated Files"),(0,i.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\BunnyTailServiceRegistration\\src\\InjectDemo\\obj\\GX\\BunnyTail.ServiceRegistration.Generator\\BunnyTail.ServiceRegistration.Generator.ServiceRegistrationGenerator\\ServiceCollectionExtensions.g.cs",label:"ServiceCollectionExtensions.g.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated />\n#nullable enable\n\nusing Microsoft.Extensions.DependencyInjection;\n\npartial class ServiceCollectionExtensions\n{\n    public static partial global::Microsoft.Extensions.DependencyInjection.IServiceCollection AddDatabaseServices(this global::Microsoft.Extensions.DependencyInjection.IServiceCollection services)\n    {\n        services.AddScoped<global::InjectDemo.Database>();\n        services.AddScoped<global::InjectDemo.IDatabase, global::InjectDemo.DatabaseCon>();\n        return services;\n    }\n}\n\n")))),(0,i.kt)("h2",{id:"usefull"},"Usefull"),(0,i.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{target:"_blank",href:n(3514).Z},"Download Example project BunnyTailServiceRegistration "))),(0,i.kt)("h3",{id:"share-bunnytailserviceregistration"},"Share BunnyTailServiceRegistration"),(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FBunnyTailServiceRegistration&quote=BunnyTailServiceRegistration",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FBunnyTailServiceRegistration&text=BunnyTailServiceRegistration:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FBunnyTailServiceRegistration",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FBunnyTailServiceRegistration&title=BunnyTailServiceRegistration",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FBunnyTailServiceRegistration&title=BunnyTailServiceRegistration&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FBunnyTailServiceRegistration",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/BunnyTailServiceRegistration"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/BunnyTailServiceRegistration")),(0,i.kt)("h3",{id:"in-the-same-category-dependencyinjection---8-other-generators"},"In the same category (DependencyInjection) - 8 other generators"),(0,i.kt)("h4",{id:"autoregisterinject"},(0,i.kt)("a",{parentName:"h4",href:"/docs/AutoRegisterInject"},"AutoRegisterInject")),(0,i.kt)("h4",{id:"dependencymodulessourcegenerator"},(0,i.kt)("a",{parentName:"h4",href:"/docs/DependencyModules.SourceGenerator"},"DependencyModules.SourceGenerator")),(0,i.kt)("h4",{id:"depso"},(0,i.kt)("a",{parentName:"h4",href:"/docs/depso"},"depso")),(0,i.kt)("h4",{id:"factorygenerator"},(0,i.kt)("a",{parentName:"h4",href:"/docs/FactoryGenerator"},"FactoryGenerator")),(0,i.kt)("h4",{id:"injectio"},(0,i.kt)("a",{parentName:"h4",href:"/docs/Injectio"},"Injectio")),(0,i.kt)("h4",{id:"jab"},(0,i.kt)("a",{parentName:"h4",href:"/docs/jab"},"jab")),(0,i.kt)("h4",{id:"puredi"},(0,i.kt)("a",{parentName:"h4",href:"/docs/Pure.DI"},"Pure.DI")),(0,i.kt)("h4",{id:"servicescansourcegenerator"},(0,i.kt)("a",{parentName:"h4",href:"/docs/ServiceScan.SourceGenerator"},"ServiceScan.SourceGenerator")))}v.isMDXComponent=!0},3514:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/BunnyTailServiceRegistration-00bd5778bb358290948b6c27ee12a9e4.zip"}}]);