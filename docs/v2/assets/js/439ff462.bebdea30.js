"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[4684],{18893:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>u,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>m});var a=t(87462),r=(t(67294),t(3905)),o=t(73992),i=t(18679),s=t(68839);const l={sidebar_position:810,title:"81 - N.SourceGenerators.UnionTypes",description:"Generating different union types",slug:"/N.SourceGenerators.UnionTypes"},u="N.SourceGenerators.UnionTypes  by Alexey Sosnin",p={unversionedId:"RSCG-Examples/N.SourceGenerators.UnionTypes",id:"RSCG-Examples/N.SourceGenerators.UnionTypes",title:"81 - N.SourceGenerators.UnionTypes",description:"Generating different union types",source:"@site/docs/RSCG-Examples/N.SourceGenerators.UnionTypes.md",sourceDirName:"RSCG-Examples",slug:"/N.SourceGenerators.UnionTypes",permalink:"/RSCG_Examples/v2/docs/N.SourceGenerators.UnionTypes",draft:!1,tags:[],version:"current",sidebarPosition:810,frontMatter:{sidebar_position:810,title:"81 - N.SourceGenerators.UnionTypes",description:"Generating different union types",slug:"/N.SourceGenerators.UnionTypes"},sidebar:"tutorialSidebar",previous:{title:"80 - AutoConstructor",permalink:"/RSCG_Examples/v2/docs/AutoConstructor"},next:{title:"82 - jsonConverterSourceGenerator",permalink:"/RSCG_Examples/v2/docs/jsonConverterSourceGenerator"}},c={},m=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share N.SourceGenerators.UnionTypes",id:"share-nsourcegeneratorsuniontypes",level:3},{value:"In the same category (FunctionalProgramming) - 13 other generators",id:"in-the-same-category-functionalprogramming---13-other-generators",level:3},{value:"cachesourcegenerator",id:"cachesourcegenerator",level:4},{value:"dunet",id:"dunet",level:4},{value:"Dusharp",id:"dusharp",level:4},{value:"Funcky.DiscriminatedUnion",id:"funckydiscriminatedunion",level:4},{value:"FunicularSwitch",id:"funicularswitch",level:4},{value:"OneOf",id:"oneof",level:4},{value:"PartiallyApplied",id:"partiallyapplied",level:4},{value:"rscg_queryables",id:"rscg_queryables",level:4},{value:"RSCG_Utils_Memo",id:"rscg_utils_memo",level:4},{value:"Sera.Union",id:"seraunion",level:4},{value:"TypeUtilities",id:"typeutilities",level:4},{value:"UnionGen",id:"uniongen",level:4},{value:"UnionsGenerator",id:"unionsgenerator",level:4}],d={toc:m},y="wrapper";function g(e){let{components:n,...l}=e;return(0,r.kt)(y,(0,a.Z)({},d,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"nsourcegeneratorsuniontypes--by-alexey-sosnin"},"N.SourceGenerators.UnionTypes  by Alexey Sosnin"),(0,r.kt)(s.Z,{toc:m,mdxType:"TOCInline"}),(0,r.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/N.SourceGenerators.UnionTypes/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/N.SourceGenerators.UnionTypes?label=N.SourceGenerators.UnionTypes",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Ne4to/N.SourceGenerators.UnionTypes"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/Ne4to/N.SourceGenerators.UnionTypes?label=updated",alt:"GitHub last commit"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/Ne4to/N.SourceGenerators.UnionTypes?style=social",alt:"GitHub Repo stars"})),(0,r.kt)("h2",{id:"details"},"Details"),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Name: ",(0,r.kt)("strong",{parentName:"p"},"N.SourceGenerators.UnionTypes")),(0,r.kt)("p",{parentName:"admonition"},"Discriminated union type source generator"),(0,r.kt)("p",{parentName:"admonition"},"Author: Alexey Sosnin"),(0,r.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/N.SourceGenerators.UnionTypes/"},"https://www.nuget.org/packages/N.SourceGenerators.UnionTypes/")),"   "),(0,r.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Ne4to/N.SourceGenerators.UnionTypes"},"https://github.com/Ne4to/N.SourceGenerators.UnionTypes")),(0,r.kt)("p",{parentName:"admonition"},"Source : ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Ne4to/N.SourceGenerators.UnionTypes"},"https://github.com/Ne4to/N.SourceGenerators.UnionTypes"))),(0,r.kt)("h3",{id:"original-readme"},"Original Readme"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("h1",{parentName:"admonition",id:"nsourcegeneratorsuniontypes"},"N.SourceGenerators.UnionTypes"),(0,r.kt)("p",{parentName:"admonition"},"Discriminated union type source generator"),(0,r.kt)("h2",{parentName:"admonition",id:"motivation"},"Motivation"),(0,r.kt)("p",{parentName:"admonition"},"C# doesn't support discriminated unions yet. This source generator helps automate writing union types with set of helper methods."),(0,r.kt)("h2",{parentName:"admonition",id:"getting-started"},"Getting Started"),(0,r.kt)("p",{parentName:"admonition"},"Add package reference to ",(0,r.kt)("inlineCode",{parentName:"p"},"N.SourceGenerators.UnionTypes")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"dotnet add package N.SourceGenerators.UnionTypes\n")),(0,r.kt)("p",{parentName:"admonition"},"Create a partial class or struct that will be used as a union type"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public partial class FooResult\n{\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Add types you want to use in a discriminated union"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public record Success(int Value);\npublic record ValidationError(string Message);\npublic record NotFoundError;\n\npublic partial class FooResult\n{\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Add ",(0,r.kt)("inlineCode",{parentName:"p"},"N.SourceGenerators.UnionTypes.UnionTypeAttribute")," to a union type."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using N.SourceGenerators.UnionTypes;\n\npublic record Success(int Value);\npublic record ValidationError(string Message);\npublic record NotFoundError;\n\n[UnionType(typeof(Success))]\n[UnionType(typeof(ValidationError))]\n[UnionType(typeof(NotFoundError))]\npublic partial class FooResult\n{\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Or you can use generic type."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public partial class OperationDataResult<[GenericUnionType] TResult, [GenericUnionType] TError>\n{\n}\n\n// extend generic type union with additional Int32 type\n[UnionType(typeof(int))]\npublic partial class ExtendedOperationDataResult<[GenericUnionType] TResult, [GenericUnionType] TError>\n{\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Null values are not allowed by default. This behavior can be overriden by ",(0,r.kt)("inlineCode",{parentName:"p"},"AllowNull = true")," parameter."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"[UnionType(typeof(int?), AllowNull = true)]\n[UnionType(typeof(string), AllowNull = true)]\npublic partial class ResultNullable<[GenericUnionType(AllowNull = true)] T>\n{\n}\n")),(0,r.kt)("h2",{parentName:"admonition",id:"examples"},"Examples"),(0,r.kt)("p",{parentName:"admonition"},"All examples can be found in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Ne4to/N.SourceGenerators.UnionTypes/blob/main/examples/N.SourceGenerators.UnionTypes.Examples/Program.cs"},"examples project")),(0,r.kt)("h3",{parentName:"admonition",id:"basic"},"Basic"),(0,r.kt)("p",{parentName:"admonition"},"Implicit conversion"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public FooResult ImplicitReturn()\n{\n    // you can return any union type variation without creating FooResult\n    return new NotFoundError();\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Explicit conversion"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public ValidationError ExplicitCast(FooResult result)\n{\n    return (ValidationError)result;\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Checking value type"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public void ValueTypeProperty()\n{\n    FooResult foo = GetFoo();\n    Type valueType = foo.ValueType; // returns typeof(NotFoundError)\n\n    static FooResult GetFoo()\n    {\n        return new NotFoundError();\n    }\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"TryGet method is used to check if union contains a specific type"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public void TryGetValue()\n{\n    FooResult foo = GetFoo();\n    if (foo.TryGetNotFoundError(out var notFoundError))\n    {\n        // make something with notFoundError\n    }\n\n    static FooResult GetFoo()\n    {\n        return new NotFoundError();\n    }\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Alias for each variant is generated based on type name. Use alias parameter to override it."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"[UnionType(typeof(int))]\n[UnionType(typeof(string))]\n// default alias is 'ArrayOfTupleOfIntAndString' but it is overriden by alias parameter\n[UnionType(typeof(Tuple<int,string>[]), alias: \"Items\")]\npublic partial class AliasResult\n{\n}\n")),(0,r.kt)("h3",{parentName:"admonition",id:"handle-all-variants"},"Handle all variants"),(0,r.kt)("p",{parentName:"admonition"},"Match and MatchAsync methods are used to convert union type to another type. These methods force you to handle all possible variations."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public IActionResult MatchMethod(FooResult result)\n{\n    return result.Match<IActionResult>(\n        success => new OkResult(),\n        validationError => new BadRequestResult(),\n        notFoundError => new NotFoundResult()\n    );\n}\n\npublic async Task<IActionResult> MatchAsyncMethod(FooResult result, CancellationToken cancellationToken)\n{\n    return await result.MatchAsync<IActionResult>(\n        static async (success, ct) =>\n        {\n            await SomeWork(success, ct);\n            return new OkResult();\n        }, static async (validationError, ct) =>\n        {\n            await SomeWork(validationError, ct);\n            return new BadRequestResult();\n        }, static async (notFoundError, ct) =>\n        {\n            await SomeWork(notFoundError, ct);\n            return new NotFoundResult();\n        }, cancellationToken);\n\n    static Task SomeWork<T>(T value, CancellationToken ct)\n    {\n        return Task.Delay(100, ct);\n    }\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Switch and SwitchAsync methods are used to execute some work based on inner type"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"}," public void SwitchMethod(FooResult result)\n{\n    result.Switch(\n        success => SomeWork(success),\n        validationError => SomeWork(validationError),\n        notFoundError => SomeWork(notFoundError)\n    );\n\n    static void SomeWork<T>(T value)\n    {\n        throw new NotImplementedException();\n    }\n}\n\npublic async Task SwitchAsyncMethod(FooResult result, CancellationToken cancellationToken)\n{\n    await result.SwitchAsync(\n        static async (success, ct) =>\n        {\n            await SomeWork(success, ct);\n        }, static async (validationError, ct) =>\n        {\n            await SomeWork(validationError, ct);\n        }, static async (notFoundError, ct) =>\n        {\n            await SomeWork(notFoundError, ct);\n        }, cancellationToken);\n\n    static Task SomeWork<T>(T value, CancellationToken ct)\n    {\n        return Task.Delay(100, ct);\n    }\n}\n")),(0,r.kt)("h3",{parentName:"admonition",id:"json-serialization-experimental"},"JSON serialization (EXPERIMENTAL)"),(0,r.kt)("p",{parentName:"admonition"},"To add JSON support"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"add ",(0,r.kt)("inlineCode",{parentName:"li"},"JsonPolymorphicUnion")," attribute to union type"),(0,r.kt)("li",{parentName:"ul"},"add ",(0,r.kt)("inlineCode",{parentName:"li"},"TypeDiscriminator")," to each type variant")),(0,r.kt)("h4",{parentName:"admonition",id:"limitations"},"Limitations:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},".NET 7 or newer"),(0,r.kt)("li",{parentName:"ul"},"only complex type variants")),(0,r.kt)("h4",{parentName:"admonition",id:"example"},"Example"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'[UnionType(typeof(JsonTestsFooJ), TypeDiscriminator = "Foo")]\n[UnionType(typeof(JsonTestsBarJ), TypeDiscriminator = "Bar")]\n[JsonPolymorphicUnion]\npublic partial class JsonTestsUnion\n{\n}\n')),(0,r.kt)("h3",{parentName:"admonition",id:"union-to-union-converter"},"Union to union converter"),(0,r.kt)("p",{parentName:"admonition"},"When one union type's variants is subset of another union type's variants use one of the following attributes to convert one type to another: ",(0,r.kt)("inlineCode",{parentName:"p"},"UnionConverterTo"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"UnionConverterFrom"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"UnionConverter"),"."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'[UnionConverterFrom(typeof(DataAccessResult))] // use this attribute\npublic partial class BusinessLogicResult\n{\n}\n\n[UnionConverterTo(typeof(BusinessLogicResult))] // OR this\npublic partial class DataAccessResult\n{\n}\n\n[UnionConverter(typeof(DataAccessResult), typeof(BusinessLogicResult))] // OR this\npublic static partial class Converters\n{\n}\n\npublic class Repository\n{\n    public DataAccessResult UpdateItem()\n    {\n        return new NotFoundError();\n    }\n}\n\npublic class Service\n{\n    private readonly Repository _repository;\n\n    public BusinessLogicResult Update()\n    {\n        var isValid = IsValid();\n        if (!isValid)\n        {\n            return new ValidationError("the item is not valid");\n        }\n\n        var repositoryResult = _repository.UpdateItem();\n        // implicit conversion DataAccessResult to BusinessLogicResult when `UnionConverterTo` or `UnionConverterFrom` attribute is used\n        return repositoryResult;\n        // OR extension method when UnionConverter attribute is used\n        return repositoryResult.Convert();\n    }\n\n    private bool IsValid() => throw new NotImplementedException();\n}\n'))),(0,r.kt)("h3",{id:"about"},"About"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Generating different union types")),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,r.kt)("p",null,"This is the CSharp Project that references ",(0,r.kt)("strong",{parentName:"p"},"N.SourceGenerators.UnionTypes")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {11}",showLineNumbers:!0,"{11}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="N.SourceGenerators.UnionTypes" Version="0.26.0" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"N.SourceGenerators.UnionTypes")," in ",(0,r.kt)("em",{parentName:"p"},"Program.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using UnionTypesDemo;\n\nConsole.WriteLine("Save or not");\nvar data = SaveToDatabase.Save(0);\nConsole.WriteLine(data.IsValidationError);\ndata = SaveToDatabase.Save(1);\nConsole.WriteLine(data.IsSuccess);\n\n'))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\ResultSave.cs",label:"ResultSave.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"N.SourceGenerators.UnionTypes")," in ",(0,r.kt)("em",{parentName:"p"},"ResultSave.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using N.SourceGenerators.UnionTypes;\nnamespace UnionTypesDemo;\npublic record Success(int Value);\npublic record ValidationError(string Message);\n\n[UnionType(typeof(Success))]\n[UnionType(typeof(ValidationError))]\npublic partial class ResultSave\n{\n}\n\n\n\n"))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\SaveToDatabase.cs",label:"SaveToDatabase.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"N.SourceGenerators.UnionTypes")," in ",(0,r.kt)("em",{parentName:"p"},"SaveToDatabase.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'namespace UnionTypesDemo;\n\npublic class SaveToDatabase\n{\n    public static ResultSave Save(int i)\n    {\n        if(i ==0)\n        {\n            return new ValidationError(" cannot save 0");\n        }\n        return new Success(i);\n    }\n}\n\n\n\n')))),(0,r.kt)("h3",{id:"generated-files"},"Generated Files"),(0,r.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\GenericUnionTypeAttribute.g.cs",label:"GenericUnionTypeAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.GenericParameter, Inherited = false, AllowMultiple = false)]\n    internal sealed class GenericUnionTypeAttribute : Attribute\n    {\n        public string? Alias { get; set; }\n        public bool AllowNull { get; set; }\n        public object? TypeDiscriminator { get; set; }\n    }\n}\n"))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\JsonPolymorphicUnionAttribute.g.cs",label:"JsonPolymorphicUnionAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, Inherited = false, AllowMultiple = false)]\n    internal sealed class JsonPolymorphicUnionAttribute : Attribute\n    {\n        public string? TypeDiscriminatorPropertyName { get; set; }\n    }\n}\n"))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\ResultSave.g.cs",label:"ResultSave.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#pragma warning disable\n#nullable enable\nnamespace UnionTypesDemo\n{\n    partial class ResultSave : System.IEquatable<ResultSave>\n    {\n        private readonly int _variantId;\n        private const int SuccessId = 1;\n        private readonly global::UnionTypesDemo.Success _success;\n        public bool IsSuccess => _variantId == SuccessId;\n\n        public global::UnionTypesDemo.Success AsSuccess\n        {\n            get\n            {\n                if (_variantId == SuccessId)\n                    return _success;\n                throw new System.InvalidOperationException($"Unable convert to Success. Inner value is {ValueAlias} not Success.");\n            }\n        }\n\n        public ResultSave(global::UnionTypesDemo.Success success)\n        {\n            System.ArgumentNullException.ThrowIfNull(success);\n            _variantId = SuccessId;\n            _success = success;\n        }\n\n        public static implicit operator ResultSave(global::UnionTypesDemo.Success success) => new ResultSave(success);\n        public static explicit operator global::UnionTypesDemo.Success(ResultSave value)\n        {\n            if (value._variantId == SuccessId)\n                return value._success;\n            throw new System.InvalidOperationException($"Unable convert to Success. Inner value is {value.ValueAlias} not Success.");\n        }\n\n        public bool TryGetSuccess([System.Diagnostics.CodeAnalysis.NotNullWhen(true)] out global::UnionTypesDemo.Success value)\n        {\n            if (_variantId == SuccessId)\n            {\n                value = _success;\n                return true;\n            }\n            else\n            {\n                value = default;\n                return false;\n            }\n        }\n\n        private const int ValidationErrorId = 2;\n        private readonly global::UnionTypesDemo.ValidationError _validationError;\n        public bool IsValidationError => _variantId == ValidationErrorId;\n\n        public global::UnionTypesDemo.ValidationError AsValidationError\n        {\n            get\n            {\n                if (_variantId == ValidationErrorId)\n                    return _validationError;\n                throw new System.InvalidOperationException($"Unable convert to ValidationError. Inner value is {ValueAlias} not ValidationError.");\n            }\n        }\n\n        public ResultSave(global::UnionTypesDemo.ValidationError validationError)\n        {\n            System.ArgumentNullException.ThrowIfNull(validationError);\n            _variantId = ValidationErrorId;\n            _validationError = validationError;\n        }\n\n        public static implicit operator ResultSave(global::UnionTypesDemo.ValidationError validationError) => new ResultSave(validationError);\n        public static explicit operator global::UnionTypesDemo.ValidationError(ResultSave value)\n        {\n            if (value._variantId == ValidationErrorId)\n                return value._validationError;\n            throw new System.InvalidOperationException($"Unable convert to ValidationError. Inner value is {value.ValueAlias} not ValidationError.");\n        }\n\n        public bool TryGetValidationError([System.Diagnostics.CodeAnalysis.NotNullWhen(true)] out global::UnionTypesDemo.ValidationError value)\n        {\n            if (_variantId == ValidationErrorId)\n            {\n                value = _validationError;\n                return true;\n            }\n            else\n            {\n                value = default;\n                return false;\n            }\n        }\n\n        public TOut Match<TOut>(global::System.Func<global::UnionTypesDemo.Success, TOut> matchSuccess, global::System.Func<global::UnionTypesDemo.ValidationError, TOut> matchValidationError)\n        {\n            if (_variantId == SuccessId)\n                return matchSuccess(_success);\n            if (_variantId == ValidationErrorId)\n                return matchValidationError(_validationError);\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public async global::System.Threading.Tasks.Task<TOut> MatchAsync<TOut>(global::System.Func<global::UnionTypesDemo.Success, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<TOut>> matchSuccess, global::System.Func<global::UnionTypesDemo.ValidationError, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<TOut>> matchValidationError, global::System.Threading.CancellationToken ct)\n        {\n            if (_variantId == SuccessId)\n                return await matchSuccess(_success, ct).ConfigureAwait(false);\n            if (_variantId == ValidationErrorId)\n                return await matchValidationError(_validationError, ct).ConfigureAwait(false);\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public void Switch(global::System.Action<global::UnionTypesDemo.Success> switchSuccess, global::System.Action<global::UnionTypesDemo.ValidationError> switchValidationError)\n        {\n            if (_variantId == SuccessId)\n            {\n                switchSuccess(_success);\n                return;\n            }\n\n            if (_variantId == ValidationErrorId)\n            {\n                switchValidationError(_validationError);\n                return;\n            }\n\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public async global::System.Threading.Tasks.Task SwitchAsync(global::System.Func<global::UnionTypesDemo.Success, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task> switchSuccess, global::System.Func<global::UnionTypesDemo.ValidationError, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task> switchValidationError, global::System.Threading.CancellationToken ct)\n        {\n            if (_variantId == SuccessId)\n            {\n                await switchSuccess(_success, ct).ConfigureAwait(false);\n                return;\n            }\n\n            if (_variantId == ValidationErrorId)\n            {\n                await switchValidationError(_validationError, ct).ConfigureAwait(false);\n                return;\n            }\n\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public global::System.Type ValueType\n        {\n            get\n            {\n                if (_variantId == SuccessId)\n                    return typeof(global::UnionTypesDemo.Success);\n                if (_variantId == ValidationErrorId)\n                    return typeof(global::UnionTypesDemo.ValidationError);\n                throw new System.InvalidOperationException("Inner type is unknown");\n            }\n        }\n\n        private string ValueAlias\n        {\n            get\n            {\n                if (_variantId == SuccessId)\n                    return "Success";\n                if (_variantId == ValidationErrorId)\n                    return "ValidationError";\n                throw new System.InvalidOperationException("Inner type is unknown");\n            }\n        }\n\n        public override int GetHashCode()\n        {\n            if (_variantId == SuccessId)\n                return _success.GetHashCode();\n            if (_variantId == ValidationErrorId)\n                return _validationError.GetHashCode();\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public static bool operator ==(ResultSave? left, ResultSave? right)\n        {\n            return Equals(left, right);\n        }\n\n        public static bool operator !=(ResultSave? left, ResultSave? right)\n        {\n            return !Equals(left, right);\n        }\n\n        public bool Equals(ResultSave? other)\n        {\n            if (ReferenceEquals(null, other))\n            {\n                return false;\n            }\n\n            if (ReferenceEquals(this, other))\n            {\n                return true;\n            }\n\n            if (ValueType != other.ValueType)\n            {\n                return false;\n            }\n\n            if (_variantId == SuccessId)\n                return System.Collections.Generic.EqualityComparer<global::UnionTypesDemo.Success>.Default.Equals(_success, other._success);\n            if (_variantId == ValidationErrorId)\n                return System.Collections.Generic.EqualityComparer<global::UnionTypesDemo.ValidationError>.Default.Equals(_validationError, other._validationError);\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public override string ToString()\n        {\n            if (_variantId == SuccessId)\n                return _success.ToString();\n            if (_variantId == ValidationErrorId)\n                return _validationError.ToString();\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public override bool Equals(object? other)\n        {\n            if (ReferenceEquals(null, other))\n            {\n                return false;\n            }\n\n            if (ReferenceEquals(this, other))\n            {\n                return true;\n            }\n\n            if (other.GetType() != typeof(ResultSave))\n            {\n                return false;\n            }\n\n            return Equals((ResultSave)other);\n        }\n    }\n}\n'))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\UnionConverterAttribute.g.cs",label:"UnionConverterAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = true)]\n    sealed class UnionConverterAttribute : Attribute\n    {\n        public Type FromType { get; }\n        public Type ToType { get; }\n        public string? MethodName { get; }\n\n        public UnionConverterAttribute(Type fromType, Type toType, string? methodName = null)\n        {\n            FromType = fromType;\n            ToType = toType;\n            MethodName = methodName;\n        }\n    }\n}\n"))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\UnionConverterFromAttribute.g.cs",label:"UnionConverterFromAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, Inherited = false, AllowMultiple = true)]\n    sealed class UnionConverterFromAttribute : Attribute\n    {\n        public Type FromType { get; }\n\n        public UnionConverterFromAttribute(Type fromType)\n        {\n            FromType = fromType;\n        }\n    }\n}\n"))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\UnionConverterToAttribute.g.cs",label:"UnionConverterToAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, Inherited = false, AllowMultiple = true)]\n    sealed class UnionConverterToAttribute : Attribute\n    {\n        public Type ToType { get; }\n\n        public UnionConverterToAttribute(Type toType)\n        {\n            ToType = toType;\n        }\n    }\n}\n"))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\UnionTypeAttribute.g.cs",label:"UnionTypeAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, Inherited = false, AllowMultiple = true)]\n    internal sealed class UnionTypeAttribute : Attribute\n    {\n        public Type Type { get; }\n        public string? Alias { get; }\n        public int Order { get; }\n        public bool AllowNull { get; set; }\n        public object? TypeDiscriminator { get; set; }\n\n        public UnionTypeAttribute(Type type, string? alias = null, [CallerLineNumber] int order = 0)\n        {\n            Type = type;\n            Alias = alias;\n            Order = order;\n        }\n    }\n}\n")))),(0,r.kt)("h2",{id:"usefull"},"Usefull"),(0,r.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{target:"_blank",href:t(96238).Z},"Download Example project N.SourceGenerators.UnionTypes "))),(0,r.kt)("h3",{id:"share-nsourcegeneratorsuniontypes"},"Share N.SourceGenerators.UnionTypes"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes&quote=N.SourceGenerators.UnionTypes",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes&text=N.SourceGenerators.UnionTypes:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes&title=N.SourceGenerators.UnionTypes",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes&title=N.SourceGenerators.UnionTypes&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/N.SourceGenerators.UnionTypes"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/N.SourceGenerators.UnionTypes")),(0,r.kt)("h3",{id:"in-the-same-category-functionalprogramming---13-other-generators"},"In the same category (FunctionalProgramming) - 13 other generators"),(0,r.kt)("h4",{id:"cachesourcegenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/cachesourcegenerator"},"cachesourcegenerator")),(0,r.kt)("h4",{id:"dunet"},(0,r.kt)("a",{parentName:"h4",href:"/docs/dunet"},"dunet")),(0,r.kt)("h4",{id:"dusharp"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Dusharp"},"Dusharp")),(0,r.kt)("h4",{id:"funckydiscriminatedunion"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Funcky.DiscriminatedUnion"},"Funcky.DiscriminatedUnion")),(0,r.kt)("h4",{id:"funicularswitch"},(0,r.kt)("a",{parentName:"h4",href:"/docs/FunicularSwitch"},"FunicularSwitch")),(0,r.kt)("h4",{id:"oneof"},(0,r.kt)("a",{parentName:"h4",href:"/docs/OneOf"},"OneOf")),(0,r.kt)("h4",{id:"partiallyapplied"},(0,r.kt)("a",{parentName:"h4",href:"/docs/PartiallyApplied"},"PartiallyApplied")),(0,r.kt)("h4",{id:"rscg_queryables"},(0,r.kt)("a",{parentName:"h4",href:"/docs/rscg_queryables"},"rscg_queryables")),(0,r.kt)("h4",{id:"rscg_utils_memo"},(0,r.kt)("a",{parentName:"h4",href:"/docs/RSCG_Utils_Memo"},"RSCG_Utils_Memo")),(0,r.kt)("h4",{id:"seraunion"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Sera.Union"},"Sera.Union")),(0,r.kt)("h4",{id:"typeutilities"},(0,r.kt)("a",{parentName:"h4",href:"/docs/TypeUtilities"},"TypeUtilities")),(0,r.kt)("h4",{id:"uniongen"},(0,r.kt)("a",{parentName:"h4",href:"/docs/UnionGen"},"UnionGen")),(0,r.kt)("h4",{id:"unionsgenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/UnionsGenerator"},"UnionsGenerator")))}g.isMDXComponent=!0},96238:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/files/N.SourceGenerators.UnionTypes-e47f9cff57e6757f4341b0e818858040.zip"}}]);