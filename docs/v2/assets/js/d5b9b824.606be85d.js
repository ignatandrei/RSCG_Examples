"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[8384],{56526:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>m,default:()=>k,frontMatter:()=>o,metadata:()=>d,toc:()=>g});var n=a(87462),r=(a(67294),a(3905)),i=a(73992),l=a(18679),s=a(68839);const o={sidebar_position:1610,title:"161 - Immediate.Handlers",description:"Generating mediator like handlers",slug:"/Immediate.Handlers"},m="Immediate.Handlers  by Stuart Turner",d={unversionedId:"RSCG-Examples/Immediate.Handlers",id:"RSCG-Examples/Immediate.Handlers",title:"161 - Immediate.Handlers",description:"Generating mediator like handlers",source:"@site/docs/RSCG-Examples/Immediate.Handlers.md",sourceDirName:"RSCG-Examples",slug:"/Immediate.Handlers",permalink:"/RSCG_Examples/v2/docs/Immediate.Handlers",draft:!1,tags:[],version:"current",sidebarPosition:1610,frontMatter:{sidebar_position:1610,title:"161 - Immediate.Handlers",description:"Generating mediator like handlers",slug:"/Immediate.Handlers"},sidebar:"tutorialSidebar",previous:{title:"160 - Dusharp",permalink:"/RSCG_Examples/v2/docs/Dusharp"},next:{title:"162 - MinimalHelpers.Routing.Analyzers",permalink:"/RSCG_Examples/v2/docs/MinimalHelpers.Routing.Analyzers"}},p={},g=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share Immediate.Handlers",id:"share-immediatehandlers",level:3},{value:"In the same category (Mediator) - 2 other generators",id:"in-the-same-category-mediator---2-other-generators",level:3},{value:"DeeDee",id:"deedee",level:4},{value:"Mediator",id:"mediator",level:4}],h={toc:g},c="wrapper";function k(e){let{components:t,...o}=e;return(0,r.kt)(c,(0,n.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"immediatehandlers--by-stuart-turner"},"Immediate.Handlers  by Stuart Turner"),(0,r.kt)(s.Z,{toc:g,mdxType:"TOCInline"}),(0,r.kt)("h2",{id:"nuget--site-data"},"NuGet / site data"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Immediate.Handlers/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Immediate.Handlers?label=Immediate.Handlers",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/immediateplatform/Immediate.Handlers"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/immediateplatform/Immediate.Handlers?label=updated",alt:"GitHub last commit"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/immediateplatform/Immediate.Handlers?style=social",alt:"GitHub Repo stars"})),(0,r.kt)("h2",{id:"details"},"Details"),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Name: ",(0,r.kt)("strong",{parentName:"p"},"Immediate.Handlers")),(0,r.kt)("p",{parentName:"admonition"},"TBD"),(0,r.kt)("p",{parentName:"admonition"},"Author: Stuart Turner"),(0,r.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/Immediate.Handlers/"},"https://www.nuget.org/packages/Immediate.Handlers/")),"   "),(0,r.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/immediateplatform/Immediate.Handlers"},"https://github.com/immediateplatform/Immediate.Handlers")),(0,r.kt)("p",{parentName:"admonition"},"Source: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/immediateplatform/Immediate.Handlers"},"https://github.com/immediateplatform/Immediate.Handlers"))),(0,r.kt)("h3",{id:"original-readme"},"Original Readme"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("h1",{parentName:"admonition",id:"immediatehandlers"},"Immediate.Handlers"),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Immediate.Handlers/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/Immediate.Handlers.svg?style=plastic",alt:"NuGet"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://GitHub.com/ImmediatePlatform/Immediate.Handlers/releases/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/release/ImmediatePlatform/Immediate.Handlers.svg",alt:"GitHub release"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ImmediatePlatform/Immediate.Handlers/blob/master/license.txt"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/license/ImmediatePlatform/Immediate.Handlers.svg",alt:"GitHub license"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://GitHub.com/ImmediatePlatform/Immediate.Handlers/issues/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/issues/ImmediatePlatform/Immediate.Handlers.svg",alt:"GitHub issues"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://GitHub.com/ImmediatePlatform/Immediate.Handlers/issues?q=is%3Aissue+is%3Aclosed"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/issues-closed/ImmediatePlatform/Immediate.Handlers.svg",alt:"GitHub issues-closed"}))," "),(0,r.kt)("h2",{parentName:"admonition",id:"github-actions"},(0,r.kt)("a",{parentName:"h2",href:"https://github.com/ImmediatePlatform/Immediate.Handlers/actions"},(0,r.kt)("img",{parentName:"a",src:"https://github.com/ImmediatePlatform/Immediate.Handlers/actions/workflows/build.yml/badge.svg",alt:"GitHub Actions"}))),(0,r.kt)("p",{parentName:"admonition"},"Immediate.Handlers is an implementation of the mediator pattern in .NET using source-generation. All pipeline behaviors\nare determined and the call-tree built at compile-time; meaning that all dependencies are enforced via compile-time\nsafety checks. Behaviors and dependencies are obtained via DI at runtime based on compile-time determined dependencies."),(0,r.kt)("h4",{parentName:"admonition",id:"examples"},"Examples"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Minimal Api: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/immediateplatform/Immediate.Handlers/samples/Normal"},"Normal"))),(0,r.kt)("h2",{parentName:"admonition",id:"installing-immediatehandlers"},"Installing Immediate.Handlers"),(0,r.kt)("p",{parentName:"admonition"},"You can install ",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Immediate.Handlers"},"Immediate.Handlers with NuGet"),":"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"Install-Package Immediate.Handlers\n")),(0,r.kt)("p",{parentName:"admonition"},"Or via the .NET Core command line interface:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"dotnet add package Immediate.Handlers\n")),(0,r.kt)("p",{parentName:"admonition"},"Either commands, from Package Manager Console or .NET Core CLI, will download and install Immediate.Handlers."),(0,r.kt)("h2",{parentName:"admonition",id:"using-immediatehandlers"},"Using Immediate.Handlers"),(0,r.kt)("h3",{parentName:"admonition",id:"creating-handlers"},"Creating Handlers"),(0,r.kt)("p",{parentName:"admonition"},"Create a Handler by adding the following code:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"[Handler]\npublic static partial class GetUsersQuery\n{\n    public record Query;\n\n    private static ValueTask<IEnumerable<User>> HandleAsync(\n        Query _,\n        UsersService usersService,\n        CancellationToken token\n    )\n    {\n        return usersService.GetUsers();\n    }\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"This will automatically create a new class, ",(0,r.kt)("inlineCode",{parentName:"p"},"GetUsersQuery.Handler"),", which encapsulates the following:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"attaching any behaviors defined for all queries in the assembly"),(0,r.kt)("li",{parentName:"ul"},"using a class to receive any DI services, such as ",(0,r.kt)("inlineCode",{parentName:"li"},"UsersService"))),(0,r.kt)("p",{parentName:"admonition"},"Any consumer can now do the following:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public class Consumer(GetUsersQuery.Handler handler)\n{\n    public async Task Consumer(CancellationToken token)\n    {\n        var response = await handler.HandleAsync(new(), token);\n        // do something with response\n    }\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"For Command handlers, use a ",(0,r.kt)("inlineCode",{parentName:"p"},"ValueTask"),", and Immediate.Handlers will insert a return type\nof ",(0,r.kt)("inlineCode",{parentName:"p"},"ValueTuple")," to your handler automatically. "),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"[Handler]\npublic static partial class CreateUserCommand\n{\n    public record Command(string Email);\n\n    private static async ValueTask HandleAsync( \n        Command command,\n        UsersService usersService,\n        CancellationToken token\n    )\n    {\n        await usersService.CreateUser(command.Email);\n    }\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"In case your project layout does not allow direct for references between consumer and handler, the handler will also be\nregistered as an ",(0,r.kt)("inlineCode",{parentName:"p"},"IHandler<TRequest, Response>"),"."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public class Consumer(IHandler<Query, IEnumerable<User>> handler)\n{\n    public async Task Consumer(CancellationToken token)\n    {\n        var response = await handler.HandleAsync(new(), token);\n        // do something with response\n    }\n}\n")),(0,r.kt)("h3",{parentName:"admonition",id:"creating-behaviors"},"Creating Behaviors"),(0,r.kt)("p",{parentName:"admonition"},"Create a behavior by implementing the ",(0,r.kt)("inlineCode",{parentName:"p"},"Immediate.Handlers.Shared.Behaviors<,>")," class, as so:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'public sealed class LoggingBehavior<TRequest, TResponse>(ILogger<LoggingBehavior<TRequest, TResponse>> logger)\n    : Behavior<TRequest, TResponse>\n{\n    public override async ValueTask<TResponse> HandleAsync(TRequest request, CancellationToken cancellationToken)\n    {\n        logger.LogInformation("LoggingBehavior.Enter");\n        var response = await Next(request, cancellationToken);\n        logger.LogInformation("LoggingBehavior.Exit");\n        return response;\n    }\n}\n')),(0,r.kt)("p",{parentName:"admonition"},"This can be registered assembly-wide using:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"[assembly: Behaviors(\n    typeof(LoggingBehavior<,>)\n)]\n")),(0,r.kt)("p",{parentName:"admonition"},"or on an individual handler using:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"[Handler]\n[Behavior(\n    typeof(LoggingBehavior<,>)\n)]\npublic static class GetUsersQuery\n{\n    // ..\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Once added to the pipeline, the behavior will be called as part of the pipeline to handle a request."),(0,r.kt)("p",{parentName:"admonition"},"Note: adding a ",(0,r.kt)("inlineCode",{parentName:"p"},"[Behavior]")," attribute to a handler will disregard all assembly-wide behaviors for that handler, so any\nglobal behaviors necessary must be independently added to the handler override behaviors list."),(0,r.kt)("h4",{parentName:"admonition",id:"behavior-constraints"},"Behavior Constraints"),(0,r.kt)("p",{parentName:"admonition"},"A constraint can be added to a behavior by using:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"public sealed class LoggingBehavior<TRequest, TResponse>\n    : Behavior<TRequest, TResponse>\n    where TRequest : IRequestConstraint\n    where TResponse : IResponseConstraint\n")),(0,r.kt)("p",{parentName:"admonition"},"When a pipeline is generated, all potential behaviors are evaluated against the request and response types, and if\neither type does not match a given constraint, the behavior is not added to the generated pipeline."),(0,r.kt)("h3",{parentName:"admonition",id:"registering-with-iservicecollection"},"Registering with ",(0,r.kt)("inlineCode",{parentName:"h3"},"IServiceCollection")),(0,r.kt)("p",{parentName:"admonition"},"Immediate.Handlers supports ",(0,r.kt)("inlineCode",{parentName:"p"},"Microsoft.Extensions.DependencyInjection.Abstractions")," directly. "),(0,r.kt)("h4",{parentName:"admonition",id:"registering-handlers"},"Registering Handlers"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"services.AddHandlers();\n")),(0,r.kt)("p",{parentName:"admonition"},"This registers all classes in the assembly marked with ",(0,r.kt)("inlineCode",{parentName:"p"},"[Handler]"),"."),(0,r.kt)("h4",{parentName:"admonition",id:"registering-behaviors"},"Registering Behaviors"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cs"},"services.AddBehaviors();\n")),(0,r.kt)("p",{parentName:"admonition"},"This registers all behaviors referenced in any ",(0,r.kt)("inlineCode",{parentName:"p"},"[Behaviors]")," attribute."),(0,r.kt)("h3",{parentName:"admonition",id:"using-with-swashbuckle"},"Using with Swashbuckle"),(0,r.kt)("p",{parentName:"admonition"},"For Swagger to work the JSON schema generated is required to have unique schemaId's. To achieve this, Swashbuckle uses class names as simple schemaId's.\nWhen using Immediate Handlers classes with a controller action inside, you might end up with Swashbuckle stating an error similar to this:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},'Swashbuckle.AspNetCore.SwaggerGen.SwaggerGeneratorException: Failed to generate schema for type - MyApp.Api.DeleteUser+Command. See inner exception\nSystem.InvalidOperationException: Can\'t use schemaId "$Command" for type "$MyApp.Api.DeleteUser+Command". The same schemaId is already used for type "$MyApp.Api.CreateUserCommand+Command"\n')),(0,r.kt)("p",{parentName:"admonition"},"This error indicates Swashbuckle is trying to use two classes named ",(0,r.kt)("inlineCode",{parentName:"p"},"Command")," from two (or more) different Handlers in different namespaces."),(0,r.kt)("p",{parentName:"admonition"},"To fix this, you have to define the following options in your SwaggerGen configuration:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'builder.Services.AddSwaggerGen( options =>\n{\n    options.CustomSchemaIds(x => x.FullName?.Replace("+", ".", StringComparison.Ordinal));\n});\n')),(0,r.kt)("h2",{parentName:"admonition",id:"performance-comparisons"},"Performance Comparisons"),(0,r.kt)("p",{parentName:"admonition"},"All performance benchmarks reported use the following environment:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"// * Summary *\n\nBenchmarkDotNet v0.13.12, Windows 11 (10.0.22621.3007/22H2/2022Update/SunValley2)\n12th Gen Intel Core i7-12700H, 1 CPU, 20 logical and 14 physical cores\n.NET SDK 8.0.101\n  [Host]     : .NET 8.0.1 (8.0.123.58001), X64 RyuJIT AVX2\n  DefaultJob : .NET 8.0.1 (8.0.123.58001), X64 RyuJIT AVX2\n")),(0,r.kt)("h4",{parentName:"admonition",id:"benchmarkssimple"},(0,r.kt)("a",{parentName:"h4",href:"https://github.com/immediateplatform/Immediate.Handlers/benchmarks/Benchmark.Simple"},"Benchmarks.Simple")),(0,r.kt)("p",{parentName:"admonition"},"This benchmark tests the various mediator implementations with a single request/response handler."),(0,r.kt)("table",{parentName:"admonition"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Error"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Ratio"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Rank"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Allocated"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_Baseline"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.7701 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.0180 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_IHandler"),(0,r.kt)("td",{parentName:"tr",align:"right"},"15.6780 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.0476 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"20.36"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2"),(0,r.kt)("td",{parentName:"tr",align:"right"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_ImmediateHandler"),(0,r.kt)("td",{parentName:"tr",align:"right"},"16.6023 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.0561 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"21.56"),(0,r.kt)("td",{parentName:"tr",align:"right"},"3"),(0,r.kt)("td",{parentName:"tr",align:"right"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_Mediator"),(0,r.kt)("td",{parentName:"tr",align:"right"},"27.2993 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.4269 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"35.49"),(0,r.kt)("td",{parentName:"tr",align:"right"},"4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_IMediator"),(0,r.kt)("td",{parentName:"tr",align:"right"},"31.3420 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.1006 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"40.64"),(0,r.kt)("td",{parentName:"tr",align:"right"},"5"),(0,r.kt)("td",{parentName:"tr",align:"right"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_MediatR"),(0,r.kt)("td",{parentName:"tr",align:"right"},"68.3384 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.3453 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"88.73"),(0,r.kt)("td",{parentName:"tr",align:"right"},"6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"240 B")))),(0,r.kt)("h4",{parentName:"admonition",id:"benchmarkslarge"},(0,r.kt)("a",{parentName:"h4",href:"https://github.com/immediateplatform/Immediate.Handlers/benchmarks/Benchmark.Large"},"Benchmarks.Large")),(0,r.kt)("p",{parentName:"admonition"},"This benchmark tests the various mediator implementations in the face of 999 request/response handlers."),(0,r.kt)("table",{parentName:"admonition"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Error"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Ratio"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Rank"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Allocated"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_Baseline"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.5656 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.0252 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_ImmediateHandler"),(0,r.kt)("td",{parentName:"tr",align:"right"},"15.4346 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.0516 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"27.34"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2"),(0,r.kt)("td",{parentName:"tr",align:"right"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_IHandler"),(0,r.kt)("td",{parentName:"tr",align:"right"},"16.0959 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.0552 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"28.50"),(0,r.kt)("td",{parentName:"tr",align:"right"},"3"),(0,r.kt)("td",{parentName:"tr",align:"right"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_Mediator"),(0,r.kt)("td",{parentName:"tr",align:"right"},"27.4104 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.0449 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"48.54"),(0,r.kt)("td",{parentName:"tr",align:"right"},"4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_MediatR"),(0,r.kt)("td",{parentName:"tr",align:"right"},"80.0953 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.4749 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"141.83"),(0,r.kt)("td",{parentName:"tr",align:"right"},"5"),(0,r.kt)("td",{parentName:"tr",align:"right"},"240 B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_IMediator"),(0,r.kt)("td",{parentName:"tr",align:"right"},"435.3890 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.6399 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"771.01"),(0,r.kt)("td",{parentName:"tr",align:"right"},"6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"-")))),(0,r.kt)("h4",{parentName:"admonition",id:"benchmarksbehaviors"},(0,r.kt)("a",{parentName:"h4",href:"https://github.com/immediateplatform/Immediate.Handlers/benchmarks/Benchmark.Behaviors"},"Benchmarks.Behaviors")),(0,r.kt)("p",{parentName:"admonition"},"This benchmark tests a more realistic scenario of using 1 behavior and 1 service."),(0,r.kt)("table",{parentName:"admonition"},(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Method"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Mean"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Error"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Ratio"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Rank"),(0,r.kt)("th",{parentName:"tr",align:"right"},"Allocated"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_Baseline"),(0,r.kt)("td",{parentName:"tr",align:"right"},"56.71 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.174 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.00"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1"),(0,r.kt)("td",{parentName:"tr",align:"right"},"40 B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_IHandler"),(0,r.kt)("td",{parentName:"tr",align:"right"},"78.90 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.304 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.39"),(0,r.kt)("td",{parentName:"tr",align:"right"},"2"),(0,r.kt)("td",{parentName:"tr",align:"right"},"40 B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_ImmediateHandler"),(0,r.kt)("td",{parentName:"tr",align:"right"},"80.02 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.288 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.41"),(0,r.kt)("td",{parentName:"tr",align:"right"},"3"),(0,r.kt)("td",{parentName:"tr",align:"right"},"40 B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_Mediator"),(0,r.kt)("td",{parentName:"tr",align:"right"},"101.23 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.263 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.78"),(0,r.kt)("td",{parentName:"tr",align:"right"},"4"),(0,r.kt)("td",{parentName:"tr",align:"right"},"40 B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_IMediator"),(0,r.kt)("td",{parentName:"tr",align:"right"},"104.92 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"0.297 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.85"),(0,r.kt)("td",{parentName:"tr",align:"right"},"5"),(0,r.kt)("td",{parentName:"tr",align:"right"},"40 B")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"SendRequest_MediatR"),(0,r.kt)("td",{parentName:"tr",align:"right"},"201.27 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"1.023 ns"),(0,r.kt)("td",{parentName:"tr",align:"right"},"3.55"),(0,r.kt)("td",{parentName:"tr",align:"right"},"6"),(0,r.kt)("td",{parentName:"tr",align:"right"},"560 B"))))),(0,r.kt)("h3",{id:"about"},"About"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Generating mediator like handlers")),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("h3",{id:"example-source-csproj-source-files"},"Example (source csproj, source files)"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,r.kt)("p",null,"This is the CSharp Project that references ",(0,r.kt)("strong",{parentName:"p"},"Immediate.Handlers")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {14}",showLineNumbers:!0,"{14}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n    <ItemGroup>\n        <PackageReference Include="Immediate.Handlers" Version="1.6.1" />\n        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />\n        <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="8.0.1" />        \n    </ItemGroup>\n\n</Project>\n\n'))),(0,r.kt)(l.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Immediate.Handlers\\src\\Mediator\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Immediate.Handlers")," in ",(0,r.kt)("em",{parentName:"p"},"Program.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'\nConsole.WriteLine("Hello, World!");\nServiceCollection services = new ();\nservices.AddSingleton<ILoggerFactory, NullLoggerFactory>();\nservices.AddSingleton(typeof(ILogger<>), typeof(NullLogger<>));\nservices.AddHandlers();\nservices.AddBehaviors();\nIHandler<Ping, Pong> handler = services.BuildServiceProvider().GetRequiredService<IHandler<Ping, Pong>>();\nvar id = Guid.NewGuid();\nvar request = new Ping(id);\nvar pong = await handler.HandleAsync(request, CancellationToken.None);\nConsole.WriteLine($"Got pong with id {pong.Id}!");\n\n'))),(0,r.kt)(l.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Immediate.Handlers\\src\\Mediator\\PingPong.cs",label:"PingPong.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Immediate.Handlers")," in ",(0,r.kt)("em",{parentName:"p"},"PingPong.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using Immediate.Handlers.Shared;\n\npublic sealed record Ping(Guid Id);// : IRequest<Pong>;\n\npublic sealed record Pong(Guid Id);\n\n\n[Handler]\n[Behaviors(\n    typeof(LoggingBehavior<,>)\n)]\npublic static partial class PingHandler //: IPipelineAction<Ping, Pong>\n{\n\n    private static async ValueTask<Pong> HandleAsync(Ping request, CancellationToken token)\n    {\n        await Task.Delay(1000);\n        Console.WriteLine("Returning pong!");\n        return new Pong(request.Id);\n    }\n}\n\n'))),(0,r.kt)(l.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Immediate.Handlers\\src\\Mediator\\GenericLoggerHandler.cs",label:"GenericLoggerHandler.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Immediate.Handlers")," in ",(0,r.kt)("em",{parentName:"p"},"GenericLoggerHandler.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'\npublic sealed class LoggingBehavior<TRequest, TResponse>(ILogger<LoggingBehavior<TRequest, TResponse>>? logger)\n    : Behavior<TRequest, TResponse>\n{\n    public override async ValueTask<TResponse> HandleAsync(TRequest request, CancellationToken cancellationToken)\n    {\n        Console.WriteLine("I am a logging behaviour");\n        logger?.LogInformation("LoggingBehavior.Enter");\n        var response = await Next(request, cancellationToken);\n        logger?.LogInformation("LoggingBehavior.Exit");\n        return response;\n    }\n}\n'))),(0,r.kt)(l.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Immediate.Handlers\\src\\Mediator\\globals.cs",label:"globals.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Immediate.Handlers")," in ",(0,r.kt)("em",{parentName:"p"},"globals.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"global using Microsoft.Extensions.DependencyInjection;\nglobal using Immediate.Handlers.Shared;\nglobal using Microsoft.Extensions.Logging;\nglobal using Mediator;\nglobal using Microsoft.Extensions.Logging.Abstractions;\n\n")))),(0,r.kt)("h3",{id:"generated-files"},"Generated Files"),(0,r.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Immediate.Handlers\\src\\Mediator\\obj\\GX\\Immediate.Handlers.Generators\\Immediate.Handlers.Generators.ImmediateHandlers.ImmediateHandlersGenerator\\IH..PingHandler.g.cs",label:"IH..PingHandler.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using Microsoft.Extensions.DependencyInjection;\n\n#pragma warning disable CS1591\n\npartial class PingHandler\n{\n    public sealed partial class Handler : global::Immediate.Handlers.Shared.IHandler<global::Ping, global::Pong>\n    {\n        private readonly global::PingHandler.HandleBehavior _handleBehavior;\n        private readonly global::LoggingBehavior<global::Ping, global::Pong> _loggingBehavior;\n\n        public Handler(\n            global::PingHandler.HandleBehavior handleBehavior,\n            global::LoggingBehavior<global::Ping, global::Pong> loggingBehavior\n        )\n        {\n            var handlerType = typeof(PingHandler);\n\n            _handleBehavior = handleBehavior;\n\n            _loggingBehavior = loggingBehavior;\n            _loggingBehavior.HandlerType = handlerType;\n\n            _loggingBehavior.SetInnerHandler(_handleBehavior);\n        }\n\n        public async global::System.Threading.Tasks.ValueTask<global::Pong> HandleAsync(\n            global::Ping request,\n            global::System.Threading.CancellationToken cancellationToken = default\n        )\n        {\n            return await _loggingBehavior\n                .HandleAsync(request, cancellationToken)\n                .ConfigureAwait(false);\n        }\n    }\n\n    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]\n    public sealed class HandleBehavior : global::Immediate.Handlers.Shared.Behavior<global::Ping, global::Pong>\n    {\n\n        public HandleBehavior(\n        )\n        {\n        }\n\n        public override async global::System.Threading.Tasks.ValueTask<global::Pong> HandleAsync(\n            global::Ping request,\n            global::System.Threading.CancellationToken cancellationToken\n        )\n        {\n            return await global::PingHandler\n                .HandleAsync(\n                    request\n                    , cancellationToken\n                )\n                .ConfigureAwait(false);\n        }\n    }\n\n    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]\n    public static IServiceCollection AddHandlers(\n        IServiceCollection services,\n        ServiceLifetime lifetime = ServiceLifetime.Scoped\n    )\n    {\n        services.Add(new(typeof(global::PingHandler.Handler), typeof(global::PingHandler.Handler), lifetime));\n        services.Add(new(typeof(global::Immediate.Handlers.Shared.IHandler<global::Ping, global::Pong>), typeof(global::PingHandler.Handler), lifetime));\n        services.Add(new(typeof(global::PingHandler.HandleBehavior), typeof(global::PingHandler.HandleBehavior), lifetime));\n        return services;\n    }\n}\n\n"))),(0,r.kt)(l.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Immediate.Handlers\\src\\Mediator\\obj\\GX\\Immediate.Handlers.Generators\\Immediate.Handlers.Generators.ImmediateHandlers.ImmediateHandlersGenerator\\IH.ServiceCollectionExtensions.g.cs",label:"IH.ServiceCollectionExtensions.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using Microsoft.Extensions.DependencyInjection;\nusing Microsoft.Extensions.DependencyInjection.Extensions;\n\n#pragma warning disable CS1591\n\nnamespace Mediator;\n\npublic static class HandlerServiceCollectionExtensions\n{\n    public static IServiceCollection AddBehaviors(\n        this IServiceCollection services)\n    {\n        services.TryAddTransient(typeof(global::LoggingBehavior<,>));\n        \n        return services;\n    }\n\n    public static IServiceCollection AddHandlers(\n        this IServiceCollection services,\n        ServiceLifetime lifetime = ServiceLifetime.Scoped\n    )\n    {\n        global::PingHandler.AddHandlers(services, lifetime);\n        \n        return services;\n    }\n}\n\n")))),(0,r.kt)("h2",{id:"useful"},"Useful"),(0,r.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{target:"_blank",href:a(52382).Z},"Download Example project Immediate.Handlers "))),(0,r.kt)("h3",{id:"share-immediatehandlers"},"Share Immediate.Handlers"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmediate.Handlers&quote=Immediate.Handlers",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmediate.Handlers&text=Immediate.Handlers:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmediate.Handlers",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmediate.Handlers&title=Immediate.Handlers",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmediate.Handlers&title=Immediate.Handlers&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FImmediate.Handlers",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Immediate.Handlers"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Immediate.Handlers")),(0,r.kt)("h3",{id:"in-the-same-category-mediator---2-other-generators"},"In the same category (Mediator) - 2 other generators"),(0,r.kt)("h4",{id:"deedee"},(0,r.kt)("a",{parentName:"h4",href:"/docs/DeeDee"},"DeeDee")),(0,r.kt)("h4",{id:"mediator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Mediator"},"Mediator")))}k.isMDXComponent=!0},52382:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Immediate.Handlers-f1a3ea7866fa75c75443968535b5354d.zip"}}]);