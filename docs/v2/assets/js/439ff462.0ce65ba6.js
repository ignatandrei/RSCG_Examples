"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[4611],{7297:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>p,default:()=>m,frontMatter:()=>u,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"RSCG-Examples/N.SourceGenerators.UnionTypes","title":"81 - N.SourceGenerators.UnionTypes","description":"Generating different union types","source":"@site/docs/RSCG-Examples/N.SourceGenerators.UnionTypes.md","sourceDirName":"RSCG-Examples","slug":"/N.SourceGenerators.UnionTypes","permalink":"/RSCG_Examples/v2/docs/N.SourceGenerators.UnionTypes","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":810,"frontMatter":{"sidebar_position":810,"title":"81 - N.SourceGenerators.UnionTypes","description":"Generating different union types","slug":"/N.SourceGenerators.UnionTypes"},"sidebar":"tutorialSidebar","previous":{"title":"80 - AutoConstructor","permalink":"/RSCG_Examples/v2/docs/AutoConstructor"},"next":{"title":"82 - jsonConverterSourceGenerator","permalink":"/RSCG_Examples/v2/docs/jsonConverterSourceGenerator"}}');var s=r(74848),o=r(28453),i=r(11470),a=r(19365),l=r(14252),c=r(18978);const u={sidebar_position:810,title:"81 - N.SourceGenerators.UnionTypes",description:"Generating different union types",slug:"/N.SourceGenerators.UnionTypes"},p="N.SourceGenerators.UnionTypes  by Alexey Sosnin",d={},h=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Motivation",id:"motivation",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Examples",id:"examples",level:2},{value:"Basic",id:"basic",level:3},{value:"Handle all variants",id:"handle-all-variants",level:3},{value:"JSON serialization (EXPERIMENTAL)",id:"json-serialization-experimental",level:3},{value:"Limitations:",id:"limitations",level:4},{value:"Example",id:"example",level:4},{value:"Union to union converter",id:"union-to-union-converter",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share N.SourceGenerators.UnionTypes",id:"share-nsourcegeneratorsuniontypes",level:3},...c.RM];function y(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"nsourcegeneratorsuniontypes--by-alexey-sosnin",children:"N.SourceGenerators.UnionTypes  by Alexey Sosnin"})}),"\n",(0,s.jsx)(l.A,{toc:h}),"\n",(0,s.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/N.SourceGenerators.UnionTypes/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/N.SourceGenerators.UnionTypes?label=N.SourceGenerators.UnionTypes",alt:"Nuget"})}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/Ne4to/N.SourceGenerators.UnionTypes",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/Ne4to/N.SourceGenerators.UnionTypes?label=updated",alt:"GitHub last commit"})}),"\n",(0,s.jsx)(n.img,{src:"https://img.shields.io/github/stars/Ne4to/N.SourceGenerators.UnionTypes?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,s.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,s.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["Name: ",(0,s.jsx)(n.strong,{children:"N.SourceGenerators.UnionTypes"})]}),(0,s.jsx)(n.p,{children:"Discriminated union type source generator"}),(0,s.jsx)(n.p,{children:"Author: Alexey Sosnin"}),(0,s.jsxs)(n.p,{children:["NuGet:\n",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/N.SourceGenerators.UnionTypes/",children:"https://www.nuget.org/packages/N.SourceGenerators.UnionTypes/"})})]}),(0,s.jsxs)(n.p,{children:["You can find more details at ",(0,s.jsx)(n.a,{href:"https://github.com/Ne4to/N.SourceGenerators.UnionTypes",children:"https://github.com/Ne4to/N.SourceGenerators.UnionTypes"})]}),(0,s.jsxs)(n.p,{children:["Source: ",(0,s.jsx)(n.a,{href:"https://github.com/Ne4to/N.SourceGenerators.UnionTypes",children:"https://github.com/Ne4to/N.SourceGenerators.UnionTypes"})]})]}),"\n",(0,s.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.h1,{id:"nsourcegeneratorsuniontypes",children:"N.SourceGenerators.UnionTypes"}),(0,s.jsx)(n.p,{children:"Discriminated union type source generator"}),(0,s.jsx)(n.h2,{id:"motivation",children:"Motivation"}),(0,s.jsx)(n.p,{children:"C# doesn't support discriminated unions yet. This source generator helps automate writing union types with set of helper methods."}),(0,s.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),(0,s.jsxs)(n.p,{children:["Add package reference to ",(0,s.jsx)(n.code,{children:"N.SourceGenerators.UnionTypes"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"dotnet add package N.SourceGenerators.UnionTypes\n"})}),(0,s.jsx)(n.p,{children:"Create a partial class or struct that will be used as a union type"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public partial class FooResult\n{\n}\n"})}),(0,s.jsx)(n.p,{children:"Add types you want to use in a discriminated union"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public record Success(int Value);\npublic record ValidationError(string Message);\npublic record NotFoundError;\n\npublic partial class FooResult\n{\n}\n"})}),(0,s.jsxs)(n.p,{children:["Add ",(0,s.jsx)(n.code,{children:"N.SourceGenerators.UnionTypes.UnionTypeAttribute"})," to a union type."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"using N.SourceGenerators.UnionTypes;\n\npublic record Success(int Value);\npublic record ValidationError(string Message);\npublic record NotFoundError;\n\n[UnionType(typeof(Success))]\n[UnionType(typeof(ValidationError))]\n[UnionType(typeof(NotFoundError))]\npublic partial class FooResult\n{\n}\n"})}),(0,s.jsx)(n.p,{children:"Or you can use generic type."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public partial class OperationDataResult<[GenericUnionType] TResult, [GenericUnionType] TError>\n{\n}\n\n// extend generic type union with additional Int32 type\n[UnionType(typeof(int))]\npublic partial class ExtendedOperationDataResult<[GenericUnionType] TResult, [GenericUnionType] TError>\n{\n}\n"})}),(0,s.jsxs)(n.p,{children:["Null values are not allowed by default. This behavior can be overriden by ",(0,s.jsx)(n.code,{children:"AllowNull = true"})," parameter."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"[UnionType(typeof(int?), AllowNull = true)]\n[UnionType(typeof(string), AllowNull = true)]\npublic partial class ResultNullable<[GenericUnionType(AllowNull = true)] T>\n{\n}\n"})}),(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),(0,s.jsxs)(n.p,{children:["All examples can be found in ",(0,s.jsx)(n.a,{href:"https://github.com/Ne4to/N.SourceGenerators.UnionTypes/blob/main/examples/N.SourceGenerators.UnionTypes.Examples/Program.cs",children:"examples project"})]}),(0,s.jsx)(n.h3,{id:"basic",children:"Basic"}),(0,s.jsx)(n.p,{children:"Implicit conversion"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public FooResult ImplicitReturn()\n{\n    // you can return any union type variation without creating FooResult\n    return new NotFoundError();\n}\n"})}),(0,s.jsx)(n.p,{children:"Explicit conversion"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public ValidationError ExplicitCast(FooResult result)\n{\n    return (ValidationError)result;\n}\n"})}),(0,s.jsx)(n.p,{children:"Checking value type"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public void ValueTypeProperty()\n{\n    FooResult foo = GetFoo();\n    Type valueType = foo.ValueType; // returns typeof(NotFoundError)\n\n    static FooResult GetFoo()\n    {\n        return new NotFoundError();\n    }\n}\n"})}),(0,s.jsx)(n.p,{children:"TryGet method is used to check if union contains a specific type"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public void TryGetValue()\n{\n    FooResult foo = GetFoo();\n    if (foo.TryGetNotFoundError(out var notFoundError))\n    {\n        // make something with notFoundError\n    }\n\n    static FooResult GetFoo()\n    {\n        return new NotFoundError();\n    }\n}\n"})}),(0,s.jsx)(n.p,{children:"Alias for each variant is generated based on type name. Use alias parameter to override it."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"[UnionType(typeof(int))]\n[UnionType(typeof(string))]\n// default alias is 'ArrayOfTupleOfIntAndString' but it is overriden by alias parameter\n[UnionType(typeof(Tuple<int,string>[]), alias: \"Items\")]\npublic partial class AliasResult\n{\n}\n"})}),(0,s.jsx)(n.h3,{id:"handle-all-variants",children:"Handle all variants"}),(0,s.jsx)(n.p,{children:"Match and MatchAsync methods are used to convert union type to another type. These methods force you to handle all possible variations."}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public IActionResult MatchMethod(FooResult result)\n{\n    return result.Match<IActionResult>(\n        success => new OkResult(),\n        validationError => new BadRequestResult(),\n        notFoundError => new NotFoundResult()\n    );\n}\n\npublic async Task<IActionResult> MatchAsyncMethod(FooResult result, CancellationToken cancellationToken)\n{\n    return await result.MatchAsync<IActionResult>(\n        static async (success, ct) =>\n        {\n            await SomeWork(success, ct);\n            return new OkResult();\n        }, static async (validationError, ct) =>\n        {\n            await SomeWork(validationError, ct);\n            return new BadRequestResult();\n        }, static async (notFoundError, ct) =>\n        {\n            await SomeWork(notFoundError, ct);\n            return new NotFoundResult();\n        }, cancellationToken);\n\n    static Task SomeWork<T>(T value, CancellationToken ct)\n    {\n        return Task.Delay(100, ct);\n    }\n}\n"})}),(0,s.jsx)(n.p,{children:"Switch and SwitchAsync methods are used to execute some work based on inner type"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:" public void SwitchMethod(FooResult result)\n{\n    result.Switch(\n        success => SomeWork(success),\n        validationError => SomeWork(validationError),\n        notFoundError => SomeWork(notFoundError)\n    );\n\n    static void SomeWork<T>(T value)\n    {\n        throw new NotImplementedException();\n    }\n}\n\npublic async Task SwitchAsyncMethod(FooResult result, CancellationToken cancellationToken)\n{\n    await result.SwitchAsync(\n        static async (success, ct) =>\n        {\n            await SomeWork(success, ct);\n        }, static async (validationError, ct) =>\n        {\n            await SomeWork(validationError, ct);\n        }, static async (notFoundError, ct) =>\n        {\n            await SomeWork(notFoundError, ct);\n        }, cancellationToken);\n\n    static Task SomeWork<T>(T value, CancellationToken ct)\n    {\n        return Task.Delay(100, ct);\n    }\n}\n"})}),(0,s.jsx)(n.h3,{id:"json-serialization-experimental",children:"JSON serialization (EXPERIMENTAL)"}),(0,s.jsx)(n.p,{children:"To add JSON support"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["add ",(0,s.jsx)(n.code,{children:"JsonPolymorphicUnion"})," attribute to union type"]}),"\n",(0,s.jsxs)(n.li,{children:["add ",(0,s.jsx)(n.code,{children:"TypeDiscriminator"})," to each type variant"]}),"\n"]}),(0,s.jsx)(n.h4,{id:"limitations",children:"Limitations:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:".NET 7 or newer"}),"\n",(0,s.jsx)(n.li,{children:"only complex type variants"}),"\n"]}),(0,s.jsx)(n.h4,{id:"example",children:"Example"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'[UnionType(typeof(JsonTestsFooJ), TypeDiscriminator = "Foo")]\n[UnionType(typeof(JsonTestsBarJ), TypeDiscriminator = "Bar")]\n[JsonPolymorphicUnion]\npublic partial class JsonTestsUnion\n{\n}\n'})}),(0,s.jsx)(n.h3,{id:"union-to-union-converter",children:"Union to union converter"}),(0,s.jsxs)(n.p,{children:["When one union type's variants is subset of another union type's variants use one of the following attributes to convert one type to another: ",(0,s.jsx)(n.code,{children:"UnionConverterTo"}),", ",(0,s.jsx)(n.code,{children:"UnionConverterFrom"}),", or ",(0,s.jsx)(n.code,{children:"UnionConverter"}),"."]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'[UnionConverterFrom(typeof(DataAccessResult))] // use this attribute\npublic partial class BusinessLogicResult\n{\n}\n\n[UnionConverterTo(typeof(BusinessLogicResult))] // OR this\npublic partial class DataAccessResult\n{\n}\n\n[UnionConverter(typeof(DataAccessResult), typeof(BusinessLogicResult))] // OR this\npublic static partial class Converters\n{\n}\n\npublic class Repository\n{\n    public DataAccessResult UpdateItem()\n    {\n        return new NotFoundError();\n    }\n}\n\npublic class Service\n{\n    private readonly Repository _repository;\n\n    public BusinessLogicResult Update()\n    {\n        var isValid = IsValid();\n        if (!isValid)\n        {\n            return new ValidationError("the item is not valid");\n        }\n\n        var repositoryResult = _repository.UpdateItem();\n        // implicit conversion DataAccessResult to BusinessLogicResult when `UnionConverterTo` or `UnionConverterFrom` attribute is used\n        return repositoryResult;\n        // OR extension method when UnionConverter attribute is used\n        return repositoryResult.Convert();\n    }\n\n    private bool IsValid() => throw new NotImplementedException();\n}\n'})})]}),"\n",(0,s.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Generating different union types"})}),"\n",(0,s.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,s.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsxs)(a.A,{value:"csproj",label:"CSharp Project",children:[(0,s.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,s.jsx)(n.strong,{children:"N.SourceGenerators.UnionTypes"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {11}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="N.SourceGenerators.UnionTypes" Version="0.26.0" />\n  </ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n</Project>\n\n'})})]}),(0,s.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\Program.cs",label:"Program.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"N.SourceGenerators.UnionTypes"})," in ",(0,s.jsx)(n.em,{children:"Program.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using UnionTypesDemo;\n\nConsole.WriteLine("Save or not");\nvar data = SaveToDatabase.Save(0);\nConsole.WriteLine(data.IsValidationError);\ndata = SaveToDatabase.Save(1);\nConsole.WriteLine(data.IsSuccess);\n\n'})})]}),(0,s.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\ResultSave.cs",label:"ResultSave.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"N.SourceGenerators.UnionTypes"})," in ",(0,s.jsx)(n.em,{children:"ResultSave.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"using N.SourceGenerators.UnionTypes;\nnamespace UnionTypesDemo;\npublic record Success(int Value);\npublic record ValidationError(string Message);\n\n[UnionType(typeof(Success))]\n[UnionType(typeof(ValidationError))]\npublic partial class ResultSave\n{\n}\n\n\n\n"})})]}),(0,s.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\SaveToDatabase.cs",label:"SaveToDatabase.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"N.SourceGenerators.UnionTypes"})," in ",(0,s.jsx)(n.em,{children:"SaveToDatabase.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'namespace UnionTypesDemo;\n\npublic class SaveToDatabase\n{\n    public static ResultSave Save(int i)\n    {\n        if(i ==0)\n        {\n            return new ValidationError(" cannot save 0");\n        }\n        return new Success(i);\n    }\n}\n\n\n\n'})})]})]}),"\n",(0,s.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,s.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\GenericUnionTypeAttribute.g.cs",label:"GenericUnionTypeAttribute.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.GenericParameter, Inherited = false, AllowMultiple = false)]\n    internal sealed class GenericUnionTypeAttribute : Attribute\n    {\n        public string? Alias { get; set; }\n        public bool AllowNull { get; set; }\n        public object? TypeDiscriminator { get; set; }\n    }\n}\n"})})}),(0,s.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\JsonPolymorphicUnionAttribute.g.cs",label:"JsonPolymorphicUnionAttribute.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, Inherited = false, AllowMultiple = false)]\n    internal sealed class JsonPolymorphicUnionAttribute : Attribute\n    {\n        public string? TypeDiscriminatorPropertyName { get; set; }\n    }\n}\n"})})}),(0,s.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\ResultSave.g.cs",label:"ResultSave.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#pragma warning disable\n#nullable enable\nnamespace UnionTypesDemo\n{\n    partial class ResultSave : System.IEquatable<ResultSave>\n    {\n        private readonly int _variantId;\n        private const int SuccessId = 1;\n        private readonly global::UnionTypesDemo.Success _success;\n        public bool IsSuccess => _variantId == SuccessId;\n\n        public global::UnionTypesDemo.Success AsSuccess\n        {\n            get\n            {\n                if (_variantId == SuccessId)\n                    return _success;\n                throw new System.InvalidOperationException($"Unable convert to Success. Inner value is {ValueAlias} not Success.");\n            }\n        }\n\n        public ResultSave(global::UnionTypesDemo.Success success)\n        {\n            System.ArgumentNullException.ThrowIfNull(success);\n            _variantId = SuccessId;\n            _success = success;\n        }\n\n        public static implicit operator ResultSave(global::UnionTypesDemo.Success success) => new ResultSave(success);\n        public static explicit operator global::UnionTypesDemo.Success(ResultSave value)\n        {\n            if (value._variantId == SuccessId)\n                return value._success;\n            throw new System.InvalidOperationException($"Unable convert to Success. Inner value is {value.ValueAlias} not Success.");\n        }\n\n        public bool TryGetSuccess([System.Diagnostics.CodeAnalysis.NotNullWhen(true)] out global::UnionTypesDemo.Success value)\n        {\n            if (_variantId == SuccessId)\n            {\n                value = _success;\n                return true;\n            }\n            else\n            {\n                value = default;\n                return false;\n            }\n        }\n\n        private const int ValidationErrorId = 2;\n        private readonly global::UnionTypesDemo.ValidationError _validationError;\n        public bool IsValidationError => _variantId == ValidationErrorId;\n\n        public global::UnionTypesDemo.ValidationError AsValidationError\n        {\n            get\n            {\n                if (_variantId == ValidationErrorId)\n                    return _validationError;\n                throw new System.InvalidOperationException($"Unable convert to ValidationError. Inner value is {ValueAlias} not ValidationError.");\n            }\n        }\n\n        public ResultSave(global::UnionTypesDemo.ValidationError validationError)\n        {\n            System.ArgumentNullException.ThrowIfNull(validationError);\n            _variantId = ValidationErrorId;\n            _validationError = validationError;\n        }\n\n        public static implicit operator ResultSave(global::UnionTypesDemo.ValidationError validationError) => new ResultSave(validationError);\n        public static explicit operator global::UnionTypesDemo.ValidationError(ResultSave value)\n        {\n            if (value._variantId == ValidationErrorId)\n                return value._validationError;\n            throw new System.InvalidOperationException($"Unable convert to ValidationError. Inner value is {value.ValueAlias} not ValidationError.");\n        }\n\n        public bool TryGetValidationError([System.Diagnostics.CodeAnalysis.NotNullWhen(true)] out global::UnionTypesDemo.ValidationError value)\n        {\n            if (_variantId == ValidationErrorId)\n            {\n                value = _validationError;\n                return true;\n            }\n            else\n            {\n                value = default;\n                return false;\n            }\n        }\n\n        public TOut Match<TOut>(global::System.Func<global::UnionTypesDemo.Success, TOut> matchSuccess, global::System.Func<global::UnionTypesDemo.ValidationError, TOut> matchValidationError)\n        {\n            if (_variantId == SuccessId)\n                return matchSuccess(_success);\n            if (_variantId == ValidationErrorId)\n                return matchValidationError(_validationError);\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public async global::System.Threading.Tasks.Task<TOut> MatchAsync<TOut>(global::System.Func<global::UnionTypesDemo.Success, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<TOut>> matchSuccess, global::System.Func<global::UnionTypesDemo.ValidationError, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task<TOut>> matchValidationError, global::System.Threading.CancellationToken ct)\n        {\n            if (_variantId == SuccessId)\n                return await matchSuccess(_success, ct).ConfigureAwait(false);\n            if (_variantId == ValidationErrorId)\n                return await matchValidationError(_validationError, ct).ConfigureAwait(false);\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public void Switch(global::System.Action<global::UnionTypesDemo.Success> switchSuccess, global::System.Action<global::UnionTypesDemo.ValidationError> switchValidationError)\n        {\n            if (_variantId == SuccessId)\n            {\n                switchSuccess(_success);\n                return;\n            }\n\n            if (_variantId == ValidationErrorId)\n            {\n                switchValidationError(_validationError);\n                return;\n            }\n\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public async global::System.Threading.Tasks.Task SwitchAsync(global::System.Func<global::UnionTypesDemo.Success, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task> switchSuccess, global::System.Func<global::UnionTypesDemo.ValidationError, global::System.Threading.CancellationToken, global::System.Threading.Tasks.Task> switchValidationError, global::System.Threading.CancellationToken ct)\n        {\n            if (_variantId == SuccessId)\n            {\n                await switchSuccess(_success, ct).ConfigureAwait(false);\n                return;\n            }\n\n            if (_variantId == ValidationErrorId)\n            {\n                await switchValidationError(_validationError, ct).ConfigureAwait(false);\n                return;\n            }\n\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public global::System.Type ValueType\n        {\n            get\n            {\n                if (_variantId == SuccessId)\n                    return typeof(global::UnionTypesDemo.Success);\n                if (_variantId == ValidationErrorId)\n                    return typeof(global::UnionTypesDemo.ValidationError);\n                throw new System.InvalidOperationException("Inner type is unknown");\n            }\n        }\n\n        private string ValueAlias\n        {\n            get\n            {\n                if (_variantId == SuccessId)\n                    return "Success";\n                if (_variantId == ValidationErrorId)\n                    return "ValidationError";\n                throw new System.InvalidOperationException("Inner type is unknown");\n            }\n        }\n\n        public override int GetHashCode()\n        {\n            if (_variantId == SuccessId)\n                return _success.GetHashCode();\n            if (_variantId == ValidationErrorId)\n                return _validationError.GetHashCode();\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public static bool operator ==(ResultSave? left, ResultSave? right)\n        {\n            return Equals(left, right);\n        }\n\n        public static bool operator !=(ResultSave? left, ResultSave? right)\n        {\n            return !Equals(left, right);\n        }\n\n        public bool Equals(ResultSave? other)\n        {\n            if (ReferenceEquals(null, other))\n            {\n                return false;\n            }\n\n            if (ReferenceEquals(this, other))\n            {\n                return true;\n            }\n\n            if (ValueType != other.ValueType)\n            {\n                return false;\n            }\n\n            if (_variantId == SuccessId)\n                return System.Collections.Generic.EqualityComparer<global::UnionTypesDemo.Success>.Default.Equals(_success, other._success);\n            if (_variantId == ValidationErrorId)\n                return System.Collections.Generic.EqualityComparer<global::UnionTypesDemo.ValidationError>.Default.Equals(_validationError, other._validationError);\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public override string ToString()\n        {\n            if (_variantId == SuccessId)\n                return _success.ToString();\n            if (_variantId == ValidationErrorId)\n                return _validationError.ToString();\n            throw new System.InvalidOperationException("Inner type is unknown");\n        }\n\n        public override bool Equals(object? other)\n        {\n            if (ReferenceEquals(null, other))\n            {\n                return false;\n            }\n\n            if (ReferenceEquals(this, other))\n            {\n                return true;\n            }\n\n            if (other.GetType() != typeof(ResultSave))\n            {\n                return false;\n            }\n\n            return Equals((ResultSave)other);\n        }\n    }\n}\n'})})}),(0,s.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\UnionConverterAttribute.g.cs",label:"UnionConverterAttribute.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = true)]\n    sealed class UnionConverterAttribute : Attribute\n    {\n        public Type FromType { get; }\n        public Type ToType { get; }\n        public string? MethodName { get; }\n\n        public UnionConverterAttribute(Type fromType, Type toType, string? methodName = null)\n        {\n            FromType = fromType;\n            ToType = toType;\n            MethodName = methodName;\n        }\n    }\n}\n"})})}),(0,s.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\UnionConverterFromAttribute.g.cs",label:"UnionConverterFromAttribute.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, Inherited = false, AllowMultiple = true)]\n    sealed class UnionConverterFromAttribute : Attribute\n    {\n        public Type FromType { get; }\n\n        public UnionConverterFromAttribute(Type fromType)\n        {\n            FromType = fromType;\n        }\n    }\n}\n"})})}),(0,s.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\UnionConverterToAttribute.g.cs",label:"UnionConverterToAttribute.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, Inherited = false, AllowMultiple = true)]\n    sealed class UnionConverterToAttribute : Attribute\n    {\n        public Type ToType { get; }\n\n        public UnionConverterToAttribute(Type toType)\n        {\n            ToType = toType;\n        }\n    }\n}\n"})})}),(0,s.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\N.SourceGenerators.UnionTypes\\src\\UnionTypesDemo\\obj\\GX\\N.SourceGenerators.UnionTypes\\N.SourceGenerators.UnionTypes.UnionTypesGenerator\\UnionTypeAttribute.g.cs",label:"UnionTypeAttribute.g.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"// <auto-generated>\n//   This code was generated by https://github.com/Ne4to/N.SourceGenerators.UnionTypes\n//   Feel free to open an issue\n// </auto-generated>\n#nullable enable\nusing System;\nusing System.Runtime.CompilerServices;\n\nnamespace N.SourceGenerators.UnionTypes\n{\n    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, Inherited = false, AllowMultiple = true)]\n    internal sealed class UnionTypeAttribute : Attribute\n    {\n        public Type Type { get; }\n        public string? Alias { get; }\n        public int Order { get; }\n        public bool AllowNull { get; set; }\n        public object? TypeDiscriminator { get; set; }\n\n        public UnionTypeAttribute(Type type, string? alias = null, [CallerLineNumber] int order = 0)\n        {\n            Type = type;\n            Alias = alias;\n            Order = order;\n        }\n    }\n}\n"})})})]}),"\n",(0,s.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,s.jsx)(n.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(21059).A+"",children:"Download Example project N.SourceGenerators.UnionTypes "})})}),"\n",(0,s.jsx)(n.h3,{id:"share-nsourcegeneratorsuniontypes",children:"Share N.SourceGenerators.UnionTypes"}),"\n",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes&quote=N.SourceGenerators.UnionTypes",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes&text=N.SourceGenerators.UnionTypes:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes&title=N.SourceGenerators.UnionTypes",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes&title=N.SourceGenerators.UnionTypes&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FN.SourceGenerators.UnionTypes",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/N.SourceGenerators.UnionTypes",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/N.SourceGenerators.UnionTypes"})}),"\n",(0,s.jsx)(n.p,{children:"aaa"}),"\n",(0,s.jsx)(c.Ay,{})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(y,{...e})}):y(e)}},18978:(e,n,r)=>{r.d(n,{Ay:()=>a,RM:()=>o});var t=r(74848),s=r(28453);const o=[{value:"Category &quot;FunctionalProgramming&quot; has the following generators:",id:"category-functionalprogramming-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function i(e){const n={a:"a",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"category-functionalprogramming-has-the-following-generators",children:'Category "FunctionalProgramming" has the following generators:'}),"\n",(0,t.jsxs)(n.p,{children:["1 ",(0,t.jsx)(n.a,{href:"/docs/cachesourcegenerator",children:"cachesourcegenerator"})]}),"\n",(0,t.jsxs)(n.p,{children:["2 ",(0,t.jsx)(n.a,{href:"/docs/dunet",children:"dunet"})]}),"\n",(0,t.jsxs)(n.p,{children:["3 ",(0,t.jsx)(n.a,{href:"/docs/Dusharp",children:"Dusharp"})]}),"\n",(0,t.jsxs)(n.p,{children:["4 ",(0,t.jsx)(n.a,{href:"/docs/Funcky.DiscriminatedUnion",children:"Funcky.DiscriminatedUnion"})]}),"\n",(0,t.jsxs)(n.p,{children:["5 ",(0,t.jsx)(n.a,{href:"/docs/FunicularSwitch",children:"FunicularSwitch"})]}),"\n",(0,t.jsxs)(n.p,{children:["6 ",(0,t.jsx)(n.a,{href:"/docs/N.SourceGenerators.UnionTypes",children:"N.SourceGenerators.UnionTypes"})]}),"\n",(0,t.jsxs)(n.p,{children:["7 ",(0,t.jsx)(n.a,{href:"/docs/OneOf",children:"OneOf"})]}),"\n",(0,t.jsxs)(n.p,{children:["8 ",(0,t.jsx)(n.a,{href:"/docs/PartiallyApplied",children:"PartiallyApplied"})]}),"\n",(0,t.jsxs)(n.p,{children:["9 ",(0,t.jsx)(n.a,{href:"/docs/polytype",children:"polytype"})]}),"\n",(0,t.jsxs)(n.p,{children:["10 ",(0,t.jsx)(n.a,{href:"/docs/rscg_demeter",children:"rscg_demeter"})]}),"\n",(0,t.jsxs)(n.p,{children:["11 ",(0,t.jsx)(n.a,{href:"/docs/rscg_queryables",children:"rscg_queryables"})]}),"\n",(0,t.jsxs)(n.p,{children:["12 ",(0,t.jsx)(n.a,{href:"/docs/RSCG_Utils_Memo",children:"RSCG_Utils_Memo"})]}),"\n",(0,t.jsxs)(n.p,{children:["13 ",(0,t.jsx)(n.a,{href:"/docs/Sera.Union",children:"Sera.Union"})]}),"\n",(0,t.jsxs)(n.p,{children:["14 ",(0,t.jsx)(n.a,{href:"/docs/TypeUtilities",children:"TypeUtilities"})]}),"\n",(0,t.jsxs)(n.p,{children:["15 ",(0,t.jsx)(n.a,{href:"/docs/UnionGen",children:"UnionGen"})]}),"\n",(0,t.jsxs)(n.p,{children:["16 ",(0,t.jsx)(n.a,{href:"/docs/UnionsGenerator",children:"UnionsGenerator"})]}),"\n",(0,t.jsx)(n.h3,{id:"see-category",children:"See category"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/Categories/FunctionalProgramming",children:"FunctionalProgramming"})})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}},21059:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/files/N.SourceGenerators.UnionTypes-e47f9cff57e6757f4341b0e818858040.zip"}}]);