"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[7478],{1984:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>m,toc:()=>c});var n=a(87462),r=(a(67294),a(3905)),o=a(73992),p=a(18679),i=a(68839);const l={sidebar_position:1190,title:"119 - AutoGen",description:"Generating function to map DTOs",slug:"/AutoGen"},s="AutoGen  by Feast Antelcat",m={unversionedId:"RSCG-Examples/AutoGen",id:"RSCG-Examples/AutoGen",title:"119 - AutoGen",description:"Generating function to map DTOs",source:"@site/docs/RSCG-Examples/AutoGen.md",sourceDirName:"RSCG-Examples",slug:"/AutoGen",permalink:"/RSCG_Examples/v2/docs/AutoGen",draft:!1,tags:[],version:"current",sidebarPosition:1190,frontMatter:{sidebar_position:1190,title:"119 - AutoGen",description:"Generating function to map DTOs",slug:"/AutoGen"},sidebar:"tutorialSidebar",previous:{title:"118 - RSCG_Wait",permalink:"/RSCG_Examples/v2/docs/RSCG_Wait"},next:{title:"v1",permalink:"/RSCG_Examples/v2/docs/v1"}},u={},c=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share AutoGen",id:"share-autogen",level:3},{value:"In the same category (Mapper) - 6 other generators",id:"in-the-same-category-mapper---6-other-generators",level:3},{value:"AutoDTO",id:"autodto",level:4},{value:"DynamicsMapper",id:"dynamicsmapper",level:4},{value:"MagicMap",id:"magicmap",level:4},{value:"mapperly",id:"mapperly",level:4},{value:"MapTo",id:"mapto",level:4},{value:"NextGenMapper",id:"nextgenmapper",level:4}],d={toc:c},h="wrapper";function g(e){let{components:t,...l}=e;return(0,r.kt)(h,(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"autogen--by-feast-antelcat"},"AutoGen  by Feast Antelcat"),(0,r.kt)(i.Z,{toc:c,mdxType:"TOCInline"}),(0,r.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Antelcat.AutoGen/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Antelcat.AutoGen?label=Antelcat.AutoGen",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Antelcat/AutoGen"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/Antelcat/AutoGen?label=updated",alt:"GitHub last commit"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/Antelcat/AutoGen?style=social",alt:"GitHub Repo stars"})),(0,r.kt)("h2",{id:"details"},"Details"),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Name: ",(0,r.kt)("strong",{parentName:"p"},"AutoGen")),(0,r.kt)("p",{parentName:"admonition"},"Auto generate anything you want"),(0,r.kt)("p",{parentName:"admonition"},"Author: Feast Antelcat"),(0,r.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/Antelcat.AutoGen/"},"https://www.nuget.org/packages/Antelcat.AutoGen/")),"   "),(0,r.kt)("p",{parentName:"admonition"},"You can find more details at ,",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Antelcat/AutoGen"},"https://github.com/Antelcat/AutoGen")),(0,r.kt)("p",{parentName:"admonition"},"Source : ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Antelcat/AutoGen"},"https://github.com/Antelcat/AutoGen"))),(0,r.kt)("h3",{id:"original-readme"},"Original Readme"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("h1",{parentName:"admonition",id:"antelcatautogen"},"Antelcat.AutoGen"),(0,r.kt)("p",{parentName:"admonition"},"\ud83c\udde8\ud83c\uddf3 ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Antelcat/AutoGen/README.zh.md"},"\u4e2d\u6587")),(0,r.kt)("p",{parentName:"admonition"},"Auto generate anything you may want"),(0,r.kt)("blockquote",{parentName:"admonition"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("del",{parentName:"p"},"unless we can't"))),(0,r.kt)("h2",{parentName:"admonition",id:"supported"},"Supported"),(0,r.kt)("h3",{parentName:"admonition",id:"antelcatautogencomponentmodel-"},(0,r.kt)("inlineCode",{parentName:"h3"},"Antelcat.AutoGen.ComponentModel")," :"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"autostringtostring-accessibility-"},(0,r.kt)("inlineCode",{parentName:"h4"},"[AutoStringTo(string, Accessibility)]")," :"),(0,r.kt)("p",{parentName:"li"},"  Auto generate string To extension"),(0,r.kt)("p",{parentName:"li"},"  only on ",(0,r.kt)("inlineCode",{parentName:"p"},"assembly")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"static partial class")),(0,r.kt)("p",{parentName:"li"},"  ",(0,r.kt)("img",{parentName:"p",src:"https://github.com/Antelcat/AutoGen/docs/GenerateStringTo.png",alt:"AutoStringTo"}))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"mapping-"},(0,r.kt)("inlineCode",{parentName:"h4"},"Mapping")," :"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"automapaccessibility-"},(0,r.kt)("inlineCode",{parentName:"h4"},"[AutoMap(Accessibility)]")," :"),(0,r.kt)("p",{parentName:"li"},"Auto generate mappings between types"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"Only on ",(0,r.kt)("inlineCode",{parentName:"p"},"partial method"))),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{parentName:"p",src:"https://github.com/Antelcat/AutoGen/docs/GenerateMap.png",alt:"AutoMapTo"})),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"You can use to generate ",(0,r.kt)("inlineCode",{parentName:"p"},"shallow copy")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"mapbetweenfromproperty-toproperty-"},(0,r.kt)("inlineCode",{parentName:"h4"},"[MapBetween(fromProperty, toProperty)]")," :"),(0,r.kt)("p",{parentName:"li"},"Specify property mapping between types"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"By")," : Method being called when mapping this property"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"mapignore-"},(0,r.kt)("inlineCode",{parentName:"h4"},"[MapIgnore]")," :"),(0,r.kt)("p",{parentName:"li"},"To be ignored when generate mapping code")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"mapincludeproperty-"},(0,r.kt)("inlineCode",{parentName:"h4"},"[MapInclude(property)]")," :"),(0,r.kt)("p",{parentName:"li"},"Explicit include properties when ",(0,r.kt)("inlineCode",{parentName:"p"},"[MapIgnore]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"mapexcludestring-"},(0,r.kt)("inlineCode",{parentName:"h4"},"[MapExclude(string)]")," :"),(0,r.kt)("p",{parentName:"li"},"To be excluded when mapping")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"mapconstructorparams-string-"},(0,r.kt)("inlineCode",{parentName:"h4"},"[MapConstructor(params string[])]")," :"),(0,r.kt)("p",{parentName:"li"},"Specified property to be added in constructor, will auto detect if ",(0,r.kt)("inlineCode",{parentName:"p"},"null")))))),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"autofilepath"},(0,r.kt)("inlineCode",{parentName:"h4"},"[AutoFilePath]"),":"),(0,r.kt)("p",{parentName:"li"},"Auto generate ",(0,r.kt)("inlineCode",{parentName:"p"},"FilePath")," which is ",(0,r.kt)("inlineCode",{parentName:"p"},"ref readonly struct")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'void Fun([CallerFilePath] string path = "")\n{\n    var directory       = (FilePath)path << 1;\n    var full            = directory / "Antelcat.AutoGen.Sample" / "Example.cs";\n    var changeExtension = full - 2 + ".g.cs";\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h4",{parentName:"li",id:"autodeconstructindexable"},(0,r.kt)("inlineCode",{parentName:"h4"},"[AutoDeconstructIndexable]"),":"),(0,r.kt)("p",{parentName:"li"},"Auto generate ",(0,r.kt)("inlineCode",{parentName:"p"},"Deconstruct")," method for ",(0,r.kt)("inlineCode",{parentName:"p"},"IList<>")," and custom types"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"[assembly: AutoDeconstructIndexable(16/*default size is 16*/, typeof(Foo))]\n\nint[] list = [1,2,3];\nvar (a, b, c) = list;\n\nclass Foo{\n    public object this[int index] => index;\n}\n\nvar (a, b, c, d) = new Foo();\n"))))),(0,r.kt)("h3",{id:"about"},"About"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Generating function to map DTOs")),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(p.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,r.kt)("p",null,"This is the CSharp Project that references ",(0,r.kt)("strong",{parentName:"p"},"AutoGen")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {16}",showLineNumbers:!0,"{16}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n    <ItemGroup>\n      <PackageReference Include="Antelcat.AutoGen" Version="1.0.0-pre-alpha-7" />\n    </ItemGroup>\n\n    \n</Project>\n\n'))),(0,r.kt)(p.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoGen\\src\\mapperDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"AutoGen")," in ",(0,r.kt)("em",{parentName:"p"},"Program.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using mapperDemo;\nvar p=new Person();\np.FirstName = "Andrei";\np.LastName = "Ignat";\nPersonDTO dto= p.ToDTO();\nConsole.WriteLine(dto.FullName);\n\n'))),(0,r.kt)(p.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoGen\\src\\mapperDemo\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"AutoGen")," in ",(0,r.kt)("em",{parentName:"p"},"Person.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"\npublic class Person\n{\n    public int ID { get; set; }\n    public string? FirstName { get; set; }\n    public string? LastName { get; set; }\n}\n\n\n"))),(0,r.kt)(p.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoGen\\src\\mapperDemo\\PersonDTO.cs",label:"PersonDTO.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"AutoGen")," in ",(0,r.kt)("em",{parentName:"p"},"PersonDTO.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'\nusing Antelcat.AutoGen.ComponentModel.Mapping;\n\nnamespace mapperDemo;\npublic class PersonDTO\n{\n    public int ID { get; set; }\n    public string? FirstName { get; set; }\n    public string? LastName { get; set; }\n    [MapIgnore]\n    public string FullName { \n        get\n        {\n            return FirstName + " " + LastName;\n        }\n    }\n}\n\n'))),(0,r.kt)(p.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoGen\\src\\mapperDemo\\Extensions.cs",label:"Extensions.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"AutoGen")," in ",(0,r.kt)("em",{parentName:"p"},"Extensions.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"\nusing Antelcat.AutoGen.ComponentModel.Mapping;\n\nnamespace mapperDemo;\n\npublic static partial class Extensions\n{\n    [AutoMap(Extra = [nameof(AfterMap)])]\n    public static partial PersonDTO ToDTO(this Person person);\n\n    private static void AfterMap(Person person, PersonDTO personDTO)\n    {\n        person.ID= personDTO.ID;\n    }\n}\n\n")))),(0,r.kt)("h3",{id:"generated-files"},"Generated Files"),(0,r.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(p.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoGen\\src\\mapperDemo\\obj\\GX\\Antelcat.AutoGen.SourceGenerators\\Antelcat.AutoGen.SourceGenerators.Generators.Mapping.MapperGenerator\\AutoMap__.mapperDemo.Extensions.g.cs",label:"AutoMap__.mapperDemo.Extensions.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/> By Antelcat.AutoGen\n#pragma warning disable\n#nullable enable\nnamespace mapperDemo\n{\n    partial class Extensions\n    {\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Antelcat.AutoGen.SourceGenerators.Generators.Mapping.MapperGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute]\n        public static partial global::mapperDemo.PersonDTO ToDTO(this global::Person person)\n        {\n            var ret = new global::mapperDemo.PersonDTO()\n            {\n                ID = person.ID,\n                FirstName = person.FirstName,\n                LastName = person.LastName,\n            };\n            global::mapperDemo.Extensions.AfterMap(person, ret);\n            return ret;\n        }\n    }\n}\n')))),(0,r.kt)("h2",{id:"usefull"},"Usefull"),(0,r.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{target:"_blank",href:a(5079).Z},"Download Example project AutoGen "))),(0,r.kt)("h3",{id:"share-autogen"},"Share AutoGen"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoGen&quote=AutoGen",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoGen&text=AutoGen:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoGen",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoGen&title=AutoGen",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoGen&title=AutoGen&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoGen",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/AutoGen"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/AutoGen")),(0,r.kt)("h3",{id:"in-the-same-category-mapper---6-other-generators"},"In the same category (Mapper) - 6 other generators"),(0,r.kt)("h4",{id:"autodto"},(0,r.kt)("a",{parentName:"h4",href:"/docs/AutoDTO"},"AutoDTO")),(0,r.kt)("h4",{id:"dynamicsmapper"},(0,r.kt)("a",{parentName:"h4",href:"/docs/DynamicsMapper"},"DynamicsMapper")),(0,r.kt)("h4",{id:"magicmap"},(0,r.kt)("a",{parentName:"h4",href:"/docs/MagicMap"},"MagicMap")),(0,r.kt)("h4",{id:"mapperly"},(0,r.kt)("a",{parentName:"h4",href:"/docs/mapperly"},"mapperly")),(0,r.kt)("h4",{id:"mapto"},(0,r.kt)("a",{parentName:"h4",href:"/docs/MapTo"},"MapTo")),(0,r.kt)("h4",{id:"nextgenmapper"},(0,r.kt)("a",{parentName:"h4",href:"/docs/NextGenMapper"},"NextGenMapper")))}g.isMDXComponent=!0},5079:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/AutoGen-8bb886cbc877d4d6e8cc9192fa0643ea.zip"}}]);