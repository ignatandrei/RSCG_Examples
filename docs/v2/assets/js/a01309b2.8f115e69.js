"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[3897],{4137:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),d=a,k=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return r?n.createElement(k,i(i({ref:t},p),{},{components:r})):n.createElement(k,i({ref:t},p))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4425:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),a=(r(7294),r(4137));const o={},i="Rocks",s={unversionedId:"RSCG-Examples/Rocks_readme",id:"RSCG-Examples/Rocks_readme",title:"Rocks",description:"A mocking library based on the Compiler APIs (Roslyn + Mocks)",source:"@site/docs/RSCG-Examples/Rocks_readme.md",sourceDirName:"RSCG-Examples",slug:"/RSCG-Examples/Rocks_readme",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/Rocks_readme",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RazorBlade",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/RazorBlade_readme"},next:{title:"SkinnyControllersGenerator",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/SkinnyControllersCommon_readme"}},c={},l=[{value:"Getting Started",id:"getting-started",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Usage",id:"usage",level:2},{value:"Additional Documentation",id:"additional-documentation",level:2},{value:"Feedback",id:"feedback",level:2}],p={toc:l},u="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rocks"},"Rocks"),(0,a.kt)("p",null,"A mocking library based on the Compiler APIs (Roslyn + Mocks)"),(0,a.kt)("h2",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"Reference the ",(0,a.kt)("inlineCode",{parentName:"p"},"Rocks")," ",(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Rocks"},"NuGet package")," - that's it."),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("p",null,"The Rocks package targets .NET Standard 2.0 for host flexibility. Note that Rocks looks for, and generates, code that targets .NET 7."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"To make a mock, you take an interface or an unsealed class that has virtual members:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"public interface IAmSimple\n{\n  void TargetAction();\n}\n")),(0,a.kt)("p",null,"and you use Rocks to create a mock with expectations, along with verifying its usage:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"var expectations = Rock.Create<IAmSimple>();\nexpectations.Methods().TargetAction();\n\nvar mock = expectations.Instance();\nmock.TargetAction();\n\nexpectations.Verify();\n")),(0,a.kt)("p",null,"More details can be found on the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/JasonBock/Rocks/blob/main/docs/Quickstart.md"},"Quickstart page"),"."),(0,a.kt)("h2",{id:"additional-documentation"},"Additional Documentation"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://discord.com/channels/1035376645864955974/1035376646326321194"},"Discord Server")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/JasonBock/Rocks/blob/main/changelog.md"},"Changelog")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/dotnet/core/testing/unit-testing-best-practices"},"Unit testing best practices with .NET Core and .NET Standard")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/ecoAPM/BenchmarkMockNet"},"BenchmarkMockNet"))),(0,a.kt)("h2",{id:"feedback"},"Feedback"),(0,a.kt)("p",null,"If you run into any issues, please add them ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/JasonBock/Rocks/issues"},"here"),"."))}m.isMDXComponent=!0}}]);