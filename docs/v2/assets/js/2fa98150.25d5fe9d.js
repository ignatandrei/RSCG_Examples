"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[8279],{10126:(e,s,i)=>{i.d(s,{A:()=>t});const t=i.p+"assets/files/Microsoft.Windows.CsWin32-7b1d0dc90f50b7c4b4afe9f4f0069247.zip"},19980:(e,s,i)=>{i.d(s,{Ay:()=>a,RM:()=>o});var t=i(74848),n=i(28453);const o=[{value:"Category &quot;WinAPI&quot; has the following generators:",id:"category-winapi-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function r(e){const s={a:"a",h3:"h3",p:"p",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h3,{id:"category-winapi-has-the-following-generators",children:'Category "WinAPI" has the following generators:'}),"\n",(0,t.jsxs)(s.p,{children:["1 ",(0,t.jsx)(s.a,{href:"/docs/Com",children:"Com"})]}),"\n",(0,t.jsxs)(s.p,{children:["2 ",(0,t.jsx)(s.a,{href:"/docs/Microsoft.Windows.CsWin32",children:"Microsoft.Windows.CsWin32"})]}),"\n",(0,t.jsxs)(s.p,{children:["3 ",(0,t.jsx)(s.a,{href:"/docs/NativeObjects",children:"NativeObjects"})]}),"\n",(0,t.jsx)(s.h3,{id:"see-category",children:"See category"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"/docs/Categories/WinAPI",children:"WinAPI"})})]})}function a(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},64100:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>m,contentTitle:()=>h,default:()=>g,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"RSCG-Examples/Microsoft.Windows.CsWin32","title":"173 - Microsoft.Windows.CsWin32","description":"Generating WinAPI code in C#","source":"@site/docs/RSCG-Examples/Microsoft.Windows.CsWin32.md","sourceDirName":"RSCG-Examples","slug":"/Microsoft.Windows.CsWin32","permalink":"/RSCG_Examples/v2/docs/Microsoft.Windows.CsWin32","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1730,"frontMatter":{"sidebar_position":1730,"title":"173 - Microsoft.Windows.CsWin32","description":"Generating WinAPI code in C#","slug":"/Microsoft.Windows.CsWin32"},"sidebar":"tutorialSidebar","previous":{"title":"172 - GoLive.Generator.BlazorInterop","permalink":"/RSCG_Examples/v2/docs/GoLive.Generator.BlazorInterop"},"next":{"title":"174 - Dapper.AOT","permalink":"/RSCG_Examples/v2/docs/Dapper.AOT"}}');var n=i(74848),o=i(28453),r=i(11470),a=i(19365),d=i(14252),l=i(19980);const c={sidebar_position:1730,title:"173 - Microsoft.Windows.CsWin32",description:"Generating WinAPI code in C#",slug:"/Microsoft.Windows.CsWin32"},h="Microsoft.Windows.CsWin32  by Microsoft",m={},u=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Features",id:"features",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Usage",id:"usage",level:2},{value:"Customizing generated code",id:"customizing-generated-code",level:3},{value:"Support for trimming, AOT, and/or disabling the runtime marshaler",id:"support-for-trimming-aot-andor-disabling-the-runtime-marshaler",level:3},{value:"Newer metadata",id:"newer-metadata",level:3},{value:"Consuming daily builds",id:"consuming-daily-builds",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share Microsoft.Windows.CsWin32",id:"share-microsoftwindowscswin32",level:3},...l.RM];function p(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"microsoftwindowscswin32--by-microsoft",children:"Microsoft.Windows.CsWin32  by Microsoft"})}),"\n",(0,n.jsx)(d.A,{toc:u}),"\n",(0,n.jsx)(s.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"https://www.nuget.org/packages/Microsoft.Windows.CsWin32/",children:(0,n.jsx)(s.img,{src:"https://img.shields.io/nuget/dt/Microsoft.Windows.CsWin32?label=Microsoft.Windows.CsWin32",alt:"Nuget"})}),"\n",(0,n.jsx)(s.a,{href:"https://github.com/microsoft/CsWin32",children:(0,n.jsx)(s.img,{src:"https://img.shields.io/github/last-commit/microsoft/CsWin32?label=updated",alt:"GitHub last commit"})}),"\n",(0,n.jsx)(s.img,{src:"https://img.shields.io/github/stars/microsoft/CsWin32?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,n.jsx)(s.h2,{id:"details",children:"Details"}),"\n",(0,n.jsx)(s.h3,{id:"info",children:"Info"}),"\n",(0,n.jsxs)(s.admonition,{type:"info",children:[(0,n.jsxs)(s.p,{children:["Name: ",(0,n.jsx)(s.strong,{children:"Microsoft.Windows.CsWin32"})]}),(0,n.jsx)(s.p,{children:"Microsoft Windows SDK Win32 API Source Generator"}),(0,n.jsx)(s.p,{children:"Author: Microsoft"}),(0,n.jsxs)(s.p,{children:["NuGet:\n",(0,n.jsx)(s.em,{children:(0,n.jsx)(s.a,{href:"https://www.nuget.org/packages/Microsoft.Windows.CsWin32/",children:"https://www.nuget.org/packages/Microsoft.Windows.CsWin32/"})})]}),(0,n.jsxs)(s.p,{children:["You can find more details at ",(0,n.jsx)(s.a,{href:"https://github.com/microsoft/CsWin32",children:"https://github.com/microsoft/CsWin32"})]}),(0,n.jsxs)(s.p,{children:["Source: ",(0,n.jsx)(s.a,{href:"https://github.com/microsoft/CsWin32",children:"https://github.com/microsoft/CsWin32"})]})]}),"\n",(0,n.jsx)(s.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,n.jsxs)(s.admonition,{type:"note",children:[(0,n.jsx)(s.h1,{id:"cwin32-pinvoke-source-generator",children:"C#/Win32 P/Invoke Source Generator"}),(0,n.jsx)(s.p,{children:(0,n.jsx)(s.em,{children:(0,n.jsx)(s.strong,{children:"A source generator to add a user-defined set of Win32 P/Invoke methods and supporting types to a C# project."})})}),(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.a,{href:"https://www.nuget.org/packages/Microsoft.Windows.CsWin32",children:(0,n.jsx)(s.img,{src:"https://img.shields.io/nuget/vpre/Microsoft.Windows.CsWin32",alt:"NuGet (prerelease)"})}),"\n",(0,n.jsx)(s.a,{href:"https://dev.azure.com/azure-public/winsdk/_packaging?_a=package&feed=CI%40Local&package=Microsoft.Windows.CsWin32&protocolType=NuGet",children:(0,n.jsx)(s.img,{src:"https://img.shields.io/badge/nuget-daily-red",alt:"NuGet (daily)"})})]}),(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://dev.azure.com/azure-public/winsdk/_build/latest?definitionId=47&branchName=main",children:(0,n.jsx)(s.img,{src:"https://dev.azure.com/azure-public/winsdk/_apis/build/status/microsoft.CsWin32?branchName=main",alt:"Build Status"})})}),(0,n.jsx)(s.h2,{id:"features",children:"Features"}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Rapidly add P/Invoke methods and supporting types to your C# project."}),"\n",(0,n.jsx)(s.li,{children:"No bulky assemblies to ship alongside your application."}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"SafeHandle"}),"-types automatically generated."]}),"\n",(0,n.jsx)(s.li,{children:"Generates xml documentation based on and links back to docs.microsoft.com"}),"\n"]}),(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{src:"https://github.com/microsoft/CsWin32/doc/demo.gif",alt:"Animation demonstrating p/invoke code generation"})}),(0,n.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),(0,n.jsx)(s.p,{children:"The .NET 6 SDK or Visual Studio 2019 Update 11 (16.11)."}),(0,n.jsxs)(s.p,{children:["WPF projects have ",(0,n.jsx)(s.a,{href:"https://github.com/microsoft/CsWin32/issues/7",children:"additional requirements"}),"."]}),(0,n.jsxs)(s.p,{children:["In addition, some generated code may require use of the C# 9+ language version (",(0,n.jsx)(s.code,{children:"<LangVersion>9</LangVersion>"}),") in your project file. See ",(0,n.jsx)(s.a,{href:"https://github.com/microsoft/CsWin32/issues/4",children:"issue #4"})," for more on this.\nNewer is generally better. Use the latest C# language version for the best results, regardless of your TargetFramework."]}),(0,n.jsx)(s.h2,{id:"usage",children:"Usage"}),(0,n.jsxs)(s.p,{children:["Install the ",(0,n.jsx)(s.code,{children:"Microsoft.Windows.CsWin32"})," package:"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ps1",children:"dotnet add package Microsoft.Windows.CsWin32 --prerelease\n"})}),(0,n.jsxs)(s.p,{children:["You should also install the ",(0,n.jsx)(s.code,{children:"System.Memory"})," and ",(0,n.jsx)(s.code,{children:"System.Runtime.CompilerServices.Unsafe"})," packages when targeting .NET Framework 4.5+ or .NET Standard 2.0,\nas these add APIs that significantly improve much of the code generated by CsWin32:"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ps1",children:"dotnet add package System.Memory\ndotnet add package System.Runtime.CompilerServices.Unsafe\n"})}),(0,n.jsxs)(s.p,{children:["Projects targeting .NET Core 2.1+ or .NET 5+ do ",(0,n.jsx)(s.em,{children:"not"})," need to add these package references,\nalthough it is harmless to do so."]}),(0,n.jsxs)(s.p,{children:["Note that while the ",(0,n.jsx)(s.code,{children:"System.Memory"})," package depends on the ",(0,n.jsx)(s.code,{children:"System.Runtime.CompilerServices.Unsafe"})," package,\nreferencing the latter directly is still important to get the latest version of the APIs it provides."]}),(0,n.jsxs)(s.p,{children:["Your project must allow unsafe code to support the generated code that will likely use pointers.\nThis does ",(0,n.jsx)(s.em,{children:"not"})," automatically make all your code ",(0,n.jsx)(s.em,{children:"unsafe"}),".\nUse of the ",(0,n.jsx)(s.code,{children:"unsafe"})," keyword is required anywhere you use pointers.\nThe source generator NuGet package sets the default value of the ",(0,n.jsx)(s.code,{children:"AllowUnsafeBlocks"})," property for your project to ",(0,n.jsx)(s.code,{children:"true"}),",\nbut if you explicitly set it to ",(0,n.jsx)(s.code,{children:"false"})," in your project file, generated code may produce compiler errors."]}),(0,n.jsxs)(s.p,{children:["Create a ",(0,n.jsx)(s.code,{children:"NativeMethods.txt"})," file in your project directory that lists the APIs to generate code for.\nEach line may consist of ",(0,n.jsx)(s.em,{children:"one"})," of the following:"]}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["Exported method name (e.g. ",(0,n.jsx)(s.code,{children:"CreateFile"}),"). This ",(0,n.jsx)(s.em,{children:"may"})," include the ",(0,n.jsx)(s.code,{children:"A"})," or ",(0,n.jsx)(s.code,{children:"W"})," suffix, where applicable. This ",(0,n.jsx)(s.em,{children:"may"})," be qualified with a namespace but is only recommended in cases of ambiguity, which CsWin32 will prompt where appropriate."]}),"\n",(0,n.jsxs)(s.li,{children:["A macro name (e.g. ",(0,n.jsx)(s.code,{children:"HRESULT_FROM_WIN32"}),"). These are generated into the same class with extern methods. Macros must be hand-authored into CsWin32, so let us know if you want to see a macro added."]}),"\n",(0,n.jsxs)(s.li,{children:["A namespace to generate all APIs from (e.g. ",(0,n.jsx)(s.code,{children:"Windows.Win32.Storage.FileSystem"})," would search the metadata for all APIs within that namespace and generate them)."]}),"\n",(0,n.jsxs)(s.li,{children:["Module name followed by ",(0,n.jsx)(s.code,{children:".*"})," to generate all methods exported from that module (e.g. ",(0,n.jsx)(s.code,{children:"Kernel32.*"}),")."]}),"\n",(0,n.jsxs)(s.li,{children:["The name of a struct, enum, constant or interface to generate. This ",(0,n.jsx)(s.em,{children:"may"})," be qualified with a namespace but is only recommended in cases of ambiguity, which CsWin32 will prompt where appropriate."]}),"\n",(0,n.jsxs)(s.li,{children:["A prefix shared by many constants, followed by ",(0,n.jsx)(s.code,{children:"*"}),", to generate all constants that share that prefix (e.g. ",(0,n.jsx)(s.code,{children:"ALG_SID_MD*"}),")."]}),"\n",(0,n.jsxs)(s.li,{children:["A comment (i.e. any line starting with ",(0,n.jsx)(s.code,{children:"//"}),") or white space line, which will be ignored."]}),"\n"]}),(0,n.jsx)(s.p,{children:"When generating any type or member, all supporting types will also be generated."}),(0,n.jsx)(s.p,{children:"Generated code is added directly in the compiler.\nAn IDE may make this generated code available to view through code navigation commands (e.g. Go to Definition) or a tree view of source files that include generated source files."}),(0,n.jsxs)(s.p,{children:["Assuming default settings and a ",(0,n.jsx)(s.code,{children:"NativeMethods.txt"})," file with content that includes ",(0,n.jsx)(s.code,{children:"CreateFile"}),", the P/Invoke methods can be found on the ",(0,n.jsx)(s.code,{children:"Windows.Win32.PInvoke"})," class, like this:"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-cs",children:"using Windows.Win32;\n\nPInvoke.CreateFile(/*args*/);\n"})}),(0,n.jsxs)(s.p,{children:["Constants are defined on the same class as the p/invoke methods (by default, the ",(0,n.jsx)(s.code,{children:"Windows.Win32.PInvoke"})," class)."]}),(0,n.jsxs)(s.p,{children:["Other supporting types are defined within or under the ",(0,n.jsx)(s.code,{children:"Windows.Win32"})," namespace.\nDiscovery of the namespace for a given type can be done with the Go To All feature (Ctrl+T) in Visual Studio with the type name as the search query."]}),(0,n.jsxs)(s.p,{children:["A project may include many NativeMethods.txt files (each one necessarily in its own directory).\nCsWin32 will read them all to generate APIs, provided these files are included as ",(0,n.jsx)(s.code,{children:"AdditionalFiles"})," in the project.\nA ",(0,n.jsx)(s.code,{children:"NativeMethods.txt"})," file directly in the project directory is added automatically to ",(0,n.jsx)(s.code,{children:"AdditionalFiles"}),".\nFiles in other directories must be added to the project file manually."]}),(0,n.jsx)(s.p,{children:"Whether API requests are all in a single NativeMethods.txt file or split across many makes no difference to the generated result.\nWe recommend using just one NativeMethods.txt file and keeping it sorted for easy bookkeeping.\nMultiple files perhaps makes the most sense in a Shared Project scenario where several API requests will be common across many projects, so sharing a NativeMethods.txt file with those same projects that contain all the necessary APIs for the set of shared source files make maintenance easier."}),(0,n.jsxs)(s.p,{children:['Some APIs require targeting a specific architecture and are not available when your C# project compiles as "Any CPU".\nLearn more about ',(0,n.jsx)(s.a,{href:"https://github.com/microsoft/CsWin32/doc/ArchSpecificAPIs.md",children:"how this manifests and what your options are"}),"."]}),(0,n.jsx)(s.h3,{id:"customizing-generated-code",children:"Customizing generated code"}),(0,n.jsx)(s.p,{children:"Several aspects of the generated code can be customized, including:"}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"The name of the class(es) that declare p/invoke methods"}),"\n",(0,n.jsxs)(s.li,{children:["Whether to emit interop types as ",(0,n.jsx)(s.code,{children:"public"})," or ",(0,n.jsx)(s.code,{children:"internal"})]}),"\n",(0,n.jsx)(s.li,{children:"Whether to emit ANSI functions as well where Wide character functions also exist"}),"\n",(0,n.jsxs)(s.li,{children:["Set ",(0,n.jsx)(s.code,{children:"PreserveSig"})," for COM interfaces or individual members"]}),"\n",(0,n.jsx)(s.li,{children:"Force generation of blittable structs, COM structs instead of interfaces (for super high performance with 0 GC pressure), etc."}),"\n"]}),(0,n.jsxs)(s.p,{children:["To configure these settings, create a ",(0,n.jsx)(s.code,{children:"NativeMethods.json"})," file in your project directory.\nSpecifying the ",(0,n.jsx)(s.code,{children:"$schema"})," property that points to ",(0,n.jsx)(s.a,{href:"https://github.com/microsoft/CsWin32/src/Microsoft.Windows.CsWin32/settings.schema.json",children:"the schema"})," adds completions, descriptions and validation in many JSON editors, and in fact is where all the documentation for the available settings is found."]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "$schema": "https://aka.ms/CsWin32.schema.json",\n  "emitSingleFile": false\n}\n'})}),(0,n.jsxs)(s.p,{children:["Most generated types include the ",(0,n.jsx)(s.code,{children:"partial"})," modifier so you can add your own members to that type within your code."]}),(0,n.jsxs)(s.p,{children:["When you need to ",(0,n.jsx)(s.em,{children:"replace"})," a generated type, simply copy and paste it from generated code into your own source files\nand remove the ",(0,n.jsx)(s.code,{children:"partial"})," modifier.\nBe sure to keep the name and namespace exactly the same.\nCsWin32 will notice that your project already declares the type and skip generating it, but generate everything else.\nNote that if that type is the only thing that references some other generated type, CsWin32 will stop generating that type too.\nTo keep CsWin32 generating the referred types you need, add them explicitly to ",(0,n.jsx)(s.code,{children:"NativeMethods.txt"}),"."]}),(0,n.jsx)(s.h3,{id:"support-for-trimming-aot-andor-disabling-the-runtime-marshaler",children:"Support for trimming, AOT, and/or disabling the runtime marshaler"}),(0,n.jsx)(s.p,{children:"Newer .NET runtime versions may fail for CsWin32 generated code when the application project builds with one or both of these properties set:"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-xml",children:"<PublishAot>true</PublishAot>\n<DisableRuntimeMarshalling>true</DisableRuntimeMarshalling>\n<PublishTrimmed>true</PublishTrimmed>\n"})}),(0,n.jsxs)(s.p,{children:["CsWin32 supports these environments by avoiding code that relies on the runtime marshaler when the ",(0,n.jsx)(s.code,{children:"allowMarshaling"})," setting is disabled in the ",(0,n.jsx)(s.code,{children:"NativeMethods.json"})," file.\nFor example:"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-json",children:'{\n  "$schema": "https://aka.ms/CsWin32.schema.json",\n  "allowMarshaling": false\n}\n'})}),(0,n.jsx)(s.h3,{id:"newer-metadata",children:"Newer metadata"}),(0,n.jsxs)(s.p,{children:["To update the metadata used as the source for code generation, you may install a newer ",(0,n.jsx)(s.code,{children:"Microsoft.Windows.SDK.Win32Metadata"})," package:"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-ps1",children:"dotnet add package Microsoft.Windows.SDK.Win32Metadata --prerelease\n"})}),(0,n.jsxs)(s.p,{children:["CsWin32 also consumes the WDK from a similarly named package: ",(0,n.jsx)(s.code,{children:"Microsoft.Windows.WDK.Win32Metadata"}),"."]}),(0,n.jsx)(s.h2,{id:"consuming-daily-builds",children:"Consuming daily builds"}),(0,n.jsx)(s.p,{children:"Can't wait for the next release to try out a bug fix? Follow these steps to consume directly from our daily build."}),(0,n.jsx)(s.p,{children:"Just add this package feed to your nuget.config file:"}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-xml",children:'<add key="winsdk" value="https://pkgs.dev.azure.com/azure-public/winsdk/_packaging/CI/nuget/v3/index.json" />\n'})})]}),"\n",(0,n.jsx)(s.h3,{id:"about",children:"About"}),"\n",(0,n.jsx)(s.admonition,{type:"note",children:(0,n.jsx)(s.p,{children:"Generating WinAPI code in C#"})}),"\n",(0,n.jsx)(s.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,n.jsx)(s.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,n.jsxs)(r.A,{children:[(0,n.jsxs)(a.A,{value:"csproj",label:"CSharp Project",children:[(0,n.jsxs)(s.p,{children:["This is the CSharp Project that references ",(0,n.jsx)(s.strong,{children:"Microsoft.Windows.CsWin32"})]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-xml",metastring:"showLineNumbers {11}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Microsoft.Windows.CsWin32" Version="0.3.106">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n  </ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n\n</Project>\n\n'})})]}),(0,n.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Microsoft.Windows.CsWin32\\src\\WinAPI\\Program.cs",label:"Program.cs",children:[(0,n.jsxs)(s.p,{children:["This is the use of ",(0,n.jsx)(s.strong,{children:"Microsoft.Windows.CsWin32"})," in ",(0,n.jsx)(s.em,{children:"Program.cs"})]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'\nConsole.WriteLine("Hello, World!" + Windows.Win32.PInvoke.GetTickCount());\n\n'})})]}),(0,n.jsxs)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Microsoft.Windows.CsWin32\\src\\WinAPI\\NativeMethods.txt",label:"NativeMethods.txt",children:[(0,n.jsxs)(s.p,{children:["This is the use of ",(0,n.jsx)(s.strong,{children:"Microsoft.Windows.CsWin32"})," in ",(0,n.jsx)(s.em,{children:"NativeMethods.txt"})]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"GetTickCount\n"})})]})]}),"\n",(0,n.jsx)(s.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,n.jsx)(s.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,n.jsxs)(r.A,{children:[(0,n.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Microsoft.Windows.CsWin32\\src\\WinAPI\\obj\\GX\\Microsoft.Windows.CsWin32\\Microsoft.Windows.CsWin32.SourceGenerator\\Windows.Win32.CsWin32Stamp.g.cs",label:"Windows.Win32.CsWin32Stamp.g.cs",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// ------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n// ------------------------------------------------------------------------------\n\n#pragma warning disable CS1591,CS1573,CS0465,CS0649,CS8019,CS1570,CS1584,CS1658,CS0436,CS8981\n[assembly: global::System.Reflection.AssemblyMetadata("Microsoft.Windows.CsWin32","0.3.106+a37a0b4b70")]\n\n'})})}),(0,n.jsx)(a.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Microsoft.Windows.CsWin32\\src\\WinAPI\\obj\\GX\\Microsoft.Windows.CsWin32\\Microsoft.Windows.CsWin32.SourceGenerator\\Windows.Win32.PInvoke.KERNEL32.dll.g.cs",label:"Windows.Win32.PInvoke.KERNEL32.dll.g.cs",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// ------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n// ------------------------------------------------------------------------------\n\n#pragma warning disable CS1591,CS1573,CS0465,CS0649,CS8019,CS1570,CS1584,CS1658,CS0436,CS8981\nusing global::System;\nusing global::System.Diagnostics;\nusing global::System.Diagnostics.CodeAnalysis;\nusing global::System.Runtime.CompilerServices;\nusing global::System.Runtime.InteropServices;\nusing global::System.Runtime.Versioning;\nusing winmdroot = global::Windows.Win32;\nnamespace Windows.Win32\n{\n\n\t/// <content>\n\t/// Contains extern methods from "KERNEL32.dll".\n\t/// </content>\n\t[global::System.CodeDom.Compiler.GeneratedCode("Microsoft.Windows.CsWin32", "0.3.106+a37a0b4b70")]\n\tinternal static partial class PInvoke\n\t{\n\t\t/// <summary>Retrieves the number of milliseconds that have elapsed since the system was started, up to 49.7 days.</summary>\n\t\t/// <returns>The return value is the number of milliseconds that have elapsed since the system was started.</returns>\n\t\t/// <remarks>\n\t\t/// <para>The resolution of the <b>GetTickCount</b> function is limited to the resolution of the system timer, which is typically in the range of  10 milliseconds to 16 milliseconds. The resolution of the <b>GetTickCount</b> function is not affected by adjustments made by the <a href="https://docs.microsoft.com/windows/desktop/api/sysinfoapi/nf-sysinfoapi-getsystemtimeadjustment">GetSystemTimeAdjustment</a> function. The elapsed time is stored as a <b>DWORD</b> value. Therefore, the time will wrap around to zero if the system is run continuously for 49.7 days. To avoid this problem, use the <a href="https://docs.microsoft.com/windows/desktop/api/sysinfoapi/nf-sysinfoapi-gettickcount64">GetTickCount64</a> function. Otherwise, check for an overflow condition when comparing times. If you need a higher resolution timer, use a <a href="https://docs.microsoft.com/windows/desktop/Multimedia/multimedia-timers">multimedia timer</a> or a <a href="https://docs.microsoft.com/windows/desktop/winmsg/about-timers">high-resolution timer</a>. To obtain the time elapsed since the computer was started, retrieve the System Up Time counter in the performance data in the registry key <b>HKEY_PERFORMANCE_DATA</b>. The value returned is an 8-byte value. For more information, see <a href="https://docs.microsoft.com/windows/desktop/PerfCtrs/performance-counters-portal">Performance Counters</a>. To obtain the time the system has spent in the working state since it was started, use the <a href="https://docs.microsoft.com/windows/desktop/api/realtimeapiset/nf-realtimeapiset-queryunbiasedinterrupttime">QueryUnbiasedInterruptTime</a> function. <div class="alert"><b>Note</b>\xa0\xa0The <a href="https://docs.microsoft.com/windows/desktop/api/realtimeapiset/nf-realtimeapiset-queryunbiasedinterrupttime">QueryUnbiasedInterruptTime</a> function produces different results on debug ("checked") builds of Windows, because the interrupt-time count and tick count are advanced by approximately 49 days. This helps to identify bugs that might not occur until the system has been running for a long time. The checked build is available to MSDN subscribers through the <a href="https://msdn.microsoft.com/default.aspx">Microsoft Developer Network (MSDN)</a> Web site.</div> <div>\xa0</div></para>\n\t\t/// <para><see href="https://learn.microsoft.com/windows/win32/api/sysinfoapi/nf-sysinfoapi-gettickcount#">Read more on docs.microsoft.com</see>.</para>\n\t\t/// </remarks>\n\t\t[DllImport("KERNEL32.dll", ExactSpelling = true)]\n\t\t[DefaultDllImportSearchPaths(DllImportSearchPath.System32)]\n\t\t[SupportedOSPlatform("windows5.0")]\n\t\tinternal static extern uint GetTickCount();\n\t}\n}\n\n'})})})]}),"\n",(0,n.jsx)(s.h2,{id:"useful",children:"Useful"}),"\n",(0,n.jsx)(s.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,n.jsx)(s.admonition,{type:"tip",children:(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(10126).A+"",children:"Download Example project Microsoft.Windows.CsWin32 "})})}),"\n",(0,n.jsx)(s.h3,{id:"share-microsoftwindowscswin32",children:"Share Microsoft.Windows.CsWin32"}),"\n",(0,n.jsxs)("ul",{children:[(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Windows.CsWin32&quote=Microsoft.Windows.CsWin32",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Windows.CsWin32&text=Microsoft.Windows.CsWin32:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Windows.CsWin32",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Windows.CsWin32&title=Microsoft.Windows.CsWin32",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,n.jsx)("li",{children:(0,n.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Windows.CsWin32&title=Microsoft.Windows.CsWin32&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMicrosoft.Windows.CsWin32",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Microsoft.Windows.CsWin32",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Microsoft.Windows.CsWin32"})}),"\n",(0,n.jsx)(s.p,{children:"aaa"}),"\n",(0,n.jsx)(l.Ay,{})]})}function g(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);