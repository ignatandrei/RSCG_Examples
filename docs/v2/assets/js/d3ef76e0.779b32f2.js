"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[2161],{14399:(e,s,n)=>{n.d(s,{A:()=>o});const o=n.p+"assets/files/DisposableHelpers-776c69e8ffb6ab1d2b0f291e5a9b9c24.zip"},97272:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>h,contentTitle:()=>d,default:()=>m,frontMatter:()=>c,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"RSCG-Examples/DisposableHelpers","title":"71 - DisposableHelpers","description":"Generating boilerplate for thread safe Dispose","source":"@site/docs/RSCG-Examples/DisposableHelpers.md","sourceDirName":"RSCG-Examples","slug":"/DisposableHelpers","permalink":"/RSCG_Examples/v2/docs/DisposableHelpers","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":710,"frontMatter":{"sidebar_position":710,"title":"71 - DisposableHelpers","description":"Generating boilerplate for thread safe Dispose","slug":"/DisposableHelpers"},"sidebar":"tutorialSidebar","previous":{"title":"70 - MagicMap","permalink":"/RSCG_Examples/v2/docs/MagicMap"},"next":{"title":"72 - Meziantou.Polyfill","permalink":"/RSCG_Examples/v2/docs/Meziantou.Polyfill"}}');var a=n(74848),i=n(28453),r=n(11470),l=n(19365),t=n(14252),p=n(98293);const c={sidebar_position:710,title:"71 - DisposableHelpers",description:"Generating boilerplate for thread safe Dispose",slug:"/DisposableHelpers"},d="DisposableHelpers  by Clynt Neiko Rupinta",h={},u=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Installation",id:"installation",level:2},{value:"Supported frameworks",id:"supported-frameworks",level:2},{value:"Usage",id:"usage",level:2},{value:"Disposable",id:"disposable",level:3},{value:"Disposable Source Generator",id:"disposable-source-generator",level:3},{value:"Anonymous Disposable",id:"anonymous-disposable",level:3},{value:"AsyncDisposable",id:"asyncdisposable",level:3},{value:"AsyncDisposable Source Generator",id:"asyncdisposable-source-generator",level:3},{value:"Anonymous AsyncDisposable",id:"anonymous-asyncdisposable",level:3},{value:"Want To Support This Project?",id:"want-to-support-this-project",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share DisposableHelpers",id:"share-disposablehelpers",level:3},...p.RM];function b(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"disposablehelpers--by-clynt-neiko-rupinta",children:"DisposableHelpers  by Clynt Neiko Rupinta"})}),"\n",(0,a.jsx)(t.A,{toc:u}),"\n",(0,a.jsx)(s.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.a,{href:"https://www.nuget.org/packages/DisposableHelpers/",children:(0,a.jsx)(s.img,{src:"https://img.shields.io/nuget/dt/DisposableHelpers?label=DisposableHelpers",alt:"Nuget"})}),"\n",(0,a.jsx)(s.a,{href:"https://github.com/Kiryuumaru/DisposableHelpers",children:(0,a.jsx)(s.img,{src:"https://img.shields.io/github/last-commit/Kiryuumaru/DisposableHelpers?label=updated",alt:"GitHub last commit"})}),"\n",(0,a.jsx)(s.img,{src:"https://img.shields.io/github/stars/Kiryuumaru/DisposableHelpers?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,a.jsx)(s.h2,{id:"details",children:"Details"}),"\n",(0,a.jsx)(s.h3,{id:"info",children:"Info"}),"\n",(0,a.jsxs)(s.admonition,{type:"info",children:[(0,a.jsxs)(s.p,{children:["Name: ",(0,a.jsx)(s.strong,{children:"DisposableHelpers"})]}),(0,a.jsx)(s.p,{children:"Disposable helpers for IDisposable and IAsyncDisposable."}),(0,a.jsx)(s.p,{children:"Author: Clynt Neiko Rupinta"}),(0,a.jsxs)(s.p,{children:["NuGet:\n",(0,a.jsx)(s.em,{children:(0,a.jsx)(s.a,{href:"https://www.nuget.org/packages/DisposableHelpers/",children:"https://www.nuget.org/packages/DisposableHelpers/"})})]}),(0,a.jsxs)(s.p,{children:["You can find more details at ",(0,a.jsx)(s.a,{href:"https://github.com/Kiryuumaru/DisposableHelpers",children:"https://github.com/Kiryuumaru/DisposableHelpers"})]}),(0,a.jsxs)(s.p,{children:["Source: ",(0,a.jsx)(s.a,{href:"https://github.com/Kiryuumaru/DisposableHelpers",children:"https://github.com/Kiryuumaru/DisposableHelpers"})]})]}),"\n",(0,a.jsx)(s.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,a.jsxs)(s.admonition,{type:"note",children:[(0,a.jsx)(s.h1,{id:"disposablehelpers",children:"DisposableHelpers"}),(0,a.jsx)(s.p,{children:"Disposable helpers for IDisposable and IAsyncDisposable with source generators. Also capable of both anonymous disposable and anonymous async disposable."}),(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"NuGets"})}),(0,a.jsxs)(s.table,{children:[(0,a.jsx)(s.thead,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.th,{children:"Name"}),(0,a.jsx)(s.th,{style:{textAlign:"center"},children:"Info"})]})}),(0,a.jsx)(s.tbody,{children:(0,a.jsxs)(s.tr,{children:[(0,a.jsx)(s.td,{children:"DisposableHelpers"}),(0,a.jsx)(s.td,{style:{textAlign:"center"},children:(0,a.jsx)(s.a,{href:"https://www.nuget.org/packages/DisposableHelpers/",children:(0,a.jsx)(s.img,{src:"https://buildstats.info/nuget/DisposableHelpers?includePreReleases=true",alt:"NuGet"})})})]})})]}),(0,a.jsx)(s.h2,{id:"installation",children:"Installation"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",children:"// Install release version\nInstall-Package DisposableHelpers\n\n// Install pre-release version\nInstall-Package DisposableHelpers -pre\n"})}),(0,a.jsx)(s.h2,{id:"supported-frameworks",children:"Supported frameworks"}),(0,a.jsxs)(s.p,{children:[".NET Standard 2.0 and above - see ",(0,a.jsx)(s.a,{href:"https://github.com/dotnet/standard/blob/master/docs/versions.md",children:"https://github.com/dotnet/standard/blob/master/docs/versions.md"})," for compatibility matrix"]}),(0,a.jsx)(s.h2,{id:"usage",children:"Usage"}),(0,a.jsx)(s.h3,{id:"disposable",children:"Disposable"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",children:"using DisposableHelpers;\n\nnamespace YourNamespace\n{\n    public class SampleDisposable : Disposable\n    {\n        private SampleUnmanagedResource resources;\n        \n        protected override void Dispose(bool disposing)\n        {\n            if (disposing)\n            {\n                resources.Release();\n            }\n            base.Dispose(disposing);\n        }\n    }\n}\n"})}),(0,a.jsx)(s.h3,{id:"disposable-source-generator",children:"Disposable Source Generator"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",children:"using DisposableHelpers.Attributes;\n\nnamespace YourNamespace\n{\n    [Disposable]\n    public partial class SampleDisposable\n    {\n        private SampleUnmanagedResource resources;\n        \n        protected void Dispose(bool disposing)\n        {\n            if (disposing)\n            {\n                resources.Release();\n            }\n            base.Dispose(disposing);\n        }\n    }\n}\n"})}),(0,a.jsx)(s.h3,{id:"anonymous-disposable",children:"Anonymous Disposable"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",children:"using DisposableHelpers;\n\nnamespace YourNamespace\n{\n    public static class Program\n    {\n        private static SampleUnmanagedResource resources;\n        \n        public static void Main(string[] args)\n        {\n            Disposable disposable = new Disposable(disposing =>\n            {\n                if (disposing)\n                {\n                    resources.Release();\n                }\n            });\n\n            disposable.Dispose();\n        }\n    }\n}\n"})}),(0,a.jsx)(s.h3,{id:"asyncdisposable",children:"AsyncDisposable"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",children:"using DisposableHelpers;\n\nnamespace YourNamespace\n{\n    public class SampleAsyncDisposable : AsyncDisposable\n    {\n        private SampleAsyncUnmanagedResource resources;\n        \n        protected override async ValueTask Dispose(bool isDisposing)\n        {\n            if (isDisposing)\n            {\n                await resources.Release();\n            }\n            return base.Dispose(isDisposing);\n        }\n    }\n}\n"})}),(0,a.jsx)(s.h3,{id:"asyncdisposable-source-generator",children:"AsyncDisposable Source Generator"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",children:"using DisposableHelpers.Attributes;\n\nnamespace YourNamespace\n{\n    [AsyncDisposable]\n    public partial class SampleAsyncDisposable\n    {\n        private SampleAsyncUnmanagedResource resources;\n        \n        protected async ValueTask Dispose(bool isDisposing)\n        {\n            if (isDisposing)\n            {\n                await resources.Release();\n            }\n            return base.Dispose(isDisposing);\n        }\n    }\n}\n"})}),(0,a.jsx)(s.h3,{id:"anonymous-asyncdisposable",children:"Anonymous AsyncDisposable"}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",children:"using DisposableHelpers;\n\nnamespace YourNamespace\n{\n    public static class Program\n    {\n        private static SampleAsyncUnmanagedResource resources;\n        \n        public static async void Main(string[] args)\n        {\n            AsyncDisposable disposable = new AsyncDisposable(async disposing =>\n            {\n                if (disposing)\n                {\n                    await resources.Release();\n                }\n            });\n\n            await disposable.DisposeAsync();\n        }\n    }\n}\n"})}),(0,a.jsx)(s.h3,{id:"want-to-support-this-project",children:"Want To Support This Project?"}),(0,a.jsx)(s.p,{children:"All I have ever asked is to be active by submitting bugs, features, and sending those pull requests down!."}),(0,a.jsx)(s.p,{children:(0,a.jsx)(s.a,{href:"https://ko-fi.com/kiryuumaru",children:(0,a.jsx)(s.img,{src:"https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif",alt:"paypal"})})})]}),"\n",(0,a.jsx)(s.h3,{id:"about",children:"About"}),"\n",(0,a.jsx)(s.admonition,{type:"note",children:(0,a.jsx)(s.p,{children:"Generating boilerplate for thread safe Dispose"})}),"\n",(0,a.jsx)(s.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,a.jsx)(s.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,a.jsxs)(r.A,{children:[(0,a.jsxs)(l.A,{value:"csproj",label:"CSharp Project",children:[(0,a.jsxs)(s.p,{children:["This is the CSharp Project that references ",(0,a.jsx)(s.strong,{children:"DisposableHelpers"})]}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-xml",metastring:"showLineNumbers {16}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n \t <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n \t <ItemGroup>\n \t   <PackageReference Include="DisposableHelpers" Version="1.1.16" />\n \t </ItemGroup>\n\n</Project>\n\n'})})]}),(0,a.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DisposableHelpers\\src\\IDisp\\Program.cs",label:"Program.cs",children:[(0,a.jsxs)(s.p,{children:["This is the use of ",(0,a.jsx)(s.strong,{children:"DisposableHelpers"})," in ",(0,a.jsx)(s.em,{children:"Program.cs"})]}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using IDisposableGeneratorDemo;\n//https://github.com/benutomo-dev/RoslynComponents\nusing (var db = new DALDB())\n{\n    Console.WriteLine("before releasing");\n}\nConsole.WriteLine("after releasing");\n'})})]}),(0,a.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DisposableHelpers\\src\\IDisp\\DALDB.cs",label:"DALDB.cs",children:[(0,a.jsxs)(s.p,{children:["This is the use of ",(0,a.jsx)(s.strong,{children:"DisposableHelpers"})," in ",(0,a.jsx)(s.em,{children:"DALDB.cs"})]}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"using DisposableHelpers.Attributes;\nusing System.Resources;\n\nnamespace IDisposableGeneratorDemo;\n\n\n[Disposable]\npartial class DALDB \n{\n    \n    private readonly ConnectionDB cn;\n    private readonly ConnectionDB cn1;\n\n    public DALDB()\n    {\n        cn = new ConnectionDB();\n        cn1=new ConnectionDB();\n    }\n\n    protected void Dispose(bool disposing)\n    {\n        if (disposing)\n        {\n            cn.Dispose();\n            cn1.Dispose();\n        }\n    }\n}\n\n"})})]}),(0,a.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DisposableHelpers\\src\\IDisp\\ConnectionDB.cs",label:"ConnectionDB.cs",children:[(0,a.jsxs)(s.p,{children:["This is the use of ",(0,a.jsx)(s.strong,{children:"DisposableHelpers"})," in ",(0,a.jsx)(s.em,{children:"ConnectionDB.cs"})]}),(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'namespace IDisposableGeneratorDemo;\n\nclass ConnectionDB : IDisposable\n{\n    public void Dispose()\n    {\n        Console.WriteLine("disposing connectiondb");\n    }\n}\n\n'})})]})]}),"\n",(0,a.jsx)(s.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,a.jsx)(s.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,a.jsx)(r.A,{children:(0,a.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\DisposableHelpers\\src\\IDisp\\obj\\GX\\DisposableHelpers.SourceGenerators\\DisposableHelpers.SourceGenerators.DisposableGenerator\\IDisposableGeneratorDemo.DALDB.cs",label:"IDisposableGeneratorDemo.DALDB.cs",children:(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated/>\n#pragma warning disable\n#nullable enable\nnamespace IDisposableGeneratorDemo\n{\n    partial class DALDB : global::System.IDisposable\n    {\n#nullable disable\n        /// <summary>\n        /// Finalizes an instance of the <see cref = "Disposable"/> class.\n        /// </summary>\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n        ~DALDB()\n        {\n            Dispose(false);\n        }\n\n        /// <summary>\n        /// Gets a value indicating whether this object is in the process of disposing.\n        /// </summary>\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n        public bool IsDisposing => global::System.Threading.Interlocked.CompareExchange(ref disposeStage, DisposalStarted, DisposalStarted) == DisposalStarted;\n\n        /// <summary>\n        /// Gets a value indicating whether this object has been disposed.\n        /// </summary>\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n        public bool IsDisposed => global::System.Threading.Interlocked.CompareExchange(ref disposeStage, DisposalComplete, DisposalComplete) == DisposalComplete;\n\n        /// <summary>\n        /// Gets a value indicating whether this object has been disposed or is in the process of being disposed.\n        /// </summary>\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n        public bool IsDisposedOrDisposing => global::System.Threading.Interlocked.CompareExchange(ref disposeStage, DisposalNotStarted, DisposalNotStarted) != DisposalNotStarted;\n\n        /// <summary>\n        /// Gets the object name, for use in any <see cref = "global::System.ObjectDisposedException"/> thrown by this object.\n        /// </summary>\n        /// <remarks>\n        /// Subclasses can override this property if they would like more control over the object name appearing in any <see cref = "global::System.ObjectDisposedException"/>\n        /// thrown by this <see cref = "Disposable"/>. This can be particularly useful in debugging and diagnostic scenarios.\n        /// </remarks>\n        /// <value>\n        /// The object name, which defaults to the class name.\n        /// </value>\n        \n#nullable enable\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n        protected virtual string? ObjectName => GetType().FullName;\n\n#nullable disable\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        private const int DisposalNotStarted = 0;\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        private const int DisposalStarted = 1;\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        private const int DisposalComplete = 2;\n        // see the constants defined above for valid values\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        private int disposeStage;\n        /// <summary>\n        /// Occurs when this object is about to be disposed.\n        /// </summary>\n        \n#nullable enable\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n        public event global::System.EventHandler? Disposing;\n        /// <summary>\n        /// Disposes of this object, if it hasn\'t already been disposed.\n        /// </summary>\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n        public void Dispose()\n        {\n            if (global::System.Threading.Interlocked.CompareExchange(ref disposeStage, DisposalStarted, DisposalNotStarted) != DisposalNotStarted)\n            {\n                return;\n            }\n\n            OnDisposing();\n            Disposing = null;\n            Dispose(true);\n            global::System.GC.SuppressFinalize(this);\n            global::System.Threading.Interlocked.Exchange(ref disposeStage, DisposalComplete);\n        }\n\n        /// <summary>\n        /// Verifies that this object is not in the process of disposing, throwing an exception if it is.\n        /// </summary>\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n        protected void VerifyNotDisposing()\n        {\n            if (IsDisposing)\n            {\n                throw new global::System.ObjectDisposedException(ObjectName);\n            }\n        }\n\n        /// <summary>\n        /// Verifies that this object has not been disposed, throwing an exception if it is.\n        /// </summary>\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n        protected void VerifyNotDisposed()\n        {\n            if (IsDisposed)\n            {\n                throw new global::System.ObjectDisposedException(ObjectName);\n            }\n        }\n\n        /// <summary>\n        /// Verifies that this object is not being disposed or has been disposed, throwing an exception if either of these are true.\n        /// </summary>\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n        protected void VerifyNotDisposedOrDisposing()\n        {\n            if (IsDisposedOrDisposing)\n            {\n                throw new global::System.ObjectDisposedException(ObjectName);\n            }\n        }\n\n        /// <summary>\n        /// Raises the <see cref = "Disposing"/> event.\n        /// </summary>\n        [global::System.CodeDom.Compiler.GeneratedCode("DisposableHelpers.SourceGenerators.DisposableGenerator", "1.0.0.0")]\n        [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n        protected virtual void OnDisposing()\n        {\n            Disposing?.Invoke(this, new global::System.EventArgs());\n        }\n    }\n}\n'})})})}),"\n",(0,a.jsx)(s.h2,{id:"useful",children:"Useful"}),"\n",(0,a.jsx)(s.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,a.jsx)(s.admonition,{type:"tip",children:(0,a.jsx)(s.p,{children:(0,a.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(14399).A+"",children:"Download Example project DisposableHelpers "})})}),"\n",(0,a.jsx)(s.h3,{id:"share-disposablehelpers",children:"Share DisposableHelpers"}),"\n",(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDisposableHelpers&quote=DisposableHelpers",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDisposableHelpers&text=DisposableHelpers:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDisposableHelpers",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDisposableHelpers&title=DisposableHelpers",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDisposableHelpers&title=DisposableHelpers&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FDisposableHelpers",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/DisposableHelpers",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/DisposableHelpers"})}),"\n",(0,a.jsx)(s.p,{children:"aaa"}),"\n",(0,a.jsx)(p.Ay,{})]})}function m(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(b,{...e})}):b(e)}},98293:(e,s,n)=>{n.d(s,{Ay:()=>l,RM:()=>i});var o=n(74848),a=n(28453);const i=[{value:"Category &quot;Disposer&quot; has the following generators:",id:"category-disposer-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function r(e){const s={a:"a",h3:"h3",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h3,{id:"category-disposer-has-the-following-generators",children:'Category "Disposer" has the following generators:'}),"\n",(0,o.jsxs)(s.p,{children:["1 ",(0,o.jsx)(s.a,{href:"/docs/BenutomoAutomaticDisposeImplSourceGenerator",children:"BenutomoAutomaticDisposeImplSourceGenerator"})]}),"\n",(0,o.jsxs)(s.p,{children:["2 ",(0,o.jsx)(s.a,{href:"/docs/Coplt.Dropping",children:"Coplt.Dropping"})]}),"\n",(0,o.jsxs)(s.p,{children:["3 ",(0,o.jsx)(s.a,{href:"/docs/DisposableHelpers",children:"DisposableHelpers"})]}),"\n",(0,o.jsxs)(s.p,{children:["4 ",(0,o.jsx)(s.a,{href:"/docs/Disposer",children:"Disposer"})]}),"\n",(0,o.jsxs)(s.p,{children:["5 ",(0,o.jsx)(s.a,{href:"/docs/IDisposableGenerator",children:"IDisposableGenerator"})]}),"\n",(0,o.jsx)(s.h3,{id:"see-category",children:"See category"}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"/docs/Categories/Disposer",children:"Disposer"})})]})}function l(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}}}]);