"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[2573],{2069:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>p,metadata:()=>m,toc:()=>u});var a=n(87462),i=(n(67294),n(3905)),r=n(73992),o=n(18679),s=n(68839);const p={sidebar_position:1620,title:"162 - MinimalHelpers.Routing.Analyzers",description:"Controller like API registering",slug:"/MinimalHelpers.Routing.Analyzers"},l="MinimalHelpers.Routing.Analyzers  by Maroc Minerva",m={unversionedId:"RSCG-Examples/MinimalHelpers.Routing.Analyzers",id:"RSCG-Examples/MinimalHelpers.Routing.Analyzers",title:"162 - MinimalHelpers.Routing.Analyzers",description:"Controller like API registering",source:"@site/docs/RSCG-Examples/MinimalHelpers.Routing.Analyzers.md",sourceDirName:"RSCG-Examples",slug:"/MinimalHelpers.Routing.Analyzers",permalink:"/RSCG_Examples/v2/docs/MinimalHelpers.Routing.Analyzers",draft:!1,tags:[],version:"current",sidebarPosition:1620,frontMatter:{sidebar_position:1620,title:"162 - MinimalHelpers.Routing.Analyzers",description:"Controller like API registering",slug:"/MinimalHelpers.Routing.Analyzers"},sidebar:"tutorialSidebar",previous:{title:"161 - Immediate.Handlers",permalink:"/RSCG_Examples/v2/docs/Immediate.Handlers"},next:{title:"163 - TypedSignalR.Client",permalink:"/RSCG_Examples/v2/docs/TypedSignalR.Client"}},d={},u=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share MinimalHelpers.Routing.Analyzers",id:"share-minimalhelpersroutinganalyzers",level:3},{value:"In the same category (API) - 9 other generators",id:"in-the-same-category-api---9-other-generators",level:3},{value:"immediate.apis",id:"immediateapis",level:4},{value:"Microsoft.Extensions.Configuration.Binder",id:"microsoftextensionsconfigurationbinder",level:4},{value:"MinimalApiBuilder",id:"minimalapibuilder",level:4},{value:"MinimalApis.Discovery",id:"minimalapisdiscovery",level:4},{value:"RDG",id:"rdg",level:4},{value:"Refit",id:"refit",level:4},{value:"RSCG_WebAPIExports",id:"rscg_webapiexports",level:4},{value:"SafeRouting",id:"saferouting",level:4},{value:"SkinnyControllersCommon",id:"skinnycontrollerscommon",level:4}],c={toc:u},g="wrapper";function h(e){let{components:t,...p}=e;return(0,i.kt)(g,(0,a.Z)({},c,p,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"minimalhelpersroutinganalyzers--by-maroc-minerva"},"MinimalHelpers.Routing.Analyzers  by Maroc Minerva"),(0,i.kt)(s.Z,{toc:u,mdxType:"TOCInline"}),(0,i.kt)("h2",{id:"nuget--site-data"},"NuGet / site data"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.Routing.Analyzers/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/MinimalHelpers.Routing.Analyzers?label=MinimalHelpers.Routing.Analyzers",alt:"Nuget"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/marcominerva/MinimalHelpers"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/marcominerva/MinimalHelpers?label=updated",alt:"GitHub last commit"})),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/marcominerva/MinimalHelpers?style=social",alt:"GitHub Repo stars"})),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("h3",{id:"info"},"Info"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Name: ",(0,i.kt)("strong",{parentName:"p"},"MinimalHelpers.Routing.Analyzers")),(0,i.kt)("p",{parentName:"admonition"},"A library that provides a Source Generator for automatic endpoints registration in Minimal API projects"),(0,i.kt)("p",{parentName:"admonition"},"Author: Maroc Minerva"),(0,i.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/MinimalHelpers.Routing.Analyzers/"},"https://www.nuget.org/packages/MinimalHelpers.Routing.Analyzers/")),"   "),(0,i.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/marcominerva/MinimalHelpers"},"https://github.com/marcominerva/MinimalHelpers")),(0,i.kt)("p",{parentName:"admonition"},"Source: ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/marcominerva/MinimalHelpers"},"https://github.com/marcominerva/MinimalHelpers"))),(0,i.kt)("h3",{id:"original-readme"},"Original Readme"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("h1",{parentName:"admonition",id:"minimal-apis-helpers"},"Minimal APIs Helpers"),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://github.com/marcominerva/MinimalHelpers/actions/workflows/linter.yml"},(0,i.kt)("img",{parentName:"a",src:"https://github.com/marcominerva/MinimalHelpers/actions/workflows/linter.yml/badge.svg",alt:"Lint Code Base"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/marcominerva/MinimalHelpers/blob/master/LICENSE"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/License-MIT-yellow.svg",alt:"License: MIT"}))),(0,i.kt)("p",{parentName:"admonition"},"A collection of helpers libraries for Minimal API projects."),(0,i.kt)("h2",{parentName:"admonition",id:"minimalhelpersrouting"},"MinimalHelpers.Routing"),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.Routing"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/MinimalHelpers.Routing",alt:"Nuget"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.Routing"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/MinimalHelpers.Routing",alt:"Nuget"}))),(0,i.kt)("p",{parentName:"admonition"},"A library that provides Routing helpers for Minimal API projects for automatic endpoints registration using Reflection."),(0,i.kt)("h3",{parentName:"admonition",id:"installation"},"Installation"),(0,i.kt)("p",{parentName:"admonition"},"The library is available on ",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.Routing"},"NuGet"),". Just search for ",(0,i.kt)("em",{parentName:"p"},"MinimalHelpers.Routing")," in the ",(0,i.kt)("strong",{parentName:"p"},"Package Manager GUI")," or run the following command in the ",(0,i.kt)("strong",{parentName:"p"},".NET CLI"),":"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"dotnet add package MinimalHelpers.Routing\n")),(0,i.kt)("h3",{parentName:"admonition",id:"usage"},"Usage"),(0,i.kt)("p",{parentName:"admonition"},"Create a class to hold your route handlers registration and make it implementing the ",(0,i.kt)("inlineCode",{parentName:"p"},"IEndpointRouteHandlerBuilder")," interface:"),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},".NET 6.0")),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'public class PeopleEndpoints : MinimalHelpers.Routing.IEndpointRouteHandlerBuilder\n{\n    public void MapEndpoints(IEndpointRouteBuilder endpoints)\n    {\n        endpoints.MapGet("/api/people", GetList);\n        endpoints.MapGet("/api/people/{id:guid}", Get);\n        endpoints.MapPost("/api/people", Insert);\n        endpoints.MapPut("/api/people/{id:guid}", Update);\n        endpoints.MapDelete("/api/people/{id:guid}", Delete);\n    }\n\n    // ...\n}\n')),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},".NET 7.0 or higher")),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'public class PeopleEndpoints : MinimalHelpers.Routing.IEndpointRouteHandlerBuilder\n{\n    public static void MapEndpoints(IEndpointRouteBuilder endpoints)\n    {\n        endpoints.MapGet("/api/people", GetList);\n        endpoints.MapGet("/api/people/{id:guid}", Get);\n        endpoints.MapPost("/api/people", Insert);\n        endpoints.MapPut("/api/people/{id:guid}", Update);\n        endpoints.MapDelete("/api/people/{id:guid}", Delete);\n    }\n\n    // ...\n}\n')),(0,i.kt)("blockquote",{parentName:"admonition"},(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note"),"\nStarting from .NET 7.0, the ",(0,i.kt)("inlineCode",{parentName:"p"},"IEndpointRouteHandlerBuilder")," interface exposes the ",(0,i.kt)("inlineCode",{parentName:"p"},"MapEndpoints")," method as static abstract, so it can be called without creating an instance of the handler.")),(0,i.kt)("p",{parentName:"admonition"},"Call the ",(0,i.kt)("inlineCode",{parentName:"p"},"MapEndpoints()")," extension method on the ",(0,i.kt)("strong",{parentName:"p"},"WebApplication")," object inside ",(0,i.kt)("em",{parentName:"p"},"Program.cs")," before the ",(0,i.kt)("inlineCode",{parentName:"p"},"Run()")," method invocation:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"// using MinimalHelpers.Routing;\napp.MapEndpoints();\n\napp.Run();\n")),(0,i.kt)("p",{parentName:"admonition"},"By default, ",(0,i.kt)("inlineCode",{parentName:"p"},"MapEndpoints()")," will scan the calling Assembly to search for classes that implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"IEndpointRouteHandlerBuilder")," interface. If your route handlers are defined in another Assembly, you have two alternatives:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Use the ",(0,i.kt)("inlineCode",{parentName:"li"},"MapEndpoints()")," overload that takes the Assembly to scan as argument"),(0,i.kt)("li",{parentName:"ul"},"Use the ",(0,i.kt)("inlineCode",{parentName:"li"},"MapEndpointsFromAssemblyContaining of T()")," extension method and specify a type that is contained in the Assembly you want to scan")),(0,i.kt)("p",{parentName:"admonition"},"You can also explicitly decide what types (among the ones that implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"IRouteEndpointHandlerBuilder")," interface) you want to actually map, passing a predicate to the ",(0,i.kt)("inlineCode",{parentName:"p"},"MapEndpoints")," method:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'app.MapEndpoints(type =>\n{\n    if (type.Name.StartsWith("Products"))\n    {\n        return false;\n    }\n\n    return true;\n});\n')),(0,i.kt)("blockquote",{parentName:"admonition"},(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note"),"\nThese methods rely on Reflection to scan the Assembly and find the classes that implement the ",(0,i.kt)("inlineCode",{parentName:"p"},"IEndpointRouteHandlerBuilder")," interface. This can have a performance impact, especially in large projects. If you have performance issues, consider using the explicit registration method. Moreover, this solution is incompatibile with Native AOT.")),(0,i.kt)("p",{parentName:"admonition"},"If you're working with .NET 7.0 or higher, the reccommended approach is to use the ",(0,i.kt)("strong",{parentName:"p"},"MinimalHelpers.Routing.Analyzers")," package, that provides a Source Generator for endpoints registration, as described later."),(0,i.kt)("h2",{parentName:"admonition",id:"minimalhelpersroutinganalyzers-net-70-or-higher"},"MinimalHelpers.Routing.Analyzers (.NET 7.0 or higher)"),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.Routing.Analyzers"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/MinimalHelpers.Routing.Analyzers",alt:"Nuget"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.Routing.Analyzers"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/MinimalHelpers.Routing.Analyzers",alt:"Nuget"}))),(0,i.kt)("p",{parentName:"admonition"},"A library that provides a Source Generator for automatic endpoints registration in Minimal API projects."),(0,i.kt)("h3",{parentName:"admonition",id:"installation-1"},"Installation"),(0,i.kt)("p",{parentName:"admonition"},"The library is available on ",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.Routing.Analyzers"},"NuGet"),". Just search for ",(0,i.kt)("em",{parentName:"p"},"MinimalHelpers.Routing")," in the ",(0,i.kt)("strong",{parentName:"p"},"Package Manager GUI")," or run the following command in the ",(0,i.kt)("strong",{parentName:"p"},".NET CLI"),":"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"dotnet add package MinimalHelpers.Routing.Analyzers\n")),(0,i.kt)("h3",{parentName:"admonition",id:"usage-1"},"Usage"),(0,i.kt)("p",{parentName:"admonition"},"Create a class to hold your route handlers registration and make it implementing the ",(0,i.kt)("inlineCode",{parentName:"p"},"IEndpointRouteHandlerBuilder")," interface:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'public class PeopleEndpoints : IEndpointRouteHandlerBuilder\n{\n    public static void MapEndpoints(IEndpointRouteBuilder endpoints)\n    {\n        endpoints.MapGet("/api/people", GetList);\n        endpoints.MapGet("/api/people/{id:guid}", Get);\n        endpoints.MapPost("/api/people", Insert);\n        endpoints.MapPut("/api/people/{id:guid}", Update);\n        endpoints.MapDelete("/api/people/{id:guid}", Delete);\n    }\n\n    // ...\n}\n')),(0,i.kt)("blockquote",{parentName:"admonition"},(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note"),"\nYou only need to use the ",(0,i.kt)("strong",{parentName:"p"},"MinimalHelpers.Routing.Analyzers")," package. With this Source Generator, the ",(0,i.kt)("inlineCode",{parentName:"p"},"IEndpointRouteHandlerBuilder")," interface is auto-generated.")),(0,i.kt)("p",{parentName:"admonition"},"Call the ",(0,i.kt)("inlineCode",{parentName:"p"},"MapEndpoints()")," extension method on the ",(0,i.kt)("strong",{parentName:"p"},"WebApplication")," object inside ",(0,i.kt)("em",{parentName:"p"},"Program.cs")," before the ",(0,i.kt)("inlineCode",{parentName:"p"},"Run()")," method invocation:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"app.MapEndpoints();\n\napp.Run();\n")),(0,i.kt)("blockquote",{parentName:"admonition"},(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Note"),"\nThe ",(0,i.kt)("inlineCode",{parentName:"p"},"MapEndpoints")," method is generated by the Source Generator.")),(0,i.kt)("h2",{parentName:"admonition",id:"minimalhelpersopenapi"},"MinimalHelpers.OpenApi"),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.OpenApi"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/MinimalHelpers.OpenApi",alt:"Nuget"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.OpenApi"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/MinimalHelpers.OpenApi",alt:"Nuget"}))),(0,i.kt)("p",{parentName:"admonition"},"A library that provides OpenApi helpers for Minimal API projects."),(0,i.kt)("h3",{parentName:"admonition",id:"installation-2"},"Installation"),(0,i.kt)("p",{parentName:"admonition"},"The library is available on ",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.OpenApi"},"NuGet"),". Just search for ",(0,i.kt)("em",{parentName:"p"},"MinimalHelpers.OpenApi")," in the ",(0,i.kt)("strong",{parentName:"p"},"Package Manager GUI")," or run the following command in the ",(0,i.kt)("strong",{parentName:"p"},".NET CLI"),":"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"dotnet add package MinimalHelpers.OpenApi\n")),(0,i.kt)("h3",{parentName:"admonition",id:"usage-2"},"Usage"),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Extension methods for OpenApi"))),(0,i.kt)("p",{parentName:"admonition"},"This library provides some extensions methods that simplify the OpenAPI configuration in Minimal API projects. For example, it is possible to customize the description of a response using its status code:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'endpoints.MapPost("login", LoginAsync)\n    .AllowAnonymous()\n    .WithValidation<LoginRequest>()\n    .Produces<LoginResponse>(StatusCodes.Status200OK)\n    .Produces<LoginResponse>(StatusCodes.Status206PartialContent)\n    .Produces(StatusCodes.Status403Forbidden)\n    .ProducesValidationProblem()\n    .WithOpenApi(operation =>\n    {\n        operation.Summary = "Performs the login of a user";\n\n        operation.Response(StatusCodes.Status200OK).Description = "Login successful";\n        operation.Response(StatusCodes.Status206PartialContent).Description = "The user is logged in, but the password has expired and must be changed";\n        operation.Response(StatusCodes.Status400BadRequest).Description = "Incorrect username and/or password";\n        operation.Response(StatusCodes.Status403Forbidden).Description = "The user was blocked due to too many failed logins";\n\n        return operation;\n    });\n')),(0,i.kt)("p",{parentName:"admonition"}," ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Extension methods for RouteHandlerBuilder"))),(0,i.kt)("p",{parentName:"admonition"}," Often we have endpoints with multiple 4xx return values, each of which produces a ",(0,i.kt)("inlineCode",{parentName:"p"},"ProblemDetails")," response:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'endpoints.MapGet("/api/people/{id:guid}", Get)\n   .ProducesProblem(StatusCodes.Status400BadRequest)\n   .ProducesProblem(StatusCodes.Status401Unauthorized)\n   .ProducesProblem(StatusCodes.Status403Forbidden)\n   .ProducesProblem(StatusCodes.Status404NotFound);\n')),(0,i.kt)("p",{parentName:"admonition"}," To avoid multiple calls to ",(0,i.kt)("inlineCode",{parentName:"p"},"ProducesProblem"),", we can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ProducesDefaultProblem")," extension method provided by the library:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'endpoints.MapGet("/api/people/{id:guid}", Get)\n   .ProducesDefaultProblem(StatusCodes.Status400BadRequest, StatusCodes.Status401Unauthorized,\n       StatusCodes.Status403Forbidden, StatusCodes.Status404NotFound);\n')),(0,i.kt)("h2",{parentName:"admonition",id:"minimalhelpersvalidation"},"MinimalHelpers.Validation"),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.Validation"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/MinimalHelpers.Validation",alt:"Nuget"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.Validation"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/MinimalHelpers.Validation",alt:"Nuget"}))),(0,i.kt)("p",{parentName:"admonition"},"A library that provides an Endpoint filter for Minimal API projects to perform validation with Data Annotations, using the ",(0,i.kt)("a",{href:"https://github.com/DamianEdwards/MiniValidation"},"MiniValidation")," library."),(0,i.kt)("h3",{parentName:"admonition",id:"installation-3"},"Installation"),(0,i.kt)("p",{parentName:"admonition"},"The library is available on ",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.Validation"},"NuGet"),". Just search for ",(0,i.kt)("em",{parentName:"p"},"MinimalHelpers.Validation")," in the ",(0,i.kt)("strong",{parentName:"p"},"Package Manager GUI")," or run the following command in the ",(0,i.kt)("strong",{parentName:"p"},".NET CLI"),":"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"dotnet add package MinimalHelpers.Validation\n")),(0,i.kt)("h3",{parentName:"admonition",id:"usage-3"},"Usage"),(0,i.kt)("p",{parentName:"admonition"},"Decorates a class with attributes to define the validation rules:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"using System.ComponentModel.DataAnnotations;\n\npublic class Person\n{\n    [Required]\n    [MaxLength(20)]\n    public string? FirstName { get; set; }\n\n    [Required]\n    [MaxLength(20)]\n    public string? LastName { get; set; }\n\n    [MaxLength(50)]\n    public string? City { get; set; }\n}\n")),(0,i.kt)("p",{parentName:"admonition"},"Add the ",(0,i.kt)("inlineCode",{parentName:"p"},"WithValidation of T()")," extension method to enable the validation filter:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'using MinimalHelpers.Validation;\n\napp.MapPost("/api/people", (Person person) =>\n    {\n        // ...\n    })\n    .WithValidation<Person>();\n')),(0,i.kt)("p",{parentName:"admonition"},"If the validation fails, the response will be a ",(0,i.kt)("inlineCode",{parentName:"p"},"400 Bad Request")," with a ",(0,i.kt)("inlineCode",{parentName:"p"},"ValidationProblemDetails")," object containing the validation errors, for example:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "https://tools.ietf.org/html/rfc9110#section-15.5.1",\n  "title": "One or more validation errors occurred",\n  "status": 400,\n  "instance": "/api/people",\n  "traceId": "00-009c0162ba678cae2ee391815dbbb59d-0a3a5b0c16d053e6-00",\n  "errors": {\n    "FirstName": [\n      "The field FirstName must be a string or array type with a maximum length of \'20\'."\n    ],\n    "LastName": [\n      "The LastName field is required."\n    ]\n  }\n}\n')),(0,i.kt)("p",{parentName:"admonition"},"If you want to customize validation, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ConfigureValidation")," extension method:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'using MinimalHelpers.Validation;\n\nbuilder.Services.ConfigureValidation(options =>\n{\n    // If you want to get errors as a list instead of a dictionary.\n    options.ErrorResponseFormat = ErrorResponseFormat.List;\n\n    // The default is "One or more validation errors occurred"\n    options.ValidationErrorTitleMessageFactory =\n        (context, errors) => $"There was {errors.Values.Sum(v => v.Length)} error(s)";\n});\n')),(0,i.kt)("p",{parentName:"admonition"},"You can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ValidationErrorTitleMessageFactory"),", for example, if you want to localized the ",(0,i.kt)("inlineCode",{parentName:"p"},"title")," property of the response using a RESX file."),(0,i.kt)("h2",{parentName:"admonition",id:"minimalhelpersfluentvalidation"},"MinimalHelpers.FluentValidation"),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.FluentValidation"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/MinimalHelpers.FluentValidation",alt:"Nuget"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.FluentValidation"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/MinimalHelpers.FluentValidation",alt:"Nuget"}))),(0,i.kt)("p",{parentName:"admonition"},"A library that provides an Endpoint filter for Minimal API projects to perform validation using ",(0,i.kt)("a",{href:"https://fluentvalidation.net"},"FluentValidation"),"."),(0,i.kt)("h3",{parentName:"admonition",id:"installation-4"},"Installation"),(0,i.kt)("p",{parentName:"admonition"},"The library is available on ",(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/MinimalHelpers.FluentValidation"},"NuGet"),". Just search for ",(0,i.kt)("em",{parentName:"p"},"MinimalHelpers.FluentValidation")," in the ",(0,i.kt)("strong",{parentName:"p"},"Package Manager GUI")," or run the following command in the ",(0,i.kt)("strong",{parentName:"p"},".NET CLI"),":"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"dotnet add package MinimalHelpers.FluentValidation\n")),(0,i.kt)("h3",{parentName:"admonition",id:"usage-4"},"Usage"),(0,i.kt)("p",{parentName:"admonition"},"Create a class that extends AbstractValidator of T and define the validation rules:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"using FluentValidation;\n\npublic record class Product(string Name, string Description, double UnitPrice);\n\npublic class ProductValidator : AbstractValidator<Product>\n{\n    public ProductValidator()\n    {\n        RuleFor(p => p.Name).NotEmpty().MaximumLength(50).EmailAddress();\n        RuleFor(p => p.Description).MaximumLength(500);\n        RuleFor(p => p.UnitPrice).GreaterThan(0);\n    }\n}\n")),(0,i.kt)("p",{parentName:"admonition"},"Register validators in the Service Collection:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"using FluentValidation;\n\n// Assuming the validators are in the same assembly as the Program class\nbuilder.Services.AddValidatorsFromAssemblyContaining<Program>();\n\n")),(0,i.kt)("p",{parentName:"admonition"},"Add the ",(0,i.kt)("inlineCode",{parentName:"p"},"WithValidation of T()")," extension method to enable the validation filter:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'using MinimalHelpers.FluentValidation;\n\napp.MapPost("/api/products", (Product product) =>\n    {\n        // ...\n    })\n    .WithValidation<Product>();\n')),(0,i.kt)("p",{parentName:"admonition"},"If the validation fails, the response will be a ",(0,i.kt)("inlineCode",{parentName:"p"},"400 Bad Request")," with a ",(0,i.kt)("inlineCode",{parentName:"p"},"ValidationProblemDetails")," object containing the validation errors, for example:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "https://tools.ietf.org/html/rfc9110#section-15.5.1",\n  "title": "One or more validation errors occurred",\n  "status": 400,\n  "instance": "/api/products",\n  "traceId": "00-f4ced0ae470424dd04cbcebe5f232dc5-bbdcc59f310ebfb8-00",\n  "errors": {\n    "Name": [\n      "\'Name\' cannot be empty."\n    ],\n    "UnitPrice": [\n      "\'Unit Price\' must be grater than \'0\'."\n    ]\n  }\n}\n')),(0,i.kt)("p",{parentName:"admonition"},"If you want to customize validation, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ConfigureValidation")," extension method:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'using MinimalHelpers.Validation;\n\nbuilder.Services.ConfigureValidation(options =>\n{\n    // If you want to get errors as a list instead of a dictionary.\n    options.ErrorResponseFormat = ErrorResponseFormat.List;\n\n    // The default is "One or more validation errors occurred"\n    options.ValidationErrorTitleMessageFactory =\n        (context, errors) => $"There was {errors.Values.Sum(v => v.Length)} error(s)";\n});\n')),(0,i.kt)("p",{parentName:"admonition"},"You can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ValidationErrorTitleMessageFactory"),", for example, if you want to localized the ",(0,i.kt)("inlineCode",{parentName:"p"},"title")," property of the response using a RESX file."),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"Contribute")),(0,i.kt)("p",{parentName:"admonition"},"The project is constantly evolving. Contributions are welcome. Feel free to file issues and pull requests on the repo and we'll address them as we can. ")),(0,i.kt)("h3",{id:"about"},"About"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Controller like API registering")),(0,i.kt)("h2",{id:"how-to-use"},"How to use"),(0,i.kt)("h3",{id:"example-source-csproj-source-files"},"Example (source csproj, source files)"),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,i.kt)("p",null,"This is the CSharp Project that references ",(0,i.kt)("strong",{parentName:"p"},"MinimalHelpers.Routing.Analyzers")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {11}",showLineNumbers:!0,"{11}":!0},'<Project Sdk="Microsoft.NET.Sdk.Web">\n\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <Nullable>enable</Nullable>\n    <ImplicitUsings>enable</ImplicitUsings>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.4" />\n    <PackageReference Include="MinimalHelpers.Routing.Analyzers" Version="1.0.13" />\n    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,i.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MinimalHelpers.Routing.Analyzers\\src\\APIDemo\\PersonAPI.cs",label:"PersonAPI.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"MinimalHelpers.Routing.Analyzers")," in ",(0,i.kt)("em",{parentName:"p"},"PersonAPI.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using Microsoft.AspNetCore.Http.HttpResults;\nnamespace APIDemo;\n\npublic class PersonAPI : IEndpointRouteHandlerBuilder\n{\n    public static void MapEndpoints(IEndpointRouteBuilder endpoints)\n    {\n        var grp = endpoints.MapGroup("/api/Person");\n        grp.MapGet("", GetFromId);\n        grp.MapGet("{id:int}", GetFromId);\n        //todo: add more routes\n    }\n    public static async Task<Person[]> GetAll()\n    {       \n        await Task.Delay(1000);\n        return new[] { new Person { FirstName = "Ignat", LastName = "Andrei" } };\n    }\n\n    public static async Task<Results<Ok<Person>,NotFound<string>>> GetFromId(int id)\n    {\n        await Task.Delay(1000);\n        if (id == 1)\n        {\n            return TypedResults.Ok<Person>(new Person { FirstName = "Ignat", LastName = "Andrei" });\n        }\n        return TypedResults.NotFound<string>("Person not found");\n    }\n\n\n}\n\n'))),(0,i.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MinimalHelpers.Routing.Analyzers\\src\\APIDemo\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"MinimalHelpers.Routing.Analyzers")," in ",(0,i.kt)("em",{parentName:"p"},"Person.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"namespace APIDemo;\n\npublic class Person\n{\n    public string? FirstName { get; set; }\n    public string? LastName { get; set; }\n}\n\n"))),(0,i.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MinimalHelpers.Routing.Analyzers\\src\\APIDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"MinimalHelpers.Routing.Analyzers")," in ",(0,i.kt)("em",{parentName:"p"},"Program.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'var builder = WebApplication.CreateBuilder(args);\n\n// Add services to the container.\n// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n\nvar app = builder.Build();\n\n// Configure the HTTP request pipeline.\n//if (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\n\n//app.UseHttpsRedirection();\n\nvar summaries = new[]\n{\n    "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching"\n};\n\napp.MapGet("/weatherforecast", () =>\n{\n    var forecast = Enumerable.Range(1, 5).Select(index =>\n        new WeatherForecast\n        (\n            DateOnly.FromDateTime(DateTime.Now.AddDays(index)),\n            Random.Shared.Next(-20, 55),\n            summaries[Random.Shared.Next(summaries.Length)]\n        ))\n        .ToArray();\n    return forecast;\n})\n.WithName("GetWeatherForecast")\n.WithOpenApi();\n\napp.MapEndpoints();\n\napp.Run();\n\ninternal record WeatherForecast(DateOnly Date, int TemperatureC, string? Summary)\n{\n    public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);\n}\n\n')))),(0,i.kt)("h3",{id:"generated-files"},"Generated Files"),(0,i.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,i.kt)(r.Z,{mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MinimalHelpers.Routing.Analyzers\\src\\APIDemo\\obj\\GX\\MinimalHelpers.Routing.Analyzers\\MinimalHelpers.Routing.Analyzers.EndpointRouteHandlerGenerator\\EndpointRouteBuilderExtensions.g.cs",label:"EndpointRouteBuilderExtensions.g.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated />\nnamespace Microsoft.AspNetCore.Routing;\n\n#nullable enable annotations\n#nullable disable warnings\n\n/// <summary>\n/// Provides extension methods for <see cref="IEndpointRouteBuilder" /> to add route handlers.\n/// </summary>\npublic static class EndpointRouteBuilderExtensions\n{\n    /// <summary>\n    /// Automatically registers all the route endpoints defined in classes that implement the <see cref="IEndpointRouteHandlerBuilder "/> interface.\n    /// </summary>\n    /// <param name="endpoints">The <see cref="IEndpointRouteBuilder" /> to add routes to.</param>\n    public static IEndpointRouteBuilder MapEndpoints(this IEndpointRouteBuilder endpoints)\n    {            \n        global::APIDemo.PersonAPI.MapEndpoints(endpoints);\n\n        return endpoints;\n    }\n}\n\n'))),(0,i.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\MinimalHelpers.Routing.Analyzers\\src\\APIDemo\\obj\\GX\\MinimalHelpers.Routing.Analyzers\\MinimalHelpers.Routing.Analyzers.EndpointRouteHandlerGenerator\\IEndpointRouteHandlerBuilder.g.cs",label:"IEndpointRouteHandlerBuilder.g.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated />\nnamespace Microsoft.AspNetCore.Routing;\n\n#nullable enable annotations\n#nullable disable warnings                \n\n/// <summary>\n/// Defines a contract for a class that holds one or more route handlers that must be registered by the application.\n/// </summary>\npublic interface IEndpointRouteHandlerBuilder\n{\n    /// <summary>\n    /// Maps route endpoints to the corresponding handlers.\n    /// </summary>\n    static abstract void MapEndpoints(IEndpointRouteBuilder endpoints);\n}\n")))),(0,i.kt)("h2",{id:"useful"},"Useful"),(0,i.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{target:"_blank",href:n(41602).Z},"Download Example project MinimalHelpers.Routing.Analyzers "))),(0,i.kt)("h3",{id:"share-minimalhelpersroutinganalyzers"},"Share MinimalHelpers.Routing.Analyzers"),(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinimalHelpers.Routing.Analyzers&quote=MinimalHelpers.Routing.Analyzers",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinimalHelpers.Routing.Analyzers&text=MinimalHelpers.Routing.Analyzers:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinimalHelpers.Routing.Analyzers",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinimalHelpers.Routing.Analyzers&title=MinimalHelpers.Routing.Analyzers",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinimalHelpers.Routing.Analyzers&title=MinimalHelpers.Routing.Analyzers&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinimalHelpers.Routing.Analyzers",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/MinimalHelpers.Routing.Analyzers"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/MinimalHelpers.Routing.Analyzers")),(0,i.kt)("h3",{id:"in-the-same-category-api---9-other-generators"},"In the same category (API) - 9 other generators"),(0,i.kt)("h4",{id:"immediateapis"},(0,i.kt)("a",{parentName:"h4",href:"/docs/immediate.apis"},"immediate.apis")),(0,i.kt)("h4",{id:"microsoftextensionsconfigurationbinder"},(0,i.kt)("a",{parentName:"h4",href:"/docs/Microsoft.Extensions.Configuration.Binder"},"Microsoft.Extensions.Configuration.Binder")),(0,i.kt)("h4",{id:"minimalapibuilder"},(0,i.kt)("a",{parentName:"h4",href:"/docs/MinimalApiBuilder"},"MinimalApiBuilder")),(0,i.kt)("h4",{id:"minimalapisdiscovery"},(0,i.kt)("a",{parentName:"h4",href:"/docs/MinimalApis.Discovery"},"MinimalApis.Discovery")),(0,i.kt)("h4",{id:"rdg"},(0,i.kt)("a",{parentName:"h4",href:"/docs/RDG"},"RDG")),(0,i.kt)("h4",{id:"refit"},(0,i.kt)("a",{parentName:"h4",href:"/docs/Refit"},"Refit")),(0,i.kt)("h4",{id:"rscg_webapiexports"},(0,i.kt)("a",{parentName:"h4",href:"/docs/RSCG_WebAPIExports"},"RSCG_WebAPIExports")),(0,i.kt)("h4",{id:"saferouting"},(0,i.kt)("a",{parentName:"h4",href:"/docs/SafeRouting"},"SafeRouting")),(0,i.kt)("h4",{id:"skinnycontrollerscommon"},(0,i.kt)("a",{parentName:"h4",href:"/docs/SkinnyControllersCommon"},"SkinnyControllersCommon")))}h.isMDXComponent=!0},41602:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/MinimalHelpers.Routing.Analyzers-b21e54b576aaccb2196ca46d94a7cd96.zip"}}]);