"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[3219],{76778:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>h,frontMatter:()=>s,metadata:()=>m,toc:()=>d});var n=a(87462),r=(a(67294),a(3905)),i=a(73992),o=a(18679),l=a(68839);const s={sidebar_position:1640,title:"164 - RazorSlices",description:"Generating html from razor templates. Attention, generates IHttpResult, not html string.",slug:"/RazorSlices"},p="RazorSlices  by Damiam Edwards",m={unversionedId:"RSCG-Examples/RazorSlices",id:"RSCG-Examples/RazorSlices",title:"164 - RazorSlices",description:"Generating html from razor templates. Attention, generates IHttpResult, not html string.",source:"@site/docs/RSCG-Examples/RazorSlices.md",sourceDirName:"RSCG-Examples",slug:"/RazorSlices",permalink:"/RSCG_Examples/v2/docs/RazorSlices",draft:!1,tags:[],version:"current",sidebarPosition:1640,frontMatter:{sidebar_position:1640,title:"164 - RazorSlices",description:"Generating html from razor templates. Attention, generates IHttpResult, not html string.",slug:"/RazorSlices"},sidebar:"tutorialSidebar",previous:{title:"163 - TypedSignalR.Client",permalink:"/RSCG_Examples/v2/docs/TypedSignalR.Client"},next:{title:"165 - rscg_queryables",permalink:"/RSCG_Examples/v2/docs/rscg_queryables"}},c={},d=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share RazorSlices",id:"share-razorslices",level:3},{value:"In the same category (Templating) - 10 other generators",id:"in-the-same-category-templating---10-other-generators",level:3},{value:"Gobie",id:"gobie",level:4},{value:"InterceptorTemplate",id:"interceptortemplate",level:4},{value:"JKToolKit.TemplatePropertyGenerator",id:"jktoolkittemplatepropertygenerator",level:4},{value:"Microsoft.NET.Sdk.Razor.SourceGenerators",id:"microsoftnetsdkrazorsourcegenerators",level:4},{value:"Minerals.AutoMixins",id:"mineralsautomixins",level:4},{value:"MorrisMoxy",id:"morrismoxy",level:4},{value:"RazorBlade",id:"razorblade",level:4},{value:"RSCG_IFormattable",id:"rscg_iformattable",level:4},{value:"RSCG_Templating",id:"rscg_templating",level:4},{value:"spreadcheetah",id:"spreadcheetah",level:4}],u={toc:d},g="wrapper";function h(e){let{components:t,...s}=e;return(0,r.kt)(g,(0,n.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"razorslices--by-damiam-edwards"},"RazorSlices  by Damiam Edwards"),(0,r.kt)(l.Z,{toc:d,mdxType:"TOCInline"}),(0,r.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RazorSlices/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/RazorSlices?label=RazorSlices",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/DamianEdwards/RazorSlices"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/DamianEdwards/RazorSlices?label=updated",alt:"GitHub last commit"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/DamianEdwards/RazorSlices?style=social",alt:"GitHub Repo stars"})),(0,r.kt)("h2",{id:"details"},"Details"),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Name: ",(0,r.kt)("strong",{parentName:"p"},"RazorSlices")),(0,r.kt)("p",{parentName:"admonition"},"Package Description"),(0,r.kt)("p",{parentName:"admonition"},"Author: Damiam Edwards"),(0,r.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/RazorSlices/"},"https://www.nuget.org/packages/RazorSlices/")),"   "),(0,r.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/DamianEdwards/RazorSlices"},"https://github.com/DamianEdwards/RazorSlices")),(0,r.kt)("p",{parentName:"admonition"},"Source : ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/DamianEdwards/RazorSlices"},"https://github.com/DamianEdwards/RazorSlices"))),(0,r.kt)("h3",{id:"original-readme"},"Original Readme"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("h1",{parentName:"admonition",id:"razor-slices"},"Razor Slices"),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/DamianEdwards/RazorSlices/actions/workflows/ci.yml"},(0,r.kt)("img",{parentName:"a",src:"https://github.com/DamianEdwards/RazorSlices/actions/workflows/ci.yml/badge.svg",alt:"CI (main)"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RazorSlices/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/RazorSlices",alt:"Nuget"}))),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("em",{parentName:"p"},"Lightweight")," Razor-based templates for ASP.NET Core without MVC, Razor Pages, or Blazor, optimized for high-performance, unbuffered rendering with low allocations. Compatible with trimming and native AOT. Great for returning dynamically rendered HTML from Minimal APIs, middleware, etc. Supports .NET 8+"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#getting-started"},"Getting Started")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#installation"},"Installation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#features"},"Features"))),(0,r.kt)("h2",{parentName:"admonition",id:"getting-started"},"Getting Started"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#installation"},"Install the NuGet package")," into your ASP.NET Core project (.NET 8+):"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"> dotnet add package RazorSlices\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a directory in your project called ",(0,r.kt)("em",{parentName:"p"},"Slices")," and add a ",(0,r.kt)("em",{parentName:"p"},"_ViewImports.cshtml")," file to it with the following content:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cshtml"},"@inherits RazorSliceHttpResult\n\n@using System.Globalization;\n@using Microsoft.AspNetCore.Razor;\n@using Microsoft.AspNetCore.Http.HttpResults;\n\n@tagHelperPrefix __disable_tagHelpers__:\n@removeTagHelper *, Microsoft.AspNetCore.Mvc.Razor\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"In the same directory, add a ",(0,r.kt)("em",{parentName:"p"},"Hello.cshtml")," file with the following content:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cshtml"},'@inherits RazorSliceHttpResult<DateTime>\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <title>Hello from Razor Slices!</title>\n</head>\n<body>\n    <p>\n        Hello from Razor Slices! The time is @Model\n    </p>\n</body>\n</html>\n')),(0,r.kt)("p",{parentName:"li"},"Each ",(0,r.kt)("em",{parentName:"p"},".cshtml")," file will have a proxy type generated for it by the Razor Slices source generator that you can use as the generic argument to the various APIs in Razor Slices for rendering slices.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add a minimal API to return the slice in your ",(0,r.kt)("em",{parentName:"p"},"Program.cs"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-c#"},'app.MapGet("/hello", () => Results.Extensions.RazorSlice<MyApp.Slices.Hello, DateTime>(DateTime.Now));\n')))),(0,r.kt)("h2",{parentName:"admonition",id:"installation"},"Installation"),(0,r.kt)("h3",{parentName:"admonition",id:"nuget-releases"},"NuGet Releases"),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RazorSlices/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/RazorSlices",alt:"Nuget"}))),(0,r.kt)("p",{parentName:"admonition"},"This package is currently available from ",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RazorSlices/"},"nuget.org"),":"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-console"},"> dotnet add package RazorSlices\n")),(0,r.kt)("h3",{parentName:"admonition",id:"ci-builds"},"CI Builds"),(0,r.kt)("p",{parentName:"admonition"},"If you wish to use builds from this repo's ",(0,r.kt)("inlineCode",{parentName:"p"},"main")," branch you can install them from ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/DamianEdwards/RazorSlices/pkgs/nuget/RazorSlices"},"this repo's package feed"),"."),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/settings/tokens/new"},"Create a personal access token")," for your GitHub account with the ",(0,r.kt)("inlineCode",{parentName:"p"},"read:packages")," scope with your desired expiration length:"),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/settings/tokens/new"},(0,r.kt)("img",{width:"583",alt:"image",src:"https://user-images.githubusercontent.com/249088/160220117-7e79822e-a18a-445c-89ff-b3d9ca84892f.png"})))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"At the command line, navigate to your user profile directory and run the following command to add the package feed to your NuGet configuration, replacing the ",(0,r.kt)("inlineCode",{parentName:"p"},"<GITHUB_USER_NAME>")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"<PERSONAL_ACCESS_TOKEN>")," placeholders with the relevant values:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"~> dotnet nuget add source -n GitHub -u <GITHUB_USER_NAME> -p <PERSONAL_ACCESS_TOKEN> https://nuget.pkg.github.com/DamianEdwards/index.json\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"You should now be able to add a reference to the package specifying a version from the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/DamianEdwards/RazorSlices/pkgs/nuget/RazorSlices"},"repository packages feed"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"See ",(0,r.kt)("a",{parentName:"p",href:"https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-nuget-registry"},"these instructions")," for further details about working with GitHub package feeds."))),(0,r.kt)("h2",{parentName:"admonition",id:"features"},"Features"),(0,r.kt)("p",{parentName:"admonition"},"The library is still new and features are being actively added."),(0,r.kt)("h3",{parentName:"admonition",id:"currently-supported"},"Currently supported"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"ASP.NET Core 8.0 and above")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Strongly-typed models (via ",(0,r.kt)("inlineCode",{parentName:"p"},"@inherits RazorSlice<MyModel>")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"@inherits RazorSliceHttpResult<MyModel>"),")")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Razor constructs:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#implicit-razor-expressions"},"Implicit expressions"),", e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"@someVariable"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#implicit-razor-expressions"},"Explicit expressions"),", e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"@(someBool ? thisThing : thatThing)"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#control-structures"},"Control structures"),", e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"@if()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"@switch()"),", etc.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#looping-for-foreach-while-and-do-while"},"Looping"),", e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"@for"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"@foreach"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"@while"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"@do"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#razor-code-blocks"},"Code blocks"),", e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"@{ var someThing = someOtherThing; }"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#conditional-attribute-rendering"},"Conditional attribute rendering"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Functions, e.g."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cshtml"},'@functions {\n    private readonly string _someString = "A very important string";\n    private int DoAThing() => 123;\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/aspnet/core/mvc/views/razor#templated-razor-delegates"},"Templated Razor delegates"),", e.g."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cshtml"},"@inherits RazorSlice<Todo>\n\n<h1>@Title(Model)</h1>\n\n@functions {\n    private IHtmlContent Title(Todo todo)\n    {\n        <text>Todo @todo.Id: @todo.Title</text>\n        return HtmlString.Empty;\n    }\n}\n"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"DI-activated properties via ",(0,r.kt)("inlineCode",{parentName:"p"},"@inject"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rendering slices from slices (aka partials) via ",(0,r.kt)("inlineCode",{parentName:"p"},"@(await RenderPartialAsync<MyPartial>())"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Using slices as layouts for other slices, including layouts with strongly-typed models:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For the layout slice, inherit from ",(0,r.kt)("inlineCode",{parentName:"p"},"RazorLayoutSlice")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"RazorLayoutSlice<TModel>")," and use ",(0,r.kt)("inlineCode",{parentName:"p"},"@await RenderBodyAsync()")," in the layout to render the body"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cshtml"},'@inherits RazorLayoutSlice<LayoutModel>\n\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <title>@Model.Title</title>\n    @await RenderSectionAsync("head")\n</head>\n<body>\n  @await RenderBodyAsync()\n\n  <footer>\n      @await RenderSectionAsync("footer")\n  </footer>\n</body>\n</html>\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"For the slice using the layout, implement ",(0,r.kt)("inlineCode",{parentName:"p"},"IUsesLayout<TLayout>")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"IUsesLayout<TLayout, TModel>")," to declare which layout to use. If using a layout with a model, ensure you implement the ",(0,r.kt)("inlineCode",{parentName:"p"},"LayoutModel")," property in your ",(0,r.kt)("inlineCode",{parentName:"p"},"@functions")," block, e.g"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cshtml"},'@inherits RazorSlice<SomeModel>\n@implements IUsesLayout<LayoutSlice, LayoutModel>\n\n<div>\n    @* Content here *@\n</div>\n\n@functions {\n    public LayoutModel LayoutModel => new() { Title = "My Layout" };\n}\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Layouts can render sections via ",(0,r.kt)("inlineCode",{parentName:"p"},'@await RenderSectionAsync("SectionName")')," and slices can render content into sections by overriding ",(0,r.kt)("inlineCode",{parentName:"p"},"ExecuteSectionAsync"),", e.g.:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-cshtml"},'protected override Task ExecuteSectionAsync(string name)\n{\n    if (name == "lorem-header")\n    {\n        <p class="text-info">This page renders a custom <code>IHtmlContent</code> type that contains lorem ipsum content.</p>\n    }\n\n    return Task.CompletedTask;\n}\n')),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Note: The ",(0,r.kt)("inlineCode",{parentName:"strong"},"@section")," directive is not supported as it's incompatible with the rendering approach of Razor Slices"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Asynchronous rendering, i.e. the template can contain ",(0,r.kt)("inlineCode",{parentName:"p"},"await")," statements, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"@await WriteTheThing()"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Writing UTF8 ",(0,r.kt)("inlineCode",{parentName:"p"},"byte[]")," values directly to the output")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Rendering directly to ",(0,r.kt)("inlineCode",{parentName:"p"},"PipeWriter"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Stream"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"TextWriter"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"StringBuilder"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," outputs, including optimizations for not boxing struct values, zero-allocation rendering of primitives like numbers, etc. (rather than just calling ",(0,r.kt)("inlineCode",{parentName:"p"},"ToString()")," on everything)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Return a slice instance directly as an ",(0,r.kt)("inlineCode",{parentName:"p"},"IResult")," in minimal APIs via ",(0,r.kt)("inlineCode",{parentName:"p"},"@inherits RazorSliceHttpResult")," and ",(0,r.kt)("inlineCode",{parentName:"p"},'Results.Extensions.RazorSlice("/Slices/Hello.cshtml")'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Full support for trimming and native AOT when used in conjunction with ASP.NET Core Minimal APIs"))),(0,r.kt)("h3",{parentName:"admonition",id:"interested-in-supporting-but-not-sure-yet"},"Interested in supporting but not sure yet"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Extensions to help support using HTMX with Razor Slices "),(0,r.kt)("li",{parentName:"ul"},"Getting small updates to the Razor compiler itself to get some usability and performance improvements, e.g.:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Don't mark the template's ",(0,r.kt)("inlineCode",{parentName:"li"},"ExecuteAsync")," method as an ",(0,r.kt)("inlineCode",{parentName:"li"},"async")," method unless the template contains ",(0,r.kt)("inlineCode",{parentName:"li"},"await")," statements to save on the async state machine overhead"),(0,r.kt)("li",{parentName:"ul"},"Support compiling static template elements to UTF8 string literals (",(0,r.kt)("inlineCode",{parentName:"li"},"ReadOnlySpan<byte>"),") instead of string literals to save on the UTF16 to UTF8 conversion during rendering"),(0,r.kt)("li",{parentName:"ul"},"Support disabling the default registered ",(0,r.kt)("inlineCode",{parentName:"li"},"@addtaghelper")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"@model")," directives which rely on MVC")))),(0,r.kt)("h3",{parentName:"admonition",id:"no-intention-to-support"},"No intention to support"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},'Tag Helpers and View Components (they\'re tied to MVC and are intrinsically "heavy")'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@model")," directive (the Razor compiler does not support its use in conjunction with custom base-types via ",(0,r.kt)("inlineCode",{parentName:"li"},"@inherits"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@attribute [Authorize]")," (wrong layer of abstraction for minimal APIs, etc.)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"@section")," directive (the Razor compiler emits code that is incompatible with the rendering approach of Razor Slices)"))),(0,r.kt)("h3",{id:"about"},"About"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Generating html from razor templates. Attention, generates IHttpResult, not html string.")),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,r.kt)("p",null,"This is the CSharp Project that references ",(0,r.kt)("strong",{parentName:"p"},"RazorSlices")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {11}",showLineNumbers:!0,"{11}":!0},'<Project Sdk="Microsoft.NET.Sdk.Web">\n\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <Nullable>enable</Nullable>\n    <ImplicitUsings>enable</ImplicitUsings>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="8.0.10" />\n    <PackageReference Include="RazorSlices" Version="0.8.1" />\n    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.6.2" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,r.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"RazorSlices")," in ",(0,r.kt)("em",{parentName:"p"},"Program.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using RazorDemoSlices;\n\nvar builder = WebApplication.CreateBuilder(args);\n\n// Add services to the container.\n// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n\nvar app = builder.Build();\n\n// Configure the HTTP request pipeline.\n//if (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\n\nvar summaries = new[]\n{\n    "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching"\n};\napp.MapGet("/hello", (string firstName,string lastName) \n    => Results.Extensions.RazorSlice<RazorDemoSlices.Slices.PersonHTML, Person>(\n        new Person { FirstName = firstName, LastName = lastName }\n    ));\n\napp.MapGet("/weatherforecast", () =>\n{\n    var forecast = Enumerable.Range(1, 5).Select(index =>\n        new WeatherForecast\n        (\n            DateOnly.FromDateTime(DateTime.Now.AddDays(index)),\n            Random.Shared.Next(-20, 55),\n            summaries[Random.Shared.Next(summaries.Length)]\n        ))\n        .ToArray();\n    return forecast;\n})\n.WithName("GetWeatherForecast")\n.WithOpenApi();\n\napp.Run();\n\ninternal record WeatherForecast(DateOnly Date, int TemperatureC, string? Summary)\n{\n    public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);\n}\n\n'))),(0,r.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Slices\\PersonHTML.cshtml",label:"PersonHTML.cshtml",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"RazorSlices")," in ",(0,r.kt)("em",{parentName:"p"},"PersonHTML.cshtml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'@inherits RazorSliceHttpResult<RazorDemoSlices.Person>\n<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="utf-8">\n    <title>Hello from Razor Slices!</title>\n</head>\n<body>\n    <p>\n        My name is @Model.FirstName @Model.LastName\n    </p>\n</body>\n</html>\n'))),(0,r.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"RazorSlices")," in ",(0,r.kt)("em",{parentName:"p"},"Person.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"namespace RazorDemoSlices;\n\npublic class Person\n{\n    public string FirstName { get; set; }=string.Empty;\n    public string LastName { get; set; }= string.Empty;\n}\n\n")))),(0,r.kt)("h3",{id:"generated-files"},"Generated Files"),(0,r.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\obj\\GX\\Microsoft.CodeAnalysis.Razor.Compiler\\Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator\\Slices_PersonHTML_cshtml.g.cs",label:"Slices_PersonHTML_cshtml.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'#pragma checksum "D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbeddedResourcePropertyGenerator\\src\\RazorDemoSlices\\RazorDemoSlices\\Slices\\PersonHTML.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "6b3710e80836b438a5d8935ea469d238fc095e46298456ca847e09519393bb5e"\n// <auto-generated/>\n#pragma warning disable 1591\n[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Slices_PersonHTML), @"mvc.1.0.view", @"/Slices/PersonHTML.cshtml")]\nnamespace AspNetCoreGeneratedDocument\n{\n    #line default\n    using global::System;\n    using global::System.Collections.Generic;\n    using global::System.Linq;\n    using global::System.Threading.Tasks;\n    using global::Microsoft.AspNetCore.Mvc;\n    using global::Microsoft.AspNetCore.Mvc.Rendering;\n    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;\n#nullable restore\n#line (3,2)-(4,1) "D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbeddedResourcePropertyGenerator\\src\\RazorDemoSlices\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing System.Globalization;\n\n#nullable disable\n#nullable restore\n#line (4,2)-(5,1) "D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbeddedResourcePropertyGenerator\\src\\RazorDemoSlices\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing Microsoft.AspNetCore.Razor;\n\n#nullable disable\n#nullable restore\n#line (5,2)-(6,1) "D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbeddedResourcePropertyGenerator\\src\\RazorDemoSlices\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing Microsoft.AspNetCore.Http.HttpResults;\n\n#line default\n#line hidden\n#nullable disable\n    [global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemMetadataAttribute("Identifier", "/Slices/PersonHTML.cshtml")]\n    [global::System.Runtime.CompilerServices.CreateNewOnMetadataUpdateAttribute]\n    #nullable restore\n    internal sealed class Slices_PersonHTML : RazorSliceHttpResult<RazorDemoSlices.Person>\n    #nullable disable\n    {\n        #pragma warning disable 1998\n        public async override global::System.Threading.Tasks.Task ExecuteAsync()\n        {\n            WriteLiteral("<!DOCTYPE html>\\r\\n<html lang=\\"en\\">\\r\\n<head>\\r\\n    <meta charset=\\"utf-8\\">\\r\\n    <title>Hello from Razor Slices!</title>\\r\\n</head>\\r\\n<body>\\r\\n    <p>\\r\\n        My name is ");\n            Write(\n#nullable restore\n#line (10,21)-(10,36) "D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbeddedResourcePropertyGenerator\\src\\RazorDemoSlices\\RazorDemoSlices\\Slices\\PersonHTML.cshtml"\nModel.FirstName\n\n#line default\n#line hidden\n#nullable disable\n            );\n            WriteLiteral(" ");\n            Write(\n#nullable restore\n#line (10,38)-(10,52) "D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbeddedResourcePropertyGenerator\\src\\RazorDemoSlices\\RazorDemoSlices\\Slices\\PersonHTML.cshtml"\nModel.LastName\n\n#line default\n#line hidden\n#nullable disable\n            );\n            WriteLiteral("\\r\\n    </p>\\r\\n</body>\\r\\n</html>");\n        }\n        #pragma warning restore 1998\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;\n        #nullable disable\n    }\n}\n#pragma warning restore 1591\n\n'))),(0,r.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\obj\\GX\\Microsoft.CodeAnalysis.Razor.Compiler\\Microsoft.NET.Sdk.Razor.SourceGenerators.RazorSourceGenerator\\Slices__ViewImports_cshtml.g.cs",label:"Slices__ViewImports_cshtml.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'#pragma checksum "D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbeddedResourcePropertyGenerator\\src\\RazorDemoSlices\\RazorDemoSlices\\Slices\\_ViewImports.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "95493514af34e5705fffb1e5c7121f0e7abde13ee7a1cff8fbafa2085da18fff"\n// <auto-generated/>\n#pragma warning disable 1591\n[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCoreGeneratedDocument.Slices__ViewImports), @"mvc.1.0.view", @"/Slices/_ViewImports.cshtml")]\nnamespace AspNetCoreGeneratedDocument\n{\n    #line default\n    using global::System;\n    using global::System.Collections.Generic;\n    using global::System.Linq;\n    using global::System.Threading.Tasks;\n    using global::Microsoft.AspNetCore.Mvc;\n    using global::Microsoft.AspNetCore.Mvc.Rendering;\n    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;\n#nullable restore\n#line (3,2)-(4,1) "D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbeddedResourcePropertyGenerator\\src\\RazorDemoSlices\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing System.Globalization;\n\n#nullable disable\n#nullable restore\n#line (4,2)-(5,1) "D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbeddedResourcePropertyGenerator\\src\\RazorDemoSlices\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing Microsoft.AspNetCore.Razor;\n\n#nullable disable\n#nullable restore\n#line (5,2)-(6,1) "D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbeddedResourcePropertyGenerator\\src\\RazorDemoSlices\\RazorDemoSlices\\Slices\\_ViewImports.cshtml"\nusing Microsoft.AspNetCore.Http.HttpResults;\n\n#line default\n#line hidden\n#nullable disable\n    [global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemMetadataAttribute("Identifier", "/Slices/_ViewImports.cshtml")]\n    [global::System.Runtime.CompilerServices.CreateNewOnMetadataUpdateAttribute]\n    #nullable restore\n    internal sealed class Slices__ViewImports : RazorSliceHttpResult\n    #nullable disable\n    {\n        #pragma warning disable 1998\n        public async override global::System.Threading.Tasks.Task ExecuteAsync()\n        {\n            WriteLiteral("\\r\\n");\n            WriteLiteral("\\r\\n");\n        }\n        #pragma warning restore 1998\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;\n        #nullable disable\n        #nullable restore\n        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]\n        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;\n        #nullable disable\n    }\n}\n#pragma warning restore 1591\n\n'))),(0,r.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RazorSlices\\src\\RazorDemoSlices\\obj\\GX\\RazorSlices.SourceGenerator\\RazorSlices.SourceGenerator.RazorSliceProxyGenerator\\RazorDemoSlices.RazorSliceProxies.g.cs",label:"RazorDemoSlices.RazorSliceProxies.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n\nusing global::System.Diagnostics.CodeAnalysis;\nusing global::RazorSlices;\n\n#nullable enable\n\nnamespace RazorDemoSlices\n{\n    /// <summary>\n    /// All calls to create Razor Slices instances via the generated <see cref="global::RazorSlices.IRazorSliceProxy"/> classes\n    /// go through this factory to ensure that the generated types\' Create methods are always invoked via the static abstract\n    /// methods defined in the <see cref="global::RazorSlices.IRazorSliceProxy"/> interface. This ensures that the interface\n    /// implementation is never trimmed from the generated types.\n    /// </summary>\n    /// <remarks>\n    /// Workaround for https://github.com/dotnet/runtime/issues/102796\n    /// </remarks>\n    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)] // Hide from IntelliSense.\n    internal static class RazorSlicesGenericFactory\n    {\n        public static RazorSlice CreateSlice<TProxy>() where TProxy : IRazorSliceProxy => TProxy.CreateSlice();\n\n        public static RazorSlice<TModel> CreateSlice<TProxy, TModel>(TModel model) where TProxy : IRazorSliceProxy => TProxy.CreateSlice(model);\n    }\n}\nnamespace RazorDemoSlices.Slices\n{\n    /// <summary>\n    /// Static proxy for the Razor Slice defined in <c>Slices\\PersonHTML.cshtml</c>.\n    /// </summary>\n    public sealed class PersonHTML : global::RazorSlices.IRazorSliceProxy\n    {\n        [global::System.Diagnostics.CodeAnalysis.DynamicDependency(global::System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All, TypeName, "RazorDemoSlices")]\n        private const string TypeName = "AspNetCoreGeneratedDocument.Slices_PersonHTML, RazorDemoSlices";\n        [global::System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(global::System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]\n        private static readonly global::System.Type _sliceType = global::System.Type.GetType(TypeName)\n            ?? throw new global::System.InvalidOperationException($"Razor view type \'{TypeName}\' was not found. This is likely a bug in the RazorSlices source generator.");\n        private static readonly global::RazorSlices.SliceDefinition _sliceDefinition = new(_sliceType);\n\n        /// <summary>\n        /// Creates a new instance of the Razor Slice defined in <c>Slices\\PersonHTML.cshtml</c> .\n        /// </summary>\n        public static global::RazorSlices.RazorSlice Create()\n            => global::RazorDemoSlices.RazorSlicesGenericFactory.CreateSlice<global::RazorDemoSlices.Slices.PersonHTML>();\n\n        /// <summary>\n        /// Creates a new instance of the Razor Slice defined in <c>Slices\\PersonHTML.cshtml</c> with the given model.\n        /// </summary>\n        public static global::RazorSlices.RazorSlice<TModel> Create<TModel>(TModel model)\n            => global::RazorDemoSlices.RazorSlicesGenericFactory.CreateSlice<global::RazorDemoSlices.Slices.PersonHTML, TModel>(model);\n\n        // Explicit interface implementation\n        static global::RazorSlices.RazorSlice global::RazorSlices.IRazorSliceProxy.CreateSlice() => _sliceDefinition.CreateSlice();\n\n        // Explicit interface implementation\n        static global::RazorSlices.RazorSlice<TModel> global::RazorSlices.IRazorSliceProxy.CreateSlice<TModel>(TModel model) => _sliceDefinition.CreateSlice(model);\n    }\n}\n\n\n')))),(0,r.kt)("h2",{id:"usefull"},"Usefull"),(0,r.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{target:"_blank",href:a(66969).Z},"Download Example project RazorSlices "))),(0,r.kt)("h3",{id:"share-razorslices"},"Share RazorSlices"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices&quote=RazorSlices",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices&text=RazorSlices:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices&title=RazorSlices",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices&title=RazorSlices&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRazorSlices",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RazorSlices"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RazorSlices")),(0,r.kt)("h3",{id:"in-the-same-category-templating---10-other-generators"},"In the same category (Templating) - 10 other generators"),(0,r.kt)("h4",{id:"gobie"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Gobie"},"Gobie")),(0,r.kt)("h4",{id:"interceptortemplate"},(0,r.kt)("a",{parentName:"h4",href:"/docs/InterceptorTemplate"},"InterceptorTemplate")),(0,r.kt)("h4",{id:"jktoolkittemplatepropertygenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/JKToolKit.TemplatePropertyGenerator"},"JKToolKit.TemplatePropertyGenerator")),(0,r.kt)("h4",{id:"microsoftnetsdkrazorsourcegenerators"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Microsoft.NET.Sdk.Razor.SourceGenerators"},"Microsoft.NET.Sdk.Razor.SourceGenerators")),(0,r.kt)("h4",{id:"mineralsautomixins"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Minerals.AutoMixins"},"Minerals.AutoMixins")),(0,r.kt)("h4",{id:"morrismoxy"},(0,r.kt)("a",{parentName:"h4",href:"/docs/MorrisMoxy"},"MorrisMoxy")),(0,r.kt)("h4",{id:"razorblade"},(0,r.kt)("a",{parentName:"h4",href:"/docs/RazorBlade"},"RazorBlade")),(0,r.kt)("h4",{id:"rscg_iformattable"},(0,r.kt)("a",{parentName:"h4",href:"/docs/RSCG_IFormattable"},"RSCG_IFormattable")),(0,r.kt)("h4",{id:"rscg_templating"},(0,r.kt)("a",{parentName:"h4",href:"/docs/RSCG_Templating"},"RSCG_Templating")),(0,r.kt)("h4",{id:"spreadcheetah"},(0,r.kt)("a",{parentName:"h4",href:"/docs/spreadcheetah"},"spreadcheetah")))}h.isMDXComponent=!0},66969:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/RazorSlices-213eebb9210b2537540a9fe0e0fd0f9b.zip"}}]);