"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[3955],{8635:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>m,toc:()=>d});var n=a(87462),i=(a(67294),a(3905)),s=a(73992),r=a(18679),o=a(68839);const l={sidebar_position:1400,title:"140 - Minerals.AutoMixins",description:"Generate Mixin from another classes",slug:"/Minerals.AutoMixins"},p="Minerals.AutoMixins  by Szymon Halucha",m={unversionedId:"RSCG-Examples/Minerals.AutoMixins",id:"RSCG-Examples/Minerals.AutoMixins",title:"140 - Minerals.AutoMixins",description:"Generate Mixin from another classes",source:"@site/docs/RSCG-Examples/Minerals.AutoMixins.md",sourceDirName:"RSCG-Examples",slug:"/Minerals.AutoMixins",permalink:"/RSCG_Examples/v2/docs/Minerals.AutoMixins",draft:!1,tags:[],version:"current",sidebarPosition:1400,frontMatter:{sidebar_position:1400,title:"140 - Minerals.AutoMixins",description:"Generate Mixin from another classes",slug:"/Minerals.AutoMixins"},sidebar:"tutorialSidebar",previous:{title:"139 - ThisClass",permalink:"/RSCG_Examples/v2/docs/ThisClass"},next:{title:"141 - ActorSrcGen",permalink:"/RSCG_Examples/v2/docs/ActorSrcGen"}},u={},d=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share Minerals.AutoMixins",id:"share-mineralsautomixins",level:3},{value:"In the same category (Templating) - 10 other generators",id:"in-the-same-category-templating---10-other-generators",level:3},{value:"Gobie",id:"gobie",level:4},{value:"InterceptorTemplate",id:"interceptortemplate",level:4},{value:"JKToolKit.TemplatePropertyGenerator",id:"jktoolkittemplatepropertygenerator",level:4},{value:"Microsoft.NET.Sdk.Razor.SourceGenerators",id:"microsoftnetsdkrazorsourcegenerators",level:4},{value:"MorrisMoxy",id:"morrismoxy",level:4},{value:"RazorBlade",id:"razorblade",level:4},{value:"RazorSlices",id:"razorslices",level:4},{value:"RSCG_IFormattable",id:"rscg_iformattable",level:4},{value:"RSCG_Templating",id:"rscg_templating",level:4},{value:"spreadcheetah",id:"spreadcheetah",level:4}],c={toc:d},g="wrapper";function h(e){let{components:t,...l}=e;return(0,i.kt)(g,(0,n.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mineralsautomixins--by-szymon-halucha"},"Minerals.AutoMixins  by Szymon Halucha"),(0,i.kt)(o.Z,{toc:d,mdxType:"TOCInline"}),(0,i.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Minerals.AutoMixins/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Minerals.AutoMixins?label=Minerals.AutoMixins",alt:"Nuget"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SzymonHalucha/Minerals.AutoMixins"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/SzymonHalucha/Minerals.AutoMixins?label=updated",alt:"GitHub last commit"})),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/SzymonHalucha/Minerals.AutoMixins?style=social",alt:"GitHub Repo stars"})),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("h3",{id:"info"},"Info"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Name: ",(0,i.kt)("strong",{parentName:"p"},"Minerals.AutoMixins")),(0,i.kt)("p",{parentName:"admonition"},"Package for automatic mixin design pattern generation using incremental generator"),(0,i.kt)("p",{parentName:"admonition"},"Author: Szymon Halucha"),(0,i.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/Minerals.AutoMixins/"},"https://www.nuget.org/packages/Minerals.AutoMixins/")),"   "),(0,i.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SzymonHalucha/Minerals.AutoMixins"},"https://github.com/SzymonHalucha/Minerals.AutoMixins")),(0,i.kt)("p",{parentName:"admonition"},"Source : ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SzymonHalucha/Minerals.AutoMixins"},"https://github.com/SzymonHalucha/Minerals.AutoMixins"))),(0,i.kt)("h3",{id:"original-readme"},"Original Readme"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("h1",{parentName:"admonition",id:"mineralsautomixins"},"Minerals.AutoMixins"),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/github/license/SzymonHalucha/Minerals.AutoMixins?style=for-the-badge",alt:"GitHub License"}),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/nuget/v/Minerals.AutoMixins?style=for-the-badge",alt:"NuGet Version"}),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/nuget/dt/Minerals.AutoMixins?style=for-the-badge",alt:"NuGet Downloads"})),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Minerals.AutoMixins/"},"Package on nuget.org")),(0,i.kt)("p",{parentName:"admonition"},"This NuGet package provides a capability to automatically generate a ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Mixin"},"mix-in")," design pattern for C# classes by using only one attribute. This allows you to easily extend the functionality of existing classes."),(0,i.kt)("h2",{parentName:"admonition",id:"funkcje"},"Funkcje"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Easy mix-in definition:")," Mix-in object are defined by using the ",(0,i.kt)("inlineCode",{parentName:"li"},"[GenerateMixin]")," attribute."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Easy addition of mix-ins to a class:")," To add a mix-in object to a class, use the ",(0,i.kt)("inlineCode",{parentName:"li"},"[AddMixin(typeof(ExampleMixinClass))]")," attribute."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Optimized code generation:")," The package uses an incremental source generator, so it doesn't significantly slow down the compilation process."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Compatibility with .NET Standard 2.0 and C# 7.3+:")," Works on a wide range of platforms and development environments.")),(0,i.kt)("h2",{parentName:"admonition",id:"installation"},"Installation"),(0,i.kt)("p",{parentName:"admonition"},"Add the Minerals.AutoMixins nuget package to your C# project using the following methods:"),(0,i.kt)("h3",{parentName:"admonition",id:"1-project-file-definition"},"1. Project file definition"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'<PackageReference Include="Minerals.AutoMixins" Version="0.2.1" />\n')),(0,i.kt)("h3",{parentName:"admonition",id:"2-dotnet-command"},"2. dotnet command"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-bat"},"dotnet add package Minerals.AutoMixins\n")),(0,i.kt)("h2",{parentName:"admonition",id:"why-choose-this-package-instead-of-the-default-interface-implementation"},"Why choose this package instead of the Default Interface Implementation?"),(0,i.kt)("p",{parentName:"admonition"},'Because the C# language option called "Default Interface Implementation", has limited runtime platform support. The Minerals.AutoMixins package is compatible with ',(0,i.kt)("inlineCode",{parentName:"p"},"netstandard2.0")," and C# language version 7.3+."),(0,i.kt)("h2",{parentName:"admonition",id:"usage"},"Usage"),(0,i.kt)("p",{parentName:"admonition"},"To define a mix-in object, add the ",(0,i.kt)("inlineCode",{parentName:"p"},"[GenerateMixin]")," attribute to the selected class."),(0,i.kt)("h3",{parentName:"admonition",id:"defining-mix-in-objects"},"Defining mix-in objects"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'namespace Examples\n{\n    [Minerals.AutoMixins.GenerateMixin]\n    public class ExampleMixin1\n    {\n        public float Property1 { get; set; } = 0.5f;\n\n        private int _field1 = 0;\n\n        private void Method1()\n        {\n            Console.WriteLine("Test1");\n        }\n    }\n\n    [Minerals.AutoMixins.GenerateMixin]\n    public class ExampleMixin2\n    {\n        public string PropertyText1 { get; set; } = "Test2";\n    }\n}\n')),(0,i.kt)("h3",{parentName:"admonition",id:"using-mix-in-objects"},"Using mix-in objects"),(0,i.kt)("p",{parentName:"admonition"},"To use the selected mix-in object, add the ",(0,i.kt)("inlineCode",{parentName:"p"},"[AddMixin(typeof(ExampleMixin1))]")," attribute to the selected class. The class implementing the ",(0,i.kt)("strong",{parentName:"p"},"AddMixin")," attribute must have the ",(0,i.kt)("strong",{parentName:"p"},"partial")," modifier to work properly."),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"namespace Examples\n{\n    [Minerals.AutoMixins.AddMixin(typeof(ExampleMixin1))]\n    public partial class ExampleClass\n    {\n        public int MyProperty { get; set; } = 3;\n    }\n}\n")),(0,i.kt)("p",{parentName:"admonition"},"The code above will generate an ",(0,i.kt)("inlineCode",{parentName:"p"},"ExampleClass.g.cs")," file with a partial class ",(0,i.kt)("inlineCode",{parentName:"p"},"ExampleClass"),"."),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'namespace Examples\n{\n    [global::System.Diagnostics.DebuggerNonUserCode]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n    public partial class ExampleClass\n    {\n        // MixinType: ExampleMixin1\n        public float Property1 { get; set; } = 0.5f;\n        private int _field1 = 0;\n        private void Method1()\n        {\n            Console.WriteLine("Test1");\n        }\n    }\n}\n')),(0,i.kt)("h3",{parentName:"admonition",id:"multiple-mix-ins"},"Multiple mix-ins"),(0,i.kt)("p",{parentName:"admonition"},"This package allows you to add multiple mix-in objects to a single class through attribute arguments ",(0,i.kt)("inlineCode",{parentName:"p"},"[AddMixin(typeof(ExampleMixin1), typeof(ExampleMixin2))]"),"."),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"namespace Examples\n{\n    [Minerals.AutoMixins.AddMixin(typeof(ExampleMixin1), typeof(ExampleMixin2))]\n    public partial class ExampleClass\n    {\n        public int MyProperty { get; set; } = 3;\n\n        public void MyMethod()\n        {\n\n        }\n    }\n}\n")),(0,i.kt)("p",{parentName:"admonition"},"The code above will generate an ",(0,i.kt)("inlineCode",{parentName:"p"},"ExampleClass.g.cs")," file with a partial class ",(0,i.kt)("inlineCode",{parentName:"p"},"ExampleClass"),"."),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'namespace Examples\n{\n    [global::System.Diagnostics.DebuggerNonUserCode]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n    public partial class ExampleClass\n    {\n        // MixinType: ExampleMixin1\n        public float Property1 { get; set; } = 0.5f;\n        private int _field1 = 0;\n        private void Method1()\n        {\n            Console.WriteLine("Test1");\n        }\n        // MixinType: ExampleMixin2\n        public string PropertyText1 { get; set; } = "Test2";\n        public string MethodText1()\n        {\n            return PropertyText1;\n        }\n    }\n}\n')),(0,i.kt)("h2",{parentName:"admonition",id:"versioning"},"Versioning"),(0,i.kt)("p",{parentName:"admonition"},"We use ",(0,i.kt)("a",{parentName:"p",href:"http://semver.org/"},"SemVer")," for versioning. For the versions available, see the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SzymonHalucha/Minerals.AutoMixins/branches"},"branches on this repository"),"."),(0,i.kt)("h2",{parentName:"admonition",id:"authors"},"Authors"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Szymon Ha\u0142ucha")," - Maintainer")),(0,i.kt)("p",{parentName:"admonition"},"See also the list of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SzymonHalucha/Minerals.AutoMixins/contributors"},"contributors")," who participated in this project."),(0,i.kt)("h2",{parentName:"admonition",id:"license"},"License"),(0,i.kt)("p",{parentName:"admonition"},"This project is licensed under the MIT License - see the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SzymonHalucha/Minerals.AutoMixins/LICENSE"},"LICENSE")," file for details.")),(0,i.kt)("h3",{id:"about"},"About"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Generate Mixin from another classes")),(0,i.kt)("h2",{id:"how-to-use"},"How to use"),(0,i.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,i.kt)("p",null,"This is the CSharp Project that references ",(0,i.kt)("strong",{parentName:"p"},"Minerals.AutoMixins")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {11}",showLineNumbers:!0,"{11}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Minerals.AutoMixins" Version="0.2.1" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"Minerals.AutoMixins")," in ",(0,i.kt)("em",{parentName:"p"},"Program.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using DemoMixin;\n\nPerson person = new Person { Name = "Andrei Ignat" };\nperson.LogName();\n'))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"Minerals.AutoMixins")," in ",(0,i.kt)("em",{parentName:"p"},"Person.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"\nnamespace DemoMixin;\n[Minerals.AutoMixins.AddMixin(typeof(LogData))]\ninternal partial class Person\n{\n    public string Name { get; set; }\n    public void LogName() => Log(Name);\n}\n\n"))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\LogData.cs",label:"LogData.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"Minerals.AutoMixins")," in ",(0,i.kt)("em",{parentName:"p"},"LogData.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"\nnamespace DemoMixin;\n[Minerals.AutoMixins.GenerateMixin]\ninternal class LogData\n{\n    public void Log(string data) => Console.WriteLine(data);\n}\n\n")))),(0,i.kt)("h3",{id:"generated-files"},"Generated Files"),(0,i.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\obj\\GX\\Minerals.AutoMixins\\Minerals.AutoMixins.AddMixinGenerator\\Person.g.cs",label:"Person.g.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated>\n// This code was generated by a tool.\n// Name: Minerals.AutoMixins\n// Version: 0.2.1+6c5634e46b130effbe00bd9d3f94459f1dbb2e85\n// </auto-generated>\n\nnamespace DemoMixin\n{\n    [global::System.Diagnostics.DebuggerNonUserCode]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n    internal partial class Person\n    {\n        // MixinType: LogData\n        public void Log(string data) => Console.WriteLine(data);\n    }\n}\n"))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\obj\\GX\\Minerals.AutoMixins\\Minerals.AutoMixins.Attributes.AddMixinAttributeGenerator\\AddMixinAttribute.g.cs",label:"AddMixinAttribute.g.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated>\n// This code was generated by a tool.\n// Name: Minerals.AutoMixins\n// Version: 0.2.1+6c5634e46b130effbe00bd9d3f94459f1dbb2e85\n// </auto-generated>\n#pragma warning disable CS9113\nnamespace Minerals.AutoMixins\n{\n    [global::System.Diagnostics.DebuggerNonUserCode]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n    [global::System.AttributeUsage(global::System.AttributeTargets.Class | global::System.AttributeTargets.Struct, AllowMultiple = false, Inherited = false)]\n    public sealed class AddMixinAttribute : global::System.Attribute\n    {\n        public AddMixinAttribute(params global::System.Type[] mixins)\n        {\n        }\n    }\n}\n#pragma warning restore CS9113\n"))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Minerals.AutoMixins\\src\\DemoMixin\\obj\\GX\\Minerals.AutoMixins\\Minerals.AutoMixins.Attributes.GenerateMixinAttributeGenerator\\GenerateMixinAttribute.g.cs",label:"GenerateMixinAttribute.g.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated>\n// This code was generated by a tool.\n// Name: Minerals.AutoMixins\n// Version: 0.2.1+6c5634e46b130effbe00bd9d3f94459f1dbb2e85\n// </auto-generated>\nnamespace Minerals.AutoMixins\n{\n    [global::System.Diagnostics.DebuggerNonUserCode]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n    [global::System.AttributeUsage(global::System.AttributeTargets.Class | global::System.AttributeTargets.Struct, AllowMultiple = false, Inherited = false)]\n    public sealed class GenerateMixinAttribute : global::System.Attribute\n    {\n    }\n}\n")))),(0,i.kt)("h2",{id:"usefull"},"Usefull"),(0,i.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{target:"_blank",href:a(52937).Z},"Download Example project Minerals.AutoMixins "))),(0,i.kt)("h3",{id:"share-mineralsautomixins"},"Share Minerals.AutoMixins"),(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins&quote=Minerals.AutoMixins",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins&text=Minerals.AutoMixins:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins&title=Minerals.AutoMixins",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins&title=Minerals.AutoMixins&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FMinerals.AutoMixins",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Minerals.AutoMixins"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Minerals.AutoMixins")),(0,i.kt)("h3",{id:"in-the-same-category-templating---10-other-generators"},"In the same category (Templating) - 10 other generators"),(0,i.kt)("h4",{id:"gobie"},(0,i.kt)("a",{parentName:"h4",href:"/docs/Gobie"},"Gobie")),(0,i.kt)("h4",{id:"interceptortemplate"},(0,i.kt)("a",{parentName:"h4",href:"/docs/InterceptorTemplate"},"InterceptorTemplate")),(0,i.kt)("h4",{id:"jktoolkittemplatepropertygenerator"},(0,i.kt)("a",{parentName:"h4",href:"/docs/JKToolKit.TemplatePropertyGenerator"},"JKToolKit.TemplatePropertyGenerator")),(0,i.kt)("h4",{id:"microsoftnetsdkrazorsourcegenerators"},(0,i.kt)("a",{parentName:"h4",href:"/docs/Microsoft.NET.Sdk.Razor.SourceGenerators"},"Microsoft.NET.Sdk.Razor.SourceGenerators")),(0,i.kt)("h4",{id:"morrismoxy"},(0,i.kt)("a",{parentName:"h4",href:"/docs/MorrisMoxy"},"MorrisMoxy")),(0,i.kt)("h4",{id:"razorblade"},(0,i.kt)("a",{parentName:"h4",href:"/docs/RazorBlade"},"RazorBlade")),(0,i.kt)("h4",{id:"razorslices"},(0,i.kt)("a",{parentName:"h4",href:"/docs/RazorSlices"},"RazorSlices")),(0,i.kt)("h4",{id:"rscg_iformattable"},(0,i.kt)("a",{parentName:"h4",href:"/docs/RSCG_IFormattable"},"RSCG_IFormattable")),(0,i.kt)("h4",{id:"rscg_templating"},(0,i.kt)("a",{parentName:"h4",href:"/docs/RSCG_Templating"},"RSCG_Templating")),(0,i.kt)("h4",{id:"spreadcheetah"},(0,i.kt)("a",{parentName:"h4",href:"/docs/spreadcheetah"},"spreadcheetah")))}h.isMDXComponent=!0},52937:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/Minerals.AutoMixins-a567fc59d7c0a5e9f93f0517e89e29eb.zip"}}]);