"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[2604],{20491:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>v,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var n=a(87462),i=(a(67294),a(3905)),s=a(73992),r=a(18679),o=a(68839);const l={sidebar_position:1930,title:"193 - NativeObjects",description:"Object to IntPtr and back",slug:"/NativeObjects"},c="NativeObjects  by Kevin Gosse",p={unversionedId:"RSCG-Examples/NativeObjects",id:"RSCG-Examples/NativeObjects",title:"193 - NativeObjects",description:"Object to IntPtr and back",source:"@site/docs/RSCG-Examples/NativeObjects.md",sourceDirName:"RSCG-Examples",slug:"/NativeObjects",permalink:"/RSCG_Examples/v2/docs/NativeObjects",draft:!1,tags:[],version:"current",sidebarPosition:1930,frontMatter:{sidebar_position:1930,title:"193 - NativeObjects",description:"Object to IntPtr and back",slug:"/NativeObjects"},sidebar:"tutorialSidebar",previous:{title:"192 - immediate.apis",permalink:"/RSCG_Examples/v2/docs/immediate.apis"},next:{title:"194 - zlinq",permalink:"/RSCG_Examples/v2/docs/zlinq"}},m={},u=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share NativeObjects",id:"share-nativeobjects",level:3},{value:"In the same category (WinAPI) - 2 other generators",id:"in-the-same-category-winapi---2-other-generators",level:3},{value:"Com",id:"com",level:4},{value:"Microsoft.Windows.CsWin32",id:"microsoftwindowscswin32",level:4}],b={toc:u},d="wrapper";function v(e){let{components:t,...l}=e;return(0,i.kt)(d,(0,n.Z)({},b,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"nativeobjects--by-kevin-gosse"},"NativeObjects  by Kevin Gosse"),(0,i.kt)(o.Z,{toc:u,mdxType:"TOCInline"}),(0,i.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/NativeObjects/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/NativeObjects?label=NativeObjects",alt:"Nuget"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kevingosse/NativeObjects"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/kevingosse/NativeObjects?label=updated",alt:"GitHub last commit"})),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/kevingosse/NativeObjects?style=social",alt:"GitHub Repo stars"})),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("h3",{id:"info"},"Info"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Name: ",(0,i.kt)("strong",{parentName:"p"},"NativeObjects")),(0,i.kt)("p",{parentName:"admonition"},"Source generator for native interop.\nGenerates implementation for interfaces to expose managed objects as COM-like, or call methods on COM-like native objects."),(0,i.kt)("p",{parentName:"admonition"},"Author: Kevin Gosse"),(0,i.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/NativeObjects/"},"https://www.nuget.org/packages/NativeObjects/")),"   "),(0,i.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kevingosse/NativeObjects"},"https://github.com/kevingosse/NativeObjects")),(0,i.kt)("p",{parentName:"admonition"},"Source : ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kevingosse/NativeObjects"},"https://github.com/kevingosse/NativeObjects"))),(0,i.kt)("h3",{id:"original-readme"},"Original Readme"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("h1",{parentName:"admonition",id:"nativeobjects"},"NativeObjects"),(0,i.kt)("p",{parentName:"admonition"},"Source-generator for easier native interop."),(0,i.kt)("p",{parentName:"admonition"},"It provides two core features:"),(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Ability to consume COM-like native objects"),(0,i.kt)("li",{parentName:"ul"},"Ability to expose managed objects as COM-like native objects")),(0,i.kt)("h1",{parentName:"admonition",id:"usage"},"Usage"),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"Remember to enable unsafe on your project when referencing this source-generator")),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},"<PropertyGroup>\n    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>\n</PropertyGroup>\n")),(0,i.kt)("p",{parentName:"admonition"},"Declare the interface you want to consume or expose, and decorate it with the ","[NativeObject]"," attribute:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"\n[NativeObject]\npublic interface ICalculator\n{\n    int Add(int value1, int value2);\n}\n")),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"The order of the methods is used to build the vtable. Therefore you MUST declare the methods in your interface in the same order as the native object.")),(0,i.kt)("p",{parentName:"admonition"},"From there, you can consume a native object that implements this interface:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public int DoSomething(IntPtr nativePtr)\n{\n    var calc = NativeObjects.ICalculator.Wrap(nativePtr);\n\n    return calc.Add(2, 3);\n}\n")),(0,i.kt)("p",{parentName:"admonition"},"Or implement that interface then expose the managed object to native code:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"public class MyCalculator : ICalculator\n{\n    public int Add(int value1, int value2)\n    {\n        return value1 + value2;\n    }\n}\n\nvar calculator = new MyCalculator();\nusing (var nativeCalculator = NativeObjects.ICalculator.Wrap(calculator))\n{\n    // nativeCalculator can be implicitly cast to IntPtr\n    // This is equivalent to calling nativeCalculator.Object\n    SomeNativeCode((IntPtr)nativeCalculator);\n}\n")),(0,i.kt)("p",{parentName:"admonition"},"The generated objects have the same visibility as the interface. For instance, if the interface is declared as internal, the generated objects will be internal."),(0,i.kt)("h1",{parentName:"admonition",id:"namespace"},"Namespace"),(0,i.kt)("p",{parentName:"admonition"},"By default, the interop types are emitted in the NativeObjects namespace. You can change it by adding an attribute at the assembly level:"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'[assembly: NativeObjectsNamespace("MyNamespace")]\n'))),(0,i.kt)("h3",{id:"about"},"About"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Object to IntPtr and back")),(0,i.kt)("h2",{id:"how-to-use"},"How to use"),(0,i.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,i.kt)("p",null,"This is the CSharp Project that references ",(0,i.kt)("strong",{parentName:"p"},"NativeObjects")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {11}",showLineNumbers:!0,"{11}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n    <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net8.0</TargetFramework>\n        <ImplicitUsings>enable</ImplicitUsings>\n        <Nullable>enable</Nullable>\n        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>\n    </PropertyGroup>\n    <ItemGroup>\n      <PackageReference Include="NativeObjects" Version="1.3.0" OutputItemType="Analyzer" ReferenceOutputAssembly="false"  />\n    </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NativeObjects\\src\\NativeObjectsDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"NativeObjects")," in ",(0,i.kt)("em",{parentName:"p"},"Program.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using NativeObjectsDemo;\nPerson p = new Person();\n\np.DateOfBirth= new DateTime(1970,4,16);\nusing (var nativ = NativeObjects.IPerson.Wrap(p))\n{\n    SomeNativeCode((IntPtr)nativ.Object);\n}\n\nstatic void SomeNativeCode(IntPtr nativePerson)\n{\n    var p = NativeObjects.IPerson.Wrap(nativePerson);\n    Console.WriteLine($"Age: {p.CalculateAge()}");\n\n}\n\n'))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NativeObjects\\src\\NativeObjectsDemo\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"NativeObjects")," in ",(0,i.kt)("em",{parentName:"p"},"Person.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"namespace NativeObjectsDemo;\n[NativeObject]\npublic interface IPerson\n{\n    public int CalculateAge();\n}\nclass Person : IPerson\n{\n    public DateTime DateOfBirth { get; set; }\n\n    public int CalculateAge()\n    {\n\n        return (int)DateTime.Now.Subtract(DateOfBirth).TotalDays / 365;\n    }\n}\n\n")))),(0,i.kt)("h3",{id:"generated-files"},"Generated Files"),(0,i.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,i.kt)(s.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NativeObjects\\src\\NativeObjectsDemo\\obj\\GX\\NativeObjects\\NativeObjectGenerator.NativeObjectGenerator\\NativeObjectAttribute.g.cs",label:"NativeObjectAttribute.g.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using System;\n\n[AttributeUsage(AttributeTargets.Interface, Inherited = false, AllowMultiple = false)]\ninternal class NativeObjectAttribute : Attribute { }\n\n[AttributeUsage(AttributeTargets.Assembly, Inherited = false, AllowMultiple = false)]\ninternal class NativeObjectsNamespaceAttribute : Attribute\n{\n    public NativeObjectsNamespaceAttribute(string name) { }\n}\n\n"))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\NativeObjects\\src\\NativeObjectsDemo\\obj\\GX\\NativeObjects\\NativeObjectGenerator.NativeObjectGenerator\\NativeObjectsDemo.IPerson.g.cs",label:"NativeObjectsDemo.IPerson.g.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"namespace NativeObjects\n{\n    \n    using System;\n    using System.Runtime.CompilerServices;\n    using System.Runtime.InteropServices;\n\n    public unsafe class IPerson : IDisposable\n    {\n        private IPerson(NativeObjectsDemo.IPerson implementation)\n        {\n            const int delegateCount = 1;\n\n            var vtable = (IntPtr*)NativeMemory.Alloc((nuint)delegateCount, (nuint)IntPtr.Size);\n\n            *(vtable + 0) = (IntPtr)(delegate* unmanaged<IntPtr*, int>)&Exports.CalculateAge;\n\n\n            var obj = (IntPtr*)NativeMemory.Alloc((nuint)2, (nuint)IntPtr.Size);\n            *obj = (IntPtr)vtable;\n\n            var handle = GCHandle.Alloc(implementation);\n            *(obj + 1) = GCHandle.ToIntPtr(handle);\n\n            Object = (IntPtr)obj;\n        }\n\n        public IntPtr Object { get; private set; }\n\n        public static IPerson Wrap(NativeObjectsDemo.IPerson implementation) => new(implementation);\n\n        public static IPersonInvoker Wrap(IntPtr ptr) => new(ptr);\n\n        public static implicit operator IntPtr(IPerson stub) => stub.Object;\n\n        public void Dispose()\n        {\n            if (Object != IntPtr.Zero)\n            {\n                var target = (void**)Object;\n                NativeMemory.Free(*target);\n                NativeMemory.Free(target);\n                Object = IntPtr.Zero;\n            }\n        }\n\n        private static class Exports\n        {\n            [UnmanagedCallersOnly]\n            public static int CalculateAge(IntPtr* self)\n            {\n                var handle = GCHandle.FromIntPtr(*(self + 1));\n                var obj = (NativeObjectsDemo.IPerson)handle.Target;\n                var result = obj.CalculateAge();\n                return result;\n            }\n\n\n\n        }\n    }\n\n    public unsafe struct IPersonInvoker\n    {\n        private readonly IntPtr _implementation;\n\n        public IPersonInvoker(IntPtr implementation)\n        {\n            _implementation = implementation;\n        }\n\n        public static implicit operator IntPtr(IPersonInvoker invoker) => invoker._implementation;\n\n        private nint* VTable => (nint*)*(nint*)_implementation;\n\n        public  int CalculateAge()\n        {\n            var __func__ = (delegate* unmanaged[Stdcall]<IntPtr,  int>)*(VTable + 0);\n            return  __func__(_implementation);\n        }\n \n    }\n\n}\n")))),(0,i.kt)("h2",{id:"usefull"},"Usefull"),(0,i.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{target:"_blank",href:a(7769).Z},"Download Example project NativeObjects "))),(0,i.kt)("h3",{id:"share-nativeobjects"},"Share NativeObjects"),(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNativeObjects&quote=NativeObjects",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNativeObjects&text=NativeObjects:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNativeObjects",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNativeObjects&title=NativeObjects",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNativeObjects&title=NativeObjects&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FNativeObjects",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/NativeObjects"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/NativeObjects")),(0,i.kt)("h3",{id:"in-the-same-category-winapi---2-other-generators"},"In the same category (WinAPI) - 2 other generators"),(0,i.kt)("h4",{id:"com"},(0,i.kt)("a",{parentName:"h4",href:"/docs/Com"},"Com")),(0,i.kt)("h4",{id:"microsoftwindowscswin32"},(0,i.kt)("a",{parentName:"h4",href:"/docs/Microsoft.Windows.CsWin32"},"Microsoft.Windows.CsWin32")))}v.isMDXComponent=!0},7769:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/NativeObjects-61b1e56570681762aea9bc6077ffa5bb.zip"}}]);