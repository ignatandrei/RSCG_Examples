"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[2197],{8533:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/files/jos.enumeration-0adcb6fd5dd555635b1f81a5637e8cb1.zip"},89780:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"RSCG-Examples/jos.enumeration","title":"202 - jos.enumeration","description":"Generating enum from static consts","source":"@site/docs/RSCG-Examples/jos.enumeration.md","sourceDirName":"RSCG-Examples","slug":"/jos.enumeration","permalink":"/RSCG_Examples/v2/docs/jos.enumeration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/RSCG-Examples/jos.enumeration.md","tags":[],"version":"current","sidebarPosition":2020,"frontMatter":{"sidebar_position":2020,"title":"202 - jos.enumeration","description":"Generating enum from static consts","slug":"/jos.enumeration"},"sidebar":"tutorialSidebar","previous":{"title":"201 - Strings.ResourceGenerator","permalink":"/RSCG_Examples/v2/docs/Strings.ResourceGenerator"},"next":{"title":"203 - Tortuga.Shipwright","permalink":"/RSCG_Examples/v2/docs/Tortuga.Shipwright"}}');var a=r(74848),t=r(28453),s=r(11470),o=r(19365),l=r(14252);const c={sidebar_position:2020,title:"202 - jos.enumeration",description:"Generating enum from static consts",slug:"/jos.enumeration"},u="jos.enumeration  by Josef Ottosson",d={},m=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Installation",id:"installation",level:2},{value:"JOS.Enumeration",id:"josenumeration-1",level:3},{value:"JOS.Enumeration.Database.Dapper",id:"josenumerationdatabasedapper",level:3},{value:"JOS.Enumeration.Database.EntityFrameworkCore",id:"josenumerationdatabaseentityframeworkcore",level:3},{value:"Usage",id:"usage",level:2},{value:"Features",id:"features",level:2},{value:"Generic value",id:"generic-value",level:3},{value:"JSON",id:"json",level:3},{value:"Database",id:"database",level:3},{value:"Dapper",id:"dapper",level:4},{value:"EF Core",id:"ef-core",level:4},{value:"Primitive Collections",id:"primitive-collections",level:3},{value:"EF Core",id:"ef-core-1",level:4},{value:"Dapper",id:"dapper-1",level:4},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share jos.enumeration",id:"share-josenumeration",level:3},{value:"In the same category (Enum) - 6 other generators",id:"in-the-same-category-enum---6-other-generators",level:3},{value:"CredFetoEnum",id:"credfetoenum",level:4},{value:"EnumClass",id:"enumclass",level:4},{value:"EnumUtilities",id:"enumutilities",level:4},{value:"FusionReactor",id:"fusionreactor",level:4},{value:"NetEscapades.EnumGenerators",id:"netescapadesenumgenerators",level:4},{value:"PMart.Enumeration",id:"pmartenumeration",level:4}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"josenumeration--by-josef-ottosson",children:"jos.enumeration  by Josef Ottosson"})}),"\n",(0,a.jsx)(l.A,{toc:m}),"\n",(0,a.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://www.nuget.org/packages/jos.enumeration/",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/jos.enumeration?label=jos.enumeration",alt:"Nuget"})}),"\n",(0,a.jsx)(n.a,{href:"https://github.com/joseftw/jos.enumeration",children:(0,a.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/joseftw/jos.enumeration?label=updated",alt:"GitHub last commit"})}),"\n",(0,a.jsx)(n.img,{src:"https://img.shields.io/github/stars/joseftw/jos.enumeration?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,a.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,a.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,a.jsxs)(n.admonition,{type:"info",children:[(0,a.jsxs)(n.p,{children:["Name: ",(0,a.jsx)(n.strong,{children:"jos.enumeration"})]}),(0,a.jsx)(n.p,{children:"Package Description"}),(0,a.jsx)(n.p,{children:"Author: Josef Ottosson"}),(0,a.jsxs)(n.p,{children:["NuGet:\n",(0,a.jsx)(n.em,{children:(0,a.jsx)(n.a,{href:"https://www.nuget.org/packages/jos.enumeration/",children:"https://www.nuget.org/packages/jos.enumeration/"})})]}),(0,a.jsxs)(n.p,{children:["You can find more details at ",(0,a.jsx)(n.a,{href:"https://github.com/joseftw/jos.enumeration",children:"https://github.com/joseftw/jos.enumeration"})]}),(0,a.jsxs)(n.p,{children:["Source: ",(0,a.jsx)(n.a,{href:"https://github.com/joseftw/jos.enumeration",children:"https://github.com/joseftw/jos.enumeration"})]})]}),"\n",(0,a.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,a.jsxs)(n.admonition,{type:"note",children:[(0,a.jsx)(n.h1,{id:"josenumeration",children:"JOS.Enumeration"}),(0,a.jsx)(n.p,{children:"Enumeration implementation with source generation support."}),(0,a.jsx)(n.h2,{id:"installation",children:"Installation"}),(0,a.jsx)(n.h3,{id:"josenumeration-1",children:"JOS.Enumeration"}),(0,a.jsxs)(n.p,{children:["Contains the ",(0,a.jsx)(n.code,{children:"IEnumeration interface"})," and a ",(0,a.jsx)(n.code,{children:"System.Text.Json"})," JsonConverter.\nThe ",(0,a.jsx)(n.code,{children:"JOS.Enumeration.SourceGenerator"})," package contains the actual source generator."]}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Don't forget to install that one as well."})," \ud83d\ude03"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"dotnet add package JOS.Enumeration\ndotnet add package JOS.Enumeration.SourceGenerator\n"})}),(0,a.jsx)(n.h3,{id:"josenumerationdatabasedapper",children:"JOS.Enumeration.Database.Dapper"}),(0,a.jsxs)(n.p,{children:["Contains a custom ",(0,a.jsx)(n.code,{children:"TypeHandler"})," to use with Dapper."]}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"dotnet add package JOS.Enumeration.Database.Dapper"})}),(0,a.jsx)(n.h3,{id:"josenumerationdatabaseentityframeworkcore",children:"JOS.Enumeration.Database.EntityFrameworkCore"}),(0,a.jsx)(n.p,{children:"Contains ConfigureEnumeration extension method to allow usage with EntityFramework Core."}),(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"dotnet add package JOS.Enumeration.Database.EntityFrameworkCore"})}),(0,a.jsx)(n.h2,{id:"usage",children:"Usage"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Create a new ",(0,a.jsx)(n.em,{children:"partial"})," ",(0,a.jsx)(n.code,{children:"record"})," or ",(0,a.jsx)(n.code,{children:"class"})]}),"\n",(0,a.jsxs)(n.li,{children:["Implement the ",(0,a.jsx)(n.code,{children:"IEnumeration<T>"})," interface"]}),"\n",(0,a.jsx)(n.li,{children:"Add your Enumeration items"}),"\n"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'public partial record Hamburger : IEnumeration<Hamburger>\n{\n    public static readonly Hamburger Cheeseburger = new (1, "Cheeseburger");\n    public static readonly Hamburger BigMac = new(2, "Big Mac");\n    public static readonly Hamburger BigTasty = new(3, "Big Tasty");\n}\n'})}),(0,a.jsx)(n.p,{children:"The source generator will implement the following interface:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"// Default implementation -> int as Value\npublic interface IEnumeration<T> : IEnumeration<int, T> where T : IEnumeration<T>\n{\n}\n\npublic interface IEnumeration<TValue, TType> where TValue : IConvertible\n{\n    TValue Value { get; }\n    string Description { get; }\n    static abstract IReadOnlySet<TType> GetAll();\n    static abstract IEnumerable<TType> GetEnumerable();\n    static abstract TType FromValue(TValue value);\n    static abstract TType FromDescription(string description);\n    static abstract TType FromDescription(ReadOnlySpan<char> description);\n    static abstract Type ValueType { get; }\n}\n"})}),(0,a.jsx)(n.p,{children:"The following code will be generated:"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'[System.Diagnostics.DebuggerDisplay("{Description}")]\n[System.CodeDom.Compiler.GeneratedCode("JOS.Enumeration.SourceGenerator", "4.1.11-beta+afeaa87a52")]\n[System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\npublic partial record Hamburger : IComparable<JOS.Enumerations.Hamburger>\n{\n    private static readonly IReadOnlySet<JOS.Enumerations.Hamburger> AllItems;\n    static Hamburger()\n    {\n        AllItems = new HashSet<JOS.Enumerations.Hamburger>(3)\n        {\n            Cheeseburger,\n            BigMac,\n            BigTasty,\n        }.ToFrozenSet();\n    }\n\n    private Hamburger(int value, string description)\n    {\n        Value = value;\n        Description = description ?? throw new ArgumentNullException(nameof(description));\n    }\n\n    public int Value { get; }\n    public string Description { get; }\n\n    public static IReadOnlySet<JOS.Enumerations.Hamburger> GetAll()\n    {\n        return AllItems;\n    }\n\n    public static IEnumerable<JOS.Enumerations.Hamburger> GetEnumerable()\n    {\n        yield return Cheeseburger;\n        yield return BigMac;\n        yield return BigTasty;\n    }\n\n    public static JOS.Enumerations.Hamburger FromValue(int value)\n    {\n        return value switch\n        {\n            1 => Cheeseburger,\n            2 => BigMac,\n            3 => BigTasty,\n            _ => throw new InvalidOperationException($"\'{value}\' is not a valid value in \'JOS.Enumerations.Hamburger\'")};\n    }\n\n    public static JOS.Enumerations.Hamburger FromDescription(string description)\n    {\n        return description switch\n        {\n            "Cheeseburger" => Cheeseburger,\n            "Big Mac" => BigMac,\n            "Big Tasty" => BigTasty,\n            _ => throw new InvalidOperationException($"\'{description}\' is not a valid description in \'JOS.Enumerations.Hamburger\'")};\n    }\n\n    public static JOS.Enumerations.Hamburger FromDescription(ReadOnlySpan<char> description)\n    {\n        return description switch\n        {\n            "Cheeseburger" => Cheeseburger,\n            "Big Mac" => BigMac,\n            "Big Tasty" => BigTasty,\n            _ => throw new InvalidOperationException($"\'{description}\' is not a valid description in \'JOS.Enumerations.Hamburger\'")};\n    }\n\n    public static Type ValueType => typeof(int);\n\n    public int CompareTo(JOS.Enumerations.Hamburger? other) => Value.CompareTo(other!.Value);\n    public static implicit operator int (JOS.Enumerations.Hamburger item) => item.Value;\n    public static implicit operator JOS.Enumerations.Hamburger(int value) => FromValue(value);\n}\n'})}),(0,a.jsx)(n.h2,{id:"features",children:"Features"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Generic value"}),"\n",(0,a.jsxs)(n.li,{children:["Generated ",(0,a.jsx)(n.code,{children:"IComparable<T>"})," method."]}),"\n",(0,a.jsx)(n.li,{children:"Generated implicit operators (convert to/from int)."}),"\n",(0,a.jsxs)(n.li,{children:["Generated optimized ",(0,a.jsx)(n.code,{children:"GetAll"}),", ",(0,a.jsx)(n.code,{children:"FromValue"})," and ",(0,a.jsx)(n.code,{children:"FromDescription"})," methods."]}),"\n",(0,a.jsx)(n.li,{children:"System.Text.Json support"}),"\n",(0,a.jsx)(n.li,{children:"Database support (Dapper and EF Core)."}),"\n"]}),(0,a.jsx)(n.h3,{id:"generic-value",children:"Generic value"}),(0,a.jsxs)(n.p,{children:["It's possible to use a generic value instead of the default ",(0,a.jsx)(n.code,{children:"int"})," value by implementing the ",(0,a.jsx)(n.code,{children:"IEnumeration<TValue, TEnumeration>"})," interface."]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'public partial record Car : IEnumeration<string, Car>\n{\n    public static readonly Car FerrariSpider = new("ferrari-spider", "Ferrari Spider");\n    public static readonly Car TeslaModelY = new("tesla-model-y", "Tesla Model Y");\n}\n'})}),(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"TValue"})," has a ",(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/api/system.iconvertible?WT.mc_id=DT-MVP-5004074",children:(0,a.jsx)(n.em,{children:"IConvertible"})})," constraint."]}),(0,a.jsx)(n.p,{children:"The following types has been tested and are guaranteed to work:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"int (default)"}),"\n",(0,a.jsx)(n.li,{children:"bool"}),"\n",(0,a.jsx)(n.li,{children:"decimal"}),"\n",(0,a.jsx)(n.li,{children:"long"}),"\n",(0,a.jsx)(n.li,{children:"string"}),"\n",(0,a.jsx)(n.li,{children:"uint"}),"\n",(0,a.jsx)(n.li,{children:"ulong"}),"\n"]}),(0,a.jsx)(n.h3,{id:"json",children:"JSON"}),(0,a.jsxs)(n.p,{children:["The package comes with a ",(0,a.jsx)(n.code,{children:"JsonConverterFactory"}),".\nExample:"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"var jsonSerializerOptions = new JsonSerializerOptions\n{\n    Converters = { new EnumerationJsonConverterFactory() }\n};\n"})}),(0,a.jsx)(n.p,{children:"It supports the following scenarios:"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Serializing to ",(0,a.jsx)(n.code,{children:"TValue"})]}),"\n",(0,a.jsxs)(n.li,{children:["Deserializing from ",(0,a.jsx)(n.code,{children:"TValue"})]}),"\n"]}),(0,a.jsx)(n.p,{children:"If you want any other behaviour, just create your own converter and register it."}),(0,a.jsx)(n.h3,{id:"database",children:"Database"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"public class MyEntity\n{\n    public MyEntity(Guid id, Hamburger hamburger)\n    {\n        Id = id;\n        Hamburger = hamburger;\n    }\n\n    public Guid Id { get; }\n    public Hamburger Hamburger { get; }\n}\n"})}),(0,a.jsx)(n.h4,{id:"dapper",children:"Dapper"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Register the TypeHandler: ",(0,a.jsx)(n.code,{children:"SqlMapper.AddTypeHandler(new EnumerationTypeHandler<Hamburger>())"})]}),"\n",(0,a.jsx)(n.li,{children:"Query like this:"}),"\n"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'var results = (await actConnection.QueryAsync<MyEntity>(\n            "SELECT id, hamburger from my_entities WHERE id = @id", new {id = myEntity.Id})).ToList(); \n'})}),(0,a.jsx)(n.h4,{id:"ef-core",children:"EF Core"}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Configure your DB Context"}),"\n"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"public DbSet<MyEntity> MyEntities { get; set; } = null!;\n\nprotected override void OnModelCreating(ModelBuilder modelBuilder)\n{\n    modelBuilder.ApplyConfigurationsFromAssembly(typeof(JosEnumerationDbContext).Assembly);\n} \n"})}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"public class MyEntityEntityTypeConfiguration : IEntityTypeConfiguration<MyEntity>\n{\n    public void Configure(EntityTypeBuilder<MyEntity> builder)\n    {\n        builder.HasKey(x => x.Id);\n        builder.Property(x => x.Hamburger).ConfigureEnumeration().IsRequired();\n    }\n}\n"})}),(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Query:"}),"\n"]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"var result = await myDbContext.MyEntities.FirstAsync(x => x.Id == myEntity.Id); \n"})}),(0,a.jsx)(n.h3,{id:"primitive-collections",children:"Primitive Collections"}),(0,a.jsx)(n.p,{children:"Support for primitive collections in net8.0 can be configured like this:"}),(0,a.jsx)(n.h4,{id:"ef-core-1",children:"EF Core"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"public void Configure(EntityTypeBuilder<MyEntity> builder)\n{\n    builder.ConfigureEnumeration<MyEntity, string, Car>(x => x.Cars);\n}\n"})}),(0,a.jsx)(n.h4,{id:"dapper-1",children:"Dapper"}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"SqlMapper.AddTypeHandler(new EnumerationArrayTypeHandler<string, Car>());\n"})})]}),"\n",(0,a.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"Generating enum from static consts"})}),"\n",(0,a.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,a.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsxs)(o.A,{value:"csproj",label:"CSharp Project",children:[(0,a.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,a.jsx)(n.strong,{children:"jos.enumeration"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {11}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="JOS.Enumeration" Version="4.0.2" />\n    <PackageReference Include="JOS.Enumeration.SourceGenerator" Version="4.0.2" />\n  </ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n</Project>\n\n'})})]}),(0,a.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Jos.Enumeration\\src\\EnumDemo\\Program.cs",label:"Program.cs",children:[(0,a.jsxs)(n.p,{children:["This is the use of ",(0,a.jsx)(n.strong,{children:"jos.enumeration"})," in ",(0,a.jsx)(n.em,{children:"Program.cs"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// See https://aka.ms/new-console-template for more information\nusing EnumDemo;\n\nConsole.WriteLine("Hello, World!");\n\nvar cars= CarTypes.GetAll();\nforeach (var car in cars)\n{\n    Console.WriteLine(car.Description + " - " +car.Value);\n}\n'})})]}),(0,a.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Jos.Enumeration\\src\\EnumDemo\\CarTypes.cs",label:"CarTypes.cs",children:[(0,a.jsxs)(n.p,{children:["This is the use of ",(0,a.jsx)(n.strong,{children:"jos.enumeration"})," in ",(0,a.jsx)(n.em,{children:"CarTypes.cs"})]}),(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using JOS.Enumeration;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace EnumDemo;\n\n\npartial  record CarTypes : IEnumeration<CarTypes>\n{\n    public static readonly CarTypes Dacia = new(1, "Dacia");\n    public static readonly CarTypes Tesla = new(2, "Tesla");\n    public static readonly CarTypes BMW = new(3, "BMW");\n    public static readonly CarTypes Mercedes = new(4, "Mercedes");\n}\n\n'})})]})]}),"\n",(0,a.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,a.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Jos.Enumeration\\src\\EnumDemo\\obj\\GX\\JOS.Enumeration.SourceGenerator\\JOS.Enumeration.SourceGenerator.EnumerationSourceGenerator\\CarTypes.Implementation.generated.cs",label:"CarTypes.Implementation.generated.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated>\n//     This code was auto generated by JOS.Enumeration.SourceGenerator\n// </auto-generated>\n#nullable enable\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\n#if NET8_0_OR_GREATER\nusing System.Collections.Frozen;\n#endif\nusing JOS.Enumeration;\n\nnamespace EnumDemo;\n[System.Diagnostics.DebuggerDisplay("{Description}")]\n[System.CodeDom.Compiler.GeneratedCode("JOS.Enumeration.SourceGenerator", null)]\npartial record CarTypes : IComparable<EnumDemo.CarTypes>\n{\n    private static readonly IReadOnlySet<EnumDemo.CarTypes> AllItems;\n    static CarTypes()\n    {\n        AllItems = new HashSet<EnumDemo.CarTypes>(4)\n        {\n            Dacia,\n            Tesla,\n            BMW,\n            Mercedes,\n        }.ToFrozenSet();\n    }\n\n    private CarTypes(int value, string description)\n    {\n        Value = value;\n        Description = description ?? throw new ArgumentNullException(nameof(description));\n    }\n\n    public int Value { get; }\n    public string Description { get; }\n\n    public static IReadOnlySet<EnumDemo.CarTypes> GetAll()\n    {\n        return AllItems;\n    }\n\n    public static IEnumerable<EnumDemo.CarTypes> GetEnumerable()\n    {\n        yield return Dacia;\n        yield return Tesla;\n        yield return BMW;\n        yield return Mercedes;\n    }\n\n    public static EnumDemo.CarTypes FromValue(int value)\n    {\n        return value switch\n        {\n            1 => Dacia,\n            2 => Tesla,\n            3 => BMW,\n            4 => Mercedes,\n            _ => throw new InvalidOperationException($"\'{value}\' is not a valid value in \'EnumDemo.CarTypes\'")};\n    }\n\n    public static EnumDemo.CarTypes FromDescription(string description)\n    {\n        return description switch\n        {\n            "Dacia" => Dacia,\n            "Tesla" => Tesla,\n            "BMW" => BMW,\n            "Mercedes" => Mercedes,\n            _ => throw new InvalidOperationException($"\'{description}\' is not a valid description in \'EnumDemo.CarTypes\'")};\n    }\n\n    public static EnumDemo.CarTypes FromDescription(ReadOnlySpan<char> description)\n    {\n        return description switch\n        {\n            "Dacia" => Dacia,\n            "Tesla" => Tesla,\n            "BMW" => BMW,\n            "Mercedes" => Mercedes,\n            _ => throw new InvalidOperationException($"\'{description}\' is not a valid description in \'EnumDemo.CarTypes\'")};\n    }\n\n    public static Type ValueType => typeof(int);\n\n    public int CompareTo(EnumDemo.CarTypes? other) => Value.CompareTo(other!.Value);\n    public static implicit operator int (EnumDemo.CarTypes item) => item.Value;\n    public static implicit operator EnumDemo.CarTypes(int value) => FromValue(value);\n}\n'})})}),(0,a.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Jos.Enumeration\\src\\EnumDemo\\obj\\GX\\JOS.Enumeration.SourceGenerator\\JOS.Enumeration.SourceGenerator.EnumerationSourceGenerator\\Enumerations.generated.cs",label:"Enumerations.generated.cs",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'// <auto-generated>\n//     This code was auto generated by JOS.Enumeration.SourceGenerator\n// </auto-generated>\n#nullable enable\nusing System;\nusing JOS.Enumeration;\n\nnamespace EnumDemo;\n[System.CodeDom.Compiler.GeneratedCode("JOS.Enumeration.SourceGenerator", null)]\npublic static class Enumerations\n{\n    public static class CarTypes\n    {\n        public static class Dacia\n        {\n            public const int Value = 1;\n            public const string Description = "Dacia";\n        }\n\n        public static class Tesla\n        {\n            public const int Value = 2;\n            public const string Description = "Tesla";\n        }\n\n        public static class BMW\n        {\n            public const int Value = 3;\n            public const string Description = "BMW";\n        }\n\n        public static class Mercedes\n        {\n            public const int Value = 4;\n            public const string Description = "Mercedes";\n        }\n    }\n}\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,a.jsx)(n.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(8533).A+"",children:"Download Example project jos.enumeration "})})}),"\n",(0,a.jsx)(n.h3,{id:"share-josenumeration",children:"Share jos.enumeration"}),"\n",(0,a.jsxs)("ul",{children:[(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fjos.enumeration&quote=jos.enumeration",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fjos.enumeration&text=jos.enumeration:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fjos.enumeration",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fjos.enumeration&title=jos.enumeration",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,a.jsx)("li",{children:(0,a.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fjos.enumeration&title=jos.enumeration&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fjos.enumeration",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/jos.enumeration",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/jos.enumeration"})}),"\n",(0,a.jsx)(n.h3,{id:"in-the-same-category-enum---6-other-generators",children:"In the same category (Enum) - 6 other generators"}),"\n",(0,a.jsx)(n.h4,{id:"credfetoenum",children:(0,a.jsx)(n.a,{href:"/docs/CredFetoEnum",children:"CredFetoEnum"})}),"\n",(0,a.jsx)(n.h4,{id:"enumclass",children:(0,a.jsx)(n.a,{href:"/docs/EnumClass",children:"EnumClass"})}),"\n",(0,a.jsx)(n.h4,{id:"enumutilities",children:(0,a.jsx)(n.a,{href:"/docs/EnumUtilities",children:"EnumUtilities"})}),"\n",(0,a.jsx)(n.h4,{id:"fusionreactor",children:(0,a.jsx)(n.a,{href:"/docs/FusionReactor",children:"FusionReactor"})}),"\n",(0,a.jsx)(n.h4,{id:"netescapadesenumgenerators",children:(0,a.jsx)(n.a,{href:"/docs/NetEscapades.EnumGenerators",children:"NetEscapades.EnumGenerators"})}),"\n",(0,a.jsx)(n.h4,{id:"pmartenumeration",children:(0,a.jsx)(n.a,{href:"/docs/PMart.Enumeration",children:"PMart.Enumeration"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);