"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[1953],{85410:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>m,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var r=t(87462),a=(t(67294),t(3905)),o=t(73992),i=t(18679),s=t(68839);const l={sidebar_position:820,title:"82 - jsonConverterSourceGenerator",description:"Json Polymorphic generator",slug:"/jsonConverterSourceGenerator"},m="jsonConverterSourceGenerator  by Aviationexam",p={unversionedId:"RSCG-Examples/jsonConverterSourceGenerator",id:"RSCG-Examples/jsonConverterSourceGenerator",title:"82 - jsonConverterSourceGenerator",description:"Json Polymorphic generator",source:"@site/docs/RSCG-Examples/jsonConverterSourceGenerator.md",sourceDirName:"RSCG-Examples",slug:"/jsonConverterSourceGenerator",permalink:"/RSCG_Examples/v2/docs/jsonConverterSourceGenerator",draft:!1,tags:[],version:"current",sidebarPosition:820,frontMatter:{sidebar_position:820,title:"82 - jsonConverterSourceGenerator",description:"Json Polymorphic generator",slug:"/jsonConverterSourceGenerator"},sidebar:"tutorialSidebar",previous:{title:"81 - N.SourceGenerators.UnionTypes",permalink:"/RSCG_Examples/v2/docs/N.SourceGenerators.UnionTypes"},next:{title:"83 - PrimaryParameter",permalink:"/RSCG_Examples/v2/docs/PrimaryParameter"}},u={},c=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share jsonConverterSourceGenerator",id:"share-jsonconvertersourcegenerator",level:3},{value:"In the same category (Serializer)",id:"in-the-same-category-serializer",level:2},{value:"JsonPolymorphicGenerator",id:"jsonpolymorphicgenerator",level:3},{value:"ProtobufSourceGenerator",id:"protobufsourcegenerator",level:3},{value:"System.Text.Json",id:"systemtextjson",level:3}],y={toc:c},d="wrapper";function g(e){let{components:n,...l}=e;return(0,a.kt)(d,(0,r.Z)({},y,l,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"jsonconvertersourcegenerator--by-aviationexam"},"jsonConverterSourceGenerator  by Aviationexam"),(0,a.kt)(s.Z,{toc:c,mdxType:"TOCInline"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Aviationexam.GeneratedJsonConverters.SourceGenerator/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Aviationexam.GeneratedJsonConverters.SourceGenerator?label=Aviationexam.GeneratedJsonConverters.SourceGenerator",alt:"Nuget"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aviationexam/json-converter-source-generator"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/aviationexam/json-converter-source-generator?label=updated",alt:"GitHub last commit"})),"\n",(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/aviationexam/json-converter-source-generator?style=social",alt:"GitHub Repo stars"})),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("h3",{id:"info"},"Info"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Name: ",(0,a.kt)("strong",{parentName:"p"},"jsonConverterSourceGenerator")),(0,a.kt)("p",{parentName:"admonition"},"Package Description"),(0,a.kt)("p",{parentName:"admonition"},"Author: Aviationexam"),(0,a.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/Aviationexam.GeneratedJsonConverters.SourceGenerator/"},"https://www.nuget.org/packages/Aviationexam.GeneratedJsonConverters.SourceGenerator/")),"   "),(0,a.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aviationexam/json-converter-source-generator"},"https://github.com/aviationexam/json-converter-source-generator")),(0,a.kt)("p",{parentName:"admonition"},"Source : ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/aviationexam/json-converter-source-generator"},"https://github.com/aviationexam/json-converter-source-generator"))),(0,a.kt)("h3",{id:"original-readme"},"Original Readme"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://github.com/aviationexam/json-converter-source-generator/actions/workflows/build.yml"},(0,a.kt)("img",{parentName:"a",src:"https://github.com/aviationexam/json-converter-source-generator/actions/workflows/build.yml/badge.svg?branch=main",alt:"Build Status"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Aviationexam.GeneratedJsonConverters.SourceGenerator/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/Aviationexam.GeneratedJsonConverters.SourceGenerator.svg?style=flat-square&label=nuget",alt:"NuGet"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://www.myget.org/feed/json-converter-source-generator/package/nuget/Aviationexam.GeneratedJsonConverters.SourceGenerator"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/myget/json-converter-source-generator/vpre/Aviationexam.GeneratedJsonConverters.SourceGenerator?label=MyGet",alt:"MyGet"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://f.feedz.io/aviationexam/json-converter-source-generator/packages/Aviationexam.GeneratedJsonConverters.SourceGenerator/latest/download"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/endpoint.svg?url=https%3A%2F%2Ff.feedz.io%2Faviationexam%2Fjson-converter-source-generator%2Fshield%2FAviationexam.GeneratedJsonConverters.SourceGenerator%2Flatest&label=Aviationexam.GeneratedJsonConverters.SourceGenerator",alt:"feedz.io"}))),(0,a.kt)("h1",{parentName:"admonition",id:"aviationexamgeneratedjsonconverterssourcegenerator"},"Aviationexam.GeneratedJsonConverters.SourceGenerator"),(0,a.kt)("p",{parentName:"admonition"},"Motivation for this library are polymorphic contracts with discriminator property not present as first property."),(0,a.kt)("p",{parentName:"admonition"},"i.e. this JSON"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "baseProperty": 1,\n    "$type": 2,\n    "anotherLeafProperty": 2\n}\n')),(0,a.kt)("p",{parentName:"admonition"},"is deserialized correctly into ",(0,a.kt)("inlineCode",{parentName:"p"},"AnotherLeafContract")," using this library."),(0,a.kt)("p",{parentName:"admonition"},"And string based enum serialization."),(0,a.kt)("h2",{parentName:"admonition",id:"install"},"Install"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<ItemGroup>\n    <PackageReference Include="Aviationexam.GeneratedJsonConverters.SourceGenerator" Version="0.1.0" PrivateAssets="all" />\n</ItemGroup>\n')),(0,a.kt)("h2",{parentName:"admonition",id:"how-to-use-library"},"How to use library"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<PropertyGroup>\n    \x3c!-- DefaultJsonSerializerContext configuration is required to generate UseEnumConverters method --\x3e\n    <AVI_EJC_DefaultJsonSerializerContext_ClassAccessibility>public</AVI_EJC_DefaultJsonSerializerContext_ClassAccessibility>\n    <AVI_EJC_DefaultJsonSerializerContext_Namespace>NamespaceOf.My.Json.Serializer.Context</AVI_EJC_DefaultJsonSerializerContext_Namespace>\n    <AVI_EJC_DefaultJsonSerializerContext_ClassName>MyJsonSerializerContext</AVI_EJC_DefaultJsonSerializerContext_ClassName>\n\n    \x3c!-- Allowed options BackingType, FirstEnumName. Default value FirstEnumName --\x3e\n    <AVI_EJC_DefaultEnumSerializationStrategy>BackingType</AVI_EJC_DefaultEnumSerializationStrategy>\n\n    \x3c!-- Allowed options UseBackingType, UseEnumName, or UseBackingType|UseEnumName (DeserializationStrategy is Flags enum). Default value UseEnumName --\x3e\n    <AVI_EJC_DefaultEnumDeserializationStrategy>UseBackingType|UseEnumName</AVI_EJC_DefaultEnumDeserializationStrategy>\n</PropertyGroup>\n")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-cs"},'// file=contracts.cs\nusing Aviationexam.GeneratedJsonConverters.Attributes;\n\n[JsonPolymorphic] // notice, that attributes are from `Aviationexam.GeneratedJsonConverters.Attributes` namespace, not `System.Text.Json.Serialization`\n[JsonDerivedType(typeof(LeafContract), typeDiscriminator: nameof(LeafContract))]\n[JsonDerivedType(typeof(AnotherLeafContract), typeDiscriminator: 2)]\n[JsonDerivedType<GenericLeafContract>(typeDiscriminator: nameof(GenericLeafContract))]\npublic abstract class BaseContract\n{\n    public int BaseProperty { get; set; }\n}\npublic sealed class LeafContract : BaseContract\n{\n    public int LeafProperty { get; set; }\n}\npublic sealed class AnotherLeafContract : BaseContract\n{\n    public int AnotherLeafProperty { get; set; }\n}\npublic sealed class GenericLeafContract : BaseContract\n{\n    public int Property { get; set; }\n}\n\n[EnumJsonConverter] // this use project defined configuration\npublic enum EMyEnum\n{\n    [EnumMember(Value = "C")]\n    A,\n    [EnumMember(Value = "D")]\n    B,\n}\n\n[EnumJsonConverter(\n    SerializationStrategy = EnumSerializationStrategy.FirstEnumName,\n    DeserializationStrategy = EnumDeserializationStrategy.UseEnumName\n)]\npublic enum EMyEnumWithExplicitConfiguration\n{\n    [EnumMember(Value = "C")]\n    A,\n    [EnumMember(Value = "D")]\n    B,\n}\n\n[DisableEnumJsonConverter]\npublic enum EMyIgnoredEnum\n{\n    C,\n    D,\n}\n\n// file=MyJsonSerializerContext.cs\nusing System.Text.Json.Serialization;\n\n[JsonSerializable(typeof(BaseContract))] // this line is neccesary, generator searches for JsonSerializableAttribute with argument type decorated by JsonPolymorphicAttribute\n[JsonSerializable(typeof(LeafContract))] // notice, it\'s necessary to specify leaf types\n[JsonSerializable(typeof(AnotherLeafContract))]\n[JsonSerializable(typeof(GenericLeafContract))]\n\n[JsonSerializable(typeof(EMyEnum))] // only necessary for not referenced enums from other contracts\n[JsonSerializable(typeof(EMyEnumWithExplicitConfiguration))]\npublic partial class MyJsonSerializerContext : JsonSerializerContext\n{\n    static MyJsonSerializerContext()\n    {\n        // register generated converters to options\n        UsePolymorphicConverters(s_defaultOptions.Converters);\n        UseEnumConverters(s_defaultOptions.Converters);\n    }\n}\n'))),(0,a.kt)("h3",{id:"about"},"About"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Json Polymorphic generator")),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,a.kt)("p",null,"This is the CSharp Project that references ",(0,a.kt)("strong",{parentName:"p"},"jsonConverterSourceGenerator")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {13}",showLineNumbers:!0,"{13}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n  </ItemGroup>\n    <ItemGroup>\n        <PackageReference Include="Aviationexam.GeneratedJsonConverters.SourceGenerator" Version="0.1.11" PrivateAssets="all" />\n    </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n</Project>\n\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"jsonConverterSourceGenerator")," in ",(0,a.kt)("em",{parentName:"p"},"Program.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/polymorphism?pivots=dotnet-7-0\nusing JsonPolymorphicGeneratorDemo;\nusing System.Text.Json;\n\nPerson[] persons = new Person[2];\npersons[0] = new Student() { Name="Student Ignat"};\n\npersons[1] = new Teacher() { Name = "Teacher Ignat" };\n//JsonSerializerOptions opt = new ()\n//{\n//    WriteIndented = true\n//};\n//var ser = JsonSerializer.Serialize(persons, opt);\n\nvar ser = JsonSerializer.Serialize(persons, ProjectJsonSerializerContext.Default.Options);\n\nConsole.WriteLine(ser);\nvar p = JsonSerializer.Deserialize<Person[]>(ser,ProjectJsonSerializerContext.Default.Options);\nif(p != null)\nforeach (var item in p)\n{\n    Console.WriteLine(item.Data());\n}\n\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"jsonConverterSourceGenerator")," in ",(0,a.kt)("em",{parentName:"p"},"Person.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'namespace JsonPolymorphicGeneratorDemo;\n\n[Aviationexam.GeneratedJsonConverters.Attributes.JsonPolymorphic]\n[Aviationexam.GeneratedJsonConverters.Attributes.JsonDerivedType(typeof(Student))]\n[Aviationexam.GeneratedJsonConverters.Attributes.JsonDerivedType(typeof(Teacher))]\npublic abstract partial class Person\n{\n    \n    public string? Name { get; set; }\n    public abstract string Data();\n}\n\npublic class Teacher : Person\n{\n    public override string Data()\n    {\n        return "Class Teacher:" + Name;\n    }\n}\npublic class Student : Person\n{\n    public override string Data()\n    {\n        return "Class Student:" + Name;\n    }\n}\n\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\ProjectJsonSerializerContext.cs",label:"ProjectJsonSerializerContext.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"jsonConverterSourceGenerator")," in ",(0,a.kt)("em",{parentName:"p"},"ProjectJsonSerializerContext.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"//https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/polymorphism?pivots=dotnet-7-0\nusing JsonPolymorphicGeneratorDemo;\nusing System.Text.Json.Serialization;\n\n[JsonSourceGenerationOptions(\n    WriteIndented = true,\n    PropertyNamingPolicy = JsonKnownNamingPolicy.CamelCase,\n    GenerationMode = JsonSourceGenerationMode.Default\n)]\n[JsonSerializable(typeof(Person[]))]\n[JsonSerializable(typeof(Person))]\n[JsonSerializable(typeof(Student))]\n[JsonSerializable(typeof(Teacher))]\npublic partial class ProjectJsonSerializerContext : JsonSerializerContext\n{\n    static ProjectJsonSerializerContext()\n    {\n        foreach (var converter in GetPolymorphicConverters())\n        {\n            s_defaultOptions.Converters.Add(converter);\n        }\n    }\n}\n")))),(0,a.kt)("h3",{id:"generated-files"},"Generated Files"),(0,a.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.EnumJsonConverterIncrementalGenerator\\Attributes.DisableEnumJsonConverterAttribute.g.cs",label:"Attributes.DisableEnumJsonConverterAttribute.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// ReSharper disable once CheckNamespace\nnamespace Aviationexam.GeneratedJsonConverters.Attributes;\n\n/// <summary>\n/// When placed on an enum, indicates that generator should not report missing <see cref="EnumJsonConverterAttribute" />\n/// </summary>\n[System.AttributeUsage(System.AttributeTargets.Enum, AllowMultiple = false, Inherited = false)]\ninternal sealed class DisableEnumJsonConverterAttribute : System.Text.Json.Serialization.JsonAttribute\n{\n}\n\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.EnumJsonConverterIncrementalGenerator\\EnumDeserializationStrategy.g.cs",label:"EnumDeserializationStrategy.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// ReSharper disable once RedundantNullableDirective\n\n#nullable enable\n\nusing Aviationexam.GeneratedJsonConverters.Attributes;\nusing System;\n\nnamespace Aviationexam.GeneratedJsonConverters;\n\n[Flags]\n[DisableEnumJsonConverter]\ninternal enum EnumDeserializationStrategy : byte\n{\n    ProjectDefault = 0,\n    UseBackingType = 1 << 0,\n    UseEnumName = 1 << 1,\n}\n\n"))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.EnumJsonConverterIncrementalGenerator\\EnumJsonConverterAttribute.g.cs",label:"EnumJsonConverterAttribute.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"#nullable enable\n\nnamespace Aviationexam.GeneratedJsonConverters.Attributes;\n\n/// <summary>\n/// When placed on an enum, indicates that the type should be serialized using generated enum convertor.\n/// </summary>\n[System.AttributeUsage(System.AttributeTargets.Enum, AllowMultiple = false, Inherited = false)]\ninternal sealed class EnumJsonConverterAttribute : System.Text.Json.Serialization.JsonAttribute\n{\n    /// <summary>\n    /// Configure serialization strategy\n    /// </summary>\n    public EnumSerializationStrategy SerializationStrategy { get; set; } = EnumSerializationStrategy.ProjectDefault;\n\n    /// <summary>\n    /// Configure deserialization strategy\n    /// </summary>\n    public EnumDeserializationStrategy DeserializationStrategy { get; set; } = EnumDeserializationStrategy.ProjectDefault;\n}\n"))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.EnumJsonConverterIncrementalGenerator\\EnumJsonConvertor.g.cs",label:"EnumJsonConvertor.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// ReSharper disable once RedundantNullableDirective\n\n#nullable enable\n\nusing System;\nusing System.Diagnostics.CodeAnalysis;\nusing System.Runtime.CompilerServices;\nusing System.Text;\nusing System.Text.Json;\nusing System.Text.Json.Serialization;\n\nnamespace Aviationexam.GeneratedJsonConverters;\n\ninternal abstract class EnumJsonConvertor<T, TBackingType> : JsonConverter<T>\n    where T : struct, Enum\n    where TBackingType : struct\n{\n    protected abstract TypeCode BackingTypeTypeCode { get; }\n\n    protected abstract EnumDeserializationStrategy DeserializationStrategy { get; }\n\n    protected abstract EnumSerializationStrategy SerializationStrategy { get; }\n\n    public abstract bool TryToEnum(ReadOnlySpan<byte> enumName, out T value);\n\n    public abstract bool TryToEnum(TBackingType numericValue, out T value);\n\n    public abstract TBackingType ToBackingType(T value);\n\n    public abstract ReadOnlySpan<byte> ToFirstEnumName(T value);\n\n    public override T Read(\n        ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options\n    )\n    {\n        if (\n            reader.TokenType is JsonTokenType.String\n            && DeserializationStrategy.HasFlag(EnumDeserializationStrategy.UseEnumName)\n        )\n        {\n            var enumName = reader.ValueSpan;\n\n            if (TryToEnum(enumName, out var enumValue))\n            {\n                return enumValue;\n            }\n\n            var stringValue = Encoding.UTF8.GetString(enumName.ToArray());\n\n            throw new JsonException($"Undefined mapping of \'{stringValue}\' to enum \'{typeof(T).FullName}\'");\n        }\n\n        if (reader.TokenType is JsonTokenType.Number)\n        {\n            var numericValue = ReadAsNumber(ref reader);\n\n            if (numericValue.HasValue)\n            {\n                if (TryToEnum(numericValue.Value, out var enumValue))\n                {\n                    return enumValue;\n                }\n\n                throw new JsonException($"Undefined mapping of \'{numericValue}\' to enum \'{{enumFullName}}\'");\n            }\n        }\n\n        var value = Encoding.UTF8.GetString(reader.ValueSpan.ToArray());\n\n        throw new JsonException($"Unable to deserialize {value}(\'{reader.TokenType}\') into {typeof(T).Name}");\n    }\n\n    public override T ReadAsPropertyName(\n        ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options\n    )\n    {\n        if (\n            reader.TokenType is JsonTokenType.PropertyName\n            && DeserializationStrategy.HasFlag(EnumDeserializationStrategy.UseEnumName)\n        )\n        {\n            var enumName = reader.ValueSpan;\n\n            if (TryToEnum(enumName, out var enumValue))\n            {\n                return enumValue;\n            }\n        }\n\n        var value = Encoding.UTF8.GetString(reader.ValueSpan.ToArray());\n\n        if (\n            reader.TokenType is JsonTokenType.PropertyName\n            && DeserializationStrategy.HasFlag(EnumDeserializationStrategy.UseBackingType)\n        )\n        {\n            var numericValue = ParseAsNumber(value);\n\n            if (numericValue.HasValue)\n            {\n                if (TryToEnum(numericValue.Value, out var enumValue))\n                {\n                    return enumValue;\n                }\n            }\n        }\n\n        throw new JsonException($"Unable to deserialize {value}(\'{reader.TokenType}\') into {typeof(T).Name}");\n    }\n\n    private TBackingType? ReadAsNumber(ref Utf8JsonReader reader) => BackingTypeTypeCode switch\n    {\n        TypeCode.SByte => reader.GetSByte() is var numericValue ? Unsafe.As<sbyte, TBackingType>(ref numericValue) : null,\n        TypeCode.Byte => reader.GetByte() is var numericValue ? Unsafe.As<byte, TBackingType>(ref numericValue) : null,\n        TypeCode.Int16 => reader.GetInt16() is var numericValue ? Unsafe.As<short, TBackingType>(ref numericValue) : null,\n        TypeCode.UInt16 => reader.GetUInt16() is var numericValue ? Unsafe.As<ushort, TBackingType>(ref numericValue) : null,\n        TypeCode.Int32 => reader.GetInt32() is var numericValue ? Unsafe.As<int, TBackingType>(ref numericValue) : null,\n        TypeCode.UInt32 => reader.GetUInt32() is var numericValue ? Unsafe.As<uint, TBackingType>(ref numericValue) : null,\n        TypeCode.Int64 => reader.GetInt64() is var numericValue ? Unsafe.As<long, TBackingType>(ref numericValue) : null,\n        TypeCode.UInt64 => reader.GetUInt64() is var numericValue ? Unsafe.As<ulong, TBackingType>(ref numericValue) : null,\n        _ => throw new ArgumentOutOfRangeException(nameof(BackingTypeTypeCode), BackingTypeTypeCode, $"Unexpected TypeCode {BackingTypeTypeCode}")\n    };\n\n    private TBackingType? ParseAsNumber(\n        string value\n    ) => BackingTypeTypeCode switch\n    {\n        TypeCode.SByte => sbyte.TryParse(value, out var numericValue) ? Unsafe.As<sbyte, TBackingType>(ref numericValue) : null,\n        TypeCode.Byte => byte.TryParse(value, out var numericValue) ? Unsafe.As<byte, TBackingType>(ref numericValue) : null,\n        TypeCode.Int16 => short.TryParse(value, out var numericValue) ? Unsafe.As<short, TBackingType>(ref numericValue) : null,\n        TypeCode.UInt16 => ushort.TryParse(value, out var numericValue) ? Unsafe.As<ushort, TBackingType>(ref numericValue) : null,\n        TypeCode.Int32 => int.TryParse(value, out var numericValue) ? Unsafe.As<int, TBackingType>(ref numericValue) : null,\n        TypeCode.UInt32 => uint.TryParse(value, out var numericValue) ? Unsafe.As<uint, TBackingType>(ref numericValue) : null,\n        TypeCode.Int64 => long.TryParse(value, out var numericValue) ? Unsafe.As<long, TBackingType>(ref numericValue) : null,\n        TypeCode.UInt64 => ulong.TryParse(value, out var numericValue) ? Unsafe.As<ulong, TBackingType>(ref numericValue) : null,\n        _ => throw new ArgumentOutOfRangeException(nameof(BackingTypeTypeCode), BackingTypeTypeCode, $"Unexpected TypeCode {BackingTypeTypeCode}")\n    };\n\n    public override void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options)\n    {\n        if (SerializationStrategy is EnumSerializationStrategy.BackingType)\n        {\n            WriteAsBackingType(writer, value, options);\n        }\n        else if (SerializationStrategy is EnumSerializationStrategy.FirstEnumName)\n        {\n            WriteAsFirstEnumName(writer, value, options);\n        }\n        else\n        {\n            throw new ArgumentOutOfRangeException(nameof(SerializationStrategy), SerializationStrategy, "Unknown serialization strategy");\n        }\n    }\n\n    public override void WriteAsPropertyName(Utf8JsonWriter writer, T value, JsonSerializerOptions options)\n    {\n        if (SerializationStrategy is EnumSerializationStrategy.BackingType)\n        {\n            WriteAsPropertyNameAsBackingType(writer, value, options);\n        }\n        else if (SerializationStrategy is EnumSerializationStrategy.FirstEnumName)\n        {\n            WriteAsPropertyNameAsFirstEnumName(writer, value, options);\n        }\n        else\n        {\n            throw new ArgumentOutOfRangeException(nameof(SerializationStrategy), SerializationStrategy, "Unknown serialization strategy");\n        }\n    }\n\n    private void WriteAsBackingType(\n        Utf8JsonWriter writer,\n        T value,\n        [SuppressMessage("ReSharper", "UnusedParameter.Local")]\n        JsonSerializerOptions options\n    )\n    {\n        var numericValue = ToBackingType(value);\n\n        switch (BackingTypeTypeCode)\n        {\n            case TypeCode.SByte:\n                writer.WriteNumberValue(Unsafe.As<TBackingType, sbyte>(ref numericValue));\n                break;\n            case TypeCode.Byte:\n                writer.WriteNumberValue(Unsafe.As<TBackingType, byte>(ref numericValue));\n                break;\n            case TypeCode.Int16:\n                writer.WriteNumberValue(Unsafe.As<TBackingType, short>(ref numericValue));\n                break;\n            case TypeCode.UInt16:\n                writer.WriteNumberValue(Unsafe.As<TBackingType, ushort>(ref numericValue));\n                break;\n            case TypeCode.Int32:\n                writer.WriteNumberValue(Unsafe.As<TBackingType, int>(ref numericValue));\n                break;\n            case TypeCode.UInt32:\n                writer.WriteNumberValue(Unsafe.As<TBackingType, uint>(ref numericValue));\n                break;\n            case TypeCode.Int64:\n                writer.WriteNumberValue(Unsafe.As<TBackingType, long>(ref numericValue));\n                break;\n            case TypeCode.UInt64:\n                writer.WriteNumberValue(Unsafe.As<TBackingType, ulong>(ref numericValue));\n                break;\n            default:\n                throw new ArgumentOutOfRangeException(nameof(BackingTypeTypeCode), BackingTypeTypeCode, $"Unexpected TypeCode {BackingTypeTypeCode}");\n        }\n    }\n\n    private void WriteAsPropertyNameAsBackingType(\n        Utf8JsonWriter writer,\n        T value,\n        [SuppressMessage("ReSharper", "UnusedParameter.Local")]\n        JsonSerializerOptions options\n    )\n    {\n        var numericValue = ToBackingType(value);\n\n        writer.WritePropertyName($"{numericValue}");\n    }\n\n    private void WriteAsFirstEnumName(\n        Utf8JsonWriter writer,\n        T value,\n        [SuppressMessage("ReSharper", "UnusedParameter.Local")]\n        JsonSerializerOptions options\n    )\n    {\n        var enumValue = ToFirstEnumName(value);\n\n        writer.WriteStringValue(enumValue);\n    }\n\n    private void WriteAsPropertyNameAsFirstEnumName(\n        Utf8JsonWriter writer,\n        T value,\n        [SuppressMessage("ReSharper", "UnusedParameter.Local")]\n        JsonSerializerOptions options\n    )\n    {\n        var enumValue = ToFirstEnumName(value);\n\n        writer.WritePropertyName(enumValue);\n    }\n}\n\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.EnumJsonConverterIncrementalGenerator\\EnumSerializationStrategy.g.cs",label:"EnumSerializationStrategy.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// ReSharper disable once RedundantNullableDirective\n\n#nullable enable\n\nusing Aviationexam.GeneratedJsonConverters.Attributes;\n\nnamespace Aviationexam.GeneratedJsonConverters;\n\n[DisableEnumJsonConverter]\ninternal enum EnumSerializationStrategy : byte\n{\n    ProjectDefault,\n    BackingType,\n    FirstEnumName,\n}\n\n"))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.JsonPolymorphicConverterIncrementalGenerator\\DiscriminatorStruct.g.cs",label:"DiscriminatorStruct.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// ReSharper disable once RedundantNullableDirective\n\n#nullable enable\n\nnamespace Aviationexam.GeneratedJsonConverters;\n\ninternal readonly struct DiscriminatorStruct<T> : IDiscriminatorStruct\n{\n    public T Value { get; init; }\n\n    public DiscriminatorStruct(T value)\n    {\n        Value = value;\n    }\n}\n\n"))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.JsonPolymorphicConverterIncrementalGenerator\\IDiscriminatorStruct.g.cs",label:"IDiscriminatorStruct.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// ReSharper disable once RedundantNullableDirective\n\n#nullable enable\n\nnamespace Aviationexam.GeneratedJsonConverters;\n\ninternal interface IDiscriminatorStruct\n{\n}\n\n"))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.JsonPolymorphicConverterIncrementalGenerator\\JsonDerivedTypeAttribute.g.cs",label:"JsonDerivedTypeAttribute.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'#nullable enable\n\nnamespace Aviationexam.GeneratedJsonConverters.Attributes;\n\n/// <summary>\n/// This is a copy of System.Text.Json.Serialization.JsonDerivedTypeAttribute.\n/// It\'s purpose is to replace this attribute to silence System.Text.Json.Serialization.Metadata.PolymorphicTypeResolver{ThrowHelper.ThrowNotSupportedException_BaseConverterDoesNotSupportMetadata}\n///\n/// When placed on a type declaration, indicates that the specified subtype should be opted into polymorphic serialization.\n/// </summary>\n[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple = true, Inherited = false)]\ninternal class JsonDerivedTypeAttribute : System.Text.Json.Serialization.JsonAttribute\n{\n    /// <summary>\n    /// Initializes a new attribute with specified parameters.\n    /// </summary>\n    /// <param name="derivedType">A derived type that should be supported in polymorphic serialization of the declared based type.</param>\n    public JsonDerivedTypeAttribute(System.Type derivedType)\n    {\n        DerivedType = derivedType;\n    }\n\n    /// <summary>\n    /// Initializes a new attribute with specified parameters.\n    /// </summary>\n    /// <param name="derivedType">A derived type that should be supported in polymorphic serialization of the declared base type.</param>\n    /// <param name="typeDiscriminator">The type discriminator identifier to be used for the serialization of the subtype.</param>\n    public JsonDerivedTypeAttribute(System.Type derivedType, string typeDiscriminator)\n    {\n        DerivedType = derivedType;\n        TypeDiscriminator = typeDiscriminator;\n    }\n\n    /// <summary>\n    /// Initializes a new attribute with specified parameters.\n    /// </summary>\n    /// <param name="derivedType">A derived type that should be supported in polymorphic serialization of the declared base type.</param>\n    /// <param name="typeDiscriminator">The type discriminator identifier to be used for the serialization of the subtype.</param>\n    public JsonDerivedTypeAttribute(System.Type derivedType, int typeDiscriminator)\n    {\n        DerivedType = derivedType;\n        TypeDiscriminator = typeDiscriminator;\n    }\n\n    /// <summary>\n    /// A derived type that should be supported in polymorphic serialization of the declared base type.\n    /// </summary>\n    public System.Type DerivedType { get; }\n\n    /// <summary>\n    /// The type discriminator identifier to be used for the serialization of the subtype.\n    /// </summary>\n    public object? TypeDiscriminator { get; }\n}\n\n[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple = true, Inherited = false)]\ninternal class JsonDerivedTypeAttribute<TDerivedType> : JsonDerivedTypeAttribute\n{\n    /// <summary>\n    /// Initializes a new attribute with specified parameters.\n    /// </summary>\n    public JsonDerivedTypeAttribute() : base(typeof(TDerivedType))\n    {\n    }\n\n    /// <summary>\n    /// Initializes a new attribute with specified parameters.\n    /// </summary>\n    /// <param name="typeDiscriminator">The type discriminator identifier to be used for the serialization of the subtype.</param>\n    public JsonDerivedTypeAttribute(string typeDiscriminator) : base(typeof(TDerivedType), typeDiscriminator)\n    {\n    }\n\n    /// <summary>\n    /// Initializes a new attribute with specified parameters.\n    /// </summary>\n    /// <param name="typeDiscriminator">The type discriminator identifier to be used for the serialization of the subtype.</param>\n    public JsonDerivedTypeAttribute(int typeDiscriminator) : base(typeof(TDerivedType), typeDiscriminator)\n    {\n    }\n}\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.JsonPolymorphicConverterIncrementalGenerator\\JsonPolymorphicAttribute.g.cs",label:"JsonPolymorphicAttribute.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"#nullable enable\n\nnamespace Aviationexam.GeneratedJsonConverters.Attributes;\n\n/// <summary>\n/// This is a copy of System.Text.Json.Serialization.JsonPolymorphicAttribute.\n/// It's purpose is to replace this attribute to silence System.Text.Json.Serialization.Metadata.PolymorphicTypeResolver{ThrowHelper.ThrowNotSupportedException_BaseConverterDoesNotSupportMetadata}\n///\n/// When placed on a type, indicates that the type should be serialized polymorphically.\n/// </summary>\n[System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple = false, Inherited = false)]\ninternal sealed class JsonPolymorphicAttribute : System.Text.Json.Serialization.JsonAttribute\n{\n    /// <summary>\n    /// Gets or sets a custom type discriminator property name for the polymorhic type.\n    /// Uses the default '$type' property name if left unset.\n    /// </summary>\n    public string? TypeDiscriminatorPropertyName { get; set; }\n\n    /// <summary>\n    /// Gets or sets the behavior when serializing an undeclared derived runtime type.\n    /// </summary>\n    public System.Text.Json.Serialization.JsonUnknownDerivedTypeHandling UnknownDerivedTypeHandling { get; set; }\n\n    /// <summary>\n    /// When set to <see langword=\"true\"/>, instructs the deserializer to ignore any\n    /// unrecognized type discriminator id's and reverts to the contract of the base type.\n    /// Otherwise, it will fail the deserialization.\n    /// </summary>\n    public bool IgnoreUnrecognizedTypeDiscriminators { get; set; }\n}\n"))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.JsonPolymorphicConverterIncrementalGenerator\\PersonJsonPolymorphicConverter.g.cs",label:"PersonJsonPolymorphicConverter.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'#nullable enable\n\nnamespace PolymorphicGlobalNamespace;\n\ninternal class PersonJsonPolymorphicConverter : Aviationexam.GeneratedJsonConverters.PolymorphicJsonConvertor<global::JsonPolymorphicGeneratorDemo.Person>\n{\n    protected override System.ReadOnlySpan<byte> GetDiscriminatorPropertyName() => "$type"u8;\n\n    protected override System.Type GetTypeForDiscriminator(\n        Aviationexam.GeneratedJsonConverters.IDiscriminatorStruct discriminator\n    ) => discriminator switch\n    {\n        Aviationexam.GeneratedJsonConverters.DiscriminatorStruct<string> { Value: "Student" } => typeof(JsonPolymorphicGeneratorDemo.Student),\n        Aviationexam.GeneratedJsonConverters.DiscriminatorStruct<string> { Value: "Teacher" } => typeof(JsonPolymorphicGeneratorDemo.Teacher),\n\n        _ => throw new System.ArgumentOutOfRangeException(nameof(discriminator), discriminator, null),\n    };\n\n    protected override Aviationexam.GeneratedJsonConverters.IDiscriminatorStruct GetDiscriminatorForType(\n        System.Type type\n    )\n    {\n        if (type == typeof(JsonPolymorphicGeneratorDemo.Student))\n        {\n            return new Aviationexam.GeneratedJsonConverters.DiscriminatorStruct<string>("Student");\n        }\n        if (type == typeof(JsonPolymorphicGeneratorDemo.Teacher))\n        {\n            return new Aviationexam.GeneratedJsonConverters.DiscriminatorStruct<string>("Teacher");\n        }\n\n        throw new System.ArgumentOutOfRangeException(nameof(type), type, null);\n    }\n}\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.JsonPolymorphicConverterIncrementalGenerator\\PolymorphicJsonConvertor.g.cs",label:"PolymorphicJsonConvertor.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// ReSharper disable once RedundantNullableDirective\n\n#nullable enable\n\nusing System;\nusing System.Text;\nusing System.Text.Json;\nusing System.Text.Json.Serialization;\n\nnamespace Aviationexam.GeneratedJsonConverters;\n\ninternal abstract class PolymorphicJsonConvertor<T> : JsonConverter<T> where T : class\n{\n    private readonly Type _polymorphicType = typeof(T);\n\n    protected abstract ReadOnlySpan<byte> GetDiscriminatorPropertyName();\n\n    protected abstract Type GetTypeForDiscriminator(IDiscriminatorStruct discriminator);\n\n    protected abstract IDiscriminatorStruct GetDiscriminatorForType(Type type);\n\n    public override T? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)\n    {\n        using var jsonDocument = JsonDocument.ParseValue(ref reader);\n\n        var discriminatorPropertyName = GetDiscriminatorPropertyName();\n\n        var discriminatorProperty = jsonDocument.RootElement\n            .GetProperty(discriminatorPropertyName);\n\n        IDiscriminatorStruct? typeDiscriminator = null;\n        if (discriminatorProperty.ValueKind is JsonValueKind.String)\n        {\n            typeDiscriminator = new DiscriminatorStruct<string>(discriminatorProperty.GetString()!);\n        }\n        else if (discriminatorProperty.ValueKind is JsonValueKind.Number)\n        {\n            typeDiscriminator = new DiscriminatorStruct<int>(discriminatorProperty.GetInt32());\n        }\n\n        if (typeDiscriminator is null)\n        {\n            var discriminatorPropertyNameString = Encoding.UTF8.GetString(discriminatorPropertyName.ToArray());\n\n            throw new JsonException($\"Not found discriminator property '{discriminatorPropertyNameString}' for type {_polymorphicType}\");\n        }\n\n        var type = GetTypeForDiscriminator(typeDiscriminator);\n\n        return (T?) jsonDocument.Deserialize(type, options);\n    }\n\n    public override void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options)\n    {\n        var instanceType = value.GetType();\n\n        writer.WriteStartObject();\n\n        var discriminatorPropertyName = GetDiscriminatorPropertyName();\n        var discriminatorValue = GetDiscriminatorForType(instanceType);\n\n        if (discriminatorValue is DiscriminatorStruct<string> discriminatorString)\n        {\n            writer.WriteString(discriminatorPropertyName, discriminatorString.Value);\n        }\n        else if (discriminatorValue is DiscriminatorStruct<int> discriminatorInt)\n        {\n            writer.WriteNumber(discriminatorPropertyName, discriminatorInt.Value);\n        }\n\n        var typeInfo = options.GetTypeInfo(instanceType);\n\n        foreach (var p in typeInfo.Properties)\n        {\n            if (p.Get is null)\n            {\n                continue;\n            }\n\n            writer.WritePropertyName(p.Name);\n            JsonSerializer.Serialize(writer, p.Get(value), p.PropertyType, options);\n        }\n\n        writer.WriteEndObject();\n    }\n}\n\n"))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\Aviationexam.GeneratedJsonConverters.SourceGenerator\\Aviationexam.GeneratedJsonConverters.SourceGenerator.JsonPolymorphicConverterIncrementalGenerator\\ProjectJsonSerializerContext.g.cs",label:"ProjectJsonSerializerContext.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"#nullable enable\n\npublic partial class ProjectJsonSerializerContext\n{\n    public static System.Collections.Generic.IReadOnlyCollection<System.Text.Json.Serialization.JsonConverter> GetPolymorphicConverters() => new System.Text.Json.Serialization.JsonConverter[]\n    {\n        new PolymorphicGlobalNamespace.PersonJsonPolymorphicConverter(),\n    };\n\n    public static void UsePolymorphicConverters(\n        System.Collections.Generic.ICollection<System.Text.Json.Serialization.JsonConverter> optionsConverters\n    )\n    {\n        foreach (var converter in GetPolymorphicConverters())\n        {\n            optionsConverters.Add(converter);\n        }\n    }\n}\n"))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\System.Text.Json.SourceGeneration\\System.Text.Json.SourceGeneration.JsonSourceGenerator\\ProjectJsonSerializerContext.g.cs",label:"ProjectJsonSerializerContext.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n    \n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Text.Json.SourceGeneration", "7.0.9.1910")]\n    public partial class ProjectJsonSerializerContext\n    {\n        \n        private static global::System.Text.Json.JsonSerializerOptions s_defaultOptions { get; } = new global::System.Text.Json.JsonSerializerOptions()\n        {\n            DefaultIgnoreCondition = global::System.Text.Json.Serialization.JsonIgnoreCondition.Never,\n            IgnoreReadOnlyFields = false,\n            IgnoreReadOnlyProperties = false,\n            IncludeFields = false,\n            WriteIndented = true,\n                    PropertyNamingPolicy = global::System.Text.Json.JsonNamingPolicy.CamelCase\n        };\n        \n        private static global::ProjectJsonSerializerContext? s_defaultContext;\n        \n        /// <summary>\n        /// The default <see cref="global::System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="global::System.Text.Json.JsonSerializerOptions"/> instance.\n        /// </summary>\n        public static global::ProjectJsonSerializerContext Default => s_defaultContext ??= new global::ProjectJsonSerializerContext(new global::System.Text.Json.JsonSerializerOptions(s_defaultOptions));\n        \n        /// <summary>\n        /// The source-generated options associated with this context.\n        /// </summary>\n        protected override global::System.Text.Json.JsonSerializerOptions? GeneratedSerializerOptions { get; } = s_defaultOptions;\n        \n        /// <inheritdoc/>\n        public ProjectJsonSerializerContext() : base(null)\n        {\n        }\n        \n        /// <inheritdoc/>\n        public ProjectJsonSerializerContext(global::System.Text.Json.JsonSerializerOptions options) : base(options)\n        {\n        }\n        \n        private static global::System.Text.Json.Serialization.JsonConverter? GetRuntimeProvidedCustomConverter(global::System.Text.Json.JsonSerializerOptions options, global::System.Type type)\n        {\n            global::System.Collections.Generic.IList<global::System.Text.Json.Serialization.JsonConverter> converters = options.Converters;\n        \n            for (int i = 0; i < converters.Count; i++)\n            {\n                global::System.Text.Json.Serialization.JsonConverter? converter = converters[i];\n        \n                if (converter.CanConvert(type))\n                {\n                    if (converter is global::System.Text.Json.Serialization.JsonConverterFactory factory)\n                    {\n                        converter = factory.CreateConverter(type, options);\n                        if (converter == null || converter is global::System.Text.Json.Serialization.JsonConverterFactory)\n                        {\n                            throw new global::System.InvalidOperationException(string.Format("The converter \'{0}\' cannot return null or a JsonConverterFactory instance.", factory.GetType()));\n                        }\n                    }\n        \n                    return converter;\n                }\n            }\n        \n            return null;\n        }\n    }\n\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\System.Text.Json.SourceGeneration\\System.Text.Json.SourceGeneration.JsonSourceGenerator\\ProjectJsonSerializerContext.GetJsonTypeInfo.g.cs",label:"ProjectJsonSerializerContext.GetJsonTypeInfo.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n    public partial class ProjectJsonSerializerContext: global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver\n    {\n        /// <inheritdoc/>\n        public override global::System.Text.Json.Serialization.Metadata.JsonTypeInfo GetTypeInfo(global::System.Type type)\n        {\n            if (type == typeof(global::JsonPolymorphicGeneratorDemo.Person[]))\n            {\n                return this.PersonArray;\n            }\n        \n            if (type == typeof(global::JsonPolymorphicGeneratorDemo.Person))\n            {\n                return this.Person;\n            }\n        \n            if (type == typeof(global::System.String))\n            {\n                return this.String;\n            }\n        \n            if (type == typeof(global::JsonPolymorphicGeneratorDemo.Student))\n            {\n                return this.Student;\n            }\n        \n            if (type == typeof(global::JsonPolymorphicGeneratorDemo.Teacher))\n            {\n                return this.Teacher;\n            }\n        \n            return null!;\n        }\n        \n        global::System.Text.Json.Serialization.Metadata.JsonTypeInfo? global::System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver.GetTypeInfo(global::System.Type type, global::System.Text.Json.JsonSerializerOptions options)\n        {\n            if (type == typeof(global::JsonPolymorphicGeneratorDemo.Person[]))\n            {\n                return Create_PersonArray(options, makeReadOnly: false);\n            }\n        \n            if (type == typeof(global::JsonPolymorphicGeneratorDemo.Person))\n            {\n                return Create_Person(options, makeReadOnly: false);\n            }\n        \n            if (type == typeof(global::System.String))\n            {\n                return Create_String(options, makeReadOnly: false);\n            }\n        \n            if (type == typeof(global::JsonPolymorphicGeneratorDemo.Student))\n            {\n                return Create_Student(options, makeReadOnly: false);\n            }\n        \n            if (type == typeof(global::JsonPolymorphicGeneratorDemo.Teacher))\n            {\n                return Create_Teacher(options, makeReadOnly: false);\n            }\n        \n            return null;\n        }\n        \n    }\n\n"))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\System.Text.Json.SourceGeneration\\System.Text.Json.SourceGeneration.JsonSourceGenerator\\ProjectJsonSerializerContext.Person.g.cs",label:"ProjectJsonSerializerContext.Person.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n    public partial class ProjectJsonSerializerContext\n    {\n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Person>? _Person;\n        /// <summary>\n        /// Defines the source generated JSON serialization contract metadata for a given type.\n        /// </summary>\n        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Person> Person\n        {\n            get => _Person ??= Create_Person(Options, makeReadOnly: true);\n        }\n        \n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Person> Create_Person(global::System.Text.Json.JsonSerializerOptions options, bool makeReadOnly)\n        {\n            global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Person>? jsonTypeInfo = null;\n            global::System.Text.Json.Serialization.JsonConverter? customConverter;\n            if (options.Converters.Count > 0 && (customConverter = GetRuntimeProvidedCustomConverter(options, typeof(global::JsonPolymorphicGeneratorDemo.Person))) != null)\n            {\n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::JsonPolymorphicGeneratorDemo.Person>(options, customConverter);\n            }\n            else\n            {\n                global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::JsonPolymorphicGeneratorDemo.Person> objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::JsonPolymorphicGeneratorDemo.Person>()\n                {\n                    ObjectCreator = null,\n                    ObjectWithParameterizedConstructorCreator = null,\n                    PropertyMetadataInitializer = _ => PersonPropInit(options),\n                    ConstructorParameterMetadataInitializer = null,\n                    NumberHandling = default,\n                    SerializeHandler = PersonSerializeHandler\n                };\n        \n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::JsonPolymorphicGeneratorDemo.Person>(options, objectInfo);\n            }\n        \n            if (makeReadOnly)\n            {\n                jsonTypeInfo.MakeReadOnly();\n            }\n        \n            return jsonTypeInfo;\n        }\n        \n        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] PersonPropInit(global::System.Text.Json.JsonSerializerOptions options)\n        {\n            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[1];\n        \n            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String> info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String>()\n            {\n                IsProperty = true,\n                IsPublic = true,\n                IsVirtual = false,\n                DeclaringType = typeof(global::JsonPolymorphicGeneratorDemo.Person),\n                Converter = null,\n                Getter = static (obj) => ((global::JsonPolymorphicGeneratorDemo.Person)obj).Name!,\n                Setter = static (obj, value) => ((global::JsonPolymorphicGeneratorDemo.Person)obj).Name = value!,\n                IgnoreCondition = null,\n                HasJsonInclude = false,\n                IsExtensionData = false,\n                NumberHandling = default,\n                PropertyName = "Name",\n                JsonPropertyName = null\n            };\n        \n            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo propertyInfo0 = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.String>(options, info0);\n            properties[0] = propertyInfo0;\n        \n            return properties;\n        }\n        \n        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance\n        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.\n        private void PersonSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::JsonPolymorphicGeneratorDemo.Person? value)\n        {\n            if (value == null)\n            {\n                writer.WriteNullValue();\n                return;\n            }\n        \n            writer.WriteStartObject();\n            writer.WriteString(PropName_name, value.Name);\n        \n            writer.WriteEndObject();\n        }\n    }\n\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\System.Text.Json.SourceGeneration\\System.Text.Json.SourceGeneration.JsonSourceGenerator\\ProjectJsonSerializerContext.PersonArray.g.cs",label:"ProjectJsonSerializerContext.PersonArray.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n    public partial class ProjectJsonSerializerContext\n    {\n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Person[]>? _PersonArray;\n        /// <summary>\n        /// Defines the source generated JSON serialization contract metadata for a given type.\n        /// </summary>\n        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Person[]> PersonArray\n        {\n            get => _PersonArray ??= Create_PersonArray(Options, makeReadOnly: true);\n        }\n        \n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Person[]> Create_PersonArray(global::System.Text.Json.JsonSerializerOptions options, bool makeReadOnly)\n        {\n            global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Person[]>? jsonTypeInfo = null;\n            global::System.Text.Json.Serialization.JsonConverter? customConverter;\n            if (options.Converters.Count > 0 && (customConverter = GetRuntimeProvidedCustomConverter(options, typeof(global::JsonPolymorphicGeneratorDemo.Person[]))) != null)\n            {\n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::JsonPolymorphicGeneratorDemo.Person[]>(options, customConverter);\n            }\n            else\n            {\n                global::System.Text.Json.Serialization.Metadata.JsonCollectionInfoValues<global::JsonPolymorphicGeneratorDemo.Person[]> info = new global::System.Text.Json.Serialization.Metadata.JsonCollectionInfoValues<global::JsonPolymorphicGeneratorDemo.Person[]>()\n                {\n                    ObjectCreator = null,\n                    NumberHandling = default,\n                    SerializeHandler = PersonArraySerializeHandler\n                };\n        \n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateArrayInfo<global::JsonPolymorphicGeneratorDemo.Person>(options, info);\n        \n            }\n        \n            if (makeReadOnly)\n            {\n                jsonTypeInfo.MakeReadOnly();\n            }\n        \n            return jsonTypeInfo;\n        }\n        \n        \n        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance\n        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.\n        private void PersonArraySerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::JsonPolymorphicGeneratorDemo.Person[]? value)\n        {\n            if (value == null)\n            {\n                writer.WriteNullValue();\n                return;\n            }\n        \n            writer.WriteStartArray();\n        \n            for (int i = 0; i < value.Length; i++)\n            {\n                PersonSerializeHandler(writer, value[i]!);\n            }\n        \n            writer.WriteEndArray();\n        }\n    }\n\n"))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\System.Text.Json.SourceGeneration\\System.Text.Json.SourceGeneration.JsonSourceGenerator\\ProjectJsonSerializerContext.PropertyNames.g.cs",label:"ProjectJsonSerializerContext.PropertyNames.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n    public partial class ProjectJsonSerializerContext\n    {\n        \n        private static readonly global::System.Text.Json.JsonEncodedText PropName_name = global::System.Text.Json.JsonEncodedText.Encode("name");\n    }\n\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\System.Text.Json.SourceGeneration\\System.Text.Json.SourceGeneration.JsonSourceGenerator\\ProjectJsonSerializerContext.String.g.cs",label:"ProjectJsonSerializerContext.String.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n    public partial class ProjectJsonSerializerContext\n    {\n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.String>? _String;\n        /// <summary>\n        /// Defines the source generated JSON serialization contract metadata for a given type.\n        /// </summary>\n        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.String> String\n        {\n            get => _String ??= Create_String(Options, makeReadOnly: true);\n        }\n        \n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.String> Create_String(global::System.Text.Json.JsonSerializerOptions options, bool makeReadOnly)\n        {\n            global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::System.String>? jsonTypeInfo = null;\n            global::System.Text.Json.Serialization.JsonConverter? customConverter;\n            if (options.Converters.Count > 0 && (customConverter = GetRuntimeProvidedCustomConverter(options, typeof(global::System.String))) != null)\n            {\n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::System.String>(options, customConverter);\n            }\n            else\n            {\n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::System.String>(options, global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.StringConverter);\n            }\n        \n            if (makeReadOnly)\n            {\n                jsonTypeInfo.MakeReadOnly();\n            }\n        \n            return jsonTypeInfo;\n        }\n        \n    }\n\n"))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\System.Text.Json.SourceGeneration\\System.Text.Json.SourceGeneration.JsonSourceGenerator\\ProjectJsonSerializerContext.Student.g.cs",label:"ProjectJsonSerializerContext.Student.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n    public partial class ProjectJsonSerializerContext\n    {\n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Student>? _Student;\n        /// <summary>\n        /// Defines the source generated JSON serialization contract metadata for a given type.\n        /// </summary>\n        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Student> Student\n        {\n            get => _Student ??= Create_Student(Options, makeReadOnly: true);\n        }\n        \n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Student> Create_Student(global::System.Text.Json.JsonSerializerOptions options, bool makeReadOnly)\n        {\n            global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Student>? jsonTypeInfo = null;\n            global::System.Text.Json.Serialization.JsonConverter? customConverter;\n            if (options.Converters.Count > 0 && (customConverter = GetRuntimeProvidedCustomConverter(options, typeof(global::JsonPolymorphicGeneratorDemo.Student))) != null)\n            {\n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::JsonPolymorphicGeneratorDemo.Student>(options, customConverter);\n            }\n            else\n            {\n                global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::JsonPolymorphicGeneratorDemo.Student> objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::JsonPolymorphicGeneratorDemo.Student>()\n                {\n                    ObjectCreator = static () => new global::JsonPolymorphicGeneratorDemo.Student(),\n                    ObjectWithParameterizedConstructorCreator = null,\n                    PropertyMetadataInitializer = _ => StudentPropInit(options),\n                    ConstructorParameterMetadataInitializer = null,\n                    NumberHandling = default,\n                    SerializeHandler = StudentSerializeHandler\n                };\n        \n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::JsonPolymorphicGeneratorDemo.Student>(options, objectInfo);\n            }\n        \n            if (makeReadOnly)\n            {\n                jsonTypeInfo.MakeReadOnly();\n            }\n        \n            return jsonTypeInfo;\n        }\n        \n        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] StudentPropInit(global::System.Text.Json.JsonSerializerOptions options)\n        {\n            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[1];\n        \n            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String> info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String>()\n            {\n                IsProperty = true,\n                IsPublic = true,\n                IsVirtual = false,\n                DeclaringType = typeof(global::JsonPolymorphicGeneratorDemo.Person),\n                Converter = null,\n                Getter = static (obj) => ((global::JsonPolymorphicGeneratorDemo.Person)obj).Name!,\n                Setter = static (obj, value) => ((global::JsonPolymorphicGeneratorDemo.Person)obj).Name = value!,\n                IgnoreCondition = null,\n                HasJsonInclude = false,\n                IsExtensionData = false,\n                NumberHandling = default,\n                PropertyName = "Name",\n                JsonPropertyName = null\n            };\n        \n            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo propertyInfo0 = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.String>(options, info0);\n            properties[0] = propertyInfo0;\n        \n            return properties;\n        }\n        \n        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance\n        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.\n        private void StudentSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::JsonPolymorphicGeneratorDemo.Student? value)\n        {\n            if (value == null)\n            {\n                writer.WriteNullValue();\n                return;\n            }\n        \n            writer.WriteStartObject();\n            writer.WriteString(PropName_name, value.Name);\n        \n            writer.WriteEndObject();\n        }\n    }\n\n'))),(0,a.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\jscsg\\src\\poly\\obj\\GX\\System.Text.Json.SourceGeneration\\System.Text.Json.SourceGeneration.JsonSourceGenerator\\ProjectJsonSerializerContext.Teacher.g.cs",label:"ProjectJsonSerializerContext.Teacher.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n\n#nullable enable annotations\n#nullable disable warnings\n\n// Suppress warnings about [Obsolete] member usage in generated code.\n#pragma warning disable CS0618\n    public partial class ProjectJsonSerializerContext\n    {\n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Teacher>? _Teacher;\n        /// <summary>\n        /// Defines the source generated JSON serialization contract metadata for a given type.\n        /// </summary>\n        public global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Teacher> Teacher\n        {\n            get => _Teacher ??= Create_Teacher(Options, makeReadOnly: true);\n        }\n        \n        private global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Teacher> Create_Teacher(global::System.Text.Json.JsonSerializerOptions options, bool makeReadOnly)\n        {\n            global::System.Text.Json.Serialization.Metadata.JsonTypeInfo<global::JsonPolymorphicGeneratorDemo.Teacher>? jsonTypeInfo = null;\n            global::System.Text.Json.Serialization.JsonConverter? customConverter;\n            if (options.Converters.Count > 0 && (customConverter = GetRuntimeProvidedCustomConverter(options, typeof(global::JsonPolymorphicGeneratorDemo.Teacher))) != null)\n            {\n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateValueInfo<global::JsonPolymorphicGeneratorDemo.Teacher>(options, customConverter);\n            }\n            else\n            {\n                global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::JsonPolymorphicGeneratorDemo.Teacher> objectInfo = new global::System.Text.Json.Serialization.Metadata.JsonObjectInfoValues<global::JsonPolymorphicGeneratorDemo.Teacher>()\n                {\n                    ObjectCreator = static () => new global::JsonPolymorphicGeneratorDemo.Teacher(),\n                    ObjectWithParameterizedConstructorCreator = null,\n                    PropertyMetadataInitializer = _ => TeacherPropInit(options),\n                    ConstructorParameterMetadataInitializer = null,\n                    NumberHandling = default,\n                    SerializeHandler = TeacherSerializeHandler\n                };\n        \n                jsonTypeInfo = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreateObjectInfo<global::JsonPolymorphicGeneratorDemo.Teacher>(options, objectInfo);\n            }\n        \n            if (makeReadOnly)\n            {\n                jsonTypeInfo.MakeReadOnly();\n            }\n        \n            return jsonTypeInfo;\n        }\n        \n        private static global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] TeacherPropInit(global::System.Text.Json.JsonSerializerOptions options)\n        {\n            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[] properties = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo[1];\n        \n            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String> info0 = new global::System.Text.Json.Serialization.Metadata.JsonPropertyInfoValues<global::System.String>()\n            {\n                IsProperty = true,\n                IsPublic = true,\n                IsVirtual = false,\n                DeclaringType = typeof(global::JsonPolymorphicGeneratorDemo.Person),\n                Converter = null,\n                Getter = static (obj) => ((global::JsonPolymorphicGeneratorDemo.Person)obj).Name!,\n                Setter = static (obj, value) => ((global::JsonPolymorphicGeneratorDemo.Person)obj).Name = value!,\n                IgnoreCondition = null,\n                HasJsonInclude = false,\n                IsExtensionData = false,\n                NumberHandling = default,\n                PropertyName = "Name",\n                JsonPropertyName = null\n            };\n        \n            global::System.Text.Json.Serialization.Metadata.JsonPropertyInfo propertyInfo0 = global::System.Text.Json.Serialization.Metadata.JsonMetadataServices.CreatePropertyInfo<global::System.String>(options, info0);\n            properties[0] = propertyInfo0;\n        \n            return properties;\n        }\n        \n        // Intentionally not a static method because we create a delegate to it. Invoking delegates to instance\n        // methods is almost as fast as virtual calls. Static methods need to go through a shuffle thunk.\n        private void TeacherSerializeHandler(global::System.Text.Json.Utf8JsonWriter writer, global::JsonPolymorphicGeneratorDemo.Teacher? value)\n        {\n            if (value == null)\n            {\n                writer.WriteNullValue();\n                return;\n            }\n        \n            writer.WriteStartObject();\n            writer.WriteString(PropName_name, value.Name);\n        \n            writer.WriteEndObject();\n        }\n    }\n\n')))),(0,a.kt)("h2",{id:"usefull"},"Usefull"),(0,a.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{target:"_blank",href:t(47859).Z},"Download Example project jsonConverterSourceGenerator "))),(0,a.kt)("h3",{id:"share-jsonconvertersourcegenerator"},"Share jsonConverterSourceGenerator"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FjsonConverterSourceGenerator&quote=jsonConverterSourceGenerator",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FjsonConverterSourceGenerator&text=jsonConverterSourceGenerator:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FjsonConverterSourceGenerator",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FjsonConverterSourceGenerator&title=jsonConverterSourceGenerator",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FjsonConverterSourceGenerator&title=jsonConverterSourceGenerator&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FjsonConverterSourceGenerator",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/jsonConverterSourceGenerator"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/jsonConverterSourceGenerator")),(0,a.kt)("h2",{id:"in-the-same-category-serializer"},"In the same category (Serializer)"),(0,a.kt)("h3",{id:"jsonpolymorphicgenerator"},(0,a.kt)("a",{parentName:"h3",href:"/docs/JsonPolymorphicGenerator"},"JsonPolymorphicGenerator")),(0,a.kt)("h3",{id:"protobufsourcegenerator"},(0,a.kt)("a",{parentName:"h3",href:"/docs/ProtobufSourceGenerator"},"ProtobufSourceGenerator")),(0,a.kt)("h3",{id:"systemtextjson"},(0,a.kt)("a",{parentName:"h3",href:"/docs/System.Text.Json"},"System.Text.Json")))}g.isMDXComponent=!0},47859:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/files/jsonConverterSourceGenerator-8562dce593bfac609f5f1ec7d8237e5a.zip"}}]);