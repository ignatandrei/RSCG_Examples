"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[757],{3963:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>h,contentTitle:()=>S,default:()=>T,frontMatter:()=>c,metadata:()=>l,toc:()=>r});var s=n(7462),a=(n(7294),n(4137)),i=n(3992),u=n(425);n(8839);const c={sidebar_position:140,title:"14 - dunet",description:"Add union types to C#  - similar with F#/TS discriminated unions",slug:"/dunet"},S="dunet  by Domn Werner",l={unversionedId:"RSCG-Examples/dunet",id:"RSCG-Examples/dunet",title:"14 - dunet",description:"Add union types to C#  - similar with F#/TS discriminated unions",source:"@site/docs/RSCG-Examples/dunet.md",sourceDirName:"RSCG-Examples",slug:"/dunet",permalink:"/RSCG_Examples/v2/docs/dunet",draft:!1,tags:[],version:"current",sidebarPosition:140,frontMatter:{sidebar_position:140,title:"14 - dunet",description:"Add union types to C#  - similar with F#/TS discriminated unions",slug:"/dunet"},sidebar:"tutorialSidebar",previous:{title:"13 - AutoCtor",permalink:"/RSCG_Examples/v2/docs/AutoCtor"},next:{title:"15 - Vogen",permalink:"/RSCG_Examples/v2/docs/Vogen"}},h={},r=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example",id:"download-example",level:3},{value:"Download PDF",id:"download-pdf",level:3},{value:"Share dunet",id:"share-dunet",level:3}],o={toc:r},p="wrapper";function T(t){let{components:e,...c}=t;return(0,a.kt)(p,(0,s.Z)({},o,c,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"dunet--by-domn-werner"},"dunet  by Domn Werner"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/dunet/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/dunet?label=dunet",alt:"Nuget"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/domn1995/dunet"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/domn1995/dunet?label=updated",alt:"GitHub last commit"})),"\n",(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/domn1995/dunet?style=social",alt:"GitHub Repo stars"})),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("h3",{id:"info"},"Info"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Name: ",(0,a.kt)("strong",{parentName:"p"},"dunet")),(0,a.kt)("p",{parentName:"admonition"},"Author: Domn Werner"),(0,a.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/dunet/"},"https://www.nuget.org/packages/dunet/")),"   "),(0,a.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/domn1995/dunet"},"https://github.com/domn1995/dunet")),(0,a.kt)("p",{parentName:"admonition"},"Source : ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/domn1995/dunet"},"https://github.com/domn1995/dunet"))),(0,a.kt)("h3",{id:"about"},"About"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Add union types to C#  - similar with F#/TS discriminated unions"),(0,a.kt)("p",{parentName:"admonition"},"Check his examples-  awesome")),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,a.kt)(i.Z,{mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,a.kt)("p",null,"This is the CSharp Project that references ",(0,a.kt)("strong",{parentName:"p"},"dunet")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<Project Sdk="Microsoft.NET.Sdk">\n\n    <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net7.0</TargetFramework>\n        <ImplicitUsings>enable</ImplicitUsings>\n        <Nullable>enable</Nullable>\n    </PropertyGroup>\n\n    <ItemGroup>\n        <PackageReference Include="Dunet" Version="1.8.0">\n            <PrivateAssets>all</PrivateAssets>\n            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n        </PackageReference>\n    </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n</Project>\n\n'))),(0,a.kt)(u.Z,{value:"C:\\test\\RSCG_Examples\\v2\\rscg_examples\\dunet\\src\\duneDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"dunet")," in ",(0,a.kt)("em",{parentName:"p"},"Program.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'// See https://github.com/domn1995/dunet for more examples\nusing duneDemo;\nConsole.WriteLine(WhatIsTheString.FromString("1"));\n\nConsole.WriteLine(WhatIsTheString.FromString("Andrei"));\n\nConsole.WriteLine(WhatIsTheString.FromString("1970-04-16"));\n\nConsole.WriteLine("Enter something - 1, 1970-04-16 or Andrei !");\nvar readLine = Console.ReadLine();\nvar opt= WhatIsTheString.FromString(readLine);\nConsole.WriteLine(opt);\n//if if it long\nopt.MatchIsLong(\n    l => Console.WriteLine("is long " + l.value),\n    () => Console.WriteLine("is not long")\n    ) ;\n//C# switch\nvar x=opt switch\n{\n    WhatIsTheString.IsLong l => "is long " +l.value,\n    WhatIsTheString.IsDate d=> "is date "+ d.value,\n    WhatIsTheString.IsString s=>"is string "+ s.value,\n    WhatIsTheString.IsNullWhiteSpace w=>"no data",\n    _ => throw new NotImplementedException()\n\n};\nConsole.WriteLine(x);\n\n\n\n\n\n'))),(0,a.kt)(u.Z,{value:"C:\\test\\RSCG_Examples\\v2\\rscg_examples\\dunet\\src\\duneDemo\\Recognize.cs",label:"Recognize.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"dunet")," in ",(0,a.kt)("em",{parentName:"p"},"Recognize.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"using Dunet;\nnamespace duneDemo;\n\n[Union]\npartial record WhatIsTheString\n{\n    partial record IsString(string value);\n    partial record IsLong(long value);\n    partial record IsDate(DateTime value);\n\n    partial record IsNullWhiteSpace();\n\n    public static WhatIsTheString FromString(string? value)\n    {\n        if (string.IsNullOrWhiteSpace(value))\n            return new IsNullWhiteSpace();\n\n        if(long.TryParse(value, out var longValue))\n        {\n            return new IsLong(longValue);\n        }\n        if(DateTime.TryParse(value, out var dateTimeValue))\n        {\n            return new IsDate(dateTimeValue);\n        }\n        return new IsString(value);\n    }\n\n}\n\n")))),(0,a.kt)("h3",{id:"generated-files"},"Generated Files"),(0,a.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,a.kt)(i.Z,{mdxType:"Tabs"},(0,a.kt)(u.Z,{value:"C:\\test\\RSCG_Examples\\v2\\rscg_examples\\dunet\\src\\duneDemo\\obj\\GX\\Dunet\\Dunet.UnionAttributeGeneration.UnionAttributeGenerator\\UnionAttribute.g.cs",label:"UnionAttribute.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"using System;\n\nnamespace Dunet;\n\n/// <summary>\n/// Enables dunet union source generation for the decorated partial record.\n/// </summary>\n[AttributeUsage(AttributeTargets.Class, Inherited = false, AllowMultiple = false)]\ninternal sealed class UnionAttribute : Attribute {}\n"))),(0,a.kt)(u.Z,{value:"C:\\test\\RSCG_Examples\\v2\\rscg_examples\\dunet\\src\\duneDemo\\obj\\GX\\Dunet\\Dunet.UnionGeneration.UnionGenerator\\duneDemo.WhatIsTheString.g.cs",label:"duneDemo.WhatIsTheString.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"#pragma warning disable 1591\nnamespace duneDemo;\nabstract partial record WhatIsTheString\n{\n    private WhatIsTheString() {}\n\n    public abstract TMatchOutput Match<TMatchOutput>(\n        System.Func<IsString, TMatchOutput> @isString,\n        System.Func<IsLong, TMatchOutput> @isLong,\n        System.Func<IsDate, TMatchOutput> @isDate,\n        System.Func<IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n    );\n    public abstract void Match(\n        System.Action<IsString> @isString,\n        System.Action<IsLong> @isLong,\n        System.Action<IsDate> @isDate,\n        System.Action<IsNullWhiteSpace> @isNullWhiteSpace\n    );\n\n    public abstract TMatchOutput Match<TState, TMatchOutput>(\n        TState state,\n        System.Func<TState, IsString, TMatchOutput> @isString,\n        System.Func<TState, IsLong, TMatchOutput> @isLong,\n        System.Func<TState, IsDate, TMatchOutput> @isDate,\n        System.Func<TState, IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n    );\n    public abstract void Match<TState>(\n        TState state,\n        System.Action<TState, IsString> @isString,\n        System.Action<TState, IsLong> @isLong,\n        System.Action<TState, IsDate> @isDate,\n        System.Action<TState, IsNullWhiteSpace> @isNullWhiteSpace\n    );\n\n    public abstract TMatchOutput MatchIsString<TMatchOutput>(\n        System.Func<IsString, TMatchOutput> @isString,\n        System.Func<TMatchOutput> @else\n    );\n    public abstract TMatchOutput MatchIsLong<TMatchOutput>(\n        System.Func<IsLong, TMatchOutput> @isLong,\n        System.Func<TMatchOutput> @else\n    );\n    public abstract TMatchOutput MatchIsDate<TMatchOutput>(\n        System.Func<IsDate, TMatchOutput> @isDate,\n        System.Func<TMatchOutput> @else\n    );\n    public abstract TMatchOutput MatchIsNullWhiteSpace<TMatchOutput>(\n        System.Func<IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n        System.Func<TMatchOutput> @else\n    );\n\n    public abstract void MatchIsString(\n        System.Action<IsString> @isString,\n        System.Action @else\n    );\n    public abstract void MatchIsLong(\n        System.Action<IsLong> @isLong,\n        System.Action @else\n    );\n    public abstract void MatchIsDate(\n        System.Action<IsDate> @isDate,\n        System.Action @else\n    );\n    public abstract void MatchIsNullWhiteSpace(\n        System.Action<IsNullWhiteSpace> @isNullWhiteSpace,\n        System.Action @else\n    );\n\n    public abstract TMatchOutput MatchIsString<TState, TMatchOutput>(\n        TState state,\n        System.Func<TState, IsString, TMatchOutput> @isString,\n        System.Func<TState, TMatchOutput> @else\n    );\n    public abstract TMatchOutput MatchIsLong<TState, TMatchOutput>(\n        TState state,\n        System.Func<TState, IsLong, TMatchOutput> @isLong,\n        System.Func<TState, TMatchOutput> @else\n    );\n    public abstract TMatchOutput MatchIsDate<TState, TMatchOutput>(\n        TState state,\n        System.Func<TState, IsDate, TMatchOutput> @isDate,\n        System.Func<TState, TMatchOutput> @else\n    );\n    public abstract TMatchOutput MatchIsNullWhiteSpace<TState, TMatchOutput>(\n        TState state,\n        System.Func<TState, IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n        System.Func<TState, TMatchOutput> @else\n    );\n\n    public abstract void MatchIsString<TState>(\n        TState state,\n        System.Action<TState, IsString> @isString,\n        System.Action<TState> @else\n    );\n    public abstract void MatchIsLong<TState>(\n        TState state,\n        System.Action<TState, IsLong> @isLong,\n        System.Action<TState> @else\n    );\n    public abstract void MatchIsDate<TState>(\n        TState state,\n        System.Action<TState, IsDate> @isDate,\n        System.Action<TState> @else\n    );\n    public abstract void MatchIsNullWhiteSpace<TState>(\n        TState state,\n        System.Action<TState, IsNullWhiteSpace> @isNullWhiteSpace,\n        System.Action<TState> @else\n    );\n\n    public sealed partial record IsString : WhatIsTheString\n    {\n        public override TMatchOutput Match<TMatchOutput>(\n            System.Func<IsString, TMatchOutput> @isString,\n            System.Func<IsLong, TMatchOutput> @isLong,\n            System.Func<IsDate, TMatchOutput> @isDate,\n            System.Func<IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n        ) => @isString(this);\n        public override void Match(\n            System.Action<IsString> @isString,\n            System.Action<IsLong> @isLong,\n            System.Action<IsDate> @isDate,\n            System.Action<IsNullWhiteSpace> @isNullWhiteSpace\n        ) => @isString(this);\n        public override TMatchOutput Match<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsString, TMatchOutput> @isString,\n            System.Func<TState, IsLong, TMatchOutput> @isLong,\n            System.Func<TState, IsDate, TMatchOutput> @isDate,\n            System.Func<TState, IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n        ) => @isString(state, this);\n        public override void Match<TState>(\n        TState state,\n            System.Action<TState, IsString> @isString,\n            System.Action<TState, IsLong> @isLong,\n            System.Action<TState, IsDate> @isDate,\n            System.Action<TState, IsNullWhiteSpace> @isNullWhiteSpace\n        ) => @isString(state, this);\n        public override TMatchOutput MatchIsString<TMatchOutput>(\n            System.Func<IsString, TMatchOutput> @isString,\n            System.Func<TMatchOutput> @else\n        ) => @isString(this);\n        public override TMatchOutput MatchIsLong<TMatchOutput>(\n            System.Func<IsLong, TMatchOutput> @isLong,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override TMatchOutput MatchIsDate<TMatchOutput>(\n            System.Func<IsDate, TMatchOutput> @isDate,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override TMatchOutput MatchIsNullWhiteSpace<TMatchOutput>(\n            System.Func<IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override void MatchIsString(\n            System.Action<IsString> @isString,\n            System.Action @else\n        ) => @isString(this);\n        public override void MatchIsLong(\n            System.Action<IsLong> @isLong,\n            System.Action @else\n        ) => @else();\n        public override void MatchIsDate(\n            System.Action<IsDate> @isDate,\n            System.Action @else\n        ) => @else();\n        public override void MatchIsNullWhiteSpace(\n            System.Action<IsNullWhiteSpace> @isNullWhiteSpace,\n            System.Action @else\n        ) => @else();\n        public override TMatchOutput MatchIsString<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsString, TMatchOutput> @isString,\n            System.Func<TState, TMatchOutput> @else\n        ) => @isString(state, this);\n        public override TMatchOutput MatchIsLong<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsLong, TMatchOutput> @isLong,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override TMatchOutput MatchIsDate<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsDate, TMatchOutput> @isDate,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override TMatchOutput MatchIsNullWhiteSpace<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override void MatchIsString<TState>(\n        TState state,\n            System.Action<TState, IsString> @isString,\n            System.Action<TState> @else\n        ) => @isString(state, this);\n        public override void MatchIsLong<TState>(\n        TState state,\n            System.Action<TState, IsLong> @isLong,\n            System.Action<TState> @else\n        ) => @else(state);\n        public override void MatchIsDate<TState>(\n        TState state,\n            System.Action<TState, IsDate> @isDate,\n            System.Action<TState> @else\n        ) => @else(state);\n        public override void MatchIsNullWhiteSpace<TState>(\n        TState state,\n            System.Action<TState, IsNullWhiteSpace> @isNullWhiteSpace,\n            System.Action<TState> @else\n        ) => @else(state);\n    }\n\n    public sealed partial record IsLong : WhatIsTheString\n    {\n        public override TMatchOutput Match<TMatchOutput>(\n            System.Func<IsString, TMatchOutput> @isString,\n            System.Func<IsLong, TMatchOutput> @isLong,\n            System.Func<IsDate, TMatchOutput> @isDate,\n            System.Func<IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n        ) => @isLong(this);\n        public override void Match(\n            System.Action<IsString> @isString,\n            System.Action<IsLong> @isLong,\n            System.Action<IsDate> @isDate,\n            System.Action<IsNullWhiteSpace> @isNullWhiteSpace\n        ) => @isLong(this);\n        public override TMatchOutput Match<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsString, TMatchOutput> @isString,\n            System.Func<TState, IsLong, TMatchOutput> @isLong,\n            System.Func<TState, IsDate, TMatchOutput> @isDate,\n            System.Func<TState, IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n        ) => @isLong(state, this);\n        public override void Match<TState>(\n        TState state,\n            System.Action<TState, IsString> @isString,\n            System.Action<TState, IsLong> @isLong,\n            System.Action<TState, IsDate> @isDate,\n            System.Action<TState, IsNullWhiteSpace> @isNullWhiteSpace\n        ) => @isLong(state, this);\n        public override TMatchOutput MatchIsString<TMatchOutput>(\n            System.Func<IsString, TMatchOutput> @isString,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override TMatchOutput MatchIsLong<TMatchOutput>(\n            System.Func<IsLong, TMatchOutput> @isLong,\n            System.Func<TMatchOutput> @else\n        ) => @isLong(this);\n        public override TMatchOutput MatchIsDate<TMatchOutput>(\n            System.Func<IsDate, TMatchOutput> @isDate,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override TMatchOutput MatchIsNullWhiteSpace<TMatchOutput>(\n            System.Func<IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override void MatchIsString(\n            System.Action<IsString> @isString,\n            System.Action @else\n        ) => @else();\n        public override void MatchIsLong(\n            System.Action<IsLong> @isLong,\n            System.Action @else\n        ) => @isLong(this);\n        public override void MatchIsDate(\n            System.Action<IsDate> @isDate,\n            System.Action @else\n        ) => @else();\n        public override void MatchIsNullWhiteSpace(\n            System.Action<IsNullWhiteSpace> @isNullWhiteSpace,\n            System.Action @else\n        ) => @else();\n        public override TMatchOutput MatchIsString<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsString, TMatchOutput> @isString,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override TMatchOutput MatchIsLong<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsLong, TMatchOutput> @isLong,\n            System.Func<TState, TMatchOutput> @else\n        ) => @isLong(state, this);\n        public override TMatchOutput MatchIsDate<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsDate, TMatchOutput> @isDate,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override TMatchOutput MatchIsNullWhiteSpace<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override void MatchIsString<TState>(\n        TState state,\n            System.Action<TState, IsString> @isString,\n            System.Action<TState> @else\n        ) => @else(state);\n        public override void MatchIsLong<TState>(\n        TState state,\n            System.Action<TState, IsLong> @isLong,\n            System.Action<TState> @else\n        ) => @isLong(state, this);\n        public override void MatchIsDate<TState>(\n        TState state,\n            System.Action<TState, IsDate> @isDate,\n            System.Action<TState> @else\n        ) => @else(state);\n        public override void MatchIsNullWhiteSpace<TState>(\n        TState state,\n            System.Action<TState, IsNullWhiteSpace> @isNullWhiteSpace,\n            System.Action<TState> @else\n        ) => @else(state);\n    }\n\n    public sealed partial record IsDate : WhatIsTheString\n    {\n        public override TMatchOutput Match<TMatchOutput>(\n            System.Func<IsString, TMatchOutput> @isString,\n            System.Func<IsLong, TMatchOutput> @isLong,\n            System.Func<IsDate, TMatchOutput> @isDate,\n            System.Func<IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n        ) => @isDate(this);\n        public override void Match(\n            System.Action<IsString> @isString,\n            System.Action<IsLong> @isLong,\n            System.Action<IsDate> @isDate,\n            System.Action<IsNullWhiteSpace> @isNullWhiteSpace\n        ) => @isDate(this);\n        public override TMatchOutput Match<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsString, TMatchOutput> @isString,\n            System.Func<TState, IsLong, TMatchOutput> @isLong,\n            System.Func<TState, IsDate, TMatchOutput> @isDate,\n            System.Func<TState, IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n        ) => @isDate(state, this);\n        public override void Match<TState>(\n        TState state,\n            System.Action<TState, IsString> @isString,\n            System.Action<TState, IsLong> @isLong,\n            System.Action<TState, IsDate> @isDate,\n            System.Action<TState, IsNullWhiteSpace> @isNullWhiteSpace\n        ) => @isDate(state, this);\n        public override TMatchOutput MatchIsString<TMatchOutput>(\n            System.Func<IsString, TMatchOutput> @isString,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override TMatchOutput MatchIsLong<TMatchOutput>(\n            System.Func<IsLong, TMatchOutput> @isLong,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override TMatchOutput MatchIsDate<TMatchOutput>(\n            System.Func<IsDate, TMatchOutput> @isDate,\n            System.Func<TMatchOutput> @else\n        ) => @isDate(this);\n        public override TMatchOutput MatchIsNullWhiteSpace<TMatchOutput>(\n            System.Func<IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override void MatchIsString(\n            System.Action<IsString> @isString,\n            System.Action @else\n        ) => @else();\n        public override void MatchIsLong(\n            System.Action<IsLong> @isLong,\n            System.Action @else\n        ) => @else();\n        public override void MatchIsDate(\n            System.Action<IsDate> @isDate,\n            System.Action @else\n        ) => @isDate(this);\n        public override void MatchIsNullWhiteSpace(\n            System.Action<IsNullWhiteSpace> @isNullWhiteSpace,\n            System.Action @else\n        ) => @else();\n        public override TMatchOutput MatchIsString<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsString, TMatchOutput> @isString,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override TMatchOutput MatchIsLong<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsLong, TMatchOutput> @isLong,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override TMatchOutput MatchIsDate<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsDate, TMatchOutput> @isDate,\n            System.Func<TState, TMatchOutput> @else\n        ) => @isDate(state, this);\n        public override TMatchOutput MatchIsNullWhiteSpace<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override void MatchIsString<TState>(\n        TState state,\n            System.Action<TState, IsString> @isString,\n            System.Action<TState> @else\n        ) => @else(state);\n        public override void MatchIsLong<TState>(\n        TState state,\n            System.Action<TState, IsLong> @isLong,\n            System.Action<TState> @else\n        ) => @else(state);\n        public override void MatchIsDate<TState>(\n        TState state,\n            System.Action<TState, IsDate> @isDate,\n            System.Action<TState> @else\n        ) => @isDate(state, this);\n        public override void MatchIsNullWhiteSpace<TState>(\n        TState state,\n            System.Action<TState, IsNullWhiteSpace> @isNullWhiteSpace,\n            System.Action<TState> @else\n        ) => @else(state);\n    }\n\n    public sealed partial record IsNullWhiteSpace : WhatIsTheString\n    {\n        public override TMatchOutput Match<TMatchOutput>(\n            System.Func<IsString, TMatchOutput> @isString,\n            System.Func<IsLong, TMatchOutput> @isLong,\n            System.Func<IsDate, TMatchOutput> @isDate,\n            System.Func<IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n        ) => @isNullWhiteSpace(this);\n        public override void Match(\n            System.Action<IsString> @isString,\n            System.Action<IsLong> @isLong,\n            System.Action<IsDate> @isDate,\n            System.Action<IsNullWhiteSpace> @isNullWhiteSpace\n        ) => @isNullWhiteSpace(this);\n        public override TMatchOutput Match<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsString, TMatchOutput> @isString,\n            System.Func<TState, IsLong, TMatchOutput> @isLong,\n            System.Func<TState, IsDate, TMatchOutput> @isDate,\n            System.Func<TState, IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n        ) => @isNullWhiteSpace(state, this);\n        public override void Match<TState>(\n        TState state,\n            System.Action<TState, IsString> @isString,\n            System.Action<TState, IsLong> @isLong,\n            System.Action<TState, IsDate> @isDate,\n            System.Action<TState, IsNullWhiteSpace> @isNullWhiteSpace\n        ) => @isNullWhiteSpace(state, this);\n        public override TMatchOutput MatchIsString<TMatchOutput>(\n            System.Func<IsString, TMatchOutput> @isString,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override TMatchOutput MatchIsLong<TMatchOutput>(\n            System.Func<IsLong, TMatchOutput> @isLong,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override TMatchOutput MatchIsDate<TMatchOutput>(\n            System.Func<IsDate, TMatchOutput> @isDate,\n            System.Func<TMatchOutput> @else\n        ) => @else();\n        public override TMatchOutput MatchIsNullWhiteSpace<TMatchOutput>(\n            System.Func<IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n            System.Func<TMatchOutput> @else\n        ) => @isNullWhiteSpace(this);\n        public override void MatchIsString(\n            System.Action<IsString> @isString,\n            System.Action @else\n        ) => @else();\n        public override void MatchIsLong(\n            System.Action<IsLong> @isLong,\n            System.Action @else\n        ) => @else();\n        public override void MatchIsDate(\n            System.Action<IsDate> @isDate,\n            System.Action @else\n        ) => @else();\n        public override void MatchIsNullWhiteSpace(\n            System.Action<IsNullWhiteSpace> @isNullWhiteSpace,\n            System.Action @else\n        ) => @isNullWhiteSpace(this);\n        public override TMatchOutput MatchIsString<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsString, TMatchOutput> @isString,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override TMatchOutput MatchIsLong<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsLong, TMatchOutput> @isLong,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override TMatchOutput MatchIsDate<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsDate, TMatchOutput> @isDate,\n            System.Func<TState, TMatchOutput> @else\n        ) => @else(state);\n        public override TMatchOutput MatchIsNullWhiteSpace<TState, TMatchOutput>(\n        TState state,\n            System.Func<TState, IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n            System.Func<TState, TMatchOutput> @else\n        ) => @isNullWhiteSpace(state, this);\n        public override void MatchIsString<TState>(\n        TState state,\n            System.Action<TState, IsString> @isString,\n            System.Action<TState> @else\n        ) => @else(state);\n        public override void MatchIsLong<TState>(\n        TState state,\n            System.Action<TState, IsLong> @isLong,\n            System.Action<TState> @else\n        ) => @else(state);\n        public override void MatchIsDate<TState>(\n        TState state,\n            System.Action<TState, IsDate> @isDate,\n            System.Action<TState> @else\n        ) => @else(state);\n        public override void MatchIsNullWhiteSpace<TState>(\n        TState state,\n            System.Action<TState, IsNullWhiteSpace> @isNullWhiteSpace,\n            System.Action<TState> @else\n        ) => @isNullWhiteSpace(state, this);\n    }\n\n}\n#pragma warning restore 1591\n\n"))),(0,a.kt)(u.Z,{value:"C:\\test\\RSCG_Examples\\v2\\rscg_examples\\dunet\\src\\duneDemo\\obj\\GX\\Dunet\\Dunet.UnionGeneration.UnionGenerator\\duneDemo.WhatIsTheStringMatchExtensions.g.cs",label:"duneDemo.WhatIsTheStringMatchExtensions.g.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"#pragma warning disable 1591\n\nnamespace duneDemo;\n\ninternal static class WhatIsTheStringMatchExtensions\n{\n    public static async System.Threading.Tasks.Task<TMatchOutput> MatchAsync<TMatchOutput>(\n        this System.Threading.Tasks.Task<WhatIsTheString> unionTask,\n        System.Func<WhatIsTheString.IsString, TMatchOutput> @isString,\n        System.Func<WhatIsTheString.IsLong, TMatchOutput> @isLong,\n        System.Func<WhatIsTheString.IsDate, TMatchOutput> @isDate,\n        System.Func<WhatIsTheString.IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n    )\n    => (await unionTask.ConfigureAwait(false)).Match(\n            @isString,\n            @isLong,\n            @isDate,\n            @isNullWhiteSpace\n        );\n    public static async System.Threading.Tasks.ValueTask<TMatchOutput> MatchAsync<TMatchOutput>(\n        this System.Threading.Tasks.ValueTask<WhatIsTheString> unionTask,\n        System.Func<WhatIsTheString.IsString, TMatchOutput> @isString,\n        System.Func<WhatIsTheString.IsLong, TMatchOutput> @isLong,\n        System.Func<WhatIsTheString.IsDate, TMatchOutput> @isDate,\n        System.Func<WhatIsTheString.IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace\n    )\n    => (await unionTask.ConfigureAwait(false)).Match(\n            @isString,\n            @isLong,\n            @isDate,\n            @isNullWhiteSpace\n        );\n    public static async System.Threading.Tasks.Task MatchAsync(\n        this System.Threading.Tasks.Task<WhatIsTheString> unionTask,\n        System.Action<WhatIsTheString.IsString> @isString,\n        System.Action<WhatIsTheString.IsLong> @isLong,\n        System.Action<WhatIsTheString.IsDate> @isDate,\n        System.Action<WhatIsTheString.IsNullWhiteSpace> @isNullWhiteSpace\n    )\n    => (await unionTask.ConfigureAwait(false)).Match(\n            @isString,\n            @isLong,\n            @isDate,\n            @isNullWhiteSpace\n        );\n    public static async System.Threading.Tasks.ValueTask MatchAsync(\n        this System.Threading.Tasks.ValueTask<WhatIsTheString> unionTask,\n        System.Action<WhatIsTheString.IsString> @isString,\n        System.Action<WhatIsTheString.IsLong> @isLong,\n        System.Action<WhatIsTheString.IsDate> @isDate,\n        System.Action<WhatIsTheString.IsNullWhiteSpace> @isNullWhiteSpace\n    )\n    => (await unionTask.ConfigureAwait(false)).Match(\n            @isString,\n            @isLong,\n            @isDate,\n            @isNullWhiteSpace\n        );\n    public static async System.Threading.Tasks.Task<TMatchOutput> MatchIsStringAsync<TMatchOutput>(\n        this System.Threading.Tasks.Task<WhatIsTheString> unionTask,\n        System.Func<WhatIsTheString.IsString, TMatchOutput> @isString,\n        System.Func<TMatchOutput> @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsString(\n                    @isString,\n                    @else\n                );\n    public static async System.Threading.Tasks.Task<TMatchOutput> MatchIsLongAsync<TMatchOutput>(\n        this System.Threading.Tasks.Task<WhatIsTheString> unionTask,\n        System.Func<WhatIsTheString.IsLong, TMatchOutput> @isLong,\n        System.Func<TMatchOutput> @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsLong(\n                    @isLong,\n                    @else\n                );\n    public static async System.Threading.Tasks.Task<TMatchOutput> MatchIsDateAsync<TMatchOutput>(\n        this System.Threading.Tasks.Task<WhatIsTheString> unionTask,\n        System.Func<WhatIsTheString.IsDate, TMatchOutput> @isDate,\n        System.Func<TMatchOutput> @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsDate(\n                    @isDate,\n                    @else\n                );\n    public static async System.Threading.Tasks.Task<TMatchOutput> MatchIsNullWhiteSpaceAsync<TMatchOutput>(\n        this System.Threading.Tasks.Task<WhatIsTheString> unionTask,\n        System.Func<WhatIsTheString.IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n        System.Func<TMatchOutput> @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsNullWhiteSpace(\n                    @isNullWhiteSpace,\n                    @else\n                );\n    public static async System.Threading.Tasks.ValueTask<TMatchOutput> MatchIsStringAsync<TMatchOutput>(\n        this System.Threading.Tasks.ValueTask<WhatIsTheString> unionTask,\n        System.Func<WhatIsTheString.IsString, TMatchOutput> @isString,\n        System.Func<TMatchOutput> @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsString(\n                    @isString,\n                    @else\n                );\n    public static async System.Threading.Tasks.ValueTask<TMatchOutput> MatchIsLongAsync<TMatchOutput>(\n        this System.Threading.Tasks.ValueTask<WhatIsTheString> unionTask,\n        System.Func<WhatIsTheString.IsLong, TMatchOutput> @isLong,\n        System.Func<TMatchOutput> @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsLong(\n                    @isLong,\n                    @else\n                );\n    public static async System.Threading.Tasks.ValueTask<TMatchOutput> MatchIsDateAsync<TMatchOutput>(\n        this System.Threading.Tasks.ValueTask<WhatIsTheString> unionTask,\n        System.Func<WhatIsTheString.IsDate, TMatchOutput> @isDate,\n        System.Func<TMatchOutput> @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsDate(\n                    @isDate,\n                    @else\n                );\n    public static async System.Threading.Tasks.ValueTask<TMatchOutput> MatchIsNullWhiteSpaceAsync<TMatchOutput>(\n        this System.Threading.Tasks.ValueTask<WhatIsTheString> unionTask,\n        System.Func<WhatIsTheString.IsNullWhiteSpace, TMatchOutput> @isNullWhiteSpace,\n        System.Func<TMatchOutput> @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsNullWhiteSpace(\n                    @isNullWhiteSpace,\n                    @else\n                );\n    public static async System.Threading.Tasks.Task MatchIsStringAsync(\n        this System.Threading.Tasks.Task<WhatIsTheString> unionTask,\n        System.Action<WhatIsTheString.IsString> @isString,\n        System.Action @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsString(\n                    @isString,\n                    @else\n                );\n    public static async System.Threading.Tasks.Task MatchIsLongAsync(\n        this System.Threading.Tasks.Task<WhatIsTheString> unionTask,\n        System.Action<WhatIsTheString.IsLong> @isLong,\n        System.Action @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsLong(\n                    @isLong,\n                    @else\n                );\n    public static async System.Threading.Tasks.Task MatchIsDateAsync(\n        this System.Threading.Tasks.Task<WhatIsTheString> unionTask,\n        System.Action<WhatIsTheString.IsDate> @isDate,\n        System.Action @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsDate(\n                    @isDate,\n                    @else\n                );\n    public static async System.Threading.Tasks.Task MatchIsNullWhiteSpaceAsync(\n        this System.Threading.Tasks.Task<WhatIsTheString> unionTask,\n        System.Action<WhatIsTheString.IsNullWhiteSpace> @isNullWhiteSpace,\n        System.Action @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsNullWhiteSpace(\n                    @isNullWhiteSpace,\n                    @else\n                );\n    public static async System.Threading.Tasks.ValueTask MatchIsStringAsync(\n        this System.Threading.Tasks.ValueTask<WhatIsTheString> unionTask,\n        System.Action<WhatIsTheString.IsString> @isString,\n        System.Action @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsString(\n                    @isString,\n                    @else\n                );\n    public static async System.Threading.Tasks.ValueTask MatchIsLongAsync(\n        this System.Threading.Tasks.ValueTask<WhatIsTheString> unionTask,\n        System.Action<WhatIsTheString.IsLong> @isLong,\n        System.Action @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsLong(\n                    @isLong,\n                    @else\n                );\n    public static async System.Threading.Tasks.ValueTask MatchIsDateAsync(\n        this System.Threading.Tasks.ValueTask<WhatIsTheString> unionTask,\n        System.Action<WhatIsTheString.IsDate> @isDate,\n        System.Action @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsDate(\n                    @isDate,\n                    @else\n                );\n    public static async System.Threading.Tasks.ValueTask MatchIsNullWhiteSpaceAsync(\n        this System.Threading.Tasks.ValueTask<WhatIsTheString> unionTask,\n        System.Action<WhatIsTheString.IsNullWhiteSpace> @isNullWhiteSpace,\n        System.Action @else\n    )\n        =>\n            (await unionTask.ConfigureAwait(false))\n                .MatchIsNullWhiteSpace(\n                    @isNullWhiteSpace,\n                    @else\n                );\n}\n#pragma warning restore 1591\n\n")))),(0,a.kt)("h2",{id:"usefull"},"Usefull"),(0,a.kt)("h3",{id:"download-example"},"Download Example"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{target:"_blank",href:n(275).Z},"Download Example dunet "))),(0,a.kt)("h3",{id:"download-pdf"},"Download PDF"),(0,a.kt)("p",null,(0,a.kt)("a",{target:"_blank",href:n(511).Z},"Download PDF dunet ")),(0,a.kt)("h3",{id:"share-dunet"},"Share dunet"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fdunet&quote=dunet",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fdunet&text=dunet:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fdunet",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fdunet&title=dunet",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fdunet&title=dunet&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fdunet",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/dunet"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/dunet")))}T.isMDXComponent=!0},511:(t,e,n)=>{n.d(e,{Z:()=>s});const s=n.p+"assets/files/dunet-31d6cfe0d16ae931b73c59d7e0c089c0.pdf"},275:(t,e,n)=>{n.d(e,{Z:()=>s});const s=n.p+"assets/files/dunet-31d6cfe0d16ae931b73c59d7e0c089c0.zip"}}]);