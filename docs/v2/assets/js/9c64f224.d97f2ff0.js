"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[7036],{8786:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>m,toc:()=>u});var r=n(87462),a=(n(67294),n(3905)),o=n(73992),s=n(18679),i=n(68839);const l={sidebar_position:890,title:"89 - InterceptorTemplate",description:"Andrei Ignat",slug:"/InterceptorTemplate"},p="InterceptorTemplate  by Andrei Ignat",m={unversionedId:"RSCG-Examples/InterceptorTemplate",id:"RSCG-Examples/InterceptorTemplate",title:"89 - InterceptorTemplate",description:"Andrei Ignat",source:"@site/docs/RSCG-Examples/InterceptorTemplate.md",sourceDirName:"RSCG-Examples",slug:"/InterceptorTemplate",permalink:"/RSCG_Examples/v2/docs/InterceptorTemplate",draft:!1,tags:[],version:"current",sidebarPosition:890,frontMatter:{sidebar_position:890,title:"89 - InterceptorTemplate",description:"Andrei Ignat",slug:"/InterceptorTemplate"},sidebar:"tutorialSidebar",previous:{title:"88 - Com",permalink:"/RSCG_Examples/v2/docs/Com"},next:{title:"90 - TelemetryLogging",permalink:"/RSCG_Examples/v2/docs/TelemetryLogging"}},c={},u=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share InterceptorTemplate",id:"share-interceptortemplate",level:3},{value:"In the same category (Templating) - 6 other generators",id:"in-the-same-category-templating---6-other-generators",level:3},{value:"Gobie",id:"gobie",level:4},{value:"Microsoft.NET.Sdk.Razor.SourceGenerators",id:"microsoftnetsdkrazorsourcegenerators",level:4},{value:"MorrisMoxy",id:"morrismoxy",level:4},{value:"RazorBlade",id:"razorblade",level:4},{value:"RSCG_Templating",id:"rscg_templating",level:4},{value:"spreadcheetah",id:"spreadcheetah",level:4}],d={toc:u},g="wrapper";function h(e){let{components:t,...l}=e;return(0,a.kt)(g,(0,r.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"interceptortemplate--by-andrei-ignat"},"InterceptorTemplate  by Andrei Ignat"),(0,a.kt)(i.Z,{toc:u,mdxType:"TOCInline"}),(0,a.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RSCG_InterceptorTemplate/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/RSCG_InterceptorTemplate?label=RSCG_InterceptorTemplate",alt:"Nuget"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_InterceptorTemplate"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/ignatandrei/RSCG_InterceptorTemplate?label=updated",alt:"GitHub last commit"})),"\n",(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/ignatandrei/RSCG_InterceptorTemplate?style=social",alt:"GitHub Repo stars"})),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("h3",{id:"info"},"Info"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Name: ",(0,a.kt)("strong",{parentName:"p"},"InterceptorTemplate")),(0,a.kt)("p",{parentName:"admonition"},"Package Description"),(0,a.kt)("p",{parentName:"admonition"},"Author: Andrei Ignat"),(0,a.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/RSCG_InterceptorTemplate/"},"https://www.nuget.org/packages/RSCG_InterceptorTemplate/")),"   "),(0,a.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_InterceptorTemplate"},"https://github.com/ignatandrei/RSCG_InterceptorTemplate")),(0,a.kt)("p",{parentName:"admonition"},"Source : ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_InterceptorTemplate"},"https://github.com/ignatandrei/RSCG_InterceptorTemplate"))),(0,a.kt)("h3",{id:"original-readme"},"Original Readme"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("h1",{parentName:"admonition",id:"rscg_interceptortemplate"},"RSCG_InterceptorTemplate"),(0,a.kt)("p",{parentName:"admonition"},"Interceptor template - supported from >= .NET 8.0 . Uses also experimental interceptor feature from C#12.0"),(0,a.kt)("p",{parentName:"admonition"},"It can rewrite any method call to any other method call. It can also rewrite any method call to any other method call with the same signature. It can also rewrite any method call to any other method call with the same signature and the same return type."),(0,a.kt)("p",{parentName:"admonition"},"It does not ( yet ) support generic methods."),(0,a.kt)("p",{parentName:"admonition"},"For example, if you have a method call like this:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine("and now with argument " + newPerson.TestFullNameWithArguments("<","!+",">",2));\n')),(0,a.kt)("p",{parentName:"admonition"},"it can intercept it with the arguments ."),(0,a.kt)("p",{parentName:"admonition"},"For example, if you use this template "),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'public static {{(ser.item.HasTaskReturnType?"async":"")}} {{ser.item.TypeReturn}} {{ser.item.MethodSignature}}({{ser.item.ThisArgument}} {{ser.item.ArgumentsForCallMethod}} )  \n{\n    var cc=Console.BackgroundColor ;\n    try{\n        Console.BackgroundColor = ConsoleColor.DarkRed;\n        Console.WriteLine("start specific TestFullNameWithArguments template--\x3e{{ser.item.MethodSignature}}");\n        Console.WriteLine("number of arguments = {{ser.item.Arguments.size}}");\n        {{ for argum in ser.item.Arguments }}\n        Console.WriteLine("argument {{for.index+1}} type {{argum.Type}} and value = "+ {{argum.Name}});\n        {{ end }}\n        {{ser.item.ReturnString}} {{(ser.item.HasTaskReturnType ? "await" : "")}} {{ser.item.CallMethod}};\n    }\n    finally{\n        Console.WriteLine("end specific template--\x3e{{ser.item.MethodSignature}}");\n        Console.BackgroundColor = cc;\n    }\n}\n')),(0,a.kt)("p",{parentName:"admonition"},"The final result will be:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'public static  string Intercept_newPerson_TestFullNameWithArguments(this RSCG_DemoObjects.Person newPerson ,string start,string separator,string end,int repeat )  \n{\n    var cc=Console.BackgroundColor ;\n    try{\n        Console.BackgroundColor = ConsoleColor.DarkRed;\n        Console.WriteLine("start specific TestFullNameWithArguments template--\x3eIntercept_newPerson_TestFullNameWithArguments");\n        Console.WriteLine("number of arguments = 4");\n        Console.WriteLine("argument 1 type string and value = "+ start);\n        Console.WriteLine("argument 2 type string and value = "+ separator);\n        Console.WriteLine("argument 3 type string and value = "+ end);\n        Console.WriteLine("argument 4 type int and value = "+ repeat);\n        return  newPerson.TestFullNameWithArguments(start,separator,end,repeat);\n    }\n    finally{\n        Console.WriteLine("end specific template--\x3eIntercept_newPerson_TestFullNameWithArguments");\n        Console.BackgroundColor = cc;\n    }\n}\n')),(0,a.kt)("p",{parentName:"admonition"},"You can use any template . Some examples at src/RSCG_InterceptorTemplateConsole/Interceptors"),(0,a.kt)("h2",{parentName:"admonition",id:"how-to-use-it"},"How to use it"),(0,a.kt)("p",{parentName:"admonition"},"Add to your project (>= .NET 8 ) the nuget package RSCG_InterceptorTemplate"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<ItemGroup>\n <PackageReference Include="RSCG_InterceptorTemplate" Version="8.2023.2811.524" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />\n</ItemGroup>\n<PropertyGroup>\n    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n    <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    <InterceptorsPreviewNamespaces>$(InterceptorsPreviewNamespaces);RSCG_InterceptorTemplate</InterceptorsPreviewNamespaces>\n</PropertyGroup>\n')),(0,a.kt)("p",{parentName:"admonition"},"Make a folder Interceptors in the project and add also at least the generic interceptor ( see templates at src/RSCG_InterceptorTemplateConsole/Interceptors/ , start with GenericInterceptorForAllMethods.txt )"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'\n```xml\n  <ItemGroup>\n    \x3c!-- <AdditionalFiles Include="Interceptors\\TestFullNameWithArguments.txt">\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\n    </AdditionalFiles> --\x3e\n    <AdditionalFiles Include="Interceptors\\GenericInterceptorForAllMethods.txt">\n      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\n    </AdditionalFiles>\n  </ItemGroup>\n')),(0,a.kt)("p",{parentName:"admonition"},"The interceptor will not run template at build time in Visual Studiom, but it will run at build time in dotnet build."),(0,a.kt)("p",{parentName:"admonition"},"For this, you need to have something like that ( powershell file) -I named mine compile.ps1"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-powershell"},'cls\n#not necessary for CI builds, but only for debugging purposes\nWrite-Host "delete obj and bin"\ngci obj -recurse | foreach{ri $_.FullName -recurse -force }\ngci bin -recurse | foreach{ri $_.FullName -recurse -force }\n#for windows batch file \n#setx InterceptMethods "FullName"\n#echo Environment variable InterceptMethods has been set to %InterceptMethods%\n#put here the names of the methods you want to intercept , separated by ;\n$env:InterceptMethods = "FullName;Test;PersonsLoaded;TestFullNameWithArguments;ShowRandomPersonNumber;Connect;SavePerson;InsertPerson"\nWrite-Host "Environment variable  $env:InterceptMethods  has been set to " $env:InterceptMethods\ndotnet clean\ndotnet restore\ndotnet build /p:EmitCompilerGeneratedFiles=true --disable-build-servers --force\n#debug only\n# dotnet run --project RSCG_InterceptorTemplateConsole/RSCG_InterceptorTemplateConsole.csproj\n\n')),(0,a.kt)("p",{parentName:"admonition"},"Enjoy!")),(0,a.kt)("h3",{id:"about"},"About"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Andrei Ignat")),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,a.kt)("p",null,"This is the CSharp Project that references ",(0,a.kt)("strong",{parentName:"p"},"InterceptorTemplate")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {26}",showLineNumbers:!0,"{26}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n      <IsPackable>false</IsPackable>\n\n  </PropertyGroup>\n  \n  <ItemGroup>\n    <AdditionalFiles Include="Interceptors\\TestFullNameWithArguments.txt">\n      <CopyToOutputDirectory>Never</CopyToOutputDirectory>\n    </AdditionalFiles>\n    <AdditionalFiles Include="Interceptors\\GenericInterceptorForAllMethods.txt">\n      <CopyToOutputDirectory>Never</CopyToOutputDirectory>\n    </AdditionalFiles>\n    <AdditionalFiles Include="Interceptors\\FullName.txt">\n      <CopyToOutputDirectory>Never</CopyToOutputDirectory>\n    </AdditionalFiles>\n  </ItemGroup>\n  \n\n  <ItemGroup>\n      <PackageReference Include="RSCG_InterceptorTemplate" Version="8.2023.2811.446" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />\n  </ItemGroup>\n  \n\n  <ItemGroup>\n    <ProjectReference Include="..\\RSCG_DemoObjects\\RSCG_DemoObjects.csproj" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n        <InterceptorsPreviewNamespaces>$(InterceptorsPreviewNamespaces);RSCG_InterceptorTemplate</InterceptorsPreviewNamespaces>\n    </PropertyGroup>\n    <PropertyGroup>\n        <TreatWarningsAsErrors>True</TreatWarningsAsErrors>\n    </PropertyGroup>\n\n</Project>\n\n'))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\InterceptorTemplate\\src\\RSCG_InterceptorTemplateConsole\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"InterceptorTemplate")," in ",(0,a.kt)("em",{parentName:"p"},"Program.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'Console.WriteLine("Run the compile.ps1 file!");\nvar p=new Person();\np.FirstName="Andrei";\np.LastName="Ignat";\nConsole.WriteLine("debug for "+p.FullName());\nConsole.WriteLine("this is "+p.FullName());\nvar x = p.Test();\nConsole.WriteLine(x);\nvar newPerson = new Person();\nnewPerson.FirstName = "Andrei";\nnewPerson.LastName = "Ignat";\nvar namePerson = newPerson.FullName();\nConsole.WriteLine(namePerson);\n\nConsole.WriteLine("loaded "+Person.PersonsLoaded());\nConsole.WriteLine("loaded " + RSCG_DemoObjects.Person.PersonsLoaded());\nConsole.WriteLine("and again  " + RSCG_DemoObjects.Person.PersonsLoaded());\n\nConsole.WriteLine("and now with argument " + newPerson.TestFullNameWithArguments("<","!+",">",2));\nConsole.WriteLine("and a random person " + Person.ShowRandomPersonNumber(1));\nvar q= await PersonLoader.SavePerson(newPerson);\nPersonLoader.Connect();\n//Console.ReadLine();\nIPersonLoader ipl=new PersonLoader();\nawait ipl.InsertPerson(newPerson);\n'))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\InterceptorTemplate\\src\\RSCG_InterceptorTemplateConsole\\Interceptors\\FullName.txt",label:"FullName.txt",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"InterceptorTemplate")," in ",(0,a.kt)("em",{parentName:"p"},"FullName.txt")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//example generating for full name {{Version}}\n#pragma warning disable CS1591 \n#pragma warning disable CS9113\nnamespace System.Runtime.CompilerServices{\n[AttributeUsage(AttributeTargets.Method,AllowMultiple =true)]\nfile class InterceptsLocationAttribute(string filePath, int line, int character) : Attribute\n{\n}\n}//end namespace\n\nnamespace RSCG_InterceptorTemplate{\nstatic partial class SimpleIntercept\n{\n\n{{ for loc in ser.dataForEachIntercepts }}\n//replace code:{{loc.code}}";\n//replace code:{{loc.CodeNumbered}}";\n[System.Runtime.CompilerServices.InterceptsLocation(@"{{loc.Path}}", {{loc.Line}}, {{loc.StartMethod}})]\n{{ end }}\n\n//[System.Diagnostics.DebuggerStepThrough()]\npublic static {{(ser.item.HasTaskReturnType?"async":"")}} {{ser.item.TypeReturn}} {{ser.item.MethodSignature}}({{ser.item.ThisArgument}} {{ser.item.ArgumentsForCallMethod}} )  \n{\n    var cc=Console.BackgroundColor ;\n    try{\n    Console.BackgroundColor = ConsoleColor.DarkGreen;\n    Console.WriteLine("start specific FullName template--\x3e{{ser.item.MethodSignature}}");\n    {{ser.item.ReturnString}} {{(ser.item.HasTaskReturnType ? "await" : "")}} {{ser.item.CallMethod}};\n    }\n    finally{\n        Console.WriteLine("end specific template--\x3e{{ser.item.MethodSignature}}");\n        Console.BackgroundColor = cc;\n    }\n}\n                \n\n}//end class\n\n}//namespace RSCG_InterceptorTemplate\n'))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\InterceptorTemplate\\src\\RSCG_InterceptorTemplateConsole\\Interceptors\\TestFullNameWithArguments.txt",label:"TestFullNameWithArguments.txt",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"InterceptorTemplate")," in ",(0,a.kt)("em",{parentName:"p"},"TestFullNameWithArguments.txt")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//example generating for TestFullNameWithArguments {{Version}}\n#pragma warning disable CS1591 \n#pragma warning disable CS9113\nnamespace System.Runtime.CompilerServices{\n[AttributeUsage(AttributeTargets.Method,AllowMultiple =true)]\nfile class InterceptsLocationAttribute(string filePath, int line, int character) : Attribute\n{\n}\n}//end namespace\n\nnamespace RSCG_InterceptorTemplate{\nstatic partial class SimpleIntercept\n{\n\n{{ for loc in ser.dataForEachIntercepts }}\n//replace code:{{loc.code}}";\n//replace code:{{loc.CodeNumbered}}";\n[System.Runtime.CompilerServices.InterceptsLocation(@"{{loc.Path}}", {{loc.Line}}, {{loc.StartMethod}})]\n{{ end }}\n\n//[System.Diagnostics.DebuggerStepThrough()]\npublic static {{(ser.item.HasTaskReturnType?"async":"")}} {{ser.item.TypeReturn}} {{ser.item.MethodSignature}}({{ser.item.ThisArgument}} {{ser.item.ArgumentsForCallMethod}} )  \n{\n    var cc=Console.BackgroundColor ;\n    try{\n        Console.BackgroundColor = ConsoleColor.DarkRed;\n        Console.WriteLine("start specific TestFullNameWithArguments template--\x3e{{ser.item.MethodSignature}}");\n        Console.WriteLine("number of arguments = {{ser.item.Arguments.size}}");\n        {{ for argum in ser.item.Arguments }}\n        Console.WriteLine("argument {{for.index+1}} type {{argum.Type}} and value = "+ {{argum.Name}});\n        {{ end }}\n        {{ser.item.ReturnString}} {{(ser.item.HasTaskReturnType ? "await" : "")}} {{ser.item.CallMethod}};\n    }\n    finally{\n        Console.WriteLine("end specific template--\x3e{{ser.item.MethodSignature}}");\n        Console.BackgroundColor = cc;\n    }\n}\n                \n\n}//end class\n\n}//namespace RSCG_InterceptorTemplate\n'))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\InterceptorTemplate\\src\\RSCG_InterceptorTemplateConsole\\Interceptors\\GenericInterceptorForAllMethods.txt",label:"GenericInterceptorForAllMethods.txt",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"InterceptorTemplate")," in ",(0,a.kt)("em",{parentName:"p"},"GenericInterceptorForAllMethods.txt")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//example generating generic for all methods in a class {{Version}}\n#pragma warning disable CS1591 \n#pragma warning disable CS9113\nnamespace System.Runtime.CompilerServices{\n[AttributeUsage(AttributeTargets.Method,AllowMultiple =true)]\nfile class InterceptsLocationAttribute(string filePath, int line, int character) : Attribute\n{\n}\n}//end namespace\n\nnamespace RSCG_InterceptorTemplate{\nstatic partial class SimpleIntercept\n{\n\n{{ for loc in ser.dataForEachIntercepts }}\n//replace code:{{loc.code}}";\n//replace code:{{loc.CodeNumbered}}";\n[System.Runtime.CompilerServices.InterceptsLocation(@"{{loc.Path}}", {{loc.Line}}, {{loc.StartMethod}})]\n{{ end }}\n\n//[System.Diagnostics.DebuggerStepThrough()]\npublic static {{(ser.item.HasTaskReturnType?"async":"")}} {{ser.item.TypeReturn}} {{ser.item.MethodSignature}}({{ser.item.ThisArgument}} {{ser.item.ArgumentsForCallMethod}} )  \n{\n    try{\n        Console.WriteLine("start from generic template--\x3e{{ser.item.MethodSignature}}");\n        {{ser.item.ReturnString}} {{(ser.item.HasTaskReturnType ? "await" : "")}} {{ser.item.CallMethod}};\n    }\n    finally{\n        Console.WriteLine("end from generic template--\x3e{{ser.item.MethodSignature}}");\n    }\n}\n                \n\n}//end class\n\n}//namespace RSCG_InterceptorTemplate\n'))),(0,a.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\InterceptorTemplate\\src\\RSCG_DemoObjects\\IPersonLoader.cs",label:"IPersonLoader.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"InterceptorTemplate")," in ",(0,a.kt)("em",{parentName:"p"},"IPersonLoader.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"\nnamespace RSCG_DemoObjects;\n\npublic interface IPersonLoader\n{\n    Task<Person> InsertPerson(Person p);\n}\n")))),(0,a.kt)("h3",{id:"generated-files"},"Generated Files"),(0,a.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,a.kt)("h2",{id:"usefull"},"Usefull"),(0,a.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{target:"_blank",href:n(79008).Z},"Download Example project InterceptorTemplate "))),(0,a.kt)("h3",{id:"share-interceptortemplate"},"Share InterceptorTemplate"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FInterceptorTemplate&quote=InterceptorTemplate",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FInterceptorTemplate&text=InterceptorTemplate:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FInterceptorTemplate",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FInterceptorTemplate&title=InterceptorTemplate",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FInterceptorTemplate&title=InterceptorTemplate&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FInterceptorTemplate",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/InterceptorTemplate"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/InterceptorTemplate")),(0,a.kt)("h3",{id:"in-the-same-category-templating---6-other-generators"},"In the same category (Templating) - 6 other generators"),(0,a.kt)("h4",{id:"gobie"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Gobie"},"Gobie")),(0,a.kt)("h4",{id:"microsoftnetsdkrazorsourcegenerators"},(0,a.kt)("a",{parentName:"h4",href:"/docs/Microsoft.NET.Sdk.Razor.SourceGenerators"},"Microsoft.NET.Sdk.Razor.SourceGenerators")),(0,a.kt)("h4",{id:"morrismoxy"},(0,a.kt)("a",{parentName:"h4",href:"/docs/MorrisMoxy"},"MorrisMoxy")),(0,a.kt)("h4",{id:"razorblade"},(0,a.kt)("a",{parentName:"h4",href:"/docs/RazorBlade"},"RazorBlade")),(0,a.kt)("h4",{id:"rscg_templating"},(0,a.kt)("a",{parentName:"h4",href:"/docs/RSCG_Templating"},"RSCG_Templating")),(0,a.kt)("h4",{id:"spreadcheetah"},(0,a.kt)("a",{parentName:"h4",href:"/docs/spreadcheetah"},"spreadcheetah")))}h.isMDXComponent=!0},79008:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/InterceptorTemplate-994075dd37cd4d1ab9aa1ec47fbf5ed3.zip"}}]);