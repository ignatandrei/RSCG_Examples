"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[5710],{86160:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var n=a(87462),r=(a(67294),a(3905)),i=a(73992),s=a(18679),o=a(68839);const l={sidebar_position:2070,title:"207 - AutoInterface",description:"generating interface from a class",slug:"/AutoInterface"},c="AutoInterface  by Black White Yoshi",u={unversionedId:"RSCG-Examples/AutoInterface",id:"RSCG-Examples/AutoInterface",title:"207 - AutoInterface",description:"generating interface from a class",source:"@site/docs/RSCG-Examples/AutoInterface.md",sourceDirName:"RSCG-Examples",slug:"/AutoInterface",permalink:"/RSCG_Examples/v2/docs/AutoInterface",draft:!1,tags:[],version:"current",sidebarPosition:2070,frontMatter:{sidebar_position:2070,title:"207 - AutoInterface",description:"generating interface from a class",slug:"/AutoInterface"},sidebar:"tutorialSidebar",previous:{title:"206 - ShadowWriterBuilder",permalink:"/RSCG_Examples/v2/docs/ShadowWriterBuilder"},next:{title:"208 - AsyncIt",permalink:"/RSCG_Examples/v2/docs/AsyncIt"}},m={},p=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share AutoInterface",id:"share-autointerface",level:3},{value:"In the same category (Interface) - 12 other generators",id:"in-the-same-category-interface---12-other-generators",level:3},{value:"Biwen.AutoClassGen",id:"biwenautoclassgen",level:4},{value:"CopyCat",id:"copycat",level:4},{value:"Farskeptic.AutoCompose",id:"farskepticautocompose",level:4},{value:"MakeInterface.Generator",id:"makeinterfacegenerator",level:4},{value:"Matryoshki",id:"matryoshki",level:4},{value:"Minerals.AutoInterfaces",id:"mineralsautointerfaces",level:4},{value:"NetAutomaticInterface",id:"netautomaticinterface",level:4},{value:"ProxyGen",id:"proxygen",level:4},{value:"Roozie.AutoInterface",id:"roozieautointerface",level:4},{value:"RSCG_CompositeProvider",id:"rscg_compositeprovider",level:4},{value:"rscg_Interface_to_null_object",id:"rscg_interface_to_null_object",level:4},{value:"RSCG_Static",id:"rscg_static",level:4}],d={toc:p},b="wrapper";function f(e){let{components:t,...l}=e;return(0,r.kt)(b,(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"autointerface--by-black-white-yoshi"},"AutoInterface  by Black White Yoshi"),(0,r.kt)(o.Z,{toc:p,mdxType:"TOCInline"}),(0,r.kt)("h2",{id:"nuget--site-data"},"NuGet / site data"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/AutoInterface/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/AutoInterface?label=AutoInterface",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/BlackWhiteYoshi/AutoInterface"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/BlackWhiteYoshi/AutoInterface?label=updated",alt:"GitHub last commit"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/BlackWhiteYoshi/AutoInterface?style=social",alt:"GitHub Repo stars"})),(0,r.kt)("h2",{id:"details"},"Details"),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Name: ",(0,r.kt)("strong",{parentName:"p"},"AutoInterface")),(0,r.kt)("p",{parentName:"admonition"},"AutoInterface is a source generator that generates an interface based on your class/struct. Basically, you write your class and get the corresponding interface for free."),(0,r.kt)("p",{parentName:"admonition"},"Author: Black White Yoshi"),(0,r.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/AutoInterface/"},"https://www.nuget.org/packages/AutoInterface/")),"   "),(0,r.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/BlackWhiteYoshi/AutoInterface"},"https://github.com/BlackWhiteYoshi/AutoInterface")),(0,r.kt)("p",{parentName:"admonition"},"Source: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/BlackWhiteYoshi/AutoInterface"},"https://github.com/BlackWhiteYoshi/AutoInterface"))),(0,r.kt)("h3",{id:"original-readme"},"Original Readme"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("h1",{parentName:"admonition",id:"autointerface"},"AutoInterface"),(0,r.kt)("p",{parentName:"admonition"},"AutoInterface is a source generator that generates an interface based on your class/struct.",(0,r.kt)("br",{parentName:"p"}),"\n","Basically, you write your class and get the corresponding interface for free."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic class Example : IExample {\n    public int Number { get; private set; }\n\n    public Example() {\n        ResetNumber();\n    }\n\n    /// <summary>\n    /// some method description\n    /// </summary>\n    public int AddToNumber(int increase) {\n        Number += increase;\n        return Number;\n    }\n\n    private void ResetNumber() => Number = 0;\n}\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample {\n    int Number { get; }\n\n    /// <summary>\n    /// some method description\n    /// </summary>\n    int AddToNumber(int increase);\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"AutoInterface supports:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#autointerfaceattribute-on-struct"},"classes, records and structs")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#autointerfaceattribute-with-all-kinds-of-members"},"all members (Method, Property, Indexer, Event)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#autointerfaceattribute-with-explicit-interface-specifier"},"also explicit Interface members")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#multiple-autointerfaceattributes-on-same-class"},"multiple attributes on same class")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#autointerfaceattribute-with-summary-documentation"},"summary of class/struct and members")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#autointerfaceattribute-with-generic-class"},"generic")),(0,r.kt)("li",{parentName:"ul"},"parameters for",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#name"},"interface name")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#modifier"},"interface modifier")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#namespace"},"interface namespace")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#inheritance"},"interface inheritance")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#nested"},"interface nesting")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#staticmembers"},"static members as static abstract")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#access-modifier"},"access modifier")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ignoreautointerfaceattribute"},"ignore specific members"))))),(0,r.kt)("h2",{parentName:"admonition",id:"examples"},"Examples"),(0,r.kt)("h3",{parentName:"admonition",id:"autointerfaceattribute-on-struct"},"AutoInterfaceAttribute on struct"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic struct Point {\n    public int X { get; private set; }\n    public int Y { get; private set; }\n\n    public Point(int x, int y) => (X, Y) = (x, y);\n}\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IPoint {\n    int X { get; }\n\n    int Y { get; }\n}\n")),(0,r.kt)("h3",{parentName:"admonition",id:"autointerfaceattribute-with-all-kinds-of-members"},"AutoInterfaceAttribute with all kinds of members"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic sealed class FullExample {\n    public void SomeMethod() { }\n\n    public int SomeProperty { get; init; }\n\n    public int this[int i] => i;\n\n    public event Action? someEvent;\n\n    public event Action SomeEvent { add { } remove { } }\n}\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IFullExample {\n    void SomeMethod();\n\n    int SomeProperty { get; init; }\n\n    int this[int i] { get; }\n\n    event Action? someEvent;\n\n    event Action SomeEvent;\n}\n")),(0,r.kt)("h3",{parentName:"admonition",id:"autointerfaceattribute-with-explicit-interface-specifier"},"AutoInterfaceAttribute with explicit interface specifier"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic sealed class ExplicitExample : IExplicitExample {\n    void IExplicitExample.SomeMethod() { }\n\n    int IExplicitExample.SomeProperty { get; init; }\n\n    int IExplicitExample.this[int i] => i;\n\n    event Action IExplicitExample.SomeEvent { add { } remove { } }\n}\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExplicitExample {\n    void SomeMethod();\n\n    int SomeProperty { get; init; }\n\n    int this[int i] { get; }\n\n    event Action SomeEvent;\n}\n")),(0,r.kt)("h3",{parentName:"admonition",id:"multiple-autointerfaceattributes-on-same-class"},"multiple AutoInterfaceAttributes on same class"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using AutoInterfaceAttributes;\n\n[AutoInterface(Name = "IMultipleExample1")]\n[AutoInterface(Name = "IMultipleExample2")]\npublic sealed class MultipleExample : IMultipleExample1, IMultipleExample2 {\n    public void SomeMethod() { }\n\n    int IMultipleExample1.PropertyFirst { get; set; }\n\n    string IMultipleExample2.PropertySecond { get; set; }\n}\n')),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IMultipleExample1 {\n    void SomeMethod();\n\n    int PropertyFirst { get; set; }\n}\n\n...\n\n// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IMultipleExample2 {\n    void SomeMethod();\n\n    string PropertySecond { get; set; }\n}\n")),(0,r.kt)("h3",{parentName:"admonition",id:"autointerfaceattribute-with-summary-documentation"},"AutoInterfaceAttribute with summary documentation"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using AutoInterfaceAttributes;\n\n/// <summary>\n/// my class description\n/// </summary>\n[AutoInterface]\npublic sealed class SummaryExample {\n    /// <summary>\n    /// some method description\n    /// </summary>\n    public void SomeMethod() { }\n}\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\n/// <summary>\n/// my class description\n/// </summary>\npublic partial interface ISummaryExample {\n    /// <summary>\n    /// some method description\n    /// </summary>\n    void SomeMethod();\n}\n")),(0,r.kt)("h3",{parentName:"admonition",id:"autointerfaceattribute-with-generic-class"},"AutoInterfaceAttribute with generic class"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic sealed class GenericExample<T> {\n    public T Identity(T parameter) => parameter;\n}\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IGenericExample<T> {\n    T Identity(T parameter);\n}\n")),(0,r.kt)("h2",{parentName:"admonition",id:"parameter"},"Parameter"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h3",{parentName:"li",id:"name"},"Name"))),(0,r.kt)("p",{parentName:"admonition"},"Type: string",(0,r.kt)("br",{parentName:"p"}),"\n",'Default: $"I',"{","ClassName","}",'"'),(0,r.kt)("p",{parentName:"admonition"},"If you want another name for your interface, put it here."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using AutoInterfaceAttributes;\n\n[AutoInterface(Name = "NewName")]\npublic sealed class Example;\n')),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface NewName {}\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h3",{parentName:"li",id:"modifier"},"Modifier"))),(0,r.kt)("p",{parentName:"admonition"},"Type: string",(0,r.kt)("br",{parentName:"p"}),"\n",'Default: "public partial"'),(0,r.kt)("p",{parentName:"admonition"},"If you want another visible modifier or make the interface non-partial or unsafe, you can do this here."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using AutoInterfaceAttributes;\n\n[AutoInterface(Modifier = "internal")]\npublic sealed class Example;\n')),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\ninternal interface IExample {}\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h3",{parentName:"li",id:"namespace"},"Namespace"))),(0,r.kt)("p",{parentName:"admonition"},"Type: string",(0,r.kt)("br",{parentName:"p"}),"\n",'Default: $"',"{","ClassNamespace","}",'"'),(0,r.kt)("p",{parentName:"admonition"},"When the generated interface should live in a specific namespace, you can specify it here.",(0,r.kt)("br",{parentName:"p"}),"\n","For global namespace, use an empty string."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using AutoInterfaceAttributes;\n\nnamespace MyApp.Core;\n\n[AutoInterface(Namespace = "MyApp.Utils")]\npublic sealed class Example;\n')),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\nnamespace MyApp.Utils;\n\npublic partial interface IExample {}\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h3",{parentName:"li",id:"inheritance"},"Inheritance"))),(0,r.kt)("p",{parentName:"admonition"},"Type: Type[]",(0,r.kt)("br",{parentName:"p"}),"\n","Default: []"),(0,r.kt)("p",{parentName:"admonition"},"If the generated interface should inherit from one or more other interfaces, you can list them here."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using AutoInterfaceAttributes;\n\n[AutoInterface(Inheritance = [typeof(ICore)])]\npublic sealed class Example;\n\npublic partial interface ICore { ... }\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample : ICore {}\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h3",{parentName:"li",id:"nested"},"Nested"))),(0,r.kt)("p",{parentName:"admonition"},"Type: string[]",(0,r.kt)("br",{parentName:"p"}),"\n","Default: []"),(0,r.kt)("p",{parentName:"admonition"},"When the interface should be nested inside other classes, structs or interfaces, declare them here."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using AutoInterfaceAttributes;\n\n[AutoInterface(Nested = ["public partial class MyWrapper", "public partial interface OuterInterface"])]\npublic sealed class Example {\n    public void SomeMethod() { }\n}\n')),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial class MyWrapper {\n    public partial interface OuterInterface {\n        public partial interface IExample {\n            void SomeMethod();\n        }\n    }\n}\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h3",{parentName:"li",id:"staticmembers"},"StaticMembers"))),(0,r.kt)("p",{parentName:"admonition"},"Type: bool",(0,r.kt)("br",{parentName:"p"}),"\n","Default: false"),(0,r.kt)("p",{parentName:"admonition"},'Normally, static members are just ignored.\nHowever, an interface can contain static members as a "static abstract" member.',(0,r.kt)("br",{parentName:"p"}),"\n",'To accept static members to generate "static abstract" members, set this flag to true.'),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using AutoInterfaceAttributes;\n\n[AutoInterface(StaticMembers = true)]\npublic sealed class Example {\n    public static void SomeMethod() { }\n}\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample {\n    static abstract void SomeMethod();\n}\n")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h3",{parentName:"li",id:"access-modifier"},"Access Modifier"))),(0,r.kt)("p",{parentName:"admonition"},"When you want to set the visibility of a specific member, you can decorate it with a ","[AutoInterfaceVisibility...]"," attribute.",(0,r.kt)("br",{parentName:"p"}),"\n","There are 5 different Visibility attribute:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"[AutoInterfaceVisibilityPublic]"),(0,r.kt)("li",{parentName:"ul"},"[AutoInterfaceVisibilityInternal]"),(0,r.kt)("li",{parentName:"ul"},"[AutoInterfaceVisibilityProtected]"),(0,r.kt)("li",{parentName:"ul"},"[AutoInterfaceVisibilityProtectedInternal]"),(0,r.kt)("li",{parentName:"ul"},"[AutoInterfaceVisibilityPrivateProtected]")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic sealed class Example : IExample {\n    [AutoInterfaceVisibilityPublic]\n    public void PublicMethod() { }\n\n    [AutoInterfaceVisibilityInternal]\n    void IExample.InternalMethod() { }\n    \n    [AutoInterfaceVisibilityProtected]\n    void IExample.ProtectedMethod() { }\n    \n    [AutoInterfaceVisibilityProtectedInternal]\n    void IExample.ProtectedInternalMethod() { }\n    \n    [AutoInterfaceVisibilityPrivateProtected]\n    void IExample.PrivateProtectedMethod() { }\n}\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample {\n    [AutoInterfaceVisibilityPublic]\n    public void PublicMethod();\n\n    [AutoInterfaceVisibilityInternal]\n    internal void InternalMethod();\n    \n    [AutoInterfaceVisibilityProtected]\n    protected void ProtectedMethod();\n    \n    [AutoInterfaceVisibilityProtectedInternal]\n    protected internal void ProtectedInternalMethod();\n    \n    [AutoInterfaceVisibilityPrivateProtected]\n    private protected void PrivateProtectedMethod();\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Note:",(0,r.kt)("br",{parentName:"p"}),"\n","The access modifiers ",(0,r.kt)("em",{parentName:"p"},"private")," and ",(0,r.kt)("em",{parentName:"p"},"file")," are not possible,\nbecause ",(0,r.kt)("em",{parentName:"p"},"private")," members needs an implementation and ",(0,r.kt)("em",{parentName:"p"},"file")," members would not be visible to the outside."),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("h3",{parentName:"li",id:"ignoreautointerfaceattribute"},"IgnoreAutoInterfaceAttribute"))),(0,r.kt)("p",{parentName:"admonition"},"When you want a specific member to be ignored by the generator, you can decorate it with ","[IgnoreAutoInterface]","."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using AutoInterfaceAttributes;\n\n[AutoInterface]\npublic sealed class Example {\n    [IgnoreAutoInterface]\n    public void SomeMethod() { }\n}\n")),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample {}\n")),(0,r.kt)("h2",{parentName:"admonition",id:"disable-attribute-generation"},"Disable Attribute Generation"),(0,r.kt)("p",{parentName:"admonition"},"You can disable the generation of the attributes by defining a constant for your compilation:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"  <PropertyGroup>\n    <DefineConstants>AUTOINTERFACE_EXCLUDE_ATTRIBUTES</DefineConstants>\n  </PropertyGroup>\n")),(0,r.kt)("p",{parentName:"admonition"},"This functionality is specific for the use case when you have a project referencing another project, both projects using this generator and you have ",(0,r.kt)("i",null,"InternalsVisibleTo")," enabled.\nIn that case you have the attributes defined twice in your referencing project and you get a warning about that.\nBy defining this constant in your referencing project, you prevent one generation, so the attributes are only defined once in the referenced project."),(0,r.kt)("h2",{parentName:"admonition",id:"remarks"},"Remarks"),(0,r.kt)("p",{parentName:"admonition"},"Using-statements will always be placed on the top, so using not fully-qualified using-statements might cause compile errors."),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'using AutoInterfaceAttributes;\n\nnamespace System.Collections {\n    using Generic; // <-- refers to "System.Collections.Generic"\n\n    [AutoInterface]\n    public sealed class Example;\n}\n\n\n// ...\n\n\n// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing Generic; // <-- refers to "Generic"\nusing AutoInterfaceAttributes;\n\npublic partial interface IExample {}\n')),(0,r.kt)("p",{parentName:"admonition"},"You also should not use not fully-qualified using-statements in the first place, because they can be ambiguous.\nBy introducing an additional namespace, the referring of a not fully-qualified using-statement might change and your application breaks at unrelated places.\nJust put your using statements at the top.")),(0,r.kt)("h3",{id:"about"},"About"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"generating interface from a class")),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("h3",{id:"example-source-csproj-source-files"},"Example (source csproj, source files)"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,r.kt)("p",null,"This is the CSharp Project that references ",(0,r.kt)("strong",{parentName:"p"},"AutoInterface")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {16}",showLineNumbers:!0,"{16}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n    <ItemGroup>\n      <PackageReference Include="AutoInterface" Version="2.4.0">\n        <PrivateAssets>all</PrivateAssets>\n        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n      </PackageReference>\n    </ItemGroup>\n</Project>\n\n'))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"AutoInterface")," in ",(0,r.kt)("em",{parentName:"p"},"Program.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using NullInterface;\n\nConsole.WriteLine("Hello, World!");\n\nConsole.WriteLine("Hello, World!");\nIDepartment department = new Department();\ndepartment.Name = "IT";\nIEmployee employee = new Employee();\nemployee.FirstName = "Andrei";\nemployee.Department = department;\nConsole.WriteLine(employee.FirstName);\nConsole.WriteLine(employee.Department.Name);\nConsole.WriteLine(employee.GetFullNameAndDepartment(" - "));\n\n'))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\Department.cs",label:"Department.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"AutoInterface")," in ",(0,r.kt)("em",{parentName:"p"},"Department.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"\n\nusing AutoInterfaceAttributes;\n\nnamespace NullInterface;\n\n[AutoInterface]\npublic class Department : IDepartment\n{\n    public string Name { get; set; } = string.Empty;\n}\n\n"))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\Employee.cs",label:"Employee.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"AutoInterface")," in ",(0,r.kt)("em",{parentName:"p"},"Employee.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'\n\nusing AutoInterfaceAttributes;\n\nnamespace NullInterface;\n\n\n    [AutoInterface]\npublic class Employee: IEmployee\n{\n    public string FirstName { get; set; } = string.Empty;\n    public string LastName { get; set; } = string.Empty;\n    public IDepartment Department { get; set; }\n    public string GetFullName()=> $"{FirstName} {LastName}";\n\n    public string GetFullNameAndDepartment(string separator)=> $"{GetFullName()}{separator}{ Department?.Name}";\n    \n}\n\n')))),(0,r.kt)("h3",{id:"generated-files"},"Generated Files"),(0,r.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceAttribute.g.cs",label:"AutoInterfaceAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Generates an interface for the decorated class/struct.\n/// </summary>\n[AttributeUsage(AttributeTargets.Class | AttributeTargets.Struct, AllowMultiple = true)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceAttribute : Attribute {\n    /// <summary>\n    /// <para>The name of the generated interface.</para>\n    /// <para>Default is "I{ClassName}"</para>\n    /// </summary>\n    public string Name { get; init; }\n\n    /// <summary>\n    /// <para>The modifier(s) for the interface.</para>\n    /// <para>Deault is "public partial"</para>\n    /// </summary>\n    public string Modifier { get; init; }\n\n    /// <summary>\n    /// <para>The namespace declaration for the interface.</para>\n    /// <para>If empty string, no namespace directive will be used (global namespace).<br />\n    /// Default (if not present) it will be mapped to the same namespace as the namespace of the class/struct.</para>\n    /// </summary>\n    public string Namespace { get; init; }\n\n    /// <summary>\n    /// <para>interface inheritance: Name(s) of interfaces this interface will inherit.</para>\n    /// <para>Default is Array.Empty</para>\n    /// </summary>\n    public Type[] Inheritance { get; init; }\n\n    /// <summary>\n    /// <para>\n    /// The Classes, structs or interfaces containing the generated interface.<br />\n    /// e.g. ["public sealed partial class Example"] will wrap the interface with that expression.\n    /// </para>\n    /// <para>Default is Array.Empty</para>\n    /// </summary>\n    public string[] Nested { get; init; }\n\n    /// <summary>\n    /// <para>If enabled, static members get accepted and are generating "static abstract" members.</para>\n    /// <para>Default is false</para>\n    /// </summary>\n    public bool StaticMembers { get; init; }\n}\n\n#endif\n\n'))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceVisibilityInternalAttribute.g.cs",label:"AutoInterfaceVisibilityInternalAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Adds a "internal" access modifier to the interface member.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceVisibilityInternal : Attribute { }\n\n#endif\n\n'))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceVisibilityPrivateProtectedAttribute.g.cs",label:"AutoInterfaceVisibilityPrivateProtectedAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Adds a "private protected" access modifier to the interface member.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceVisibilityPrivateProtected : Attribute { }\n\n#endif\n\n'))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceVisibilityProtectedAttribute.g.cs",label:"AutoInterfaceVisibilityProtectedAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Adds a "protected" access modifier to the interface member.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceVisibilityProtected : Attribute { }\n\n#endif\n\n'))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceVisibilityProtectedInternalAttribute.g.cs",label:"AutoInterfaceVisibilityProtectedInternalAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Adds a "protected internal" access modifier to the interface member.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceVisibilityProtectedInternal : Attribute { }\n\n#endif\n\n'))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\AutoInterfaceVisibilityPublicAttribute.g.cs",label:"AutoInterfaceVisibilityPublicAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// Adds a "public" access modifier to the interface member.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class AutoInterfaceVisibilityPublic : Attribute { }\n\n#endif\n\n'))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\IDepartment_NullInterface.Department_Department.cs.g.cs",label:"IDepartment_NullInterface.Department_Department.cs.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\nnamespace NullInterface;\n\npublic partial interface IDepartment {\n    string Name { get; set; }\n}\n\n"))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\IDepartment_NullInterface.Department_IDepartment.cs.g.cs",label:"IDepartment_NullInterface.Department_IDepartment.cs.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n\n\nnamespace NullInterface;\n\npublic partial interface IDepartment {\n    string Name { get; set; }\n}\n\n"))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\IEmployee_NullInterface.Employee_Employee.cs.g.cs",label:"IEmployee_NullInterface.Employee_Employee.cs.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\nusing AutoInterfaceAttributes;\n\nnamespace NullInterface;\n\npublic partial interface IEmployee {\n    string FirstName { get; set; }\n\n    string LastName { get; set; }\n\n    IDepartment Department { get; set; }\n\n    string GetFullName();\n\n    string GetFullNameAndDepartment(string separator);\n}\n\n"))),(0,r.kt)(s.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\AutoInterface\\src\\NullInterface\\obj\\GX\\AutoInterface\\AutoInterface.AutoInterfaceGenerator\\IgnoreAutoInterfaceAttribute.g.cs",label:"IgnoreAutoInterfaceAttribute.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n#pragma warning disable\n#nullable enable annotations\n\n\n#if !AUTOINTERFACE_EXCLUDE_ATTRIBUTES\n\nusing System;\n\nnamespace AutoInterfaceAttributes;\n\n/// <summary>\n/// The decorated member will be Ignored by the generator.\n/// </summary>\n[AttributeUsage(AttributeTargets.Property | AttributeTargets.Method | AttributeTargets.Event)]\n[System.CodeDom.Compiler.GeneratedCodeAttribute("AutoInterface", "2.4.0")]\ninternal sealed class IgnoreAutoInterfaceAttribute : Attribute { }\n\n#endif\n\n')))),(0,r.kt)("h2",{id:"useful"},"Useful"),(0,r.kt)("h3",{id:"download-example-net--c"},"Download Example (.NET  C#)"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{target:"_blank",href:a(82928).Z},"Download Example project AutoInterface "))),(0,r.kt)("h3",{id:"share-autointerface"},"Share AutoInterface"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface&quote=AutoInterface",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface&text=AutoInterface:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface&title=AutoInterface",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface&title=AutoInterface&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FAutoInterface",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/AutoInterface"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/AutoInterface")),(0,r.kt)("h3",{id:"in-the-same-category-interface---12-other-generators"},"In the same category (Interface) - 12 other generators"),(0,r.kt)("h4",{id:"biwenautoclassgen"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Biwen.AutoClassGen"},"Biwen.AutoClassGen")),(0,r.kt)("h4",{id:"copycat"},(0,r.kt)("a",{parentName:"h4",href:"/docs/CopyCat"},"CopyCat")),(0,r.kt)("h4",{id:"farskepticautocompose"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Farskeptic.AutoCompose"},"Farskeptic.AutoCompose")),(0,r.kt)("h4",{id:"makeinterfacegenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/MakeInterface.Generator"},"MakeInterface.Generator")),(0,r.kt)("h4",{id:"matryoshki"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Matryoshki"},"Matryoshki")),(0,r.kt)("h4",{id:"mineralsautointerfaces"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Minerals.AutoInterfaces"},"Minerals.AutoInterfaces")),(0,r.kt)("h4",{id:"netautomaticinterface"},(0,r.kt)("a",{parentName:"h4",href:"/docs/NetAutomaticInterface"},"NetAutomaticInterface")),(0,r.kt)("h4",{id:"proxygen"},(0,r.kt)("a",{parentName:"h4",href:"/docs/ProxyGen"},"ProxyGen")),(0,r.kt)("h4",{id:"roozieautointerface"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Roozie.AutoInterface"},"Roozie.AutoInterface")),(0,r.kt)("h4",{id:"rscg_compositeprovider"},(0,r.kt)("a",{parentName:"h4",href:"/docs/RSCG_CompositeProvider"},"RSCG_CompositeProvider")),(0,r.kt)("h4",{id:"rscg_interface_to_null_object"},(0,r.kt)("a",{parentName:"h4",href:"/docs/rscg_Interface_to_null_object"},"rscg_Interface_to_null_object")),(0,r.kt)("h4",{id:"rscg_static"},(0,r.kt)("a",{parentName:"h4",href:"/docs/RSCG_Static"},"RSCG_Static")))}f.isMDXComponent=!0},82928:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/AutoInterface-7da49284d68648f06eb831ec8a2a3855.zip"}}]);