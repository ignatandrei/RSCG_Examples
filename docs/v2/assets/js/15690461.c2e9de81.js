"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[5225],{80535:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>g,frontMatter:()=>p,metadata:()=>m,toc:()=>u});var i=a(87462),n=(a(67294),a(3905)),r=a(73992),o=a(18679),s=a(68839);const p={sidebar_position:2030,title:"203 - Tortuga.Shipwright",description:"Generate mixin between classes",slug:"/Tortuga.Shipwright"},l="Tortuga.Shipwright  by Tortuga Research",m={unversionedId:"RSCG-Examples/Tortuga.Shipwright",id:"RSCG-Examples/Tortuga.Shipwright",title:"203 - Tortuga.Shipwright",description:"Generate mixin between classes",source:"@site/docs/RSCG-Examples/Tortuga.Shipwright.md",sourceDirName:"RSCG-Examples",slug:"/Tortuga.Shipwright",permalink:"/RSCG_Examples/v2/docs/Tortuga.Shipwright",draft:!1,tags:[],version:"current",sidebarPosition:2030,frontMatter:{sidebar_position:2030,title:"203 - Tortuga.Shipwright",description:"Generate mixin between classes",slug:"/Tortuga.Shipwright"},sidebar:"tutorialSidebar",previous:{title:"202 - jos.enumeration",permalink:"/RSCG_Examples/v2/docs/jos.enumeration"},next:{title:"204 - InlineComposition",permalink:"/RSCG_Examples/v2/docs/InlineComposition"}},h={},u=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share Tortuga.Shipwright",id:"share-tortugashipwright",level:3},{value:"In the same category (Templating) - 13 other generators",id:"in-the-same-category-templating---13-other-generators",level:3},{value:"Gobie",id:"gobie",level:4},{value:"InlineComposition",id:"inlinecomposition",level:4},{value:"InterceptorTemplate",id:"interceptortemplate",level:4},{value:"JKToolKit.TemplatePropertyGenerator",id:"jktoolkittemplatepropertygenerator",level:4},{value:"Microsoft.NET.Sdk.Razor.SourceGenerators",id:"microsoftnetsdkrazorsourcegenerators",level:4},{value:"Minerals.AutoMixins",id:"mineralsautomixins",level:4},{value:"MorrisMoxy",id:"morrismoxy",level:4},{value:"NTypewriter",id:"ntypewriter",level:4},{value:"RazorBlade",id:"razorblade",level:4},{value:"RazorSlices",id:"razorslices",level:4},{value:"RSCG_IFormattable",id:"rscg_iformattable",level:4},{value:"RSCG_Templating",id:"rscg_templating",level:4},{value:"spreadcheetah",id:"spreadcheetah",level:4}],d={toc:u},c="wrapper";function g(e){let{components:t,...p}=e;return(0,n.kt)(c,(0,i.Z)({},d,p,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"tortugashipwright--by-tortuga-research"},"Tortuga.Shipwright  by Tortuga Research"),(0,n.kt)(s.Z,{toc:u,mdxType:"TOCInline"}),(0,n.kt)("h2",{id:"nuget--site-data"},"NuGet / site data"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Tortuga.Shipwright/"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Tortuga.Shipwright?label=Tortuga.Shipwright",alt:"Nuget"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/TortugaResearch/Tortuga.Shipwright"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/TortugaResearch/Tortuga.Shipwright?label=updated",alt:"GitHub last commit"})),"\n",(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/TortugaResearch/Tortuga.Shipwright?style=social",alt:"GitHub Repo stars"})),(0,n.kt)("h2",{id:"details"},"Details"),(0,n.kt)("h3",{id:"info"},"Info"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Name: ",(0,n.kt)("strong",{parentName:"p"},"Tortuga.Shipwright")),(0,n.kt)("p",{parentName:"admonition"},"Package Description"),(0,n.kt)("p",{parentName:"admonition"},"Author: Tortuga Research"),(0,n.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/Tortuga.Shipwright/"},"https://www.nuget.org/packages/Tortuga.Shipwright/")),"   "),(0,n.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/TortugaResearch/Tortuga.Shipwright"},"https://github.com/TortugaResearch/Tortuga.Shipwright")),(0,n.kt)("p",{parentName:"admonition"},"Source: ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/TortugaResearch/Tortuga.Shipwright"},"https://github.com/TortugaResearch/Tortuga.Shipwright"))),(0,n.kt)("h3",{id:"original-readme"},"Original Readme"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("h1",{parentName:"admonition",id:"tortuga-shipwright"},"Tortuga Shipwright"),(0,n.kt)("h2",{parentName:"admonition",id:"installation"},"Installation"),(0,n.kt)("p",{parentName:"admonition"},"To register the Source Generator, add the following to your project file."),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- Code Generator --\x3e\n<ItemGroup>\n    <PackageReference Include="Tortuga.Shipwright" Version="0.9.0" >\n        <PrivateAssets>all</PrivateAssets>\n    </PackageReference>\n    <PackageReference Include="Tortuga.Shipwright.Shared" Version="0.9.0" />\n</ItemGroup>\n\n<PropertyGroup>\n    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n    <CompilerGeneratedFilesOutputPath>Generated</CompilerGeneratedFilesOutputPath>\n</PropertyGroup>\n\n<ItemGroup>\n    \x3c!-- Don\'t include the output from a previous source generator execution into future runs; the */** trick here ensures that there\'s\nat least one subdirectory, which is our key that it\'s coming from a source generator as opposed to something that is coming from\nsome other tool. --\x3e\n    <Compile Remove="$(CompilerGeneratedFilesOutputPath)/*/**/*.cs" />\n</ItemGroup>\n')),(0,n.kt)("p",{parentName:"admonition"},"The ",(0,n.kt)("inlineCode",{parentName:"p"},"EmitCompilerGeneratedFiles"),' setting is not required, but it does make trouble-shooting easier. Check  `Show All Files" in Visual Studio to see the generated files.'),(0,n.kt)("h2",{parentName:"admonition",id:"trait-engine"},"Trait Engine"),(0,n.kt)("h3",{parentName:"admonition",id:"terminology"},"Terminology"),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"Trait: A set of methods and properties being injected into a container class."),(0,n.kt)("li",{parentName:"ul"},"Container: The class that contains one or more traits.")),(0,n.kt)("h3",{parentName:"admonition",id:"basic-pattern"},"Basic Pattern"),(0,n.kt)("p",{parentName:"admonition"},"The trait needs no special decorations. However, it is advisable to mark it as ",(0,n.kt)("inlineCode",{parentName:"p"},"sealed")," because inheritance is not supported with traits. "),(0,n.kt)("p",{parentName:"admonition"},"Traits should be marked with the ",(0,n.kt)("inlineCode",{parentName:"p"},"Trait")," attribute. (This is not currently enforced, but may be in future versions.)"),(0,n.kt)("p",{parentName:"admonition"},"Trait classes may be marked as ",(0,n.kt)("inlineCode",{parentName:"p"},"public")," or, if in the same assembly, ",(0,n.kt)("inlineCode",{parentName:"p"},"internal"),". "),(0,n.kt)("p",{parentName:"admonition"},"The container class uses the ",(0,n.kt)("inlineCode",{parentName:"p"},"UseTrait")," attribute and must be marked ",(0,n.kt)("inlineCode",{parentName:"p"},"partial"),". For example:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"[UseTrait(typeof(MyTrait)]\npublic partial class MyContiner { ... }\n")),(0,n.kt)("h3",{parentName:"admonition",id:"exposing-members"},"Exposing Members"),(0,n.kt)("p",{parentName:"admonition"},"For a method or property, add the ",(0,n.kt)("inlineCode",{parentName:"p"},"Expose")," attribute to the member."),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"[Expose] \npublic int Add(int a, int b) {...}\n\n[Expose] \npublic int CustomerAge {get; set;}\n")),(0,n.kt)("p",{parentName:"admonition"},"The member being exposed must be visible to the container. This means ",(0,n.kt)("inlineCode",{parentName:"p"},"public")," or, if in the same assembly, ",(0,n.kt)("inlineCode",{parentName:"p"},"internal"),"."),(0,n.kt)("h4",{parentName:"admonition",id:"non-public-members"},"Non-public Members"),(0,n.kt)("p",{parentName:"admonition"},"To make a exposed member non-public in the container class, set the Accessibility property. For example,"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"[Expose(Accessibility = Accessibility.Internal)]\npublic ICacheAdapter Cache { get; set; } = null!;\n")),(0,n.kt)("p",{parentName:"admonition"},"You may also set an inheritance rule such as ",(0,n.kt)("inlineCode",{parentName:"p"},"override"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"sealed"),", or ",(0,n.kt)("inlineCode",{parentName:"p"},"virtual"),"."),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"[Expose(Inheritance = Inheritance.Override)]\npublic ConcurrentDictionary<Type, object> ExtensionCache {get => m_ExtensionCache;}\n")),(0,n.kt)("h4",{parentName:"admonition",id:"additional-attributes"},"Additional Attributes"),(0,n.kt)("p",{parentName:"admonition"},"The following attributes will be copied from an exposed trait member to the matching container member."),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"EditorBrowsableAttribute"),(0,n.kt)("li",{parentName:"ul"},"ObsoleteAttribute")),(0,n.kt)("h3",{parentName:"admonition",id:"accessing-the-container"},"Accessing the Container"),(0,n.kt)("p",{parentName:"admonition"},"To allow the trait to get a reference to it's container, use the ",(0,n.kt)("inlineCode",{parentName:"p"},"Container")," attribute."),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"[Container]\ninternal IDataSource DataSource { get; set; } = null!;\n")),(0,n.kt)("p",{parentName:"admonition"},"There is no limit to the number of ",(0,n.kt)("inlineCode",{parentName:"p"},"Container")," properties in a trait. (Presumably each would request a different interface.)"),(0,n.kt)("p",{parentName:"admonition"},"If ",(0,n.kt)("inlineCode",{parentName:"p"},"RegisterInterface = true")," is used, then the interface being requeted will be added to the container class. That class will still need to implement the interface."),(0,n.kt)("h3",{parentName:"admonition",id:"callbacks-into-the-container"},"Callbacks into the container"),(0,n.kt)("p",{parentName:"admonition"},"In lieu of using a container property (see above), a trait can request a specific callback be created in the container."),(0,n.kt)("p",{parentName:"admonition"},"Define the 'partial' property in the trait as a ",(0,n.kt)("inlineCode",{parentName:"p"},"Func")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"Action")," delegate."),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'[Partial("customerKey,startDate,endDate"] \npublic Func<int, DateTime, DateTime, OrderCollection> OnGetOrdersByCustomer {get; set;} = null!;\n')),(0,n.kt)("p",{parentName:"admonition"},"In the container, the following will be generated."),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"private partial OrderCollection OnGetOrdersByCustomer(int customerKey, DateTime startDate, DateTime endDate);\n")),(0,n.kt)("p",{parentName:"admonition"},"The container will then be responsible for implementing the partial method. "),(0,n.kt)("h3",{parentName:"admonition",id:"automatically-implementing-an-interface"},"Automatically Implementing an Interface"),(0,n.kt)("p",{parentName:"admonition"},"If a trait implements an interface, then it's container will automatically implement it as well. All interface methods and properties will call back to the trait."),(0,n.kt)("p",{parentName:"admonition"},"The container explicitly implements the interface. Use the ",(0,n.kt)("inlineCode",{parentName:"p"},"Expose")," attribute on each member if you also want the methods to be marked as ",(0,n.kt)("inlineCode",{parentName:"p"},"public"),"."),(0,n.kt)("p",{parentName:"admonition"},"Warning: Interfaces with ",(0,n.kt)("inlineCode",{parentName:"p"},"init")," properties are not supported."),(0,n.kt)("h4",{parentName:"admonition",id:"additional-attributes-1"},"Additional Attributes"),(0,n.kt)("p",{parentName:"admonition"},"The following attributes will be copied from an exposed interface member to the matching container member."),(0,n.kt)("ul",{parentName:"admonition"},(0,n.kt)("li",{parentName:"ul"},"EditorBrowsableAttribute"),(0,n.kt)("li",{parentName:"ul"},"ObsoleteAttribute")),(0,n.kt)("h3",{parentName:"admonition",id:"xml-docs"},"XML Docs"),(0,n.kt)("p",{parentName:"admonition"},"If the trait is in the same project as the container, XML Docs will be automatically included in the generated code."),(0,n.kt)("p",{parentName:"admonition"},"This requires ",(0,n.kt)("inlineCode",{parentName:"p"},"DocumentationFile")," to be enabled at the project level."),(0,n.kt)("p",{parentName:"admonition"},"Shipwright does not currently support XML Docs on traits defined in a different project. (This appears to be a limitation of Roslyn.)")),(0,n.kt)("h3",{id:"about"},"About"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Generate mixin between classes")),(0,n.kt)("h2",{id:"how-to-use"},"How to use"),(0,n.kt)("h3",{id:"example-source-csproj-source-files"},"Example (source csproj, source files)"),(0,n.kt)(r.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,n.kt)("p",null,"This is the CSharp Project that references ",(0,n.kt)("strong",{parentName:"p"},"Tortuga.Shipwright")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {13}",showLineNumbers:!0,"{13}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n\n    \x3c!-- Code Generator --\x3e\n    <ItemGroup>\n        <PackageReference Include="Tortuga.Shipwright" Version="0.9.0" >\n            <PrivateAssets>all</PrivateAssets>\n        </PackageReference>\n        <PackageReference Include="Tortuga.Shipwright.Shared" Version="0.9.0" />\n    </ItemGroup>\n\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n    <ItemGroup>\n        \x3c!-- Don\'t include the output from a previous source generator execution into future runs; the */** trick here ensures that there\'s\nat least one subdirectory, which is our key that it\'s coming from a source generator as opposed to something that is coming from\nsome other tool. --\x3e\n        <Compile Remove="$(CompilerGeneratedFilesOutputPath)/*/**/*.cs" />\n    </ItemGroup>\n</Project>\n\n'))),(0,n.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Tortuga.Shipwright\\src\\MixinConsoleDemo\\MixinConsoleDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"Tortuga.Shipwright")," in ",(0,n.kt)("em",{parentName:"p"},"Program.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// See https://aka.ms/new-console-template for more information\nusing MixinConsoleDemo;\n\nConsole.WriteLine("Hello, World!");\nEmployee p = new Employee();\np.Name="Andrei Ignat";\np.Age = 55;\np.Salary = 1000;\nConsole.WriteLine($"Name: {p.Name}, Age: {p.Age}, Salary: {p.Salary}");\n'))),(0,n.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Tortuga.Shipwright\\src\\MixinConsoleDemo\\MixinConsoleDemo\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"Tortuga.Shipwright")," in ",(0,n.kt)("em",{parentName:"p"},"Person.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using Tortuga.Shipwright;\n\nnamespace MixinConsoleDemo;\ninternal class Person\n{\n    [Expose]\n    public string Name { get; set; } = string.Empty;\n    [Expose] \n    public int Age { get; set; }\n    \n}\n\n"))),(0,n.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Tortuga.Shipwright\\src\\MixinConsoleDemo\\MixinConsoleDemo\\Employee.cs",label:"Employee.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"Tortuga.Shipwright")," in ",(0,n.kt)("em",{parentName:"p"},"Employee.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using Tortuga.Shipwright;\n\nnamespace MixinConsoleDemo;\n[UseTrait(typeof(Person))]\ninternal partial class Employee\n{\n    public decimal Salary { get; set; }\n}\n\n")))),(0,n.kt)("h3",{id:"generated-files"},"Generated Files"),(0,n.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,n.kt)(r.Z,{mdxType:"Tabs"},(0,n.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Tortuga.Shipwright\\src\\MixinConsoleDemo\\MixinConsoleDemo\\GX\\Tortuga.Shipwright\\Tortuga.Shipwright.TraitGenerator\\Logs.cs",label:"Logs.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"/*\nContainer class: MixinConsoleDemo.Employee\n    Adding trait: MixinConsoleDemo.Person\n*/\n"))),(0,n.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Tortuga.Shipwright\\src\\MixinConsoleDemo\\MixinConsoleDemo\\GX\\Tortuga.Shipwright\\Tortuga.Shipwright.TraitGenerator\\MixinConsoleDemo.Employee.cs",label:"MixinConsoleDemo.Employee.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"//This file was generated by Tortuga Shipwright\n\nnamespace MixinConsoleDemo\n{\n    partial class Employee\n    {\n\n        // These fields and/or properties hold the traits. They should not be referenced directly.\n        private MixinConsoleDemo.Person __Trait0 = new();\n\n        // Exposing trait MixinConsoleDemo.Person\n\n        \n        public   System.Int32 Age\n        {\n            get => __Trait0.Age;\n            set => __Trait0.Age = value;\n        }\n        \n        public   System.String Name\n        {\n            get => __Trait0.Name;\n            set => __Trait0.Name = value;\n        }\n    }\n}\n\n")))),(0,n.kt)("h2",{id:"useful"},"Useful"),(0,n.kt)("h3",{id:"download-example-net--c"},"Download Example (.NET  C#)"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{target:"_blank",href:a(35477).Z},"Download Example project Tortuga.Shipwright "))),(0,n.kt)("h3",{id:"share-tortugashipwright"},"Share Tortuga.Shipwright"),(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FTortuga.Shipwright&quote=Tortuga.Shipwright",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FTortuga.Shipwright&text=Tortuga.Shipwright:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FTortuga.Shipwright",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FTortuga.Shipwright&title=Tortuga.Shipwright",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FTortuga.Shipwright&title=Tortuga.Shipwright&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FTortuga.Shipwright",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Tortuga.Shipwright"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Tortuga.Shipwright")),(0,n.kt)("h3",{id:"in-the-same-category-templating---13-other-generators"},"In the same category (Templating) - 13 other generators"),(0,n.kt)("h4",{id:"gobie"},(0,n.kt)("a",{parentName:"h4",href:"/docs/Gobie"},"Gobie")),(0,n.kt)("h4",{id:"inlinecomposition"},(0,n.kt)("a",{parentName:"h4",href:"/docs/InlineComposition"},"InlineComposition")),(0,n.kt)("h4",{id:"interceptortemplate"},(0,n.kt)("a",{parentName:"h4",href:"/docs/InterceptorTemplate"},"InterceptorTemplate")),(0,n.kt)("h4",{id:"jktoolkittemplatepropertygenerator"},(0,n.kt)("a",{parentName:"h4",href:"/docs/JKToolKit.TemplatePropertyGenerator"},"JKToolKit.TemplatePropertyGenerator")),(0,n.kt)("h4",{id:"microsoftnetsdkrazorsourcegenerators"},(0,n.kt)("a",{parentName:"h4",href:"/docs/Microsoft.NET.Sdk.Razor.SourceGenerators"},"Microsoft.NET.Sdk.Razor.SourceGenerators")),(0,n.kt)("h4",{id:"mineralsautomixins"},(0,n.kt)("a",{parentName:"h4",href:"/docs/Minerals.AutoMixins"},"Minerals.AutoMixins")),(0,n.kt)("h4",{id:"morrismoxy"},(0,n.kt)("a",{parentName:"h4",href:"/docs/MorrisMoxy"},"MorrisMoxy")),(0,n.kt)("h4",{id:"ntypewriter"},(0,n.kt)("a",{parentName:"h4",href:"/docs/NTypewriter"},"NTypewriter")),(0,n.kt)("h4",{id:"razorblade"},(0,n.kt)("a",{parentName:"h4",href:"/docs/RazorBlade"},"RazorBlade")),(0,n.kt)("h4",{id:"razorslices"},(0,n.kt)("a",{parentName:"h4",href:"/docs/RazorSlices"},"RazorSlices")),(0,n.kt)("h4",{id:"rscg_iformattable"},(0,n.kt)("a",{parentName:"h4",href:"/docs/RSCG_IFormattable"},"RSCG_IFormattable")),(0,n.kt)("h4",{id:"rscg_templating"},(0,n.kt)("a",{parentName:"h4",href:"/docs/RSCG_Templating"},"RSCG_Templating")),(0,n.kt)("h4",{id:"spreadcheetah"},(0,n.kt)("a",{parentName:"h4",href:"/docs/spreadcheetah"},"spreadcheetah")))}g.isMDXComponent=!0},35477:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/files/Tortuga.Shipwright-ffa518a23bd339510b02ee73c245d8b0.zip"}}]);