"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[7432],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var s=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},r=Object.keys(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(s=0;s<r.length;s++)n=r[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=s.createContext({}),u=function(e){var t=s.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return s.createElement(o.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,b=m["".concat(o,".").concat(d)]||m[d]||p[d]||r;return n?s.createElement(b,i(i({ref:t},c),{},{components:n})):s.createElement(b,i({ref:t},c))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return s.createElement.apply(null,i)}return s.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7771:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>I,contentTitle:()=>S,default:()=>P,frontMatter:()=>N,metadata:()=>G,toc:()=>E});var s=n(7462),a=n(7294),r=n(4137),i=n(6010),l=n(2957),o=n(6550),u=n(5238),c=n(3609),m=n(2560);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:s,default:a}}=e;return{value:t,label:n,attributes:s,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function b(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function y(e){let{queryString:t=!1,groupId:n}=e;const s=(0,o.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,u._X)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(s.location.search);t.set(r,e),s.replace({...s.location,search:t.toString()})}),[r,s])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:s}=e,r=d(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!b({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:r}))),[o,u]=y({queryString:n,groupId:s}),[c,p]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[s,r]=(0,m.Nk)(n);return[s,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:s}),g=(()=>{const e=o??c;return b({value:e,tabValues:r})?e:null})();(0,a.useLayoutEffect)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!b({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),p(e)}),[u,p,r]),tabValues:r}}var h=n(1048);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function T(e){let{className:t,block:n,selectedValue:r,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),s=u[n].value;s!==r&&(m(t),o(s))},d=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,s.Z)({role:"tab",tabIndex:r===t?0:-1,"aria-selected":r===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:p},l,{className:(0,i.Z)("tabs__item",f.tabItem,l?.className,{"tabs__item--active":r===t})}),n??t)})))}function v(e){let{lazy:t,children:n,selectedValue:s}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=r.find((e=>e.props.value===s));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==s}))))}function w(e){const t=g(e);return a.createElement("div",{className:(0,i.Z)("tabs-container",f.tabList)},a.createElement(T,(0,s.Z)({},e,t)),a.createElement(v,(0,s.Z)({},e,t)))}function k(e){const t=(0,h.Z)();return a.createElement(w,(0,s.Z)({key:String(t)},e))}const A={tabItem:"tabItem_Ymn6"};function C(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(A.tabItem,s),hidden:n},t)}const N={sidebar_position:1,title:"RSCG - ThisAssembly",description:"The ThisAssembly.Info allows you access to the Assembly Information as constants, instead of going to reflection each time.",slug:"/ThisAssembly"},S=void 0,G={unversionedId:"RSCG-Examples/001ThisAssembly",id:"RSCG-Examples/001ThisAssembly",title:"RSCG - ThisAssembly",description:"The ThisAssembly.Info allows you access to the Assembly Information as constants, instead of going to reflection each time.",source:"@site/docs/RSCG-Examples/001ThisAssembly.md",sourceDirName:"RSCG-Examples",slug:"/ThisAssembly",permalink:"/RSCG_Examples/v2/docs/ThisAssembly",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"RSCG - ThisAssembly",description:"The ThisAssembly.Info allows you access to the Assembly Information as constants, instead of going to reflection each time.",slug:"/ThisAssembly"},sidebar:"tutorialSidebar",previous:{title:"RSCG Examples",permalink:"/RSCG_Examples/v2/docs/category/rscg-examples"},next:{title:"RSCG Without Examples",permalink:"/RSCG_Examples/v2/docs/category/rscg-without-examples"}},I={},E=[{value:"ThisAssembly - https://www.clarius.org/ThisAssembly/",id:"thisassembly---httpswwwclariusorgthisassembly",level:2},{value:"Info",id:"info",level:2},{value:"About",id:"about",level:2},{value:"How to use",id:"how-to-use",level:2},{value:"Example",id:"example",level:3},{value:"Generated Files",id:"generated-files",level:3}],R={toc:E},x="wrapper";function P(e){let{components:t,...n}=e;return(0,r.kt)(x,(0,s.Z)({},R,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"thisassembly---httpswwwclariusorgthisassembly"},"ThisAssembly - ",(0,r.kt)("a",{parentName:"h2",href:"https://www.clarius.org/ThisAssembly/"},"https://www.clarius.org/ThisAssembly/")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/ThisAssembly"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/ThisAssembly?label=ThisAssembly",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/devlooped/ThisAssembly"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/devlooped/ThisAssembly?label=updated",alt:"GitHub last commit"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/devlooped/ThisAssembly?style=social",alt:"GitHub Repo stars"})),(0,r.kt)("h2",{id:"info"},"Info"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Author: Daniel Cazzulino"),(0,r.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/ThisAssembly"},"https://www.nuget.org/packages/ThisAssembly")),(0,r.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,r.kt)("a",{parentName:"p",href:"https://www.clarius.org/ThisAssembly/"},"https://www.clarius.org/ThisAssembly/"))),(0,r.kt)("h2",{id:"about"},"About"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"The ThisAssembly.Info allows you access to the Assembly Information as constants, instead of going to reflection each time."),(0,r.kt)("p",{parentName:"admonition"},"I found useful to see the assembly version right away in any project that I have.")),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)(k,{mdxType:"Tabs"},(0,r.kt)(C,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<Project Sdk="Microsoft.NET.Sdk">\n    <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>netcoreapp7.0</TargetFramework>\n    </PropertyGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GeneratedX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n    <PropertyGroup>\n        <Version>2023.5.7.800</Version>\n    </PropertyGroup>\n    <ItemGroup>\n        <PackageReference Include="ThisAssembly" Version="1.2.14" OutputItemType="Analyzer" ReferenceOutputAssembly="false">\n            <PrivateAssets>all</PrivateAssets>\n            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n        </PackageReference>\n    </ItemGroup>\n</Project>\n\n'))),(0,r.kt)(C,{value:"Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"var strVersion = ThisAssembly.Info.Version;\nSystem.Console.WriteLine(strVersion);\n\n")))),(0,r.kt)("h3",{id:"generated-files"},"Generated Files"),(0,r.kt)(k,{mdxType:"Tabs"},(0,r.kt)(C,{value:"ThisAssembly.AssemblyInfo.g.cs",label:"ThisAssembly.AssemblyInfo.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\nusing System.CodeDom.Compiler;\nusing System.Runtime.CompilerServices;\n\n/// <summary>\n/// Provides access to the current assembly information as pure constants, \n///  without requiring reflection.\n/// </summary>\npartial class ThisAssembly\n{\n    /// <summary>\n    /// Gets the AssemblyInfo attributes.\n    /// </summary>\n    [GeneratedCode("ThisAssembly.AssemblyInfo", "1.2.14")]\n    [CompilerGenerated]\n    public static partial class Info\n    {\n        public const string Company = @"RSCG_Version";\n\n        public const string Configuration = @"Debug";\n\n        public const string FileVersion = @"2023.5.7.800";\n\n        public const string InformationalVersion = @"2023.5.7.800";\n\n        public const string Product = @"RSCG_Version";\n\n        public const string Title = @"RSCG_Version";\n\n        public const string Version = @"2023.5.7.800";\n\n    }\n}\n'))),(0,r.kt)(C,{value:"Branch.g.cs",label:"Branch.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     ThisAssembly.Constants: 1.2.14\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nusing System;\nusing System.Globalization;\n\npartial class ThisAssembly\n{\n    public static partial class Git\n    {\n        /// <summary>\n        /// => @"[pending build]"\n        /// </summary>\n        public const string Branch = @"[pending build]";\n    }\n}\n'))),(0,r.kt)(C,{value:"Commit.g.cs",label:"Commit.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     ThisAssembly.Constants: 1.2.14\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nusing System;\nusing System.Globalization;\n\npartial class ThisAssembly\n{\n    public static partial class Git\n    {\n        /// <summary>\n        /// => @"[pending build]"\n        /// </summary>\n        public const string Commit = @"[pending build]";\n    }\n}\n'))),(0,r.kt)(C,{value:"Root.g.cs",label:"Root.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     ThisAssembly.Constants: 1.2.14\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nusing System;\nusing System.Globalization;\n\npartial class ThisAssembly\n{\n    public static partial class Git\n    {\n        /// <summary>\n        /// => @"[pending build]"\n        /// </summary>\n        public const string Root = @"[pending build]";\n    }\n}\n'))),(0,r.kt)(C,{value:"Sha.g.cs",label:"Sha.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     ThisAssembly.Constants: 1.2.14\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nusing System;\nusing System.Globalization;\n\npartial class ThisAssembly\n{\n    public static partial class Git\n    {\n        /// <summary>\n        /// => @"[pending build]"\n        /// </summary>\n        public const string Sha = @"[pending build]";\n    }\n}\n'))),(0,r.kt)(C,{value:"Url.g.cs",label:"Url.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     ThisAssembly.Constants: 1.2.14\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nusing System;\nusing System.Globalization;\n\npartial class ThisAssembly\n{\n    public static partial class Git\n    {\n        /// <summary>\n        /// => @"[pending build]"\n        /// </summary>\n        public const string Url = @"[pending build]";\n    }\n}\n'))),(0,r.kt)(C,{value:"ThisAssembly.Metadata.g.cs",label:"ThisAssembly.Metadata.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\nusing System.CodeDom.Compiler;\nusing System.Runtime.CompilerServices;\n\n/// <summary>\n/// Provides access to the current assembly information as pure constants, \n///  without requiring reflection.\n/// </summary>\npartial class ThisAssembly\n{\n    /// <summary>\n    /// Gets the assembly metadata.\n    /// </summary>\n    [GeneratedCode("ThisAssembly.Metadata", "1.2.14")]\n    [CompilerGenerated]\n    public static partial class Metadata\n    {\n    }\n}\n'))),(0,r.kt)(C,{value:"ThisAssembly.Property.g.cs",label:"ThisAssembly.Property.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n\nusing System.CodeDom.Compiler;\nusing System.Runtime.CompilerServices;\n\n/// <summary>\n/// Provides access to the current assembly information as pure constants, \n///  without requiring reflection.\n/// </summary>\npartial class ThisAssembly\n{\n    /// <summary>\n    /// Gets the project properties.\n    /// </summary>\n    [GeneratedCode("ThisAssembly.Project", "1.2.14")]\n    [CompilerGenerated]\n    public static partial class Project\n    {\n        /// <summary>AssemblyName = RSCG_Version</summary>\n        public const string AssemblyName = @"RSCG_Version";\n\n        /// <summary>RootNamespace = RSCG_Version</summary>\n        public const string RootNamespace = @"RSCG_Version";\n\n        /// <summary>TargetFrameworkIdentifier = .NETCoreApp</summary>\n        public const string TargetFrameworkIdentifier = @".NETCoreApp";\n\n        /// <summary>TargetFrameworkMoniker = .NETCoreApp,Version=v7.0</summary>\n        public const string TargetFrameworkMoniker = @".NETCoreApp,Version=v7.0";\n\n        /// <summary>TargetFrameworkVersion = v7.0</summary>\n        public const string TargetFrameworkVersion = @"v7.0";\n\n    }\n}\n'))),(0,r.kt)(C,{value:"ThisAssembly.Resources.EmbeddedResource.cs",label:"ThisAssembly.Resources.EmbeddedResource.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using System;\nusing System.IO;\nusing System.Linq;\nusing System.Reflection;\n\nstatic class EmbeddedResource\n{\n    static readonly string baseDir = Path.GetDirectoryName(Assembly.GetExecutingAssembly().Location) ?? \"\";\n\n    public static string GetContent(string relativePath)\n    {\n        using var stream = GetStream(relativePath);\n        using var reader = new StreamReader(stream);\n        return reader.ReadToEnd();\n    }\n\n    public static byte[] GetBytes(string relativePath)\n    {\n        using var stream = GetStream(relativePath);\n        var bytes = new byte[stream.Length];\n        stream.Read(bytes, 0, bytes.Length);\n        return bytes;\n    }\n\n    public static Stream GetStream(string relativePath)\n    {\n        var filePath = Path.Combine(baseDir, Path.GetFileName(relativePath));\n        if (File.Exists(filePath))\n            return File.OpenRead(filePath);\n\n        var baseName = Assembly.GetExecutingAssembly().GetName().Name;\n        var resourceName = relativePath\n            .TrimStart('.')\n            .Replace('/', '.')\n            .Replace('\\\\', '.');\n\n        var manifestResourceName = Assembly.GetExecutingAssembly()\n            .GetManifestResourceNames().FirstOrDefault(x => x.EndsWith(resourceName));\n\n        if (string.IsNullOrEmpty(manifestResourceName))\n            throw new InvalidOperationException($\"Did not find required resource ending in '{resourceName}' in assembly '{baseName}'.\");\n\n        return\n            Assembly.GetExecutingAssembly().GetManifestResourceStream(manifestResourceName) ??\n            throw new InvalidOperationException($\"Did not find required resource '{manifestResourceName}' in assembly '{baseName}'.\");\n    }\n}\n"))),(0,r.kt)(C,{value:"ThisAssembly.Strings.g.cs",label:"ThisAssembly.Strings.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using System.Collections.Concurrent;\nusing System.Resources;\nusing System.Runtime.CompilerServices;\n\n/// <summary>\n/// Provides access to the current assembly information as pure constants, \n///  without requiring reflection.\n/// </summary>\npartial class ThisAssembly\n{\n    /// <summary>\n    /// Access the strings provided by resource files in the project.\n    /// </summary>\n    [CompilerGenerated]\n    public static partial class Strings\n    {\n        static ConcurrentDictionary<string, ResourceManager> resourceManagers = new ConcurrentDictionary<string, ResourceManager>();\n\n        static ResourceManager GetResourceManager(string resourceName)\n            => resourceManagers.GetOrAdd(resourceName, name => new ResourceManager(name, typeof(Strings).Assembly));\n    }\n}\n")))))}P.isMDXComponent=!0}}]);