"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[6966],{31090:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>d,default:()=>m,frontMatter:()=>h,metadata:()=>t,toc:()=>x});const t=JSON.parse('{"id":"RSCG-Examples/ProxyGen","title":"36 - ProxyGen","description":"intercepting and duck typing","source":"@site/docs/RSCG-Examples/ProxyGen.md","sourceDirName":"RSCG-Examples","slug":"/ProxyGen","permalink":"/RSCG_Examples/v2/docs/ProxyGen","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":360,"frontMatter":{"sidebar_position":360,"title":"36 - ProxyGen","description":"intercepting and duck typing","slug":"/ProxyGen"},"sidebar":"tutorialSidebar","previous":{"title":"35 - DeeDee","permalink":"/RSCG_Examples/v2/docs/DeeDee"},"next":{"title":"37 - AutoRegisterInject","permalink":"/RSCG_Examples/v2/docs/AutoRegisterInject"}}');var s=r(74848),o=r(28453),i=r(11470),l=r(19365),a=r(14252),c=r(72101);const h={sidebar_position:360,title:"36 - ProxyGen",description:"intercepting and duck typing",slug:"/ProxyGen"},d="ProxyGen  by D\xe9nes Solti",p={},x=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Purposes",id:"purposes",level:2},{value:"To hook into interface method calls:",id:"to-hook-into-interface-method-calls",level:3},{value:"To create ducks:",id:"to-create-ducks",level:3},{value:"Caching the generated assembly",id:"caching-the-generated-assembly",level:2},{value:"Embedding the generated type",id:"embedding-the-generated-type",level:2},{value:"Inspecting the generated code",id:"inspecting-the-generated-code",level:2},{value:"Migrating from version",id:"migrating-from-version",level:2},{value:"Resources",id:"resources",level:2},{value:"Supported frameworks",id:"supported-frameworks",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share ProxyGen",id:"share-proxygen",level:3},...c.RM];function u(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"proxygen--by-d\xe9nes-solti",children:"ProxyGen  by D\xe9nes Solti"})}),"\n",(0,s.jsx)(a.A,{toc:x}),"\n",(0,s.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/ProxyGen.net/",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/ProxyGen.net?label=ProxyGen.net",alt:"Nuget"})}),"\n",(0,s.jsx)(n.a,{href:"https://github.com/Sholtee/ProxyGen",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/Sholtee/ProxyGen?label=updated",alt:"GitHub last commit"})}),"\n",(0,s.jsx)(n.img,{src:"https://img.shields.io/github/stars/Sholtee/ProxyGen?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,s.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,s.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["Name: ",(0,s.jsx)(n.strong,{children:"ProxyGen"})]}),(0,s.jsx)(n.p,{children:".NET proxy generator powered by Roslyn"}),(0,s.jsx)(n.p,{children:"Author: D\xe9nes Solti"}),(0,s.jsxs)(n.p,{children:["NuGet:\n",(0,s.jsx)(n.em,{children:(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/ProxyGen.net/",children:"https://www.nuget.org/packages/ProxyGen.net/"})})]}),(0,s.jsxs)(n.p,{children:["You can find more details at ",(0,s.jsx)(n.a,{href:"https://github.com/Sholtee/ProxyGen",children:"https://github.com/Sholtee/ProxyGen"})]}),(0,s.jsxs)(n.p,{children:["Source: ",(0,s.jsx)(n.a,{href:"https://github.com/Sholtee/ProxyGen",children:"https://github.com/Sholtee/ProxyGen"})]})]}),"\n",(0,s.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsxs)(n.h1,{id:"proxygennet-build-status-appveyor-tests-coverage-status-nuget-with-prereleases-github-last-commit-branch",children:["ProxyGen.NET ",(0,s.jsx)(n.a,{href:"https://ci.appveyor.com/project/Sholtee/proxygen/branch/master",children:(0,s.jsx)(n.img,{src:"https://ci.appveyor.com/api/projects/status/caw7qqtf5tbaa1fq/branch/master?svg=true",alt:"Build status"})})," ",(0,s.jsx)(n.img,{src:"https://img.shields.io/appveyor/tests/sholtee/proxygen/master",alt:"AppVeyor tests"})," ",(0,s.jsx)(n.a,{href:"https://coveralls.io/github/Sholtee/proxygen?branch=master",children:(0,s.jsx)(n.img,{src:"https://coveralls.io/repos/github/Sholtee/proxygen/badge.svg?branch=master",alt:"Coverage Status"})})," ",(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/proxygen.net",children:(0,s.jsx)(n.img,{src:"https://img.shields.io/nuget/vpre/proxygen.net",alt:"Nuget (with prereleases)"})})," ",(0,s.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/sholtee/proxygen/master",alt:"GitHub last commit (branch)"})]}),(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[".NET proxy generator powered by ",(0,s.jsx)(n.a,{href:"https://github.com/dotnet/roslyn",children:"Roslyn"})]}),"\n"]}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"This documentation refers the version 8.X of the library"})}),(0,s.jsx)(n.h2,{id:"purposes",children:"Purposes"}),(0,s.jsxs)(n.p,{children:["This library currently supports generating ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Proxy_pattern",children:"proxies"})," for interface interception and ",(0,s.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Duck_typing",children:"duck typing"}),"."]}),(0,s.jsx)(n.h3,{id:"to-hook-into-interface-method-calls",children:"To hook into interface method calls:"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Create the interceptor class (which is an ",(0,s.jsx)(n.a,{href:"https://sholtee.github.io/proxygen/doc/Solti.Utils.Proxy.InterfaceInterceptor-1.html",children:"InterfaceInterceptor"})," descendant):"]}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'using Solti.Utils.Proxy;\n...\npublic class MyInterceptor: InterfaceInterceptor<IMyInterface>\n{\n  public MyInterceptor(IMyInterface target) : base(target) {}\n\n  public MyInterceptor(IMyInterface target, MyParam myParam) : base(target) {}  // overloaded constructor\n\n  public override object? Invoke(InvocationContext context) // Invoking the generated proxy instance will trigger this method\n  {\n    if (suppressOriginalMethod)\n    {\n      return something;\n      // ref|out parameters can be assigned by setting the corresponding "context.Args[]" item \n    }\n    \n    context.Args[0] = someNewVal; // "someNewVal" will be forwarded to the original method\n    \n    return base.Invoke(context); // Let the original method do its work\n  }  \n}\n// OR\npublic class MyInterceptorTargetingTheImplementation: InterfaceInterceptor<IMyInterface, MyInterfaceImplementation>\n{\n    public MyInterceptor(MyInterfaceImplementation target) : base(target) {}\n\n    public override object? Invoke(InvocationContext context)\n    {\n        MemberInfo\n            ifaceMember  = context.InterfaceMember,  // Will point to the invoked IMyInterface member (e.g.: IMyInterface.Foo())\n            targetMember = context.TargetMember; // Will point to the underlying MyInterfaceImplementation member (e.g. MyInterfaceImplementation.Foo())\n\n        return base.Invoke(context);\n    }\n}\n'})}),(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Generate a proxy instance invoking the desired constructor:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"using System;\n...\nIMyInterface target = new MyClass();\n...\nIMyInterface proxy;\n\nproxy = ProxyGenerator<IMyInterface, MyInterceptor>.Activate(Tuple.Create(target)); // or ActivateAsync()\nproxy = ProxyGenerator<IMyInterface, MyInterceptor>.Activate(Tuple.Create(target, new MyParam()));\n"})}),(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Enjoy"}),"\n"]}),(0,s.jsxs)(n.p,{children:["Note that the ",(0,s.jsx)(n.em,{children:"target"})," can access its most outer enclosing proxy. To achieve this it just has to implement the ",(0,s.jsx)(n.code,{children:"IProxyAccess<IMyInterface>"})," interface:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"using Solti.Utils.Proxy;\n\npublic class MyClass : IMyInterface, IProxyAccess<IMyInterface>\n{\n    ...\n    public IMyInterface Proxy { get; set; }\n}\n"})}),(0,s.jsxs)(n.p,{children:["For further usage examples see ",(0,s.jsx)(n.a,{href:"https://github.com/Sholtee/proxygen/blob/master/TEST/ProxyGen.Tests/Generators/ProxyGenerator.cs",children:"this"})," or ",(0,s.jsx)(n.a,{href:"https://github.com/Sholtee/injector#decorating-services",children:"that"}),"."]}),(0,s.jsx)(n.h3,{id:"to-create-ducks",children:"To create ducks:"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Declare an interface that covers all the desired members of the target class:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"public class TargetClass // does not implement IDuck\n{\n  public void Foo(){...}\n}\n...\npublic interface IDuck \n{\n  void Foo();\n}\n"})}),(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsx)(n.li,{children:"Generate the duck instance:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"using Solti.Utils.Proxy.Generators;\n...\nTargetClass target = ...;\nIDuck duck = DuckGenerator<IDuck, TargetClass>.Activate(Tuple.Create(target)); // or ActivateAsync()\n"})}),(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"Quack"}),"\n"]}),(0,s.jsxs)(n.p,{children:["Related tests can be seen ",(0,s.jsx)(n.a,{href:"https://github.com/Sholtee/proxygen/blob/master/TEST/ProxyGen.Tests/Generators/DuckGenerator.cs",children:"here"}),"."]}),(0,s.jsx)(n.h2,{id:"caching-the-generated-assembly",children:"Caching the generated assembly"}),(0,s.jsxs)(n.p,{children:["By setting the ",(0,s.jsx)(n.code,{children:"ProxyGen.AssemblyCacheDir"})," property in ",(0,s.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/core/run-time-config/",children:"YourApp.runtimeconfig.json"})," you can make the system cache the generated assembly, so next time your app starts and requests the proxy there won't be time consuming emitting operation."]}),(0,s.jsxs)(n.p,{children:["You can do it easily by creating a template file named ",(0,s.jsx)(n.code,{children:"runtimeconfig.template.json"})," in your project folder:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "configProperties": {\n    "ProxyGen.AssemblyCacheDir": "GeneratedAssemblies"\n  }\n}\n'})}),(0,s.jsx)(n.h2,{id:"embedding-the-generated-type",children:"Embedding the generated type"}),(0,s.jsxs)(n.p,{children:["This library can be used as a ",(0,s.jsx)(n.a,{href:"https://devblogs.microsoft.com/dotnet/introducing-c-source-generators/",children:"source generator"})," so you can embed the generated proxy type into the assembly that uses it. This is simply done by the ",(0,s.jsx)(n.code,{children:"Solti.Utils.Proxy.Attributes.EmbedGeneratedTypeAttribute"}),":"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"[assembly: EmbedGeneratedType(typeof(ProxyGenerator<IMyInterface, MyInterceptor<IMyInterface>>))]\n[assembly: EmbedGeneratedType(typeof(DuckGenerator<IMyInterface, MyClass>))]\n\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"xXxGenerator.GetGeneratedType()"})," method returns the embedded type if it is present in the assembly in which the ",(0,s.jsx)(n.code,{children:"GetGeneratedType()"})," was called. Since all the time consumig operations already happened in compile time, requesting embedded types can singificantly improve the performance."]}),(0,s.jsx)(n.p,{children:"Note that:"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Open generics are not supported."}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/coveralls.io/",children:"coveralls.io"})," (and other coverage reporters) may crash if your project was augmented by a source generator. To work this issue around:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ignore the generated sources in your coverage app (e.g.: in ",(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/OpenCover/",children:"OpenCover"})," use the ",(0,s.jsx)(n.code,{children:"-filter:-[*]Proxies.GeneratedClass_*"})," switch)"]}),"\n",(0,s.jsxs)(n.li,{children:["Create an empty file for each generated class (e.g.: ",(0,s.jsx)(n.code,{children:"YourProject\\Solti.Utils.Proxy\\Solti.Utils.Proxy.Internals.ProxyEmbedder\\Proxies.GeneratedClass_XxX.cs"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"Exclude these files from your project:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<ItemGroup>\n  <Compile Remove="Solti.Utils.Proxy\\**" />\n  <EmbeddedResource Remove="Solti.Utils.Proxy\\**" />\n  <None Remove="Solti.Utils.Proxy\\**" />\n</ItemGroup>\n'})}),"\n"]}),"\n"]}),(0,s.jsx)(n.h2,{id:"inspecting-the-generated-code",children:"Inspecting the generated code"}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.em,{children:"ProxyGen"})," is able to dump the generated sources. Due to performance considerations it is disabled by default. To enable"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"In runtime:"}),"\n",(0,s.jsxs)(n.p,{children:["Set the ",(0,s.jsx)(n.code,{children:"ProxyGen.SourceDump"})," property (in the same way you could see ",(0,s.jsx)(n.a,{href:"#caching-the-generated-assembly",children:"above"}),") to the desired directory (note that environment variables are supported):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "configProperties": {\n    "ProxyGen.SourceDump": "%TEMP%"\n  }\n}\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"In compile time (source generator):"}),"\n",(0,s.jsxs)(n.p,{children:["Extend your ",(0,s.jsx)(n.code,{children:".csproj"})," with the following:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<PropertyGroup>\n  <ProxyGen_SourceDump>$(OutputPath)Logs</ProxyGen_SourceDump>\n</PropertyGroup>\n"})}),"\n"]}),"\n"]}),(0,s.jsxs)(n.p,{children:["The output should look like ",(0,s.jsx)(n.a,{href:"https://github.com/Sholtee/proxygen/blob/master/TEST/ProxyGen.Tests/ClsSrcUnit.txt",children:"this"}),"."]}),(0,s.jsx)(n.h2,{id:"migrating-from-version",children:"Migrating from version"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["2.X","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Delete all the cached assemblies (if the ",(0,s.jsx)(n.code,{children:"[Proxy|Duck]Generator.CacheDirectory"})," is set somewhere)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"InterfaceInterceptor.Invoke()"})," returns the result of the original method (instead of ",(0,s.jsx)(n.code,{children:"CALL_TARGET"}),") so in the override you may never need to invoke the ",(0,s.jsx)(n.code,{children:"method"})," parameter directly."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["3.X","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[Proxy|Duck]Generator.GeneratedType[Async]"})," property has been removed. To get the generated proxy type call the ",(0,s.jsx)(n.code,{children:"[Proxy|Duck]Generator.GetGeneratedType[Async]()"})," method."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"[Proxy|Duck]Generator.CacheDirectory"})," property has been removed. To set the cache directory tweak the ",(0,s.jsx)(n.a,{href:"#caching-the-generated-assembly",children:"runtimeconfig.json"})," file."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["4.X","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The layout of the ",(0,s.jsx)(n.code,{children:"InterfaceInterceptor<>.Invoke()"})," has been changed. Invocation parameters can be grabbed from the ",(0,s.jsx)(n.code,{children:"InvocationContext"})," passed to the ",(0,s.jsx)(n.code,{children:"Invoke()"})," method."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"ConcurrentInterfaceInterceptor<>"})," class has been dropped since the ",(0,s.jsx)(n.code,{children:"InterfaceInterceptor<>"})," class was rewritten in a thread safe manner."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["5.X","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You don't need to manually activate the generated proxy type, instead you may use the built-in ",(0,s.jsx)(n.code,{children:"Generator.Activate()"})," method."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["6.X","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"InvocationContext.InvokeTarget"})," property has been removed but you should not be affected by it"]}),"\n",(0,s.jsxs)(n.li,{children:["As proxy embedder has been reimplemented using the ",(0,s.jsx)(n.a,{href:"https://github.com/dotnet/roslyn/blob/main/docs/features/incremental-generators.md",children:"v2"})," Source Generator API, this feature now requires VS 2022"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["7.X","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"InterfaceInterceptor<TInterface>.Member|Method"})," has been renamed to ",(0,s.jsx)(n.code,{children:"InterfaceMember|InterfaceMethod"})]}),"\n"]}),"\n"]}),"\n"]}),(0,s.jsx)(n.h2,{id:"resources",children:"Resources"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://sholtee.github.io/proxygen",children:"API Docs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://sholtee.github.io/proxygen/perf",children:"Benchmark Results"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/Sholtee/proxygen/blob/master/history.md",children:"Version History"})}),"\n"]}),(0,s.jsx)(n.h2,{id:"supported-frameworks",children:"Supported frameworks"}),(0,s.jsxs)(n.p,{children:["This project currently targets ",(0,s.jsx)(n.em,{children:".NET Standard"})," 2.0 and 2.1."]})]}),"\n",(0,s.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"intercepting and duck typing"})}),"\n",(0,s.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,s.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,s.jsxs)(i.A,{children:[(0,s.jsxs)(l.A,{value:"csproj",label:"CSharp Project",children:[(0,s.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,s.jsx)(n.strong,{children:"ProxyGen"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {14}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t</PropertyGroup>\n  <ItemGroup>\n    <PackageReference Include="ProxyGen.NET" Version="8.2.1" />\n  </ItemGroup>\n\n</Project>\n\n'})})]}),(0,s.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\ProxyGen\\src\\ProxyGenDemo\\Program.cs",label:"Program.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"ProxyGen"})," in ",(0,s.jsx)(n.em,{children:"Program.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'Person person = new ();\nperson.FirstName= "Andrei";\nperson.LastName = "Ignat";\nIPerson duck = DuckGenerator<IPerson, Person>.Activate(Tuple.Create(person));\nConsole.WriteLine(duck.FullName());\n'})})]}),(0,s.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\ProxyGen\\src\\ProxyGenDemo\\Person.cs",label:"Person.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"ProxyGen"})," in ",(0,s.jsx)(n.em,{children:"Person.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'\nnamespace ProxyGenDemo;\n\npublic class Person \n{\n    public int ID { get; set; }\n    public string? FirstName { get; set; }\n    public string? LastName { get; set; }\n    public string FullName()\n    {\n        return $"{FirstName} {LastName}";\n    }\n}\n\n'})})]}),(0,s.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\ProxyGen\\src\\ProxyGenDemo\\IPerson.cs",label:"IPerson.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"ProxyGen"})," in ",(0,s.jsx)(n.em,{children:"IPerson.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"namespace ProxyGenDemo;\n\npublic interface IPerson\n{\n    string? FirstName { get; set; }\n    string? LastName { get; set; }\n\n    string FullName();\n}\n"})})]}),(0,s.jsxs)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\ProxyGen\\src\\ProxyGenDemo\\globals.cs",label:"globals.cs",children:[(0,s.jsxs)(n.p,{children:["This is the use of ",(0,s.jsx)(n.strong,{children:"ProxyGen"})," in ",(0,s.jsx)(n.em,{children:"globals.cs"})]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:"global using ProxyGenDemo;\nglobal using Solti.Utils.Proxy.Generators;\nglobal using Solti.Utils.Proxy.Attributes;\n\n//[assembly: EmbedGeneratedType(typeof(ProxyGenerator<IMyInterface, MyInterceptor<IMyInterface>>))]\n[assembly: EmbedGeneratedType(typeof(DuckGenerator<IPerson, Person>))]\n"})})]})]}),"\n",(0,s.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,s.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,s.jsx)(i.A,{children:(0,s.jsx)(l.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\ProxyGen\\src\\ProxyGenDemo\\obj\\GX\\Solti.Utils.Proxy\\Solti.Utils.Proxy.Internals.ProxyEmbedder\\Duck_BB1E45629CF5010E4068E5BFBB7EF53B.cs",label:"Duck_BB1E45629CF5010E4068E5BFBB7EF53B.cs",children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'#pragma warning disable\n[global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProxyGen.NET", "8.2.1.0"), global::System.Diagnostics.DebuggerNonUserCodeAttribute, global::System.Runtime.CompilerServices.CompilerGeneratedAttribute]\ninternal sealed class Duck_BB1E45629CF5010E4068E5BFBB7EF53B : global::Solti.Utils.Proxy.Internals.DuckBase<global::ProxyGenDemo.Person>, global::ProxyGenDemo.IPerson\n{\n    public Duck_BB1E45629CF5010E4068E5BFBB7EF53B(global::ProxyGenDemo.Person target) : base(target)\n    {\n    }\n\n    [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n    global::System.String global::ProxyGenDemo.IPerson.FullName() => this.Target.FullName();\n    global::System.String global::ProxyGenDemo.IPerson.FirstName {[global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n        get => this.Target.FirstName; [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n        set => this.Target.FirstName = value; }\n\n    global::System.String global::ProxyGenDemo.IPerson.LastName {[global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n        get => this.Target.LastName; [global::System.Runtime.CompilerServices.MethodImplAttribute(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n        set => this.Target.LastName = value; }\n\n    public static readonly global::System.Func<global::System.Object, global::System.Object> __Activator = tuple =>\n    {\n        switch (tuple)\n        {\n            case global::System.Tuple<global::ProxyGenDemo.Person> t0:\n                return new global::Duck_BB1E45629CF5010E4068E5BFBB7EF53B(t0.Item1);\n            default:\n                throw new global::System.MissingMethodException("Constructor with the given layout cannot be found.");\n        }\n    };\n    [global::System.Runtime.CompilerServices.ModuleInitializerAttribute]\n    public static void Initialize() => global::Solti.Utils.Proxy.Internals.LoadedTypes.Register(typeof(global::Duck_BB1E45629CF5010E4068E5BFBB7EF53B));\n}\n'})})})}),"\n",(0,s.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,s.jsx)(n.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(34270).A+"",children:"Download Example project ProxyGen "})})}),"\n",(0,s.jsx)(n.h3,{id:"share-proxygen",children:"Share ProxyGen"}),"\n",(0,s.jsxs)("ul",{children:[(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FProxyGen&quote=ProxyGen",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FProxyGen&text=ProxyGen:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FProxyGen",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FProxyGen&title=ProxyGen",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,s.jsx)("li",{children:(0,s.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FProxyGen&title=ProxyGen&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FProxyGen",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/ProxyGen",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/ProxyGen"})}),"\n",(0,s.jsx)(n.p,{children:"aaa"}),"\n",(0,s.jsx)(c.Ay,{})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},34270:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/files/ProxyGen-45300c91786a6983e4736a6063254ddd.zip"},72101:(e,n,r)=>{r.d(n,{Ay:()=>l,RM:()=>o});var t=r(74848),s=r(28453);const o=[{value:"Category &quot;Interface&quot; has the following generators:",id:"category-interface-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function i(e){const n={a:"a",h3:"h3",p:"p",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"category-interface-has-the-following-generators",children:'Category "Interface" has the following generators:'}),"\n",(0,t.jsxs)(n.p,{children:["1 ",(0,t.jsx)(n.a,{href:"/docs/AutoInterface",children:"AutoInterface"})]}),"\n",(0,t.jsxs)(n.p,{children:["2 ",(0,t.jsx)(n.a,{href:"/docs/Biwen.AutoClassGen",children:"Biwen.AutoClassGen"})]}),"\n",(0,t.jsxs)(n.p,{children:["3 ",(0,t.jsx)(n.a,{href:"/docs/CopyCat",children:"CopyCat"})]}),"\n",(0,t.jsxs)(n.p,{children:["4 ",(0,t.jsx)(n.a,{href:"/docs/Farskeptic.AutoCompose",children:"Farskeptic.AutoCompose"})]}),"\n",(0,t.jsxs)(n.p,{children:["5 ",(0,t.jsx)(n.a,{href:"/docs/MakeInterface.Generator",children:"MakeInterface.Generator"})]}),"\n",(0,t.jsxs)(n.p,{children:["6 ",(0,t.jsx)(n.a,{href:"/docs/Matryoshki",children:"Matryoshki"})]}),"\n",(0,t.jsxs)(n.p,{children:["7 ",(0,t.jsx)(n.a,{href:"/docs/Minerals.AutoInterfaces",children:"Minerals.AutoInterfaces"})]}),"\n",(0,t.jsxs)(n.p,{children:["8 ",(0,t.jsx)(n.a,{href:"/docs/NetAutomaticInterface",children:"NetAutomaticInterface"})]}),"\n",(0,t.jsxs)(n.p,{children:["9 ",(0,t.jsx)(n.a,{href:"/docs/ProxyGen",children:"ProxyGen"})]}),"\n",(0,t.jsxs)(n.p,{children:["10 ",(0,t.jsx)(n.a,{href:"/docs/Roozie.AutoInterface",children:"Roozie.AutoInterface"})]}),"\n",(0,t.jsxs)(n.p,{children:["11 ",(0,t.jsx)(n.a,{href:"/docs/RSCG_CompositeProvider",children:"RSCG_CompositeProvider"})]}),"\n",(0,t.jsxs)(n.p,{children:["12 ",(0,t.jsx)(n.a,{href:"/docs/rscg_Interface_to_null_object",children:"rscg_Interface_to_null_object"})]}),"\n",(0,t.jsxs)(n.p,{children:["13 ",(0,t.jsx)(n.a,{href:"/docs/RSCG_Static",children:"RSCG_Static"})]}),"\n",(0,t.jsxs)(n.p,{children:["14 ",(0,t.jsx)(n.a,{href:"/docs/ShadowWriterNullobjects",children:"ShadowWriterNullobjects"})]}),"\n",(0,t.jsx)(n.h3,{id:"see-category",children:"See category"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"/docs/Categories/Interface",children:"Interface"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(i,{...e})}):i(e)}}}]);