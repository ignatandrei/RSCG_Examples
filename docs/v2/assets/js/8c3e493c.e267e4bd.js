"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[1630],{89075:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>k,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>m,toc:()=>p});var a=s(87462),o=(s(67294),s(3905)),i=s(73992),n=s(18679),l=s(68839);const r={sidebar_position:930,title:"93 - mocklis",description:"Generating mocks from classes for unit tests",slug:"/mocklis"},c="mocklis  by Esbj\xf6rn Redmo",m={unversionedId:"RSCG-Examples/mocklis",id:"RSCG-Examples/mocklis",title:"93 - mocklis",description:"Generating mocks from classes for unit tests",source:"@site/docs/RSCG-Examples/mocklis.md",sourceDirName:"RSCG-Examples",slug:"/mocklis",permalink:"/RSCG_Examples/v2/docs/mocklis",draft:!1,tags:[],version:"current",sidebarPosition:930,frontMatter:{sidebar_position:930,title:"93 - mocklis",description:"Generating mocks from classes for unit tests",slug:"/mocklis"},sidebar:"tutorialSidebar",previous:{title:"92 - RSCG_UtilityTypes",permalink:"/RSCG_Examples/v2/docs/RSCG_UtilityTypes"},next:{title:"94 - AspectGenerator",permalink:"/RSCG_Examples/v2/docs/AspectGenerator"}},k={},p=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share mocklis",id:"share-mocklis",level:3},{value:"In the same category (Tests) - 2 other generators",id:"in-the-same-category-tests---2-other-generators",level:3},{value:"Ridge",id:"ridge",level:4},{value:"Rocks",id:"rocks",level:4}],d={toc:p},u="wrapper";function h(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"mocklis--by-esbj\xf6rn-redmo"},"mocklis  by Esbj\xf6rn Redmo"),(0,o.kt)(l.Z,{toc:p,mdxType:"TOCInline"}),(0,o.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/mocklis/"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/mocklis?label=mocklis",alt:"Nuget"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mocklis/mocklis/"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/mocklis/mocklis?label=updated",alt:"GitHub last commit"})),"\n",(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/mocklis/mocklis?style=social",alt:"GitHub Repo stars"})),(0,o.kt)("h2",{id:"details"},"Details"),(0,o.kt)("h3",{id:"info"},"Info"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Name: ",(0,o.kt)("strong",{parentName:"p"},"mocklis")),(0,o.kt)("p",{parentName:"admonition"},"Mocklis is a library and source code generator for .net, targeted at generating test doubles from interfaces. This package contains tools for writing tests using the generated code."),(0,o.kt)("p",{parentName:"admonition"},"Author: Esbj\xf6rn Redmo"),(0,o.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/mocklis/"},"https://www.nuget.org/packages/mocklis/")),"   "),(0,o.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,o.kt)("a",{parentName:"p",href:"https://mocklis.readthedocs.io/en/latest/getting-started/index.html"},"https://mocklis.readthedocs.io/en/latest/getting-started/index.html")),(0,o.kt)("p",{parentName:"admonition"},"Source : ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mocklis/mocklis/"},"https://github.com/mocklis/mocklis/"))),(0,o.kt)("h3",{id:"original-readme"},"Original Readme"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("em",{parentName:"p"},"Mocklis is a library and source code generator for .net, targeted at generating test doubles from interfaces.")),(0,o.kt)("hr",{parentName:"admonition"}),(0,o.kt)("h3",{parentName:"admonition",id:"useful-links"},"Useful Links:"),(0,o.kt)("p",{parentName:"admonition"},"Home page: ",(0,o.kt)("a",{parentName:"p",href:"https://mocklis.net"},"https://mocklis.net")),(0,o.kt)("p",{parentName:"admonition"},"Github project page: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/mocklis"},"https://github.com/mocklis")),(0,o.kt)("p",{parentName:"admonition"},"Documentation: ",(0,o.kt)("a",{parentName:"p",href:"https://mocklis.readthedocs.io"},"https://mocklis.readthedocs.io")),(0,o.kt)("p",{parentName:"admonition"},"NuGet page: ",(0,o.kt)("a",{parentName:"p",href:"https://www.nuget.org/profiles/mocklis"},"https://www.nuget.org/profiles/mocklis"))),(0,o.kt)("h3",{id:"about"},"About"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Generating mocks from classes for unit tests")),(0,o.kt)("h2",{id:"how-to-use"},"How to use"),(0,o.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(n.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,o.kt)("p",null,"This is the CSharp Project that references ",(0,o.kt)("strong",{parentName:"p"},"mocklis")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {14}",showLineNumbers:!0,"{14}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n\n    <IsPackable>false</IsPackable>\n    <IsTestProject>true</IsTestProject>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.9.0-preview-23577-04" />\n    <PackageReference Include="Mocklis" Version="1.4.0-alpha.2" />\n    <PackageReference Include="MSTest.TestAdapter" Version="3.2.0-preview.23623.1" />\n    <PackageReference Include="MSTest.TestFramework" Version="3.2.0-preview.23623.1" />\n    <PackageReference Include="coverlet.collector" Version="6.0.0">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n  </ItemGroup>\n\n  <ItemGroup>\n    <ProjectReference Include="..\\MockLisClock\\MockLisClock.csproj" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n</Project>\n\n'))),(0,o.kt)(n.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Mocklis\\src\\MockLisTest\\TestMock.cs",label:"TestMock.cs",mdxType:"TabItem"},(0,o.kt)("p",null,"  This is the use of ",(0,o.kt)("strong",{parentName:"p"},"mocklis")," in ",(0,o.kt)("em",{parentName:"p"},"TestMock.cs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"namespace TestClock;\n\n[MocklisClass]\npublic partial class TestMock : IMyClock\n{\n\n}\n"))),(0,o.kt)(n.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Mocklis\\src\\MockLisTest\\TestClock.cs",label:"TestClock.cs",mdxType:"TabItem"},(0,o.kt)("p",null,"  This is the use of ",(0,o.kt)("strong",{parentName:"p"},"mocklis")," in ",(0,o.kt)("em",{parentName:"p"},"TestClock.cs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"\nusing Mocklis;\n\nnamespace TestClock;\n\n[TestClass]\npublic class TestClock\n{\n    [TestMethod]\n    public void TestMyClock()\n    {\n        var mockSetup = new TestMock();\n        mockSetup.GetNow.Return(DateTime.Now.AddYears(-1));\n\n        // When testing the mock like this you need to cast to the interface.\n        // This is different from e.g. Moq where the mocked instance and the 'programming interface' are different things.\n        // With Mocklis they are the same. The 99% case is where the mock is passed to another constructor as a dependency,\n        // in which case there's an implicit cast to the interface.\n        var mock = (IMyClock)mockSetup;\n        var data = mock.GetNow();\n        Assert.AreEqual(DateTime.Now.Year - 1, data.Year);\n\n    }\n}\n"))),(0,o.kt)(n.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Mocklis\\src\\MockLisTest\\Usings.cs",label:"Usings.cs",mdxType:"TabItem"},(0,o.kt)("p",null,"  This is the use of ",(0,o.kt)("strong",{parentName:"p"},"mocklis")," in ",(0,o.kt)("em",{parentName:"p"},"Usings.cs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"global using Microsoft.VisualStudio.TestTools.UnitTesting;\nglobal using MockTest;\nglobal using Mocklis.Core;\n")))),(0,o.kt)("h3",{id:"generated-files"},"Generated Files"),(0,o.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,o.kt)(i.Z,{mdxType:"Tabs"},(0,o.kt)(n.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Mocklis\\src\\MockLisTest\\obj\\GX\\Mocklis.MockGenerator\\Mocklis.MockGenerator.MocklisSourceGenerator\\TestClock.TestMock.g.cs",label:"TestClock.TestMock.g.cs",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated />\n\n#nullable enable\n\nnamespace TestClock\n{\n    partial class TestMock\n    {\n        public global::Mocklis.Core.FuncMethodMock<global::System.DateTime> GetNow { get; }\n\n        global::System.DateTime global::MockTest.IMyClock.GetNow() => GetNow.Call();\n\n        public global::Mocklis.Core.FuncMethodMock<global::System.DateTime> GetUtcNow { get; }\n\n        global::System.DateTime global::MockTest.IMyClock.GetUtcNow() => GetUtcNow.Call();\n\n        public TestMock() : base()\n        {\n            this.GetNow = new global::Mocklis.Core.FuncMethodMock<global::System.DateTime>(this, "TestMock", "IMyClock", "GetNow", "GetNow", global::Mocklis.Core.Strictness.Lenient);\n            this.GetUtcNow = new global::Mocklis.Core.FuncMethodMock<global::System.DateTime>(this, "TestMock", "IMyClock", "GetUtcNow", "GetUtcNow", global::Mocklis.Core.Strictness.Lenient);\n        }\n    }\n}\n\n')))),(0,o.kt)("h2",{id:"usefull"},"Usefull"),(0,o.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{target:"_blank",href:s(839).Z},"Download Example project mocklis "))),(0,o.kt)("h3",{id:"share-mocklis"},"Share mocklis"),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fmocklis&quote=mocklis",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fmocklis&text=mocklis:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fmocklis",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fmocklis&title=mocklis",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fmocklis&title=mocklis&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2Fmocklis",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/mocklis"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/mocklis")),(0,o.kt)("h3",{id:"in-the-same-category-tests---2-other-generators"},"In the same category (Tests) - 2 other generators"),(0,o.kt)("h4",{id:"ridge"},(0,o.kt)("a",{parentName:"h4",href:"/docs/Ridge"},"Ridge")),(0,o.kt)("h4",{id:"rocks"},(0,o.kt)("a",{parentName:"h4",href:"/docs/Rocks"},"Rocks")))}h.isMDXComponent=!0},839:(e,t,s)=>{s.d(t,{Z:()=>a});const a=s.p+"assets/files/mocklis-c68ca5808a010e9c840e3b86b0da741a.zip"}}]);