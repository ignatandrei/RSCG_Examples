"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[7056],{40740:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>m,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var n=a(87462),r=(a(67294),a(3905)),o=a(73992),i=a(18679),s=a(68839);const l={sidebar_position:1860,title:"186 - RSCG_CompositeProvider",description:"Generate composite class from interface, using multiple sources",slug:"/RSCG_CompositeProvider"},m="RSCG_CompositeProvider  by Ignat Andrei",p={unversionedId:"RSCG-Examples/RSCG_CompositeProvider",id:"RSCG-Examples/RSCG_CompositeProvider",title:"186 - RSCG_CompositeProvider",description:"Generate composite class from interface, using multiple sources",source:"@site/docs/RSCG-Examples/RSCG_CompositeProvider.md",sourceDirName:"RSCG-Examples",slug:"/RSCG_CompositeProvider",permalink:"/RSCG_Examples/v2/docs/RSCG_CompositeProvider",draft:!1,tags:[],version:"current",sidebarPosition:1860,frontMatter:{sidebar_position:1860,title:"186 - RSCG_CompositeProvider",description:"Generate composite class from interface, using multiple sources",slug:"/RSCG_CompositeProvider"},sidebar:"tutorialSidebar",previous:{title:"185 - DependencyModules.SourceGenerator",permalink:"/RSCG_Examples/v2/docs/DependencyModules.SourceGenerator"},next:{title:"187 - EntityLengths.Generator",permalink:"/RSCG_Examples/v2/docs/EntityLengths.Generator"}},u={},c=[{value:"Nuget / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share RSCG_CompositeProvider",id:"share-rscg_compositeprovider",level:3},{value:"In the same category (Interface) - 11 other generators",id:"in-the-same-category-interface---11-other-generators",level:3},{value:"Biwen.AutoClassGen",id:"biwenautoclassgen",level:4},{value:"CopyCat",id:"copycat",level:4},{value:"Farskeptic.AutoCompose",id:"farskepticautocompose",level:4},{value:"MakeInterface.Generator",id:"makeinterfacegenerator",level:4},{value:"Matryoshki",id:"matryoshki",level:4},{value:"Minerals.AutoInterfaces",id:"mineralsautointerfaces",level:4},{value:"NetAutomaticInterface",id:"netautomaticinterface",level:4},{value:"ProxyGen",id:"proxygen",level:4},{value:"Roozie.AutoInterface",id:"roozieautointerface",level:4},{value:"rscg_Interface_to_null_object",id:"rscg_interface_to_null_object",level:4},{value:"RSCG_Static",id:"rscg_static",level:4}],d={toc:c},C="wrapper";function g(e){let{components:t,...l}=e;return(0,r.kt)(C,(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"rscg_compositeprovider--by-ignat-andrei"},"RSCG_CompositeProvider  by Ignat Andrei"),(0,r.kt)(s.Z,{toc:c,mdxType:"TOCInline"}),(0,r.kt)("h2",{id:"nuget--site-data"},"Nuget / site data"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RSCG_CompositeProvider/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/RSCG_CompositeProvider?label=RSCG_CompositeProvider",alt:"Nuget"})),(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RSCG_CompositeProvider_common/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/RSCG_CompositeProvider_common?label=RSCG_CompositeProvider_common",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_CompositeProvider"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/ignatandrei/RSCG_CompositeProvider?label=updated",alt:"GitHub last commit"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/ignatandrei/RSCG_CompositeProvider?style=social",alt:"GitHub Repo stars"})),(0,r.kt)("h2",{id:"details"},"Details"),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Name: ",(0,r.kt)("strong",{parentName:"p"},"RSCG_CompositeProvider")),(0,r.kt)("p",{parentName:"admonition"},"Interface to null object - common"),(0,r.kt)("p",{parentName:"admonition"},"Author: Ignat Andrei"),(0,r.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/RSCG_CompositeProvider/"},"https://www.nuget.org/packages/RSCG_CompositeProvider/")),"   "),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/RSCG_CompositeProvider_common/"},"https://www.nuget.org/packages/RSCG_CompositeProvider_common/")),"   "),(0,r.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_CompositeProvider"},"https://github.com/ignatandrei/RSCG_CompositeProvider")),(0,r.kt)("p",{parentName:"admonition"},"Source : ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_CompositeProvider"},"https://github.com/ignatandrei/RSCG_CompositeProvider"))),(0,r.kt)("h3",{id:"original-readme"},"Original Readme"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("h1",{parentName:"admonition",id:"rscg_compositeprovider"},"RSCG_CompositeProvider"),(0,r.kt)("p",{parentName:"admonition"},"Composite provider from interface . Given multiple implementation of an interface , return data from each / one "),(0,r.kt)("h2",{parentName:"admonition",id:"usage"},"Usage"),(0,r.kt)("p",{parentName:"admonition"},"Add the nuget package to your project"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre"},"dotnet add package RSCG_CompositeProvider\ndotnet add package RSCG_CompositeProviderCommon\n")),(0,r.kt)("p",{parentName:"admonition"},"or put in your csproj file"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'  <ItemGroup>\n    <PackageReference Include="RSCG_CompositeProvider" Version="2025.218.2100" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />\n    <PackageReference Include="RSCG_CompositeProvider_Common" Version="2025.218.2100" />\n  </ItemGroup>\n')),(0,r.kt)("p",{parentName:"admonition"},"Then if you have an interface like this"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public interface IDataFrom\n{\n    string Name { get; }\n    Task<string> KeyFromValue(string value, bool isKey);\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"and multiple implementation of the interface like this"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'class DataFromHttp : IDataValue\n{\n    public string Name { get { return "DataFromHttp"; } set { } }\n\n    public async Task<string> KeyFromValue(string key, bool defaultValue)\n    {\n        var http=new HttpClient();\n        var result = await http.GetStringAsync("https://www."+ Guid.NewGuid().ToString()+".com/" + key);\n        return result;\n    }\n}\n\n\nclass DataFromMemory : IDataValue\n{\n    public string Name { get { return "DataFromMemory"; } set { } }\n\n    public async Task<string> KeyFromValue(string key, bool defaultValue)\n    {\n        await Task.Delay(1000);\n        return $"this is value for {key} from memory";\n    }\n}\n')),(0,r.kt)("p",{parentName:"admonition"},"then you can call the composite provider to get data from all the implementation of the interface like this"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'\nIDataValue provider = new DataValue_CP(new DataFromHttp(), new DataFromMemory());\nvar result = await provider.KeyFromValue("test", false);\nConsole.WriteLine(result);\nDataValue_CP realClass = (DataValue_CP)provider ;\nvar lastInterface = realClass.lastUsedInterface ?? -1;\nConsole.WriteLine("value was obtained from " + realClass.Get(lastInterface).Name);\n'))),(0,r.kt)("h3",{id:"about"},"About"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Generate composite class from interface, using multiple sources")),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,r.kt)("p",null,"This is the CSharp Project that references ",(0,r.kt)("strong",{parentName:"p"},"RSCG_CompositeProvider")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {14}",showLineNumbers:!0,"{14}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n      <IsPackable>false</IsPackable>\n  <TreatWarningsAsErrors>true</TreatWarningsAsErrors>\n</PropertyGroup>\n\n  \n  <ItemGroup>\n    <PackageReference Include="RSCG_CompositeProvider" Version="2025.218.2100" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />\n    <PackageReference Include="RSCG_CompositeProvider_Common" Version="2025.218.2100" />\n  </ItemGroup>\n  <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_CompositeProvider\\src\\CP_Console\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"RSCG_CompositeProvider")," in ",(0,r.kt)("em",{parentName:"p"},"Program.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using CP_Console;\n\nIDataValue provider = new DataValue_CP(new DataFromHttp(), new DataFromMemory());\nvar result = await provider.KeyFromValue("test", false);\nConsole.WriteLine(result);\nDataValue_CP realClass = (DataValue_CP)provider ;\nvar lastInterface = realClass.lastUsedInterface ?? -1;\nConsole.WriteLine("value was obtained from " + realClass.Get(lastInterface).Name);\n'))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_CompositeProvider\\src\\CP_Console\\IDataValue.cs",label:"IDataValue.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"RSCG_CompositeProvider")," in ",(0,r.kt)("em",{parentName:"p"},"IDataValue.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using RSCG_CompositeProvider_Common;\n\nnamespace CP_Console;\n[CompositeProvider]\npublic interface IDataValue\n{\n    public string Name { get; set; }\n    public Task<string> KeyFromValue(string key, bool defaultValue);\n\n    \n}\n\n"))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_CompositeProvider\\src\\CP_Console\\DataFromHttp.cs",label:"DataFromHttp.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"RSCG_CompositeProvider")," in ",(0,r.kt)("em",{parentName:"p"},"DataFromHttp.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'\nnamespace CP_Console;\n\nclass DataFromHttp : IDataValue\n{\n    public string Name { get { return "DataFromHttp"; } set { } }\n\n    public async Task<string> KeyFromValue(string key, bool defaultValue)\n    {\n        var http=new HttpClient();\n        var result = await http.GetStringAsync("https://www."+ Guid.NewGuid().ToString()+".com/" + key);\n        return result;\n    }\n}\n\n\nclass DataFromMemory : IDataValue\n{\n    public string Name { get { return "DataFromMemory"; } set { } }\n\n    public async Task<string> KeyFromValue(string key, bool defaultValue)\n    {\n        await Task.Delay(1000);\n        return $"this is value for {key} from memory";\n    }\n}\n')))),(0,r.kt)("h3",{id:"generated-files"},"Generated Files"),(0,r.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_CompositeProvider\\src\\CP_Console\\obj\\GX\\NameGenerator\\NameGenerator.NameGen\\TheAssemblyInfo.g.cs",label:"TheAssemblyInfo.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'\n                // <auto-generated/>\n                namespace Generated.CP_Console\n                {\n                    public static class TheAssemblyInfo\n                    {\n                        \n                        public static readonly System.DateTime DateGeneratedUTC ;\n                        public const string AssemblyName = "CP_Console";\n                        public const string GeneratedNameNice = "Joseph Brodsky is feeling hard in Willemstad";\n                        public const string GeneratedNameSmall = "hard-Joseph Brodsky";\n                        public const string GeneratedName = "hard-Joseph Brodsky-Willemstad";\n                        static TheAssemblyInfo(){\n                            DateGeneratedUTC = System.DateTime.ParseExact("2025-07-24 04:41:22", "yyyy-MM-dd HH:mm:ss", null);\n                        }\n                    }\n                }\n'))),(0,r.kt)(i.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_CompositeProvider\\src\\CP_Console\\obj\\GX\\RSCG_CompositeProvider\\RSCG_CompositeProvider.ToCompositeProvider\\IDataValue_cp.cs",label:"IDataValue_cp.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated>\n    //     This code was generated by a tool :RSCG_CompositeProvider\n    //     Runtime Version: Herta M\xfcller is feeling amiable in George Town\n    //     DateOfTool : 2025-02-18 17:23:31\n    //     Changes to this file may cause incorrect behavior and will be lost if\n    //     the code is regenerated.\n    //</auto-generated>\n//------------------------------------------------------------------------------\n/// <summary>\n    /// This static partial class is a composite provider of IDataValue objects. \n    ///</summary>\n\n#nullable enable\n#pragma warning disable CS8603\n#pragma warning disable CS8625\n[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]\n[global::System.CodeDom.Compiler.GeneratedCode("GeneratorName","2025.10218.11723.131")]\n[System.Diagnostics.DebuggerDisplay("Name = {Name} ")]\npublic partial class DataValue_CP : global::CP_Console.IDataValue\n{\npublic int? lastUsedInterface ;\n\nprivate global::CP_Console.IDataValue[] values;\npublic DataValue_CP(params global::CP_Console.IDataValue[] values){\nthis.values=values;\n}\npublic int Count{\nget{\nreturn values.Length;\n}\n}\npublic global::CP_Console.IDataValue Get(int nr){\n    return values[nr];\n}\n\n\n\n\n        public string Name { get\n        {\n        lastUsedInterface = null;\n        foreach(var item in values){\n        lastUsedInterface =(lastUsedInterface ??-1)+1;\n        if(item == null)continue;\n        try{\n        return item.Name;\n        }\n        catch(Exception ){\n        //try with the next one\n        }\n        }\n        throw new System.Collections.Generic.KeyNotFoundException();\n        }\n        set\n        {\n        foreach(var item in values){\n        if(item == null)continue;\n        try{\n        item.Name = value;\n        }\n        catch(Exception ){\n        //try with the next one\n        }\n        }\n        }\n\n        } \n    \n            public virtual  async  System.Threading.Tasks.Task<string> KeyFromValue(string key, bool defaultValue) {\n                lastUsedInterface =null;\n                foreach(var item in values){\n                    lastUsedInterface =(lastUsedInterface ??-1)+1;\n                    if(item == null)continue;\n                    try{\n                        var data=   await  item.KeyFromValue(key, defaultValue) ;\n                        return data;\n                    }\n                    catch(Exception ){\n                        //try with the next one\n                    }\n                }\n                throw new System.Collections.Generic.KeyNotFoundException();\n            }\n        \n}\n')))),(0,r.kt)("h2",{id:"usefull"},"Usefull"),(0,r.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{target:"_blank",href:a(90337).Z},"Download Example project RSCG_CompositeProvider "))),(0,r.kt)("h3",{id:"share-rscg_compositeprovider"},"Share RSCG_CompositeProvider"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_CompositeProvider&quote=RSCG_CompositeProvider",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_CompositeProvider&text=RSCG_CompositeProvider:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_CompositeProvider",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_CompositeProvider&title=RSCG_CompositeProvider",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_CompositeProvider&title=RSCG_CompositeProvider&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_CompositeProvider",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RSCG_CompositeProvider"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RSCG_CompositeProvider")),(0,r.kt)("h3",{id:"in-the-same-category-interface---11-other-generators"},"In the same category (Interface) - 11 other generators"),(0,r.kt)("h4",{id:"biwenautoclassgen"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Biwen.AutoClassGen"},"Biwen.AutoClassGen")),(0,r.kt)("h4",{id:"copycat"},(0,r.kt)("a",{parentName:"h4",href:"/docs/CopyCat"},"CopyCat")),(0,r.kt)("h4",{id:"farskepticautocompose"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Farskeptic.AutoCompose"},"Farskeptic.AutoCompose")),(0,r.kt)("h4",{id:"makeinterfacegenerator"},(0,r.kt)("a",{parentName:"h4",href:"/docs/MakeInterface.Generator"},"MakeInterface.Generator")),(0,r.kt)("h4",{id:"matryoshki"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Matryoshki"},"Matryoshki")),(0,r.kt)("h4",{id:"mineralsautointerfaces"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Minerals.AutoInterfaces"},"Minerals.AutoInterfaces")),(0,r.kt)("h4",{id:"netautomaticinterface"},(0,r.kt)("a",{parentName:"h4",href:"/docs/NetAutomaticInterface"},"NetAutomaticInterface")),(0,r.kt)("h4",{id:"proxygen"},(0,r.kt)("a",{parentName:"h4",href:"/docs/ProxyGen"},"ProxyGen")),(0,r.kt)("h4",{id:"roozieautointerface"},(0,r.kt)("a",{parentName:"h4",href:"/docs/Roozie.AutoInterface"},"Roozie.AutoInterface")),(0,r.kt)("h4",{id:"rscg_interface_to_null_object"},(0,r.kt)("a",{parentName:"h4",href:"/docs/rscg_Interface_to_null_object"},"rscg_Interface_to_null_object")),(0,r.kt)("h4",{id:"rscg_static"},(0,r.kt)("a",{parentName:"h4",href:"/docs/RSCG_Static"},"RSCG_Static")))}g.isMDXComponent=!0},90337:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/files/RSCG_CompositeProvider-ab3013195707f141d0c0dffab2b6382e.zip"}}]);