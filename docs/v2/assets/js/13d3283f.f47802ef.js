"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[528],{95:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>g,frontMatter:()=>l,metadata:()=>m,toc:()=>d});var r=o(7462),n=(o(7294),o(4137)),a=o(3992),s=o(425),i=o(8839);const l={sidebar_position:680,title:"68 - JsonPolymorphicGenerator",description:"Generating JsonDerivedType to be added to the base class",slug:"/JsonPolymorphicGenerator"},p="JsonPolymorphicGenerator  by surgicalcoder",m={unversionedId:"RSCG-Examples/JsonPolymorphicGenerator",id:"RSCG-Examples/JsonPolymorphicGenerator",title:"68 - JsonPolymorphicGenerator",description:"Generating JsonDerivedType to be added to the base class",source:"@site/docs/RSCG-Examples/JsonPolymorphicGenerator.md",sourceDirName:"RSCG-Examples",slug:"/JsonPolymorphicGenerator",permalink:"/RSCG_Examples/v2/docs/JsonPolymorphicGenerator",draft:!1,tags:[],version:"current",sidebarPosition:680,frontMatter:{sidebar_position:680,title:"68 - JsonPolymorphicGenerator",description:"Generating JsonDerivedType to be added to the base class",slug:"/JsonPolymorphicGenerator"},sidebar:"tutorialSidebar",previous:{title:"67 - MapTo",permalink:"/RSCG_Examples/v2/docs/MapTo"},next:{title:"69 - RSCG_Templating",permalink:"/RSCG_Examples/v2/docs/RSCG_Templating"}},c={},d=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share JsonPolymorphicGenerator",id:"share-jsonpolymorphicgenerator",level:3},{value:"In the same category (Serializer)",id:"in-the-same-category-serializer",level:2},{value:"ProtobufSourceGenerator",id:"protobufsourcegenerator",level:3},{value:"System.Text.Json",id:"systemtextjson",level:3}],h={toc:d},u="wrapper";function g(e){let{components:t,...l}=e;return(0,n.kt)(u,(0,r.Z)({},h,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"jsonpolymorphicgenerator--by-surgicalcoder"},"JsonPolymorphicGenerator  by surgicalcoder"),(0,n.kt)(i.Z,{toc:d,mdxType:"TOCInline"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/GoLive.Generator.JsonPolymorphicGenerator/"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/GoLive.Generator.JsonPolymorphicGenerator?label=GoLive.Generator.JsonPolymorphicGenerator",alt:"Nuget"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/surgicalcoder/JsonPolymorphicGenerator"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/surgicalcoder/JsonPolymorphicGenerator?label=updated",alt:"GitHub last commit"})),"\n",(0,n.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/surgicalcoder/JsonPolymorphicGenerator?style=social",alt:"GitHub Repo stars"})),(0,n.kt)("h2",{id:"details"},"Details"),(0,n.kt)("h3",{id:"info"},"Info"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Name: ",(0,n.kt)("strong",{parentName:"p"},"JsonPolymorphicGenerator")),(0,n.kt)("p",{parentName:"admonition"},"Source Code Generator for System.Text.Json JsonDerivedType attributes on polymorphic classes"),(0,n.kt)("p",{parentName:"admonition"},"Author: surgicalcoder"),(0,n.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/GoLive.Generator.JsonPolymorphicGenerator/"},"https://www.nuget.org/packages/GoLive.Generator.JsonPolymorphicGenerator/")),"   "),(0,n.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/surgicalcoder/JsonPolymorphicGenerator"},"https://github.com/surgicalcoder/JsonPolymorphicGenerator")),(0,n.kt)("p",{parentName:"admonition"},"Source : ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/surgicalcoder/JsonPolymorphicGenerator"},"https://github.com/surgicalcoder/JsonPolymorphicGenerator"))),(0,n.kt)("h3",{id:"original-readme"},"Original Readme"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("h1",{parentName:"admonition",id:"jsonpolymorphicgenerator"},"JsonPolymorphicGenerator"),(0,n.kt)("p",{parentName:"admonition"},"c# / .net Source Code Generator for System.Text.Json JsonDerivedType attributes on polymorphic classes"),(0,n.kt)("h2",{parentName:"admonition",id:"usage"},"Usage"),(0,n.kt)("p",{parentName:"admonition"},"For this, your base classes need the ",(0,n.kt)("inlineCode",{parentName:"p"},"partial")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"abstract")," key words, and be decorated with ",(0,n.kt)("inlineCode",{parentName:"p"},"JsonPolymorphic"),", and there need to be derived types in that same assembly for this to work."),(0,n.kt)("p",{parentName:"admonition"},"An example of this is:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre"},"[JsonPolymorphic]\npublic abstract partial class BaseClass\n{\n    public string Property1 { get; set; }\n}\n")),(0,n.kt)("p",{parentName:"admonition"},"This will then generate a partial class, that is decorated with the ",(0,n.kt)("inlineCode",{parentName:"p"},"JsonDerivedType")," attribute, and use the class name as the discriminator."),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre"},'[JsonDerivedType(typeof(GoLive.JsonPolymorphicGenerator.Playground.InheritedClass1), "InheritedClass1")]\n[JsonDerivedType(typeof(GoLive.JsonPolymorphicGenerator.Playground.InheritedClass2), "InheritedClass2")]\npublic partial class BaseClass\n{\n}\n')),(0,n.kt)("p",{parentName:"admonition"},"You can now transform the text of the attributes that gets spat out! You have a number of options, that gets added to an ",(0,n.kt)("inlineCode",{parentName:"p"},".editorconfig"),", such as:"),(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre"},"root = true\n\n[*.cs]\njsonpolymorphicgenerator.text_preappend = JSON_\njsonpolymorphicgenerator.text_transform = return classname.GetHashCode().ToString()\njsonpolymorphicgenerator.text_postappend = _A\n")),(0,n.kt)("p",{parentName:"admonition"},"For the ",(0,n.kt)("inlineCode",{parentName:"p"},"jsonpolymorphicgenerator.text_transform")," option, you have to provide valid c# code, that returns a string - there are 2 input variables - ",(0,n.kt)("inlineCode",{parentName:"p"},"classname")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"namespacename"))),(0,n.kt)("h3",{id:"about"},"About"),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Generating JsonDerivedType to be added to the base class")),(0,n.kt)("h2",{id:"how-to-use"},"How to use"),(0,n.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,n.kt)(a.Z,{mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,n.kt)("p",null,"This is the CSharp Project that references ",(0,n.kt)("strong",{parentName:"p"},"JsonPolymorphicGenerator")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {11}",showLineNumbers:!0,"{11}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="GoLive.Generator.JsonPolymorphicGenerator" Version="1.0.4">\n      <PrivateAssets>all</PrivateAssets>\n      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n    </PackageReference>\n  </ItemGroup>\n\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n</Project>\n\n'))),(0,n.kt)(s.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\JsonPolymorphicGenerator\\src\\JsonPolymorphicGeneratorDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"JsonPolymorphicGenerator")," in ",(0,n.kt)("em",{parentName:"p"},"Program.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//https://learn.microsoft.com/en-us/dotnet/standard/serialization/system-text-json/polymorphism?pivots=dotnet-7-0\nusing JsonPolymorphicGeneratorDemo;\nusing System.Text.Json;\n\nPerson[] persons = new Person[2];\npersons[0] = new Student() { Name="Student Ignat"};\n\npersons[1] = new Teacher() { Name = "Teacher Ignat" };\nJsonSerializerOptions opt = new ()\n{\n    WriteIndented = true\n};\nvar ser = JsonSerializer.Serialize(persons, opt);\nConsole.WriteLine(ser);\nvar p = JsonSerializer.Deserialize<Person[]>(ser);\nif(p != null)\nforeach (var item in p)\n{\n    Console.WriteLine(item.Data());\n}\n'))),(0,n.kt)(s.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\JsonPolymorphicGenerator\\src\\JsonPolymorphicGeneratorDemo\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,n.kt)("p",null,"  This is the use of ",(0,n.kt)("strong",{parentName:"p"},"JsonPolymorphicGenerator")," in ",(0,n.kt)("em",{parentName:"p"},"Person.cs")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using System.Text.Json.Serialization;\n\nnamespace JsonPolymorphicGeneratorDemo;\n\n[JsonPolymorphic]\npublic abstract partial class Person\n{\n    \n    public string? Name { get; set; }\n    public abstract string Data();\n}\n\npublic class Teacher : Person\n{\n    public override string Data()\n    {\n        return "Class Teacher:" + Name;\n    }\n}\npublic class Student : Person\n{\n    public override string Data()\n    {\n        return "Class Student:" + Name;\n    }\n}\n\n')))),(0,n.kt)("h3",{id:"generated-files"},"Generated Files"),(0,n.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,n.kt)(a.Z,{mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\JsonPolymorphicGenerator\\src\\JsonPolymorphicGeneratorDemo\\obj\\GX\\GoLive.JsonPolymorphicGenerator\\GoLive.JsonPolymorphicGenerator.PolymorphicAttributeGenerator\\Person.g.cs",label:"Person.g.cs",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using System.Text.Json.Serialization;\n\nnamespace JsonPolymorphicGeneratorDemo\n{\n    [JsonDerivedType(typeof(JsonPolymorphicGeneratorDemo.Teacher), "Teacher")]\n    [JsonDerivedType(typeof(JsonPolymorphicGeneratorDemo.Student), "Student")]\n    public partial class Person\n    {\n    }\n}\n\n\n\n')))),(0,n.kt)("h2",{id:"usefull"},"Usefull"),(0,n.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},(0,n.kt)("a",{target:"_blank",href:o(1964).Z},"Download Example project JsonPolymorphicGenerator "))),(0,n.kt)("h3",{id:"share-jsonpolymorphicgenerator"},"Share JsonPolymorphicGenerator"),(0,n.kt)("ul",null,(0,n.kt)("li",null,(0,n.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FJsonPolymorphicGenerator&quote=JsonPolymorphicGenerator",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FJsonPolymorphicGenerator&text=JsonPolymorphicGenerator:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FJsonPolymorphicGenerator",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FJsonPolymorphicGenerator&title=JsonPolymorphicGenerator",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,n.kt)("li",null,(0,n.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FJsonPolymorphicGenerator&title=JsonPolymorphicGenerator&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FJsonPolymorphicGenerator",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/JsonPolymorphicGenerator"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/JsonPolymorphicGenerator")),(0,n.kt)("h2",{id:"in-the-same-category-serializer"},"In the same category (Serializer)"),(0,n.kt)("h3",{id:"protobufsourcegenerator"},(0,n.kt)("a",{parentName:"h3",href:"/docs/ProtobufSourceGenerator"},"ProtobufSourceGenerator")),(0,n.kt)("h3",{id:"systemtextjson"},(0,n.kt)("a",{parentName:"h3",href:"/docs/System.Text.Json"},"System.Text.Json")))}g.isMDXComponent=!0},1964:(e,t,o)=>{o.d(t,{Z:()=>r});const r=o.p+"assets/files/JsonPolymorphicGenerator-be0486cc5e165824649c100b66b40df5.zip"}}]);