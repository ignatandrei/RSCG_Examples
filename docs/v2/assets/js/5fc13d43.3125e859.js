"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[4667],{89301:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>m,metadata:()=>p,toc:()=>d});var a=n(87462),i=(n(67294),n(3905)),o=n(73992),r=n(18679),s=n(68839);const m={sidebar_position:1060,title:"106 - WhatIAmDoing",description:"Intercept any method in any project",slug:"/WhatIAmDoing"},l="WhatIAmDoing  by Ignat Andrei",p={unversionedId:"RSCG-Examples/WhatIAmDoing",id:"RSCG-Examples/WhatIAmDoing",title:"106 - WhatIAmDoing",description:"Intercept any method in any project",source:"@site/docs/RSCG-Examples/WhatIAmDoing.md",sourceDirName:"RSCG-Examples",slug:"/WhatIAmDoing",permalink:"/RSCG_Examples/v2/docs/WhatIAmDoing",draft:!1,tags:[],version:"current",sidebarPosition:1060,frontMatter:{sidebar_position:1060,title:"106 - WhatIAmDoing",description:"Intercept any method in any project",slug:"/WhatIAmDoing"},sidebar:"tutorialSidebar",previous:{title:"105 - Weave",permalink:"/RSCG_Examples/v2/docs/Weave"},next:{title:"107 - NetAutomaticInterface",permalink:"/RSCG_Examples/v2/docs/NetAutomaticInterface"}},c={},d=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share WhatIAmDoing",id:"share-whatiamdoing",level:3},{value:"In the same category (AOP)",id:"in-the-same-category-aop",level:2}],h={toc:d},g="wrapper";function u(e){let{components:t,...m}=e;return(0,i.kt)(g,(0,a.Z)({},h,m,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"whatiamdoing--by-ignat-andrei"},"WhatIAmDoing  by Ignat Andrei"),(0,i.kt)(s.Z,{toc:d,mdxType:"TOCInline"}),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RSCG_WhatIAmDoing/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/RSCG_WhatIAmDoing?label=RSCG_WhatIAmDoing",alt:"Nuget"})),(0,i.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RSCG_WhatIAmDoing_Common/"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/RSCG_WhatIAmDoing_Common?label=RSCG_WhatIAmDoing_Common",alt:"Nuget"})),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_WhatIAmDoing"},(0,i.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/ignatandrei/RSCG_WhatIAmDoing?label=updated",alt:"GitHub last commit"})),"\n",(0,i.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/ignatandrei/RSCG_WhatIAmDoing?style=social",alt:"GitHub Repo stars"})),(0,i.kt)("h2",{id:"details"},"Details"),(0,i.kt)("h3",{id:"info"},"Info"),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Name: ",(0,i.kt)("strong",{parentName:"p"},"WhatIAmDoing")),(0,i.kt)("p",{parentName:"admonition"},"What I Am Doing - see what your software is doing. Add also RSCG_WhatIAmDoing_Common"),(0,i.kt)("p",{parentName:"admonition"},"Author: Ignat Andrei"),(0,i.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/RSCG_WhatIAmDoing/"},"https://www.nuget.org/packages/RSCG_WhatIAmDoing/")),"   "),(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("em",{parentName:"p"},(0,i.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/RSCG_WhatIAmDoing_Common/"},"https://www.nuget.org/packages/RSCG_WhatIAmDoing_Common/")),"   "),(0,i.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_WhatIAmDoing"},"https://github.com/ignatandrei/RSCG_WhatIAmDoing")),(0,i.kt)("p",{parentName:"admonition"},"Source : ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ignatandrei/RSCG_WhatIAmDoing"},"https://github.com/ignatandrei/RSCG_WhatIAmDoing"))),(0,i.kt)("h3",{id:"original-readme"},"Original Readme"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("h1",{parentName:"admonition",id:"rscg_whatiamdoing"},"RSCG_WhatIAmDoing"),(0,i.kt)("p",{parentName:"admonition"},"Instrument C# software on CI to find what the software is doing."),(0,i.kt)("h1",{parentName:"admonition",id:"introduction"},"Introduction"),(0,i.kt)("p",{parentName:"admonition"},"Decide what you want to monitor ... and then monitor it."),(0,i.kt)("h1",{parentName:"admonition",id:"example"},"Example"),(0,i.kt)("h2",{parentName:"admonition",id:"packages"},"Packages"),(0,i.kt)("p",{parentName:"admonition"},"Add the following into the csproj you want to be monitores"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-xml"},'    <ItemGroup>\n      \x3c!-- <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="8.0.0" /> --\x3e\n      <PackageReference Include="RSCG_WhatIAmDoing" Version="8.2024.10201.735" />\n      <PackageReference Include="RSCG_WhatIAmDoing_Common" Version="8.2024.10201.735" />\n    </ItemGroup>\n\n<PropertyGroup>\n\n    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n    <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    <InterceptorsPreviewNamespaces>$(InterceptorsPreviewNamespaces);RSCG_InterceptorTemplate</InterceptorsPreviewNamespaces>\n</PropertyGroup>\n')),(0,i.kt)("h2",{parentName:"admonition",id:"code"},"Code"),(0,i.kt)("h3",{parentName:"admonition",id:"intercept-static-methods"},"Intercept static methods"),(0,i.kt)("p",{parentName:"admonition"},"Assume that you want to monitor all calls to System.Console "),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'//[ExposeClass(typeof(Encoding), nameof(Encoding.EncodingName))]\n//[InterceptStatic("System.IO.File.*ts")]\n//[InterceptStatic("System.IO.File.*")]\n[InterceptStatic("System.Console.*")] // regex\n//[InterceptStatic("WIAD_DemoConsole.Fib.*")]\ninternal class InterceptorMethodStatic : InterceptorMethodStaticBase, IInterceptorMethodStatic\n{\n    \n}\n')),(0,i.kt)("h3",{parentName:"admonition",id:"intercept-instance-methods"},"Intercept instance methods"),(0,i.kt)("p",{parentName:"admonition"},"Assume that you want to monitor all calls to any  method of any instance of Person"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'//[InterceptInstanceClass(typeof(Person),"ame")]\n//[InterceptInstanceClass(typeof(Person), "parat")]\n//[InterceptInstanceClass(typeof(Person), "ncodi")]\n[InterceptInstanceClass(typeof(Person), ".*")] //regex\npublic class InterceptorMethodInstanceClass: InterceptorMethodInstanceClassBase, IInterceptorMethodInstanceClass\n{\n    \n    public InterceptorMethodInstanceClass()\n    {\n        \n    }\n\n}\n')),(0,i.kt)("h3",{parentName:"admonition",id:"see-the-results"},"See the results"),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},'var data= CachingData.Methods().ToArray();\n\nforeach (var item in data)\n{\n    WriteLine($"Method {item.typeAndMethodData.MethodName} from class {item.typeAndMethodData.TypeOfClass} Time: {item.StartedAtDate} state {item.State} ");\n    WriteLine($"  =>Arguments: {item.ArgumentsAsString()}");\n    if ((item.State & AccumulatedStateMethod.HasResult) == AccumulatedStateMethod.HasResult)\n    {\n        WriteLine($"  =>Result: {item.Result}");\n    }\n\n}\n\n')),(0,i.kt)("h1",{parentName:"admonition",id:"more-details"},"More details"),(0,i.kt)("p",{parentName:"admonition"},"If you want to implement YOUR interception , implement the following interfaces"),(0,i.kt)("p",{parentName:"admonition"},"IInterceptorMethodInstanceClass"),(0,i.kt)("p",{parentName:"admonition"},"IInterceptorMethodStatic"),(0,i.kt)("h1",{parentName:"admonition",id:"license"},"License"),(0,i.kt)("p",{parentName:"admonition"},"MIT")),(0,i.kt)("h3",{id:"about"},"About"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"Intercept any method in any project")),(0,i.kt)("h2",{id:"how-to-use"},"How to use"),(0,i.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,i.kt)("p",null,"This is the CSharp Project that references ",(0,i.kt)("strong",{parentName:"p"},"WhatIAmDoing")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {12}",showLineNumbers:!0,"{12}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n    <ItemGroup>\n        \x3c!-- <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="8.0.0" /> --\x3e\n        <PackageReference Include="RSCG_WhatIAmDoing" Version="8.2024.10201.735" />\n        <PackageReference Include="RSCG_WhatIAmDoing_Common" Version="8.2024.10201.735" />\n    </ItemGroup>\n\n    <PropertyGroup>\n\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n        <InterceptorsPreviewNamespaces>$(InterceptorsPreviewNamespaces);RSCG_InterceptorTemplate</InterceptorsPreviewNamespaces>\n    </PropertyGroup>\n\n</Project>\n\n'))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"WhatIAmDoing")," in ",(0,i.kt)("em",{parentName:"p"},"Program.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using RSCG_WhatIAmDoing_Common;\n\nConsole.WriteLine("Hello, World!");\nvar data = CachingData.Methods().ToArray();\n\nforeach (var item in data)\n{\n    Console.WriteLine($"Method {item.typeAndMethodData.MethodName} from class {item.typeAndMethodData.TypeOfClass} Time: {item.StartedAtDate} state {item.State} ");\n    Console.WriteLine($"  =>Arguments: {item.ArgumentsAsString()}");\n    if ((item.State & AccumulatedStateMethod.HasResult) == AccumulatedStateMethod.HasResult)\n    {\n        Console.WriteLine($"  =>Result: {item.Result}");\n    }\n\n}\n\n'))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\InterceptorStatic.cs",label:"InterceptorStatic.cs",mdxType:"TabItem"},(0,i.kt)("p",null,"  This is the use of ",(0,i.kt)("strong",{parentName:"p"},"WhatIAmDoing")," in ",(0,i.kt)("em",{parentName:"p"},"InterceptorStatic.cs")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using RSCG_WhatIAmDoing;\nusing RSCG_WhatIAmDoing_Common;\n\nnamespace WIADDemo;\n//[ExposeClass(typeof(Encoding), nameof(Encoding.EncodingName))]\n[InterceptStatic("System.Console.*")] // regex\ninternal class InterceptorMethodStatic : InterceptorMethodStaticBase, IInterceptorMethodStatic\n{\n\n}\n')))),(0,i.kt)("h3",{id:"generated-files"},"Generated Files"),(0,i.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,i.kt)(o.Z,{mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\obj\\GX\\RSCG_WhatIAmDoing\\RSCG_WhatIAmDoing.GeneratorWIAD\\System.Console_WriteLine_1.cs",label:"System.Console_WriteLine_1.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'#pragma warning disable CS1591 \n#pragma warning disable CS9113\nnamespace System.Runtime.CompilerServices{\n[AttributeUsage(AttributeTargets.Method,AllowMultiple =true)]\nfile class InterceptsLocationAttribute(string filePath, int line, int character) : Attribute\n{\n}\n}//end namespace\n\nnamespace RSCG_InterceptorTemplate{\nstatic partial class SimpleIntercept\n{\n\n\n//replace code:Console.WriteLine("Hello, World!");\n//replace code:123456789!123456789!123456789!12345\n[System.Runtime.CompilerServices.InterceptsLocation(@"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\WIADDemo\\Program.cs", 3, 9)]\n    \n//[System.Diagnostics.DebuggerStepThrough()]\npublic static  void Intercept__WriteLine_0 (  string? value )  \n{\n\nSystem.Collections.Generic.Dictionary<string,string?> valValues = new (){\n\n\n};//end valValues\n\nSystem.Collections.Generic.Dictionary<string,string?> stringValues = new() {\n\n\n                { "value", value  ?.ToString() } ,\n            };//end stringValues\n\n        System.Collections.Generic.Dictionary<string,string?>\n            expValues = new() {\n\n            };//end exposeValues\n\n\n        var x=WIADDemo.InterceptorMethodStatic .InterceptStaticMethodBefore(\n$$$""""\n    {"IsVoid":true,"Tag":"","MethodName":"WriteLine","TypeOfClass":"System.Console"}\n""""\n            ,valValues , stringValues , expValues\n)\n; \n\n\n                try{\n\n                 System.Console.WriteLine(value);\n\n                WIADDemo.InterceptorMethodStatic .InterceptMethodAfterWithoutResult(x);\n                \n                }\n\n            \n        \n            catch(System.Exception ex){\n                WIADDemo.InterceptorMethodStatic .InterceptMethodException(x,ex);\n                throw;\n            }\n            finally{\n                WIADDemo.InterceptorMethodStatic .InterceptMethodFinally(x);\n            }\n        \n}\n                \n\n}//end class\n\n}//namespace RSCG_InterceptorTemplate\n\n\n'))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\obj\\GX\\RSCG_WhatIAmDoing\\RSCG_WhatIAmDoing.GeneratorWIAD\\System.Console_WriteLine_2.cs",label:"System.Console_WriteLine_2.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'#pragma warning disable CS1591 \n#pragma warning disable CS9113\nnamespace System.Runtime.CompilerServices{\n[AttributeUsage(AttributeTargets.Method,AllowMultiple =true)]\nfile class InterceptsLocationAttribute(string filePath, int line, int character) : Attribute\n{\n}\n}//end namespace\n\nnamespace RSCG_InterceptorTemplate{\nstatic partial class SimpleIntercept\n{\n\n\n//replace code:    Console.WriteLine($"Method {item.typeAndMethodData.MethodName} from class {item.typeAndMethodData.TypeOfClass} Time: {item.StartedAtDate} state {item.State} ");\n//replace code:123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!123456789!1234\n[System.Runtime.CompilerServices.InterceptsLocation(@"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\WIADDemo\\Program.cs", 8, 13)]\n    \n//[System.Diagnostics.DebuggerStepThrough()]\npublic static  void Intercept__WriteLine_1 (  string? value )  \n{\n\nSystem.Collections.Generic.Dictionary<string,string?> valValues = new (){\n\n\n};//end valValues\n\nSystem.Collections.Generic.Dictionary<string,string?> stringValues = new() {\n\n\n                { "value", value  ?.ToString() } ,\n            };//end stringValues\n\n        System.Collections.Generic.Dictionary<string,string?>\n            expValues = new() {\n\n            };//end exposeValues\n\n\n        var x=WIADDemo.InterceptorMethodStatic .InterceptStaticMethodBefore(\n$$$""""\n    {"IsVoid":true,"Tag":"","MethodName":"WriteLine","TypeOfClass":"System.Console"}\n""""\n            ,valValues , stringValues , expValues\n)\n; \n\n\n                try{\n\n                 System.Console.WriteLine(value);\n\n                WIADDemo.InterceptorMethodStatic .InterceptMethodAfterWithoutResult(x);\n                \n                }\n\n            \n        \n            catch(System.Exception ex){\n                WIADDemo.InterceptorMethodStatic .InterceptMethodException(x,ex);\n                throw;\n            }\n            finally{\n                WIADDemo.InterceptorMethodStatic .InterceptMethodFinally(x);\n            }\n        \n}\n                \n\n}//end class\n\n}//namespace RSCG_InterceptorTemplate\n\n\n'))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\obj\\GX\\RSCG_WhatIAmDoing\\RSCG_WhatIAmDoing.GeneratorWIAD\\System.Console_WriteLine_3.cs",label:"System.Console_WriteLine_3.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'#pragma warning disable CS1591 \n#pragma warning disable CS9113\nnamespace System.Runtime.CompilerServices{\n[AttributeUsage(AttributeTargets.Method,AllowMultiple =true)]\nfile class InterceptsLocationAttribute(string filePath, int line, int character) : Attribute\n{\n}\n}//end namespace\n\nnamespace RSCG_InterceptorTemplate{\nstatic partial class SimpleIntercept\n{\n\n\n//replace code:    Console.WriteLine($"  =>Arguments: {item.ArgumentsAsString()}");\n//replace code:123456789!123456789!123456789!123456789!123456789!123456789!12345678\n[System.Runtime.CompilerServices.InterceptsLocation(@"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\WIADDemo\\Program.cs", 9, 13)]\n    \n//[System.Diagnostics.DebuggerStepThrough()]\npublic static  void Intercept__WriteLine_2 (  string? value )  \n{\n\nSystem.Collections.Generic.Dictionary<string,string?> valValues = new (){\n\n\n};//end valValues\n\nSystem.Collections.Generic.Dictionary<string,string?> stringValues = new() {\n\n\n                { "value", value  ?.ToString() } ,\n            };//end stringValues\n\n        System.Collections.Generic.Dictionary<string,string?>\n            expValues = new() {\n\n            };//end exposeValues\n\n\n        var x=WIADDemo.InterceptorMethodStatic .InterceptStaticMethodBefore(\n$$$""""\n    {"IsVoid":true,"Tag":"","MethodName":"WriteLine","TypeOfClass":"System.Console"}\n""""\n            ,valValues , stringValues , expValues\n)\n; \n\n\n                try{\n\n                 System.Console.WriteLine(value);\n\n                WIADDemo.InterceptorMethodStatic .InterceptMethodAfterWithoutResult(x);\n                \n                }\n\n            \n        \n            catch(System.Exception ex){\n                WIADDemo.InterceptorMethodStatic .InterceptMethodException(x,ex);\n                throw;\n            }\n            finally{\n                WIADDemo.InterceptorMethodStatic .InterceptMethodFinally(x);\n            }\n        \n}\n                \n\n}//end class\n\n}//namespace RSCG_InterceptorTemplate\n\n\n'))),(0,i.kt)(r.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\obj\\GX\\RSCG_WhatIAmDoing\\RSCG_WhatIAmDoing.GeneratorWIAD\\System.Console_WriteLine_4.cs",label:"System.Console_WriteLine_4.cs",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'#pragma warning disable CS1591 \n#pragma warning disable CS9113\nnamespace System.Runtime.CompilerServices{\n[AttributeUsage(AttributeTargets.Method,AllowMultiple =true)]\nfile class InterceptsLocationAttribute(string filePath, int line, int character) : Attribute\n{\n}\n}//end namespace\n\nnamespace RSCG_InterceptorTemplate{\nstatic partial class SimpleIntercept\n{\n\n\n//replace code:        Console.WriteLine($"  =>Result: {item.Result}");\n//replace code:123456789!123456789!123456789!123456789!123456789!123456\n[System.Runtime.CompilerServices.InterceptsLocation(@"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\WIAD\\src\\WIADDemo\\WIADDemo\\Program.cs", 12, 17)]\n    \n//[System.Diagnostics.DebuggerStepThrough()]\npublic static  void Intercept__WriteLine_3 (  string? value )  \n{\n\nSystem.Collections.Generic.Dictionary<string,string?> valValues = new (){\n\n\n};//end valValues\n\nSystem.Collections.Generic.Dictionary<string,string?> stringValues = new() {\n\n\n                { "value", value  ?.ToString() } ,\n            };//end stringValues\n\n        System.Collections.Generic.Dictionary<string,string?>\n            expValues = new() {\n\n            };//end exposeValues\n\n\n        var x=WIADDemo.InterceptorMethodStatic .InterceptStaticMethodBefore(\n$$$""""\n    {"IsVoid":true,"Tag":"","MethodName":"WriteLine","TypeOfClass":"System.Console"}\n""""\n            ,valValues , stringValues , expValues\n)\n; \n\n\n                try{\n\n                 System.Console.WriteLine(value);\n\n                WIADDemo.InterceptorMethodStatic .InterceptMethodAfterWithoutResult(x);\n                \n                }\n\n            \n        \n            catch(System.Exception ex){\n                WIADDemo.InterceptorMethodStatic .InterceptMethodException(x,ex);\n                throw;\n            }\n            finally{\n                WIADDemo.InterceptorMethodStatic .InterceptMethodFinally(x);\n            }\n        \n}\n                \n\n}//end class\n\n}//namespace RSCG_InterceptorTemplate\n\n\n')))),(0,i.kt)("h2",{id:"usefull"},"Usefull"),(0,i.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("a",{target:"_blank",href:n(37550).Z},"Download Example project WhatIAmDoing "))),(0,i.kt)("h3",{id:"share-whatiamdoing"},"Share WhatIAmDoing"),(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing&quote=WhatIAmDoing",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing&text=WhatIAmDoing:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing&title=WhatIAmDoing",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,i.kt)("li",null,(0,i.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing&title=WhatIAmDoing&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FWhatIAmDoing",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/WhatIAmDoing"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/WhatIAmDoing")),(0,i.kt)("h2",{id:"in-the-same-category-aop"},"In the same category (AOP)"))}u.isMDXComponent=!0},37550:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/WhatIAmDoing-2934f0036ff659adf12afb02858d657b.zip"}}]);