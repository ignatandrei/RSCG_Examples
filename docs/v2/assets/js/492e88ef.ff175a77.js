"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[8717],{8827:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>m,toc:()=>d});var a=n(7462),r=(n(7294),n(4137)),i=n(3992),o=n(425),s=n(8839);const l={sidebar_position:500,title:"50 - Ridge",description:"Generating test classes for controllers",slug:"/Ridge"},p="Ridge  by Michal Moty\u010dka",m={unversionedId:"RSCG-Examples/Ridge",id:"RSCG-Examples/Ridge",title:"50 - Ridge",description:"Generating test classes for controllers",source:"@site/docs/RSCG-Examples/Ridge.md",sourceDirName:"RSCG-Examples",slug:"/Ridge",permalink:"/RSCG_Examples/v2/docs/Ridge",draft:!1,tags:[],version:"current",sidebarPosition:500,frontMatter:{sidebar_position:500,title:"50 - Ridge",description:"Generating test classes for controllers",slug:"/Ridge"},sidebar:"tutorialSidebar",previous:{title:"49 - Strongly",permalink:"/RSCG_Examples/v2/docs/Strongly"},next:{title:"51 - OneOf",permalink:"/RSCG_Examples/v2/docs/OneOf"}},c={},d=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share Ridge",id:"share-ridge",level:3}],u={toc:d},g="wrapper";function h(e){let{components:t,...l}=e;return(0,r.kt)(g,(0,a.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ridge--by-michal-moty\u010dka"},"Ridge  by Michal Moty\u010dka"),(0,r.kt)(s.Z,{toc:d,mdxType:"TOCInline"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Ridge/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Ridge?label=Ridge",alt:"Nuget"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Melchy/Ridge"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/Melchy/Ridge?label=updated",alt:"GitHub last commit"})),"\n",(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/Melchy/Ridge?style=social",alt:"GitHub Repo stars"})),(0,r.kt)("h2",{id:"details"},"Details"),(0,r.kt)("h3",{id:"info"},"Info"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Name: ",(0,r.kt)("strong",{parentName:"p"},"Ridge")),(0,r.kt)("p",{parentName:"admonition"},"a html, json and xml parsing library."),(0,r.kt)("p",{parentName:"admonition"},"Author: Michal Moty\u010dka"),(0,r.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/Ridge/"},"https://www.nuget.org/packages/Ridge/")),"   "),(0,r.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Melchy/Ridge"},"https://github.com/Melchy/Ridge")),(0,r.kt)("p",{parentName:"admonition"},"Source : ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Melchy/Ridge"},"https://github.com/Melchy/Ridge"))),(0,r.kt)("h3",{id:"original-readme"},"Original Readme"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/Melchy/Ridge/actions"},(0,r.kt)("img",{parentName:"a",src:"https://github.com/melchy/ridge/actions/workflows/release.yml/badge.svg",alt:"build"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RidgeDotNet/"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/ridgedotnet",alt:null})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Melchy/Ridge/releases"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/github/v/release/melchy/ridge?label=latest%20release",alt:null}))),(0,r.kt)("h1",{parentName:"admonition",id:"ridge"},"Ridge"),(0,r.kt)("p",{parentName:"admonition"},"Ridge is a ",(0,r.kt)("strong",{parentName:"p"},"source generator")," that creates strongly typed HTTP clients for integration tests. HTTP clients generated by Ridge require the\n",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/aspnet/core/test/integration-tests?view=aspnetcore-7.0#basic-tests-with-the-default-webapplicationfactory"},"WebApplicationFactory"),".\nThe use of the ",(0,r.kt)("inlineCode",{parentName:"p"},"WebApplicationFactory")," allows Ridge to access internal components of ASP.NET and analyze them.\nThis significantly improves route generation and allows implicit support of areas, routing without attributes, and so on."),(0,r.kt)("blockquote",{parentName:"admonition"},(0,r.kt)("p",{parentName:"blockquote"},"Ridge supports .NET 6 and newer.")),(0,r.kt)("h2",{parentName:"admonition",id:"quick-links"},"Quick links"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/RidgeDotNet/"},"NuGet package")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/Melchy/Ridge/wiki"},"Documentation"))),(0,r.kt)("h2",{parentName:"admonition",id:"example"},"Example"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'// --------------------------------------------ExampleController.cs-------------------------------------------------\n[GenerateClient] // Notice the attribute\npublic class ExamplesController : Controller\n{\n    [HttpGet("ReturnGivenNumber")]\n    public ActionResult<int> ReturnGivenNumber(\n        [FromQuery] int input)\n    {\n        return input;\n    }\n}\n\n\n// ------------------------------------------Test.cs----------------------------------------------------------------\n[Test]\npublic async Task CallControllerUsingRidge()\n{\n    using var webApplicationFactory = \n        new WebApplicationFactory<Program>()\n            .WithRidge(); // add ridge dependencies to WebApplicationFactory\n    var client = webApplicationFactory.CreateClient();\n    // create instance of client generated by source generator\n    var examplesControllerClient = new ExamplesControllerClient(client, webApplicationFactory.Services); \n\n    var response = await examplesControllerClient.ReturnGivenNumber(10);\n    \n    Assert.True(response.IsSuccessStatusCode);\n    Assert.AreEqual(10, response.Result);\n}\n')),(0,r.kt)("h2",{parentName:"admonition",id:"setup"},"Setup"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Mark controller with the ",(0,r.kt)("inlineCode",{parentName:"li"},"[GenerateClient]")," attribute. This attribute tells the source generator to generate\nclass ",(0,r.kt)("inlineCode",{parentName:"li"},"*YourControllerName*Client")," in the assembly which contains the controller."),(0,r.kt)("li",{parentName:"ul"},"Call ",(0,r.kt)("inlineCode",{parentName:"li"},"WithRidge()")," extension method on ",(0,r.kt)("inlineCode",{parentName:"li"},"WebApplicationFactory"),"."),(0,r.kt)("li",{parentName:"ul"},"Create instance of ",(0,r.kt)("inlineCode",{parentName:"li"},"*YourControllerName*Client"),"."),(0,r.kt)("li",{parentName:"ul"},"Create requests using ",(0,r.kt)("inlineCode",{parentName:"li"},"*YourControllerName*Client")," instance.")),(0,r.kt)("blockquote",{parentName:"admonition"},(0,r.kt)("p",{parentName:"blockquote"},"Hint: Use package ",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RidgeDotNet.AspNetCore"},(0,r.kt)("inlineCode",{parentName:"a"},"RidgeDotNet.AspNetCore"))," in your ",(0,r.kt)("inlineCode",{parentName:"p"},"AspNetCore")," project instead of ",(0,r.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/RidgeDotNet"},(0,r.kt)("inlineCode",{parentName:"a"},"RidgeDotNet")),". ",(0,r.kt)("inlineCode",{parentName:"p"},"RidgeDotNet.AspNetCore")," has minimal dependencies, preventing unnecessary test code in your project.")),(0,r.kt)("h2",{parentName:"admonition",id:"best-practices"},"Best practices"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"ActionResult<T>")," when possible to enable strongly typed response generation."),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"[FromRoute]"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"[FromQuery]"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"[FromBody]"),", and similar attributes when possible to ensure correct parameter\nmapping."),(0,r.kt)("li",{parentName:"ul"},"Add a logger to check generated requests and responses when\nnecessary. More information ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/Melchy/Ridge/wiki/4.-Request-response-logging"},"here"),"."),(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/Melchy/Ridge/wiki/3.-rethrow-exceptions-instead-of-http-response"},(0,r.kt)("inlineCode",{parentName:"a"},"RethrowExceptionInsteadOfReturningHttpResponse")),"\nfor improved test experience.")),(0,r.kt)("h2",{parentName:"admonition",id:"wiki"},"Wiki"),(0,r.kt)("p",{parentName:"admonition"},"Full documentation can be found ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Melchy/Ridge/wiki"},"in the wiki"),"."),(0,r.kt)("h2",{parentName:"admonition",id:"features-that-are-not-currently-supported"},"Features that are not currently supported"),(0,r.kt)("blockquote",{parentName:"admonition"},(0,r.kt)("p",{parentName:"blockquote"},"Note that you can always fall back to ",(0,r.kt)("inlineCode",{parentName:"p"},"WebApplicationFactory")," when you need to test something that is not supported by\nRidge.")),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Minimal API"),(0,r.kt)("li",{parentName:"ul"},"Custom request types. JSON is the only request type currently supported."),(0,r.kt)("li",{parentName:"ul"},"Single action parameter transformations (add parameter to single action or transform parameter in single action)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"[FromForm]")," attributes"),(0,r.kt)("li",{parentName:"ul"},"Actions returning custom implementation of ",(0,r.kt)("inlineCode",{parentName:"li"},"IActionResult"),".")),(0,r.kt)("h3",{parentName:"admonition",id:"mappings-that-are-not-supported-by-default"},"Mappings that are not supported by default"),(0,r.kt)("p",{parentName:"admonition"},"Ridge supports a wide range of parameter mappings, but some special cases are currently not supported by default.\nKnown unsupported mappings are the following:"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"[FromQuery]")," with an array of complex arguments"),(0,r.kt)("li",{parentName:"ul"},"Complex types with ",(0,r.kt)("inlineCode",{parentName:"li"},"[FromXXX]")," attributes on properties")),(0,r.kt)("p",{parentName:"admonition"},"Example of ",(0,r.kt)("inlineCode",{parentName:"p"},"[FromQuery]")," with an array of complex arguments:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public virtual ActionResult NotSupported([FromQuery] IEnumerable<ComplexArgument> complexArguments)\n{\n   //..\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"Example of complex types with ",(0,r.kt)("inlineCode",{parentName:"p"},"[FromXXX]")," attributes on properties:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public virtual ActionResult NotSupported(Mixed mixed)\n{\n   //..\n}\n\n\npublic class Mixed\n{\n    [FromBody]\n    public string BodyName { get; set; }\n    [FromHeader]\n    public string HeaderName { get; set; }\n}\n")),(0,r.kt)("p",{parentName:"admonition"},"If you need to use this feature then consider writing\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Melchy/Ridge/wiki/2.-Request-creation#custom-middlewares"},"custom ",(0,r.kt)("inlineCode",{parentName:"a"},"HttpRequestFactoryMiddleware")),"\nor creating an issue."),(0,r.kt)("h2",{parentName:"admonition",id:"contributions"},"Contributions"),(0,r.kt)("p",{parentName:"admonition"},"Icon made by ",(0,r.kt)("a",{parentName:"p",href:"https://www.freepik.com"},"Freepik")," from ",(0,r.kt)("a",{parentName:"p",href:"https://www.flaticon.com/"},"www.flaticon.com"),".")),(0,r.kt)("h3",{id:"about"},"About"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Generating test classes for controllers")),(0,r.kt)("h2",{id:"how-to-use"},"How to use"),(0,r.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,r.kt)("p",null,"This is the CSharp Project that references ",(0,r.kt)("strong",{parentName:"p"},"Ridge")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {11}",showLineNumbers:!0,"{11}":!0},'<Project Sdk="Microsoft.NET.Sdk.Web">\n\n  <PropertyGroup>\n    <TargetFramework>net7.0</TargetFramework>\n    <Nullable>enable</Nullable>\n    <ImplicitUsings>enable</ImplicitUsings>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="7.0.9" />\n    <PackageReference Include="RidgeDotNet.AspNetCore" Version="2.0.1" />\n    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n\n</Project>\n\n'))),(0,r.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Ridge\\src\\RidgeDemoWebApp\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Ridge")," in ",(0,r.kt)("em",{parentName:"p"},"Program.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"var builder = WebApplication.CreateBuilder(args);\n\n// Add services to the container.\n\nbuilder.Services.AddControllers();\n// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle\nbuilder.Services.AddEndpointsApiExplorer();\nbuilder.Services.AddSwaggerGen();\n\nvar app = builder.Build();\n\n// Configure the HTTP request pipeline.\nif (app.Environment.IsDevelopment())\n{\n    app.UseSwagger();\n    app.UseSwaggerUI();\n}\n\napp.UseAuthorization();\n\napp.MapControllers();\n\napp.Run();\npublic partial class Program { }\n"))),(0,r.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Ridge\\src\\RidgeDemoWebApp\\Controllers\\WeatherForecastController.cs",label:"WeatherForecastController.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Ridge")," in ",(0,r.kt)("em",{parentName:"p"},"WeatherForecastController.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using Microsoft.AspNetCore.Mvc;\nusing Ridge.AspNetCore.GeneratorAttributes;\n\nnamespace RidgeDemoWebApp.Controllers\n{\n    [GenerateClient]\n    [ApiController]\n    [Route("[controller]")]\n    public class WeatherForecastController : ControllerBase\n    {\n        private static readonly string[] Summaries = new[]\n        {\n        "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching"\n    };\n\n        private readonly ILogger<WeatherForecastController> _logger;\n\n        public WeatherForecastController(ILogger<WeatherForecastController> logger)\n        {\n            _logger = logger;\n        }\n\n        [HttpGet(Name = "GetWeatherForecast")]\n        public IEnumerable<WeatherForecast> Get()\n        {\n            return Enumerable.Range(1, 5).Select(index => new WeatherForecast\n            {\n                Date = DateOnly.FromDateTime(DateTime.Now.AddDays(index)),\n                TemperatureC = Random.Shared.Next(-20, 55),\n                Summary = Summaries[Random.Shared.Next(Summaries.Length)]\n            })\n            .ToArray();\n        }\n    }\n}\n'))),(0,r.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Ridge\\src\\TestRidgeApp\\BasicTests.cs",label:"BasicTests.cs",mdxType:"TabItem"},(0,r.kt)("p",null,"  This is the use of ",(0,r.kt)("strong",{parentName:"p"},"Ridge")," in ",(0,r.kt)("em",{parentName:"p"},"BasicTests.cs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using Microsoft.AspNetCore.Mvc.Testing;\nusing RidgeDemoWebApp.Controllers;\nusing Xunit;\n\nnamespace TestRidgeApp;\n\n[TestClass]\npublic class BasicTests \n{\n\n    \n    [TestMethod]\n    public async Task CallControllerUsingRidge()\n    {\n       \n        using var webApplicationFactory =\n            new WebApplicationFactory<Program>()\n                .WithRidge(); // add ridge dependencies to WebApplicationFactory\n        var client = webApplicationFactory.CreateClient();\n        // create instance of client generated by source generator\n        var examplesControllerClient = new WeatherForecastControllerClient(client, webApplicationFactory.Services);\n\n        var response = await examplesControllerClient.Get();\n\n        Assert.IsTrue(response.IsSuccessStatusCode);\n        Assert.AreEqual(5, response.Result.Count());\n    }\n}\n")))),(0,r.kt)("h3",{id:"generated-files"},"Generated Files"),(0,r.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\Ridge\\src\\RidgeDemoWebApp\\obj\\GX\\RidgeSourceGenerator\\RidgeSourceGenerator.ControllerClientGenerator\\WeatherForecastController_Client.g.cs",label:"WeatherForecastController_Client.g.cs",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by the Ridge source generator\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\n#nullable enable\n#pragma warning disable CS0419\nusing Ridge.AspNetCore;\nusing Ridge.AspNetCore.Serialization;\nusing Ridge.AspNetCore.Response;\nusing Ridge.AspNetCore.Parameters;\nusing System;\nusing System.Collections.Generic;\nusing System.Net.Http;\nusing System.Threading.Tasks;\nusing Microsoft.Extensions.DependencyInjection;\n\nnamespace RidgeDemoWebApp.Controllers\n{\n    /// <summary>\n    /// Generated Api client. Calls <see cref="RidgeDemoWebApp.Controllers.WeatherForecastController" />\n    /// </summary>\n    public class WeatherForecastControllerClient\n    {\n        private readonly IApplicationClient _applicationClient;\n        /// <summary>\n        /// Creates client for controller. \n        /// </summary>\n        /// <param name="httpClient">\n        ///     HttpClient which will be used to call application.\n        /// </param>\n        /// <param name="serviceProvider">\n        ///     Application serviceProvider.\n        /// </param>\n        public WeatherForecastControllerClient(HttpClient httpClient, IServiceProvider serviceProvider)\n        {\n            var applicationClientFactory = serviceProvider.GetService<IApplicationClientFactory>();\n            if(applicationClientFactory == null)\n            {\n                throw new InvalidOperationException("\'IApplicationClientFactory\' could not be resolved. Did you forget to call WithRidge()?.");\n            }\n            else\n            {\n                _applicationClient = applicationClientFactory.CreateClient(serviceProvider, httpClient);\n            }\n        }\n                /// <summary>\n        ///     Calls <see cref="RidgeDemoWebApp.Controllers.WeatherForecastController.Get" />. \n        /// </summary> \n        public async Task<HttpCallResponse<System.Collections.Generic.IEnumerable<RidgeDemoWebApp.WeatherForecast>>> Get(params AdditionalParameter[] additionalParameters)\n        {\n            var methodName = nameof(RidgeDemoWebApp.Controllers.WeatherForecastController.Get);\n            var actionParameters = new Type[] {\n            };\n            var parametersAndTransformations = new List<RawParameterAndTransformationInfo>()\n            { \n            };\n           return await _applicationClient.CallAction<System.Collections.Generic.IEnumerable<RidgeDemoWebApp.WeatherForecast>,RidgeDemoWebApp.Controllers.WeatherForecastController>(methodName, actionParameters, additionalParameters, parametersAndTransformations);\n        }\n\n }\n}\n#pragma warning restore CS0419\n#nullable restore\n')))),(0,r.kt)("h2",{id:"usefull"},"Usefull"),(0,r.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("a",{target:"_blank",href:n(7609).Z},"Download Example project Ridge "))),(0,r.kt)("h3",{id:"share-ridge"},"Share Ridge"),(0,r.kt)("ul",null,(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRidge&quote=Ridge",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRidge&text=Ridge:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRidge",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRidge&title=Ridge",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,r.kt)("li",null,(0,r.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRidge&title=Ridge&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRidge",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Ridge"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Ridge")))}h.isMDXComponent=!0},7609:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/Ridge-2b4eb9ea67846ef01bea4c02089a121d.zip"}}]);