"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[9218],{17603:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>c,default:()=>b,frontMatter:()=>m,metadata:()=>i,toc:()=>l});var s=t(87462),a=(t(67294),t(3905)),n=t(73992),o=t(18679),d=t(68839);const m={sidebar_position:1010,title:"101 - Chorn.EmbeddedResourceAccessGenerator",description:"Embedded Resources to C# Code",slug:"/Chorn.EmbeddedResourceAccessGenerator"},c="Chorn.EmbeddedResourceAccessGenerator  by Christoph Hornung",i={unversionedId:"RSCG-Examples/Chorn.EmbeddedResourceAccessGenerator",id:"RSCG-Examples/Chorn.EmbeddedResourceAccessGenerator",title:"101 - Chorn.EmbeddedResourceAccessGenerator",description:"Embedded Resources to C# Code",source:"@site/docs/RSCG-Examples/Chorn.EmbeddedResourceAccessGenerator.md",sourceDirName:"RSCG-Examples",slug:"/Chorn.EmbeddedResourceAccessGenerator",permalink:"/RSCG_Examples/v2/docs/Chorn.EmbeddedResourceAccessGenerator",draft:!1,tags:[],version:"current",sidebarPosition:1010,frontMatter:{sidebar_position:1010,title:"101 - Chorn.EmbeddedResourceAccessGenerator",description:"Embedded Resources to C# Code",slug:"/Chorn.EmbeddedResourceAccessGenerator"},sidebar:"tutorialSidebar",previous:{title:"100 - BuildInfo",permalink:"/RSCG_Examples/v2/docs/BuildInfo"},next:{title:"v1",permalink:"/RSCG_Examples/v2/docs/v1"}},u={},l=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share Chorn.EmbeddedResourceAccessGenerator",id:"share-chornembeddedresourceaccessgenerator",level:3},{value:"In the same category (FilesToCode)",id:"in-the-same-category-filestocode",level:2},{value:"EmbedResourceCSharp",id:"embedresourcecsharp",level:3},{value:"Podimo.ConstEmbed",id:"podimoconstembed",level:3},{value:"ResXGenerator",id:"resxgenerator",level:3},{value:"RSCG_Utils",id:"rscg_utils",level:3},{value:"ThisAssembly_Resources",id:"thisassembly_resources",level:3}],p={toc:l},h="wrapper";function b(e){let{components:r,...m}=e;return(0,a.kt)(h,(0,s.Z)({},p,m,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"chornembeddedresourceaccessgenerator--by-christoph-hornung"},"Chorn.EmbeddedResourceAccessGenerator  by Christoph Hornung"),(0,a.kt)(d.Z,{toc:l,mdxType:"TOCInline"}),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Chorn.EmbeddedResourceAccessGenerator/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/Chorn.EmbeddedResourceAccessGenerator?label=Chorn.EmbeddedResourceAccessGenerator",alt:"Nuget"})),"\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ChristophHornung/EmbeddedResourceGenerator"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/ChristophHornung/EmbeddedResourceGenerator?label=updated",alt:"GitHub last commit"})),"\n",(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/ChristophHornung/EmbeddedResourceGenerator?style=social",alt:"GitHub Repo stars"})),(0,a.kt)("h2",{id:"details"},"Details"),(0,a.kt)("h3",{id:"info"},"Info"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Name: ",(0,a.kt)("strong",{parentName:"p"},"Chorn.EmbeddedResourceAccessGenerator")),(0,a.kt)("p",{parentName:"admonition"},"Generates strongly typed access methods for embedded resources."),(0,a.kt)("p",{parentName:"admonition"},"Author: Christoph Hornung"),(0,a.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/Chorn.EmbeddedResourceAccessGenerator/"},"https://www.nuget.org/packages/Chorn.EmbeddedResourceAccessGenerator/")),"   "),(0,a.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ChristophHornung/EmbeddedResourceGenerator"},"https://github.com/ChristophHornung/EmbeddedResourceGenerator")),(0,a.kt)("p",{parentName:"admonition"},"Source : ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ChristophHornung/EmbeddedResourceGenerator"},"https://github.com/ChristophHornung/EmbeddedResourceGenerator"))),(0,a.kt)("h3",{id:"original-readme"},"Original Readme"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("h1",{parentName:"admonition",id:"embeddedresourceaccessgenerator"},"EmbeddedResourceAccessGenerator"),(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Chorn.EmbeddedResourceAccessGenerator/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/Chorn.EmbeddedResourceAccessGenerator.svg?style=flat-square",alt:"NuGet version (Chorn.EmbeddedResourceAccessGenerator)"}))),(0,a.kt)("p",{parentName:"admonition"},"The EmbeddedResourceAccessGenerator is a code generator to allow easy access to all\nembedded resources."),(0,a.kt)("h2",{parentName:"admonition",id:"usage"},"Usage"),(0,a.kt)("p",{parentName:"admonition"},"Get the nuget package ",(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/Chorn.EmbeddedResourceAccessGenerator"},"here"),"."),(0,a.kt)("p",{parentName:"admonition"},"After referencing the ",(0,a.kt)("inlineCode",{parentName:"p"},"Chorn.EmbeddedResourceAccessGenerator")," nuget the code generation will\nautomatically create a class ",(0,a.kt)("inlineCode",{parentName:"p"},"EmbeddedResources")," in the root namespace of the project."),(0,a.kt)("p",{parentName:"admonition"},"Together with the generated ",(0,a.kt)("inlineCode",{parentName:"p"},"EmbeddedResource")," enumeration there are several options to access\nembedded resources:"),(0,a.kt)("p",{parentName:"admonition"},"E.g. for a ",(0,a.kt)("inlineCode",{parentName:"p"},"Test.txt")," embedded resource in the ",(0,a.kt)("inlineCode",{parentName:"p"},"TestAsset")," folder:"),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Via enum access through the ",(0,a.kt)("inlineCode",{parentName:"li"},"EmbeddedResource")," enum:")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"    // Via the generated extension methods on the enum\n    using Stream s = EmbeddedResource.TestAsset_Test_txt.GetStream();\n    using StreamReader sr = EmbeddedResource.TestAsset_Test_txt.GetReader();\n")),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Via enum access through the ",(0,a.kt)("inlineCode",{parentName:"li"},"EmbeddedResource[FolderName]")," enum:")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"    // Via the generated extension methods on the enum\n    using Stream s = EmbeddedResourceTestAsset.Test_txt.GetStream();\n    using StreamReader sr = EmbeddedResourceTestAsset.Test_txt.GetReader();\n")),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"Via direct static acccess on ",(0,a.kt)("inlineCode",{parentName:"li"},"EmbeddedResources"),":")),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},"    using StreamReader sr = EmbeddedResources.TestAsset_Test_txt_Reader;\n    Console.WriteLine(sr.ReadToEnd());\n\n    // Or via access through the Stream\n    using Stream s = EmbeddedResources.TestAsset_Test_txt_Stream;\n    // ...\n")),(0,a.kt)("h2",{parentName:"admonition",id:"motivation"},"Motivation"),(0,a.kt)("p",{parentName:"admonition"},"Instead of using magic strings in the resource access code that may point to non-existant\nresources this generator guarantees resources to exist and code to not compile when they are\nremoved."),(0,a.kt)("p",{parentName:"admonition"},"Grouping the resources via their path adds path specific enums, e.g. to easily write tests\nfor all embedded resource in a subfolder."),(0,a.kt)("p",{parentName:"admonition"},"Also it saves quite a bit of typing effort.")),(0,a.kt)("h3",{id:"about"},"About"),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Embedded Resources to C# Code")),(0,a.kt)("h2",{id:"how-to-use"},"How to use"),(0,a.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,a.kt)(n.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,a.kt)("p",null,"This is the CSharp Project that references ",(0,a.kt)("strong",{parentName:"p"},"Chorn.EmbeddedResourceAccessGenerator")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {18}",showLineNumbers:!0,"{18}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n    <ItemGroup>\n      <EmbeddedResource  Include="sql/*.sql" />\n    </ItemGroup>\n    <ItemGroup>\n      <PackageReference Include="Chorn.EmbeddedResourceAccessGenerator" Version="1.1.5" OutputItemType="Analyzer"  >\n        <PrivateAssets>all</PrivateAssets>\n        <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>\n      </PackageReference>\n    </ItemGroup>\n    \n    \n</Project>\n\n'))),(0,a.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbedRes\\src\\EmbedRes\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"Chorn.EmbeddedResourceAccessGenerator")," in ",(0,a.kt)("em",{parentName:"p"},"Program.cs")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"using EmbedDemo;\nusing StreamReader sr = EmbeddedResource.sql_createDB_sql.GetReader();\nvar data=sr.ReadToEnd();\nConsole.WriteLine(data);\n\n"))),(0,a.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbedRes\\src\\EmbedRes\\sql\\createDB.sql",label:"createDB.sql",mdxType:"TabItem"},(0,a.kt)("p",null,"  This is the use of ",(0,a.kt)("strong",{parentName:"p"},"Chorn.EmbeddedResourceAccessGenerator")," in ",(0,a.kt)("em",{parentName:"p"},"createDB.sql")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},"create database Andrei;\nGO;\nuse Andrei;\nGO;\n\n")))),(0,a.kt)("h3",{id:"generated-files"},"Generated Files"),(0,a.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,a.kt)(n.Z,{mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\EmbedRes\\src\\EmbedRes\\obj\\GX\\EmbeddedResourceAccessGenerator\\EmbeddedResourceAccessGenerator.EmbeddedResourceAccessGenerator\\EmbeddedResources.generated.cs",label:"EmbeddedResources.generated.cs",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'#nullable enable\nnamespace EmbedDemo;\nusing System;\nusing System.Collections;\nusing System.IO;\nusing System.Reflection;\n\n/// <summary>\n/// Auto-generated class to access all embedded resources in an assembly.\n/// </summary>\npublic static partial class EmbeddedResources\n{\n    /// <summary>\n    /// Gets the embedded resource \'sql.createDB.sql\' as a stream.\n    /// </summary>\n    /// <returns>The stream to access the embedded resource.</returns>\n    public static Stream sql_createDB_sql_Stream\n    {\n        get {\n            Assembly assembly = typeof(EmbeddedResources).Assembly;\n            string resource = "EmbedDemo.sql.createDB.sql";\n            return assembly.GetManifestResourceStream(resource)!;\n        }\n    }\n\n    /// <summary>\n    /// Gets the embedded resource \'sql.createDB.sql\' as a stream-reader.\n    /// </summary>\n    /// <returns>The stream-reader to access the embedded resource.</returns>\n    public static StreamReader sql_createDB_sql_Reader\n    {\n        get \n        {\n            Assembly assembly = typeof(EmbeddedResources).Assembly;\n            string resource = "EmbedDemo.sql.createDB.sql";\n            return new StreamReader(assembly.GetManifestResourceStream(resource)!);\n        }\n    }\n\n    /// <summary>\n    /// Gets the embedded resource\'s stream.\n    /// </summary>\n    /// <param name="resource">The embedded resource to retrieve the stream for.</param>\n    /// <returns>The stream to access the embedded resource.</returns>\n    public static Stream GetStream(this EmbeddedResource resource)\n    {\n        Assembly assembly = typeof(EmbeddedResources).Assembly;\n        return assembly.GetManifestResourceStream(GetResourceName(resource))!;\n    }\n\n    /// <summary>\n    /// Gets the embedded resource\'s stream-reader.\n    /// </summary>\n    /// <param name="resource">The embedded resource to retrieve the stream-reader for.</param>\n    /// <returns>The stream-reader to access the embedded resource.</returns>\n    public static StreamReader GetReader(this EmbeddedResource resource)\n    {\n        Assembly assembly = typeof(EmbeddedResources).Assembly;\n        return new StreamReader(assembly.GetManifestResourceStream(GetResourceName(resource))!);\n    }\n\n    /// <summary>\n    /// Gets the embedded resource\'s name in the format required by <c>GetManifestResourceStream</c>.\n    /// </summary>\n    /// <param name="resource">The embedded resource to retrieve the name for.</param>\n    /// <returns>The name to access the embedded resource.</returns>\n    public static string GetResourceName(this EmbeddedResource resource)\n    {\n        return resource switch \n        {\n            EmbeddedResource.sql_createDB_sql => "EmbedDemo.sql.createDB.sql",\n            _ => throw new InvalidOperationException(),\n        };\n    }\n\n    /// <summary>\n    /// Gets the embedded resource\'s stream.\n    /// </summary>\n    /// <param name="resource">The embedded resource to retrieve the stream for.</param>\n    /// <returns>The stream to access the embedded resource.</returns>\n    public static Stream GetStream(this EmbeddedResourcesql resource)\n    {\n        Assembly assembly = typeof(EmbeddedResources).Assembly;\n        return assembly.GetManifestResourceStream(GetResourceName(resource))!;\n    }\n\n    /// <summary>\n    /// Gets the embedded resource\'s stream-reader.\n    /// </summary>\n    /// <param name="resource">The embedded resource to retrieve the stream-reader for.</param>\n    /// <returns>The stream-reader to access the embedded resource.</returns>\n    public static StreamReader GetReader(this EmbeddedResourcesql resource)\n    {\n        Assembly assembly = typeof(EmbeddedResources).Assembly;\n        return new StreamReader(assembly.GetManifestResourceStream(GetResourceName(resource))!);\n    }\n\n    /// <summary>\n    /// Gets the embedded resource\'s name in the format required by <c>GetManifestResourceStream</c>.\n    /// </summary>\n    /// <param name="resource">The embedded resource to retrieve the name for.</param>\n    /// <returns>The name to access the embedded resource.</returns>\n    public static string GetResourceName(this EmbeddedResourcesql resource)\n    {\n        return resource switch \n        {\n            EmbeddedResourcesql.createDB_sql => "EmbedDemo.sql.createDB.sql",\n            _ => throw new InvalidOperationException(),\n        };\n    }\n}\n\n/// <summary>\n/// Auto-generated enumeration for all embedded resources in the assembly.\n/// </summary>\npublic enum EmbeddedResource\n{\n    /// <summary>\n    /// Represents the embedded resource \'sql.createDB.sql\'.\n    /// </summary>\n    sql_createDB_sql,\n}\n\n/// <summary>\n/// Auto-generated enumeration for all embedded resources in \'sql\'.\n/// </summary>\npublic enum EmbeddedResourcesql\n{\n    /// <summary>\n    /// Represents the embedded resource \'createDB.sql\' in sql.\n    /// </summary>\n    createDB_sql,\n}\n#nullable restore\n')))),(0,a.kt)("h2",{id:"usefull"},"Usefull"),(0,a.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("a",{target:"_blank",href:t(16216).Z},"Download Example project Chorn.EmbeddedResourceAccessGenerator "))),(0,a.kt)("h3",{id:"share-chornembeddedresourceaccessgenerator"},"Share Chorn.EmbeddedResourceAccessGenerator"),(0,a.kt)("ul",null,(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FChorn.EmbeddedResourceAccessGenerator&quote=Chorn.EmbeddedResourceAccessGenerator",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FChorn.EmbeddedResourceAccessGenerator&text=Chorn.EmbeddedResourceAccessGenerator:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FChorn.EmbeddedResourceAccessGenerator",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FChorn.EmbeddedResourceAccessGenerator&title=Chorn.EmbeddedResourceAccessGenerator",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,a.kt)("li",null,(0,a.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FChorn.EmbeddedResourceAccessGenerator&title=Chorn.EmbeddedResourceAccessGenerator&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FChorn.EmbeddedResourceAccessGenerator",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Chorn.EmbeddedResourceAccessGenerator"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/Chorn.EmbeddedResourceAccessGenerator")),(0,a.kt)("h2",{id:"in-the-same-category-filestocode"},"In the same category (FilesToCode)"),(0,a.kt)("h3",{id:"embedresourcecsharp"},(0,a.kt)("a",{parentName:"h3",href:"/docs/EmbedResourceCSharp"},"EmbedResourceCSharp")),(0,a.kt)("h3",{id:"podimoconstembed"},(0,a.kt)("a",{parentName:"h3",href:"/docs/Podimo.ConstEmbed"},"Podimo.ConstEmbed")),(0,a.kt)("h3",{id:"resxgenerator"},(0,a.kt)("a",{parentName:"h3",href:"/docs/ResXGenerator"},"ResXGenerator")),(0,a.kt)("h3",{id:"rscg_utils"},(0,a.kt)("a",{parentName:"h3",href:"/docs/RSCG_Utils"},"RSCG_Utils")),(0,a.kt)("h3",{id:"thisassembly_resources"},(0,a.kt)("a",{parentName:"h3",href:"/docs/ThisAssembly_Resources"},"ThisAssembly_Resources")))}b.isMDXComponent=!0},16216:(e,r,t)=>{t.d(r,{Z:()=>s});const s=t.p+"assets/files/Chorn.EmbeddedResourceAccessGenerator-7dba02c75ebe5d616342fd24741654d3.zip"}}]);