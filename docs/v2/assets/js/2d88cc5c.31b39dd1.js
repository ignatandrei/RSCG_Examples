"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[5305],{5239:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>g,frontMatter:()=>c,metadata:()=>m,toc:()=>p});var i=n(7462),o=(n(7294),n(4137)),l=n(3992),a=n(425),s=n(8839);const c={sidebar_position:750,title:"75 - StaticReflection",description:"Call prop/methods on classes",slug:"/StaticReflection"},r="StaticReflection  by Devin Martin",m={unversionedId:"RSCG-Examples/StaticReflection",id:"RSCG-Examples/StaticReflection",title:"75 - StaticReflection",description:"Call prop/methods on classes",source:"@site/docs/RSCG-Examples/StaticReflection.md",sourceDirName:"RSCG-Examples",slug:"/StaticReflection",permalink:"/RSCG_Examples/v2/docs/StaticReflection",draft:!1,tags:[],version:"current",sidebarPosition:750,frontMatter:{sidebar_position:750,title:"75 - StaticReflection",description:"Call prop/methods on classes",slug:"/StaticReflection"},sidebar:"tutorialSidebar",previous:{title:"74 - CredFetoEnum",permalink:"/RSCG_Examples/v2/docs/CredFetoEnum"},next:{title:"Microsoft Examples",permalink:"/RSCG_Examples/v2/docs/category/microsoft-examples"}},u={},p=[{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example ( source csproj, source files )",id:"example--source-csproj-source-files-",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Usefull",id:"usefull",level:2},{value:"Download Example (.NET  C# )",id:"download-example-net--c-",level:3},{value:"Share StaticReflection",id:"share-staticreflection",level:3},{value:"In the same category (EnhancementClass)",id:"in-the-same-category-enhancementclass",level:2},{value:"ApparatusAOT",id:"apparatusaot",level:3},{value:"BuilderGenerator",id:"buildergenerator",level:3},{value:"FastGenericNew",id:"fastgenericnew",level:3},{value:"GeneratorEquals",id:"generatorequals",level:3},{value:"Immutype",id:"immutype",level:3},{value:"Lombok.NET",id:"lomboknet",level:3},{value:"M31.FluentAPI",id:"m31fluentapi",level:3},{value:"MemoryPack",id:"memorypack",level:3},{value:"Meziantou.Polyfill",id:"meziantoupolyfill",level:3},{value:"Microsoft.Extensions.Logging",id:"microsoftextensionslogging",level:3},{value:"Microsoft.Interop.JavaScript.JSImportGenerator",id:"microsoftinteropjavascriptjsimportgenerator",level:3},{value:"Roozie.AutoInterface",id:"roozieautointerface",level:3},{value:"RSCG_Decorator",id:"rscg_decorator",level:3},{value:"RSCG_Static",id:"rscg_static",level:3},{value:"SyncMethodGenerator",id:"syncmethodgenerator",level:3},{value:"System.Runtime.InteropServices",id:"systemruntimeinteropservices",level:3},{value:"System.Text.RegularExpressions",id:"systemtextregularexpressions",level:3}],S={toc:p},f="wrapper";function g(e){let{components:t,...c}=e;return(0,o.kt)(f,(0,i.Z)({},S,c,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"staticreflection--by-devin-martin"},"StaticReflection  by Devin Martin"),(0,o.kt)(s.Z,{toc:p,mdxType:"TOCInline"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/StaticReflection/"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/dt/StaticReflection?label=StaticReflection",alt:"Nuget"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/devinmartin/staticreflection"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/github/last-commit/devinmartin/staticreflection?label=updated",alt:"GitHub last commit"})),"\n",(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/github/stars/devinmartin/staticreflection?style=social",alt:"GitHub Repo stars"})),(0,o.kt)("h2",{id:"details"},"Details"),(0,o.kt)("h3",{id:"info"},"Info"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Name: ",(0,o.kt)("strong",{parentName:"p"},"StaticReflection")),(0,o.kt)("p",{parentName:"admonition"},"This is intended to relieve some of reflection's shortcomings by adding compiler checking against member info in reflective operations."),(0,o.kt)("p",{parentName:"admonition"},"Author: Devin Martin"),(0,o.kt)("p",{parentName:"admonition"},"NuGet:\n",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("a",{parentName:"em",href:"https://www.nuget.org/packages/StaticReflection/"},"https://www.nuget.org/packages/StaticReflection/")),"   "),(0,o.kt)("p",{parentName:"admonition"},"You can find more details at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/devinmartin/staticreflection"},"https://github.com/devinmartin/staticreflection")),(0,o.kt)("p",{parentName:"admonition"},"Source : ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/devinmartin/staticreflection"},"https://github.com/devinmartin/staticreflection"))),(0,o.kt)("h3",{id:"original-readme"},"Original Readme"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("h1",{parentName:"admonition",id:"staticreflection"},"StaticReflection")),(0,o.kt)("h3",{id:"about"},"About"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Call prop/methods on classes  ")),(0,o.kt)("h2",{id:"how-to-use"},"How to use"),(0,o.kt)("h3",{id:"example--source-csproj-source-files-"},"Example ( source csproj, source files )"),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(a.Z,{value:"csproj",label:"CSharp Project",mdxType:"TabItem"},(0,o.kt)("p",null,"This is the CSharp Project that references ",(0,o.kt)("strong",{parentName:"p"},"StaticReflection")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {11}",showLineNumbers:!0,"{11}":!0},'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net7.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include="FastStaticReflection" Version="1.0.0-preview.3" />\n    <PackageReference Include="FastStaticReflection.CodeGen" Version="1.0.0-preview.3" />\n  </ItemGroup>\n    <PropertyGroup>\n        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n        <CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n    </PropertyGroup>\n</Project>\n\n'))),(0,o.kt)(a.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\StaticReflection\\src\\StaticReflectionDemo\\Program.cs",label:"Program.cs",mdxType:"TabItem"},(0,o.kt)("p",null,"  This is the use of ",(0,o.kt)("strong",{parentName:"p"},"StaticReflection")," in ",(0,o.kt)("em",{parentName:"p"},"Program.cs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using StaticReflection;\nusing StaticReflectionDemo;\n\nvar p = new Person();\n\nPersonReflection.Instance.SetProperty(p, "FirstName","Andrei");\nPersonReflection.Instance.SetProperty(p, "LastName", "Ignat");\n\nConsole.WriteLine(p.Name());\n'))),(0,o.kt)(a.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\StaticReflection\\src\\StaticReflectionDemo\\Person.cs",label:"Person.cs",mdxType:"TabItem"},(0,o.kt)("p",null,"  This is the use of ",(0,o.kt)("strong",{parentName:"p"},"StaticReflection")," in ",(0,o.kt)("em",{parentName:"p"},"Person.cs")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'using StaticReflection.Annotions;\n\nnamespace StaticReflectionDemo;\n[StaticReflection]\ninternal partial class Person\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n    public string Name()\n    {\n        return $"{FirstName} {LastName}";\n    }\n}\n\n')))),(0,o.kt)("h3",{id:"generated-files"},"Generated Files"),(0,o.kt)("p",null,"Those are taken from $(BaseIntermediateOutputPath)\\GX"),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(a.Z,{value:"C:\\gth\\RSCG_Examples\\v2\\rscg_examples\\StaticReflection\\src\\StaticReflectionDemo\\obj\\GX\\StaticReflection.CodeGen\\StaticReflection.CodeGen.Generators.StaticReflectionGenerator\\PersonReflection.g.cs",label:"PersonReflection.g.cs",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"showLineNumbers",showLineNumbers:!0},'// <auto-generated/>\n#pragma warning disable CS9082\n#pragma warning disable CS8669\nnamespace StaticReflectionDemo\n{\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("StaticReflection.CodeGen", "1.0.0")]\n    [global::System.Diagnostics.DebuggerStepThrough]\n    [global::System.Runtime.CompilerServices.CompilerGenerated]\n    internal sealed class PersonReflection : StaticReflection.ITypeDefine\n    {\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("StaticReflection.CodeGen", "1.0.0")]\n        [global::System.Diagnostics.DebuggerStepThrough]\n        [global::System.Runtime.CompilerServices.CompilerGenerated]\n        internal sealed class Person0PReflection : StaticReflection.IMemberInvokeDefine<StaticReflectionDemo.Person, string>, StaticReflection.IPropertyDefine, StaticReflection.IMemberAnonymousInvokeDefine\n        {\n            public static readonly Person0PReflection Instance = new Person0PReflection();\n            public System.Type DeclareType { get; } = typeof(StaticReflectionDemo.Person);\n            public System.String Name { get; } = "FirstName";\n            public System.String MetadataName { get; } = "FirstName";\n            public System.Boolean IsVirtual { get; } = false;\n            public System.Boolean IsStatic { get; } = false;\n            public System.Boolean IsOverride { get; } = false;\n            public System.Boolean IsAbstract { get; } = false;\n            public System.Boolean IsSealed { get; } = false;\n            public System.Boolean IsDefinition { get; } = true;\n            public System.Boolean IsExtern { get; } = false;\n            public System.Boolean IsImplicitlyDeclared { get; } = false;\n            public System.Boolean CanBeReferencedByName { get; } = true;\n            public System.Boolean IsPublic { get; } = true;\n            public System.Boolean IsPrivate { get; } = false;\n            public System.Boolean IsProtected { get; } = false;\n            public System.Boolean IsInternal { get; } = false;\n            public System.Type PropertyType { get; } = typeof(string);\n            public System.Boolean CanRead { get; } = true;\n            public System.Boolean CanWrite { get; } = true;\n            public System.Boolean IsRequired { get; } = false;\n            public System.Boolean IsWithEvents { get; } = false;\n            public System.Boolean ReturnsByRef { get; } = false;\n            public System.Boolean ReturnsByRefReadonly { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> GetterAttributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> SetterAttributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> Attributes { get; } = new System.Attribute[]\n            {\n            };\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public string GetValue(Person instance)\n            {\n                return instance.FirstName;\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public void SetValue(Person instance, string value)\n            {\n                instance.FirstName = value;\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public void SetValueAnonymous(object instance, object value)\n            {\n                SetValue((StaticReflectionDemo.Person)instance, (string)value);\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public object GetValueAnonymous(object instance)\n            {\n                return (object)GetValue((StaticReflectionDemo.Person)instance);\n            }\n        }\n\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("StaticReflection.CodeGen", "1.0.0")]\n        [global::System.Diagnostics.DebuggerStepThrough]\n        [global::System.Runtime.CompilerServices.CompilerGenerated]\n        internal sealed class Person1PReflection : StaticReflection.IMemberInvokeDefine<StaticReflectionDemo.Person, string>, StaticReflection.IPropertyDefine, StaticReflection.IMemberAnonymousInvokeDefine\n        {\n            public static readonly Person1PReflection Instance = new Person1PReflection();\n            public System.Type DeclareType { get; } = typeof(StaticReflectionDemo.Person);\n            public System.String Name { get; } = "LastName";\n            public System.String MetadataName { get; } = "LastName";\n            public System.Boolean IsVirtual { get; } = false;\n            public System.Boolean IsStatic { get; } = false;\n            public System.Boolean IsOverride { get; } = false;\n            public System.Boolean IsAbstract { get; } = false;\n            public System.Boolean IsSealed { get; } = false;\n            public System.Boolean IsDefinition { get; } = true;\n            public System.Boolean IsExtern { get; } = false;\n            public System.Boolean IsImplicitlyDeclared { get; } = false;\n            public System.Boolean CanBeReferencedByName { get; } = true;\n            public System.Boolean IsPublic { get; } = true;\n            public System.Boolean IsPrivate { get; } = false;\n            public System.Boolean IsProtected { get; } = false;\n            public System.Boolean IsInternal { get; } = false;\n            public System.Type PropertyType { get; } = typeof(string);\n            public System.Boolean CanRead { get; } = true;\n            public System.Boolean CanWrite { get; } = true;\n            public System.Boolean IsRequired { get; } = false;\n            public System.Boolean IsWithEvents { get; } = false;\n            public System.Boolean ReturnsByRef { get; } = false;\n            public System.Boolean ReturnsByRefReadonly { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> GetterAttributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> SetterAttributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> Attributes { get; } = new System.Attribute[]\n            {\n            };\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public string GetValue(Person instance)\n            {\n                return instance.LastName;\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public void SetValue(Person instance, string value)\n            {\n                instance.LastName = value;\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public void SetValueAnonymous(object instance, object value)\n            {\n                SetValue((StaticReflectionDemo.Person)instance, (string)value);\n            }\n\n            [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public object GetValueAnonymous(object instance)\n            {\n                return (object)GetValue((StaticReflectionDemo.Person)instance);\n            }\n        }\n\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("StaticReflection.CodeGen", "1.0.0")]\n        [global::System.Diagnostics.DebuggerStepThrough]\n        [global::System.Runtime.CompilerServices.CompilerGenerated]\n        internal sealed class Person0MReflection : StaticReflection.IMethodDefine, StaticReflection.Invoking.IArgsMethod<StaticReflectionDemo.Person, string>, StaticReflection.Invoking.IArgs0AnonymousMethod, StaticReflection.Invoking.IUsualArgsMethod<StaticReflectionDemo.Person, string>, StaticReflection.Invoking.IUsualArgs0AnonymousMethod\n        {\n            public static readonly Person0MReflection Instance = new Person0MReflection();\n            private Person0MReflection()\n            {\n            }\n\n            public System.String Name { get; } = "Name";\n            public System.String MetadataName { get; } = "Name";\n            public System.Boolean IsVirtual { get; } = false;\n            public System.Boolean IsStatic { get; } = false;\n            public System.Boolean IsOverride { get; } = false;\n            public System.Boolean IsAbstract { get; } = false;\n            public System.Boolean IsSealed { get; } = false;\n            public System.Boolean IsDefinition { get; } = true;\n            public System.Boolean IsExtern { get; } = false;\n            public System.Boolean IsImplicitlyDeclared { get; } = false;\n            public System.Boolean CanBeReferencedByName { get; } = true;\n            public System.Boolean IsPublic { get; } = true;\n            public System.Boolean IsPrivate { get; } = false;\n            public System.Boolean IsProtected { get; } = false;\n            public System.Boolean IsInternal { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> Attributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Type DeclareType { get; } = typeof(StaticReflectionDemo.Person);\n            public System.Boolean ReturnsByRef { get; } = false;\n            public StaticReflection.StaticMethodKind MethodKind { get; } = StaticReflection.StaticMethodKind.Ordinary;\n            public StaticReflection.StaticRefKind RefKind { get; } = StaticReflection.StaticRefKind.None;\n            public StaticReflection.StaticNullableAnnotation ReturnNullableAnnotation { get; } = StaticReflection.StaticNullableAnnotation.NotAnnotated;\n            public StaticReflection.StaticNullableAnnotation ReceiverNullableAnnotation { get; } = StaticReflection.StaticNullableAnnotation.NotAnnotated;\n            public System.Boolean ReturnsByRefReadonly { get; } = false;\n            public System.Type ReturnType { get; } = typeof(string);\n            public System.Collections.Generic.IReadOnlyList<System.Type> ArgumentTypes { get; } = new System.Type[]\n            {\n            };\n            public System.Boolean IsGenericMethod { get; } = false;\n            public System.Int32 Arity { get; } = 0;\n            public System.Boolean IsExtensionMethod { get; } = false;\n            public System.Boolean IsAsync { get; } = false;\n            public System.Boolean IsVararg { get; } = false;\n            public System.Boolean IsCheckedBuiltin { get; } = false;\n            public System.Boolean HidesBaseMethodsByName { get; } = false;\n            public System.Boolean ReturnsVoid { get; } = false;\n            public System.Boolean IsReadOnly { get; } = false;\n            public System.Boolean IsInitOnly { get; } = false;\n            public System.Boolean IsPartialDefinition { get; } = false;\n            public System.Boolean IsConditional { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<StaticReflection.ITypeArgumentDefine> TypeArguments { get; } = new StaticReflection.ITypeArgumentDefine[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> ReturnTypeAttributes { get; } = new System.Attribute[]\n            {\n            };\n\n            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public \n#if !NET7_0_OR_GREATER\n            unsafe \n#endif\n            ref string Invoke(StaticReflectionDemo.Person instance)\n            {\n                ref string result = ref System.Runtime.CompilerServices.Unsafe.AsRef(instance.Name());\n                return ref result;\n            }\n\n            public \n#if !NET7_0_OR_GREATER\n            unsafe \n#endif\n            ref object InvokeAnonymous(object instance)\n            {\n                return ref System.Runtime.CompilerServices.Unsafe.AsRef<object>(Invoke((StaticReflectionDemo.Person)instance));\n            }\n\n            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public string InvokeUsual(StaticReflectionDemo.Person instance)\n            {\n                return instance.Name();\n            }\n\n            public object InvokeUsualAnonymous(object instance)\n            {\n                return InvokeUsual((StaticReflectionDemo.Person)instance);\n            }\n        }\n\n        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("StaticReflection.CodeGen", "1.0.0")]\n        [global::System.Diagnostics.DebuggerStepThrough]\n        [global::System.Runtime.CompilerServices.CompilerGenerated]\n        internal sealed class Person0CReflection : StaticReflection.IConstructorDefine, StaticReflection.Invoking.IArgsMethod<StaticReflectionDemo.Person, StaticReflectionDemo.Person>, StaticReflection.Invoking.IArgs0AnonymousMethod, StaticReflection.Invoking.IUsualArgsMethod<StaticReflectionDemo.Person, StaticReflectionDemo.Person>, StaticReflection.Invoking.IUsualArgs0AnonymousMethod\n        {\n            public static readonly Person0CReflection Instance = new Person0CReflection();\n            private Person0CReflection()\n            {\n            }\n\n            public System.String Name { get; } = ".ctor";\n            public System.String MetadataName { get; } = ".ctor";\n            public System.Boolean IsVirtual { get; } = false;\n            public System.Boolean IsStatic { get; } = false;\n            public System.Boolean IsOverride { get; } = false;\n            public System.Boolean IsAbstract { get; } = false;\n            public System.Boolean IsSealed { get; } = false;\n            public System.Boolean IsDefinition { get; } = true;\n            public System.Boolean IsExtern { get; } = false;\n            public System.Boolean IsImplicitlyDeclared { get; } = true;\n            public System.Boolean CanBeReferencedByName { get; } = false;\n            public System.Boolean IsPublic { get; } = true;\n            public System.Boolean IsPrivate { get; } = false;\n            public System.Boolean IsProtected { get; } = false;\n            public System.Boolean IsInternal { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> Attributes { get; } = new System.Attribute[]\n            {\n            };\n            public System.Type DeclareType { get; } = typeof(StaticReflectionDemo.Person);\n            public System.Boolean ReturnsByRef { get; } = false;\n            public StaticReflection.StaticMethodKind MethodKind { get; } = StaticReflection.StaticMethodKind.Constructor;\n            public StaticReflection.StaticRefKind RefKind { get; } = StaticReflection.StaticRefKind.None;\n            public StaticReflection.StaticNullableAnnotation ReturnNullableAnnotation { get; } = StaticReflection.StaticNullableAnnotation.NotAnnotated;\n            public StaticReflection.StaticNullableAnnotation ReceiverNullableAnnotation { get; } = StaticReflection.StaticNullableAnnotation.NotAnnotated;\n            public System.Boolean ReturnsByRefReadonly { get; } = false;\n            public System.Type ReturnType { get; } = typeof(StaticReflectionDemo.Person);\n            public System.Collections.Generic.IReadOnlyList<System.Type> ArgumentTypes { get; } = new System.Type[]\n            {\n            };\n            public System.Boolean IsGenericMethod { get; } = false;\n            public System.Int32 Arity { get; } = 0;\n            public System.Boolean IsExtensionMethod { get; } = false;\n            public System.Boolean IsAsync { get; } = false;\n            public System.Boolean IsVararg { get; } = false;\n            public System.Boolean IsCheckedBuiltin { get; } = false;\n            public System.Boolean HidesBaseMethodsByName { get; } = false;\n            public System.Boolean ReturnsVoid { get; } = true;\n            public System.Boolean IsReadOnly { get; } = false;\n            public System.Boolean IsInitOnly { get; } = false;\n            public System.Boolean IsPartialDefinition { get; } = false;\n            public System.Boolean IsConditional { get; } = false;\n            public System.Collections.Generic.IReadOnlyList<StaticReflection.ITypeArgumentDefine> TypeArguments { get; } = new StaticReflection.ITypeArgumentDefine[]\n            {\n            };\n            public System.Collections.Generic.IReadOnlyList<System.Attribute> ReturnTypeAttributes { get; } = new System.Attribute[]\n            {\n            };\n\n            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public \n#if !NET7_0_OR_GREATER\n            unsafe \n#endif\n            ref StaticReflectionDemo.Person Invoke(StaticReflectionDemo.Person instance)\n            {\n                ref StaticReflectionDemo.Person result = ref System.Runtime.CompilerServices.Unsafe.AsRef(new Person());\n                return ref result;\n            }\n\n            public \n#if !NET7_0_OR_GREATER\n            unsafe \n#endif\n            ref object InvokeAnonymous(object instance)\n            {\n                return ref System.Runtime.CompilerServices.Unsafe.AsRef<object>(Invoke((StaticReflectionDemo.Person)instance));\n            }\n\n            [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]\n            public StaticReflectionDemo.Person InvokeUsual(StaticReflectionDemo.Person instance)\n            {\n                return new Person();\n            }\n\n            public object InvokeUsualAnonymous(object instance)\n            {\n                return InvokeUsual((StaticReflectionDemo.Person)instance);\n            }\n        }\n\n        public static readonly PersonReflection Instance = new PersonReflection();\n        public System.Type DeclareType { get; } = typeof(StaticReflectionDemo.Person);\n        public System.String Name { get; } = "Person";\n        public System.String MetadataName { get; } = "Person";\n        public System.Boolean IsVirtual { get; } = false;\n        public System.Boolean IsStatic { get; } = false;\n        public System.Boolean IsOverride { get; } = false;\n        public System.Boolean IsAbstract { get; } = false;\n        public System.Boolean IsSealed { get; } = false;\n        public System.Boolean IsDefinition { get; } = true;\n        public System.Boolean IsExtern { get; } = false;\n        public System.Boolean IsImplicitlyDeclared { get; } = false;\n        public System.Boolean CanBeReferencedByName { get; } = true;\n        public System.Boolean IsPublic { get; } = false;\n        public System.Boolean IsPrivate { get; } = false;\n        public System.Boolean IsProtected { get; } = false;\n        public System.Boolean IsInternal { get; } = true;\n        public System.Type? BaseType { get; } = typeof(StaticReflectionDemo.Person);\n        public System.Boolean IsReferenceType { get; } = true;\n        public System.Boolean IsValueType { get; } = false;\n        public System.Boolean IsAnonymousType { get; } = false;\n        public System.Boolean IsTupleType { get; } = false;\n        public System.Boolean IsNativeIntegerType { get; } = false;\n        public System.Boolean IsRefLikeType { get; } = false;\n        public System.Boolean IsUnmanagedType { get; } = false;\n        public System.Boolean IsReadOnly { get; } = false;\n        public System.Boolean IsRecord { get; } = false;\n        public System.Int32 TypeKind { get; } = 2;\n        public StaticReflection.StaticNullableAnnotation NullableAnnotation { get; } = StaticReflection.StaticNullableAnnotation.None;\n        public System.Collections.Generic.IReadOnlyList<System.String> Interfaces { get; } = new System.String[]\n        {\n        };\n        public System.Collections.Generic.IReadOnlyList<System.String> AllInterfaces { get; } = new System.String[]\n        {\n        };\n        public System.Collections.Generic.IReadOnlyList<System.Attribute> Attributes { get; } = new System.Attribute[]\n        {\n            new StaticReflection.Annotions.StaticReflectionAttribute()\n            {\n            }\n        };\n        public System.Collections.Generic.IReadOnlyList<StaticReflection.IPropertyDefine> Properties { get; } = new StaticReflection.IPropertyDefine[]\n        {\n            Person0PReflection.Instance,\n            Person1PReflection.Instance\n        };\n        public System.Collections.Generic.IReadOnlyList<StaticReflection.IMethodDefine> Methods { get; } = new StaticReflection.IMethodDefine[]\n        {\n            Person0MReflection.Instance\n        };\n        public System.Collections.Generic.IReadOnlyList<StaticReflection.IEventDefine> Events { get; } = new StaticReflection.IEventDefine[]\n        {\n        };\n        public System.Collections.Generic.IReadOnlyList<StaticReflection.IFieldDefine> Fields { get; } = new StaticReflection.IFieldDefine[]\n        {\n        };\n        public System.Collections.Generic.IReadOnlyList<StaticReflection.IConstructorDefine> Constructors { get; } = new StaticReflection.IConstructorDefine[]\n        {\n            Person0CReflection.Instance\n        };\n    }\n}\n')))),(0,o.kt)("h2",{id:"usefull"},"Usefull"),(0,o.kt)("h3",{id:"download-example-net--c-"},"Download Example (.NET  C# )"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("a",{target:"_blank",href:n(9853).Z},"Download Example project StaticReflection "))),(0,o.kt)("h3",{id:"share-staticreflection"},"Share StaticReflection"),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection&quote=StaticReflection",title:"Share on Facebook",target:"_blank"},"Share on Facebook")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection&text=StaticReflection:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection",target:"_blank",title:"Tweet"},"Share in Twitter")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection&title=StaticReflection",target:"_blank",title:"Submit to Reddit"},"Share on Reddit")),(0,o.kt)("li",null,(0,o.kt)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection&title=StaticReflection&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FStaticReflection",target:"_blank",title:"Share on LinkedIn"},"Share on Linkedin"))),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/StaticReflection"},"https://ignatandrei.github.io/RSCG_Examples/v2/docs/StaticReflection")),(0,o.kt)("h2",{id:"in-the-same-category-enhancementclass"},"In the same category (EnhancementClass)"),(0,o.kt)("h3",{id:"apparatusaot"},(0,o.kt)("a",{parentName:"h3",href:"/docs/ApparatusAOT"},"ApparatusAOT")),(0,o.kt)("h3",{id:"buildergenerator"},(0,o.kt)("a",{parentName:"h3",href:"/docs/BuilderGenerator"},"BuilderGenerator")),(0,o.kt)("h3",{id:"fastgenericnew"},(0,o.kt)("a",{parentName:"h3",href:"/docs/FastGenericNew"},"FastGenericNew")),(0,o.kt)("h3",{id:"generatorequals"},(0,o.kt)("a",{parentName:"h3",href:"/docs/GeneratorEquals"},"GeneratorEquals")),(0,o.kt)("h3",{id:"immutype"},(0,o.kt)("a",{parentName:"h3",href:"/docs/Immutype"},"Immutype")),(0,o.kt)("h3",{id:"lomboknet"},(0,o.kt)("a",{parentName:"h3",href:"/docs/Lombok.NET"},"Lombok.NET")),(0,o.kt)("h3",{id:"m31fluentapi"},(0,o.kt)("a",{parentName:"h3",href:"/docs/M31.FluentAPI"},"M31.FluentAPI")),(0,o.kt)("h3",{id:"memorypack"},(0,o.kt)("a",{parentName:"h3",href:"/docs/MemoryPack"},"MemoryPack")),(0,o.kt)("h3",{id:"meziantoupolyfill"},(0,o.kt)("a",{parentName:"h3",href:"/docs/Meziantou.Polyfill"},"Meziantou.Polyfill")),(0,o.kt)("h3",{id:"microsoftextensionslogging"},(0,o.kt)("a",{parentName:"h3",href:"/docs/Microsoft.Extensions.Logging"},"Microsoft.Extensions.Logging")),(0,o.kt)("h3",{id:"microsoftinteropjavascriptjsimportgenerator"},(0,o.kt)("a",{parentName:"h3",href:"/docs/Microsoft.Interop.JavaScript.JSImportGenerator"},"Microsoft.Interop.JavaScript.JSImportGenerator")),(0,o.kt)("h3",{id:"roozieautointerface"},(0,o.kt)("a",{parentName:"h3",href:"/docs/Roozie.AutoInterface"},"Roozie.AutoInterface")),(0,o.kt)("h3",{id:"rscg_decorator"},(0,o.kt)("a",{parentName:"h3",href:"/docs/RSCG_Decorator"},"RSCG_Decorator")),(0,o.kt)("h3",{id:"rscg_static"},(0,o.kt)("a",{parentName:"h3",href:"/docs/RSCG_Static"},"RSCG_Static")),(0,o.kt)("h3",{id:"syncmethodgenerator"},(0,o.kt)("a",{parentName:"h3",href:"/docs/SyncMethodGenerator"},"SyncMethodGenerator")),(0,o.kt)("h3",{id:"systemruntimeinteropservices"},(0,o.kt)("a",{parentName:"h3",href:"/docs/System.Runtime.InteropServices"},"System.Runtime.InteropServices")),(0,o.kt)("h3",{id:"systemtextregularexpressions"},(0,o.kt)("a",{parentName:"h3",href:"/docs/System.Text.RegularExpressions"},"System.Text.RegularExpressions")))}g.isMDXComponent=!0},9853:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/files/StaticReflection-236be561d1853a3fb9df9b8b2d6e3f08.zip"}}]);