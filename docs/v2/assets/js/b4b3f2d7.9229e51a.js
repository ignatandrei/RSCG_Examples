"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[9315],{28689:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>a});var s=t(74848),r=t(28453);const a=[{value:"Category &quot;FilesToCode&quot; has the following generators:",id:"category-filestocode-has-the-following-generators",level:3},{value:"See category",id:"see-category",level:3}];function i(e){const n={a:"a",h3:"h3",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"category-filestocode-has-the-following-generators",children:'Category "FilesToCode" has the following generators:'}),"\n",(0,s.jsxs)(n.p,{children:["1 ",(0,s.jsx)(n.a,{href:"/docs/Chorn.EmbeddedResourceAccessGenerator",children:"Chorn.EmbeddedResourceAccessGenerator"})]}),"\n",(0,s.jsxs)(n.p,{children:["2 ",(0,s.jsx)(n.a,{href:"/docs/corecraft",children:"corecraft"})]}),"\n",(0,s.jsxs)(n.p,{children:["3 ",(0,s.jsx)(n.a,{href:"/docs/Datacute.EmbeddedResourcePropertyGenerator",children:"Datacute.EmbeddedResourcePropertyGenerator"})]}),"\n",(0,s.jsxs)(n.p,{children:["4 ",(0,s.jsx)(n.a,{href:"/docs/DotnetYang",children:"DotnetYang"})]}),"\n",(0,s.jsxs)(n.p,{children:["5 ",(0,s.jsx)(n.a,{href:"/docs/EmbedResourceCSharp",children:"EmbedResourceCSharp"})]}),"\n",(0,s.jsxs)(n.p,{children:["6 ",(0,s.jsx)(n.a,{href:"/docs/LingoGen",children:"LingoGen"})]}),"\n",(0,s.jsxs)(n.p,{children:["7 ",(0,s.jsx)(n.a,{href:"/docs/NFH.FileEmbed",children:"NFH.FileEmbed"})]}),"\n",(0,s.jsxs)(n.p,{children:["8 ",(0,s.jsx)(n.a,{href:"/docs/NotNotAppSettings",children:"NotNotAppSettings"})]}),"\n",(0,s.jsxs)(n.p,{children:["9 ",(0,s.jsx)(n.a,{href:"/docs/Podimo.ConstEmbed",children:"Podimo.ConstEmbed"})]}),"\n",(0,s.jsxs)(n.p,{children:["10 ",(0,s.jsx)(n.a,{href:"/docs/ResXGenerator",children:"ResXGenerator"})]}),"\n",(0,s.jsxs)(n.p,{children:["11 ",(0,s.jsx)(n.a,{href:"/docs/RSCG_JSON2Class",children:"RSCG_JSON2Class"})]}),"\n",(0,s.jsxs)(n.p,{children:["12 ",(0,s.jsx)(n.a,{href:"/docs/RSCG_Utils",children:"RSCG_Utils"})]}),"\n",(0,s.jsxs)(n.p,{children:["13 ",(0,s.jsx)(n.a,{href:"/docs/Strings.ResourceGenerator",children:"Strings.ResourceGenerator"})]}),"\n",(0,s.jsxs)(n.p,{children:["14 ",(0,s.jsx)(n.a,{href:"/docs/ThisAssembly_Resources",children:"ThisAssembly_Resources"})]}),"\n",(0,s.jsxs)(n.p,{children:["15 ",(0,s.jsx)(n.a,{href:"/docs/ThisAssembly.Strings",children:"ThisAssembly.Strings"})]}),"\n",(0,s.jsxs)(n.p,{children:["16 ",(0,s.jsx)(n.a,{href:"/docs/Weave",children:"Weave"})]}),"\n",(0,s.jsx)(n.h3,{id:"see-category",children:"See category"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"/docs/Categories/FilesToCode",children:"FilesToCode"})})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(i,{...e})}):i(e)}},65921:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>u,default:()=>g,frontMatter:()=>p,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"RSCG-Examples/RSCG_JSON2Class","title":"122 - RSCG_JSON2Class","description":"transform any json into a class","source":"@site/docs/RSCG-Examples/RSCG_JSON2Class.md","sourceDirName":"RSCG-Examples","slug":"/RSCG_JSON2Class","permalink":"/RSCG_Examples/v2/docs/RSCG_JSON2Class","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1220,"frontMatter":{"sidebar_position":1220,"title":"122 - RSCG_JSON2Class","description":"transform any json into a class","slug":"/RSCG_JSON2Class"},"sidebar":"tutorialSidebar","previous":{"title":"121 - AutoSpectre","permalink":"/RSCG_Examples/v2/docs/AutoSpectre"},"next":{"title":"123 - CodeAnalysis","permalink":"/RSCG_Examples/v2/docs/CodeAnalysis"}}');var r=t(74848),a=t(28453),i=t(11470),o=t(19365),l=t(14252),c=t(28689);const p={sidebar_position:1220,title:"122 - RSCG_JSON2Class",description:"transform any json into a class",slug:"/RSCG_JSON2Class"},u="RSCG_JSON2Class  by Andrei Ignat",d={},m=[{value:"NuGet / site data",id:"nuget--site-data",level:2},{value:"Details",id:"details",level:2},{value:"Info",id:"info",level:3},{value:"Original Readme",id:"original-readme",level:3},{value:"Usage",id:"usage",level:2},{value:"About",id:"about",level:3},{value:"How to use",id:"how-to-use",level:2},{value:"Example (source csproj, source files)",id:"example-source-csproj-source-files",level:3},{value:"Generated Files",id:"generated-files",level:3},{value:"Useful",id:"useful",level:2},{value:"Download Example (.NET  C#)",id:"download-example-net--c",level:3},{value:"Share RSCG_JSON2Class",id:"share-rscg_json2class",level:3},...c.RM];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"rscg_json2class--by-andrei-ignat",children:"RSCG_JSON2Class  by Andrei Ignat"})}),"\n",(0,r.jsx)(l.A,{toc:m}),"\n",(0,r.jsx)(n.h2,{id:"nuget--site-data",children:"NuGet / site data"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://www.nuget.org/packages/RSCG_JSON2Class/",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/nuget/dt/RSCG_JSON2Class?label=RSCG_JSON2Class",alt:"Nuget"})}),"\n",(0,r.jsx)(n.a,{href:"https://github.com/ignatandrei/RSCG_JSON2Class",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/github/last-commit/ignatandrei/RSCG_JSON2Class?label=updated",alt:"GitHub last commit"})}),"\n",(0,r.jsx)(n.img,{src:"https://img.shields.io/github/stars/ignatandrei/RSCG_JSON2Class?style=social",alt:"GitHub Repo stars"})]}),"\n",(0,r.jsx)(n.h2,{id:"details",children:"Details"}),"\n",(0,r.jsx)(n.h3,{id:"info",children:"Info"}),"\n",(0,r.jsxs)(n.admonition,{type:"info",children:[(0,r.jsxs)(n.p,{children:["Name: ",(0,r.jsx)(n.strong,{children:"RSCG_JSON2Class"})]}),(0,r.jsx)(n.p,{children:"This package transforms any json into a class"}),(0,r.jsx)(n.p,{children:"Author: Andrei Ignat"}),(0,r.jsxs)(n.p,{children:["NuGet:\n",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.a,{href:"https://www.nuget.org/packages/RSCG_JSON2Class/",children:"https://www.nuget.org/packages/RSCG_JSON2Class/"})})]}),(0,r.jsxs)(n.p,{children:["You can find more details at ",(0,r.jsx)(n.a,{href:"https://github.com/ignatandrei/RSCG_JSON2Class",children:"https://github.com/ignatandrei/RSCG_JSON2Class"})]}),(0,r.jsxs)(n.p,{children:["Source: ",(0,r.jsx)(n.a,{href:"https://github.com/ignatandrei/RSCG_JSON2Class",children:"https://github.com/ignatandrei/RSCG_JSON2Class"})]})]}),"\n",(0,r.jsx)(n.h3,{id:"original-readme",children:"Original Readme"}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.h1,{id:"rscg_json2class",children:"RSCG_JSON2Class"}),(0,r.jsx)(n.p,{children:"Transform any json ( including appsettings ) into a class"}),(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),(0,r.jsx)(n.p,{children:"Install the nuget package into your project"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<ItemGroup>\n  <PackageReference Include="RSCG_JSON2Class" Version="2024.2.29.807" OutputItemType="Analyzer" ReferenceOutputAssembly="false"  />\n</ItemGroup>\n<PropertyGroup>\n\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t<GenerateDocumentationFile>True</GenerateDocumentationFile>\n</PropertyGroup>\n\n'})}),(0,r.jsx)(n.p,{children:"Verify that the json file is set analyzer ( and , if you want to deserialize, copy to the output directory)"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<ItemGroup>\n  <None Remove="testData.json" />\n</ItemGroup>\n<ItemGroup>\n<AdditionalFiles Include="testData.json">\n<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\n</AdditionalFiles>\n</ItemGroup>\n\n'})}),(0,r.jsx)(n.p,{children:"Access from C# code"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'using System.Text.Json;\nvar testData = JsonSerializer.Deserialize<JSON2ClassConsole.SettingsJson.testData>(System.IO.File.ReadAllText("testData.json"));\nArgumentNullException.ThrowIfNull(testData);\nConsole.WriteLine(testData.Logging.LogLevel.Default);\nConsole.WriteLine(testData.DictData.Number_2);\n'})})]}),"\n",(0,r.jsx)(n.h3,{id:"about",children:"About"}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"transform any json into a class"})}),"\n",(0,r.jsx)(n.h2,{id:"how-to-use",children:"How to use"}),"\n",(0,r.jsx)(n.h3,{id:"example-source-csproj-source-files",children:"Example (source csproj, source files)"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsxs)(o.A,{value:"csproj",label:"CSharp Project",children:[(0,r.jsxs)(n.p,{children:["This is the CSharp Project that references ",(0,r.jsx)(n.strong,{children:"RSCG_JSON2Class"})]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {20}",children:'<Project Sdk="Microsoft.NET.Sdk">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net8.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n<ItemGroup>\n  <None Remove="testData.json" />\n</ItemGroup>\n<ItemGroup>\n  <AdditionalFiles Include="testData.json">\n    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\n  </AdditionalFiles>\n</ItemGroup>\n\t\n\n\t<ItemGroup>\n  <PackageReference Include="RSCG_JSON2Class" Version="2024.2.29.807" OutputItemType="Analyzer" ReferenceOutputAssembly="false"  />\n</ItemGroup>\n\t<PropertyGroup>\n\t\t<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>\n\t\t<CompilerGeneratedFilesOutputPath>$(BaseIntermediateOutputPath)\\GX</CompilerGeneratedFilesOutputPath>\n\t\t<GenerateDocumentationFile>True</GenerateDocumentationFile>\n\t</PropertyGroup>\n\n\n</Project>\n\n'})})]}),(0,r.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_JSON2Class\\src\\JSON2ClassConsole\\Program.cs",label:"Program.cs",children:[(0,r.jsxs)(n.p,{children:["This is the use of ",(0,r.jsx)(n.strong,{children:"RSCG_JSON2Class"})," in ",(0,r.jsx)(n.em,{children:"Program.cs"})]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'using System.Text.Json;\nvar testData = JsonSerializer.Deserialize<JSON2ClassConsole.SettingsJson.testData>(System.IO.File.ReadAllText("testData.json"));\nArgumentNullException.ThrowIfNull(testData);\nConsole.WriteLine(testData.Logging.LogLevel.Default);\nConsole.WriteLine(testData.DictData.Number_2);\n'})})]}),(0,r.jsxs)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_JSON2Class\\src\\JSON2ClassConsole\\testData.json",label:"testData.json",children:[(0,r.jsxs)(n.p,{children:["This is the use of ",(0,r.jsx)(n.strong,{children:"RSCG_JSON2Class"})," in ",(0,r.jsx)(n.em,{children:"testData.json"})]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'{\n  "Logging": {\n    "LogLevel": {\n      "Default": "Information",\n      "Microsoft": "Warning",\n      "MicrosoftHostingLifetime": "Trace"\n    }\n  },\n  "PropChars": {\n    "a": "ab\'"\n  },\n  "NoProp": {},\n  "AllowedHosts": "*",\n  "MyTest": "\'aa < >",\n  "DictData": {\n    "Test": {\n      "1234a": [\n        "1a",\n        "b"\n      ]\n    },\n    "A": "asdasd",\n    "2": "asdasd",\n    "MyNumber": 10,\n    "55": {\n      "a": "b1",\n      "2": "test1"\n    }\n  }\n}\n'})})]})]}),"\n",(0,r.jsx)(n.h3,{id:"generated-files",children:"Generated Files"}),"\n",(0,r.jsx)(n.p,{children:"Those are taken from $(BaseIntermediateOutputPath)\\GX"}),"\n",(0,r.jsx)(i.A,{children:(0,r.jsx)(o.A,{value:"D:\\gth\\RSCG_Examples\\v2\\rscg_examples\\RSCG_JSON2Class\\src\\JSON2ClassConsole\\obj\\GX\\RSCG_JSON2Class\\RSCG_JSON2Class.RSCG_JSON2Class\\testData.cs",label:"testData.cs",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",metastring:"showLineNumbers ",children:'//------------------------------------------------------------------------------\n// <auto-generated>\n//     This code was generated by a tool.\n//     Runtime Version:\n//\n//     Changes to this file may cause incorrect behavior and will be lost if\n//     the code is regenerated.\n// </auto-generated>\n//------------------------------------------------------------------------------\nusing System;\nusing System.Collections.Generic;\nusing System.Runtime.Serialization;\nnamespace JSON2ClassConsole.SettingsJson\n{\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class LogLevel \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "DEFAULT":\n                    return this.Default ;\n                \n                case "MICROSOFT":\n                    return this.Microsoft ;\n                \n                case "MICROSOFTHOSTINGLIFETIME":\n                    return this.MicrosoftHostingLifetime ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from LogLevel prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "Default" ;\n            \n                yield return "Microsoft" ;\n            \n                yield return "MicrosoftHostingLifetime" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("Default")]\n        public string Default { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("Microsoft")]\n        public string Microsoft { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("MicrosoftHostingLifetime")]\n        public string MicrosoftHostingLifetime { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class Logging \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "LOGLEVEL":\n                    return this.LogLevel ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from Logging prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "LogLevel" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("LogLevel")]\n        public LogLevel LogLevel { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class PropChars \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "A":\n                    return this.A ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from PropChars prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "A" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("a")]\n        public string A { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class NoProp \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from NoProp prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n            yield break;\n        }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class Test \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "NUMBER_1234A":\n                    return this.Number_1234a ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from Test prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "Number_1234a" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("1234a")]\n        public IList<string> Number_1234a { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class Number_55 \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "A":\n                    return this.A ;\n                \n                case "NUMBER_2":\n                    return this.Number_2 ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from Number_55 prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "A" ;\n            \n                yield return "Number_2" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("a")]\n        public string A { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("2")]\n        public string Number_2 { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class DictData \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "TEST":\n                    return this.Test ;\n                \n                case "A":\n                    return this.A ;\n                \n                case "NUMBER_2":\n                    return this.Number_2 ;\n                \n                case "MYNUMBER":\n                    return this.MyNumber ;\n                \n                case "NUMBER_55":\n                    return this.Number_55 ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from DictData prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "Test" ;\n            \n                yield return "A" ;\n            \n                yield return "Number_2" ;\n            \n                yield return "MyNumber" ;\n            \n                yield return "Number_55" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("Test")]\n        public Test Test { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("A")]\n        public string A { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("2")]\n        public string Number_2 { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("MyNumber")]\n        public int MyNumber { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("55")]\n        public Number_55 Number_55 { get; set; }\n        \n        \n    }\n\n    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]\n    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("RSCG_JSON2Class", "2024.2.29.807")]\n    public partial class testData \n    {\n        public object GetFromPropertyName(string propName, bool returnNull =false){\n            \n            propName=propName?.ToUpper();\n            \n            switch(propName){\n                \n                case "LOGGING":\n                    return this.Logging ;\n                \n                case "PROPCHARS":\n                    return this.PropChars ;\n                \n                case "NOPROP":\n                    return this.NoProp ;\n                \n                case "ALLOWEDHOSTS":\n                    return this.AllowedHosts ;\n                \n                case "MYTEST":\n                    return this.MyTest ;\n                \n                case "DICTDATA":\n                    return this.DictData ;\n                \n                default:\n                    if(returnNull)\n                        return null;\n\n                    throw new ArgumentException("cannot found from testData prop "+propName);            \n\n            }\n            \n            \n        }\n\n        public IEnumerable<string> Properties(){\n            \n                yield return "Logging" ;\n            \n                yield return "PropChars" ;\n            \n                yield return "NoProp" ;\n            \n                yield return "AllowedHosts" ;\n            \n                yield return "MyTest" ;\n            \n                yield return "DictData" ;\n            \n            yield break;\n        }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("Logging")]\n        public Logging Logging { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("PropChars")]\n        public PropChars PropChars { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("NoProp")]\n        public NoProp NoProp { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("AllowedHosts")]\n        public string AllowedHosts { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("MyTest")]\n        public string MyTest { get; set; }\n        \n        [System.Text.Json.Serialization.JsonPropertyName("DictData")]\n        public DictData DictData { get; set; }\n        \n        \n    }\n\n}\n\n'})})})}),"\n",(0,r.jsx)(n.h2,{id:"useful",children:"Useful"}),"\n",(0,r.jsx)(n.h3,{id:"download-example-net--c",children:"Download Example (.NET  C#)"}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:t(90532).A+"",children:"Download Example project RSCG_JSON2Class "})})}),"\n",(0,r.jsx)(n.h3,{id:"share-rscg_json2class",children:"Share RSCG_JSON2Class"}),"\n",(0,r.jsxs)("ul",{children:[(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class&quote=RSCG_JSON2Class",title:"Share on Facebook",target:"_blank",children:"Share on Facebook"})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"https://twitter.com/intent/tweet?source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class&text=RSCG_JSON2Class:%20https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class",target:"_blank",title:"Tweet",children:"Share in Twitter"})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"http://www.reddit.com/submit?url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class&title=RSCG_JSON2Class",target:"_blank",title:"Submit to Reddit",children:"Share on Reddit"})}),(0,r.jsx)("li",{children:(0,r.jsx)("a",{href:"http://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class&title=RSCG_JSON2Class&summary=&source=https%3A%2F%2Fignatandrei.github.io%2FRSCG_Examples%2Fv2%2Fdocs%2FRSCG_JSON2Class",target:"_blank",title:"Share on LinkedIn",children:"Share on Linkedin"})})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RSCG_JSON2Class",children:"https://ignatandrei.github.io/RSCG_Examples/v2/docs/RSCG_JSON2Class"})}),"\n",(0,r.jsx)(n.p,{children:"aaa"}),"\n",(0,r.jsx)(c.Ay,{})]})}function g(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},90532:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/files/RSCG_JSON2Class-b93c40b76643098d91d77d5b3b31e3d7.zip"}}]);