"use strict";(self.webpackChunkrscg_examples=self.webpackChunkrscg_examples||[]).push([[6628],{4137:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return r?a.createElement(f,o(o({ref:t},c),{},{components:r})):a.createElement(f,o({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:n,o[1]=i;for(var p=2;p<l;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5410:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(4137));const l={},o="EmbedResourceCSharp",i={unversionedId:"RSCG-Examples/EmbedResourceCSharp_readme",id:"RSCG-Examples/EmbedResourceCSharp_readme",title:"EmbedResourceCSharp",description:"This is a C# Source Generator.",source:"@site/docs/RSCG-Examples/EmbedResourceCSharp_readme.md",sourceDirName:"RSCG-Examples",slug:"/RSCG-Examples/EmbedResourceCSharp_readme",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/EmbedResourceCSharp_readme",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83e\uddf0 .NET Community Toolkit",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/CommunityToolkit.Mvvm_readme"},next:{title:"Gedaq_readme",permalink:"/RSCG_Examples/v2/docs/RSCG-Examples/Gedaq_readme"}},s={},p=[{value:"Install",id:"install",level:2},{value:"Embedding file",id:"embedding-file",level:2},{value:"Embedding files under specific folder",id:"embedding-files-under-specific-folder",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"embedresourcecsharp"},"EmbedResourceCSharp"),(0,n.kt)("p",null,"This is a ",(0,n.kt)("a",{parentName:"p",href:"https://devblogs.microsoft.com/dotnet/new-c-source-generator-samples/"},"C# Source Generator"),".\nThis let you embed files in your application.\nYou do not need to use ",(0,n.kt)("inlineCode",{parentName:"p"},"Assembly.GetManifestResourceStream")," anymore."),(0,n.kt)("h1",{id:"how-to-use"},"How to use"),(0,n.kt)("h2",{id:"install"},"Install"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"dotnet add package EmbedResourceCSharp\n")),(0,n.kt)("p",null,"Add only 1 package to your C# project."),(0,n.kt)("h2",{id:"embedding-file"},"Embedding file"),(0,n.kt)("p",null,"Provide that there are some files like below."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"projectFolder/",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Example.csproj"),(0,n.kt)("li",{parentName:"ul"},"ExampleProgram.cs"),(0,n.kt)("li",{parentName:"ul"},"resourceFileA.txt")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'namespace Example\n{\n    // partial methods require partial class/struct!\n    public partial class ExampleClass\n    {\n        /*\n            The relative file path from C# project folder should be specified.\n            The return value type must be System.ReadOnlySpan<byte>.\n            No parameter must exist.\n            The method must be static and partial.\n            The accessibility of the method does not matter.\n        */\n        [EmbedResourceCSharp.FileEmbed("resourceFileA.txt")]\n        private static partial System.ReadOnlySpan<byte> GetFileContentA();\n    }\n}\n')),(0,n.kt)("p",null,"You can get file content byte sequence with static partial method ",(0,n.kt)("inlineCode",{parentName:"p"},"System.ReadOnlySpan<byte> GetFileContentA"),"."),(0,n.kt)("h2",{id:"embedding-files-under-specific-folder"},"Embedding files under specific folder"),(0,n.kt)("p",null,"Provide that there are some files like below."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"projectFolder/",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Example2.csproj"),(0,n.kt)("li",{parentName:"ul"},"ExampleProgram.cs"))),(0,n.kt)("li",{parentName:"ul"},"folderB/",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"resourceA.txt"),(0,n.kt)("li",{parentName:"ul"},"resourceB.txt"),(0,n.kt)("li",{parentName:"ul"},"folderB_C/",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"resourceC.txt"))),(0,n.kt)("li",{parentName:"ul"},"resourceD.csv")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},'namespace Example2\n{\n    // partial methods require partial class/struct!\n    public partial class ExampleClass\n    {\n        /*\n            The relative folder path from C# project folder should be specified. The folder path should end with slash or backslash.\n            The return value type must be System.ReadOnlySpan<byte>.\n            One parameter must exist and its type must be System.ReadOnlySpan<char>. The parameter name does not matter.\n            The method must be static and partial.\n            The accessibility of the method does not matter.\n        */\n        [EmbedResourceCSharp.FolderEmbed("../folderB/", "*.txt")]\n        private static partial System.ReadOnlySpan<byte> GetResouceFileContent(System.ReadOnlySpan<char> path);\n\n        public static void Main()\n        {\n            // Specify relative path from the folder.\n            var aContent = GetResouceFileContent("resourceA.txt");\n            var bContent = GetResouceFileContent("resourceB.txt");\n            var cContent = GetResouceFileContent("folderB_C/resourceC.txt");\n            // var dContent = GetResouceFileContent("resourceD.csv");\n            // Above method call throws an FileNotFoundException!\n        }\n    }\n}\n')),(0,n.kt)("p",null,"You can include all files under the target folder recursively.\nYou can filter file with search pattern."))}m.isMDXComponent=!0}}]);