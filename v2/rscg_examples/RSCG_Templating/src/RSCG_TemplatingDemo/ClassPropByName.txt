//autogenerated by RSCG_Templating version {{data.Version}} from file {{fileName}}
namespace {{data.nameSpace}} {
	public enum e{{data.className}}_Properties {
		None = 0,
		{{ for prop in data.properties }}
		{{prop.PropertyName}},
		{{ end }}
	} 
	partial class {{data.className}} {

		public object GetPropValue(e{{data.className}}_Properties prop){
			switch(prop){
				{{ for prop in data.properties }}
					case e{{data.className}}_Properties.{{prop.PropertyName}}:
					{{ if prop.CanCallGetMethod }}
						return this.{{prop.PropertyName}};
					{{ else }}
						throw new NotImplementedException();
					{{ end}}
				{{ end }}
				default:
						throw new NotImplementedException();
			}
		}
		public void SetPropValue<T>(e{{data.className}}_Properties prop , T value){
			switch(prop){
				{{ for prop in data.properties }}
					case e{{data.className}}_Properties.{{prop.PropertyName}}:
					{{ if prop.CanCallSetMethod }}
						this.{{prop.PropertyName}} = ({{prop.PropertyType}})(dynamic)value;
						break;
					{{ else }}
						throw new NotImplementedException();
					{{ end}}
				{{ end }}
				default:
						throw new NotImplementedException();
			}
		}
	}//end class

}//end namespace